<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: lt</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__arith__func__lt.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle"><div class="title">lt<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__mathfunc__mat.htm">Mathematical functions</a> &raquo; <a class="el" href="group__logic__mat.htm">Logical operations</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Less than, an elementwise comparison of two arrays.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="memitem:ga4138eee00096c120e17e4aa8c1f01404"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga4138eee00096c120e17e4aa8c1f01404">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga4138eee00096c120e17e4aa8c1f01404"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga4138eee00096c120e17e4aa8c1f01404">More...</a><br /></td></tr>
<tr class="separator:ga4138eee00096c120e17e4aa8c1f01404"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9cd7bedc62d32e2971cfdaf7d03665be"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga9cd7bedc62d32e2971cfdaf7d03665be">operator&lt;</a> (const bool &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga9cd7bedc62d32e2971cfdaf7d03665be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga9cd7bedc62d32e2971cfdaf7d03665be">More...</a><br /></td></tr>
<tr class="separator:ga9cd7bedc62d32e2971cfdaf7d03665be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga458a24c3a3e2d6c3078c1ce6676dc711"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga458a24c3a3e2d6c3078c1ce6676dc711">operator&lt;</a> (const int &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga458a24c3a3e2d6c3078c1ce6676dc711"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga458a24c3a3e2d6c3078c1ce6676dc711">More...</a><br /></td></tr>
<tr class="separator:ga458a24c3a3e2d6c3078c1ce6676dc711"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac905d52014880458d7aea322ec8ba361"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gac905d52014880458d7aea322ec8ba361">operator&lt;</a> (const unsigned &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gac905d52014880458d7aea322ec8ba361"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gac905d52014880458d7aea322ec8ba361">More...</a><br /></td></tr>
<tr class="separator:gac905d52014880458d7aea322ec8ba361"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab0e97fa05139cfe357f728c92f4946b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gab0e97fa05139cfe357f728c92f4946b8">operator&lt;</a> (const char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gab0e97fa05139cfe357f728c92f4946b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gab0e97fa05139cfe357f728c92f4946b8">More...</a><br /></td></tr>
<tr class="separator:gab0e97fa05139cfe357f728c92f4946b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga021d9de22461f9af8addd1c66d6c2f2e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga021d9de22461f9af8addd1c66d6c2f2e">operator&lt;</a> (const unsigned char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga021d9de22461f9af8addd1c66d6c2f2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga021d9de22461f9af8addd1c66d6c2f2e">More...</a><br /></td></tr>
<tr class="separator:ga021d9de22461f9af8addd1c66d6c2f2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5618e69e001c55a1f9c8f90426787508"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga5618e69e001c55a1f9c8f90426787508">operator&lt;</a> (const long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga5618e69e001c55a1f9c8f90426787508"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga5618e69e001c55a1f9c8f90426787508">More...</a><br /></td></tr>
<tr class="separator:ga5618e69e001c55a1f9c8f90426787508"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab4c1fb1f9757c63602b170e2946e9343"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gab4c1fb1f9757c63602b170e2946e9343">operator&lt;</a> (const unsigned long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gab4c1fb1f9757c63602b170e2946e9343"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gab4c1fb1f9757c63602b170e2946e9343">More...</a><br /></td></tr>
<tr class="separator:gab4c1fb1f9757c63602b170e2946e9343"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa786113f71cf98be1f3a62b7d0563b87"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gaa786113f71cf98be1f3a62b7d0563b87">operator&lt;</a> (const long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaa786113f71cf98be1f3a62b7d0563b87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gaa786113f71cf98be1f3a62b7d0563b87">More...</a><br /></td></tr>
<tr class="separator:gaa786113f71cf98be1f3a62b7d0563b87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae84f551a2389e8cd62b4201d660df1b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gae84f551a2389e8cd62b4201d660df1b9">operator&lt;</a> (const unsigned long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gae84f551a2389e8cd62b4201d660df1b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gae84f551a2389e8cd62b4201d660df1b9">More...</a><br /></td></tr>
<tr class="separator:gae84f551a2389e8cd62b4201d660df1b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ea3f3ac717f1e63a2e7d34db59aed9a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga4ea3f3ac717f1e63a2e7d34db59aed9a">operator&lt;</a> (const double &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga4ea3f3ac717f1e63a2e7d34db59aed9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga4ea3f3ac717f1e63a2e7d34db59aed9a">More...</a><br /></td></tr>
<tr class="separator:ga4ea3f3ac717f1e63a2e7d34db59aed9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7bb3741d4c78797853098bca3cd271f3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga7bb3741d4c78797853098bca3cd271f3">operator&lt;</a> (const float &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga7bb3741d4c78797853098bca3cd271f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga7bb3741d4c78797853098bca3cd271f3">More...</a><br /></td></tr>
<tr class="separator:ga7bb3741d4c78797853098bca3cd271f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga330a25b5269510ba479c624fecc8ae44"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga330a25b5269510ba479c624fecc8ae44">operator&lt;</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga330a25b5269510ba479c624fecc8ae44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga330a25b5269510ba479c624fecc8ae44">More...</a><br /></td></tr>
<tr class="separator:ga330a25b5269510ba479c624fecc8ae44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga83930be47f60ee943f3fae8c5245a118"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga83930be47f60ee943f3fae8c5245a118">operator&lt;</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga83930be47f60ee943f3fae8c5245a118"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga83930be47f60ee943f3fae8c5245a118">More...</a><br /></td></tr>
<tr class="separator:ga83930be47f60ee943f3fae8c5245a118"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2b6bf9f6a557116c6139fb9320d5f0a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gad2b6bf9f6a557116c6139fb9320d5f0a">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gad2b6bf9f6a557116c6139fb9320d5f0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gad2b6bf9f6a557116c6139fb9320d5f0a">More...</a><br /></td></tr>
<tr class="separator:gad2b6bf9f6a557116c6139fb9320d5f0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga079132c99ee5d0dabe730c3b9293b9e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga079132c99ee5d0dabe730c3b9293b9e9">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga079132c99ee5d0dabe730c3b9293b9e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga079132c99ee5d0dabe730c3b9293b9e9">More...</a><br /></td></tr>
<tr class="separator:ga079132c99ee5d0dabe730c3b9293b9e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga18f16603d37068ccba725f160179e9a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga18f16603d37068ccba725f160179e9a2">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga18f16603d37068ccba725f160179e9a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga18f16603d37068ccba725f160179e9a2">More...</a><br /></td></tr>
<tr class="separator:ga18f16603d37068ccba725f160179e9a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga97e977c6313d195468f6cadd68e92cb1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga97e977c6313d195468f6cadd68e92cb1">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga97e977c6313d195468f6cadd68e92cb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga97e977c6313d195468f6cadd68e92cb1">More...</a><br /></td></tr>
<tr class="separator:ga97e977c6313d195468f6cadd68e92cb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga33d4a071930a00722dc682e459600b49"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga33d4a071930a00722dc682e459600b49">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga33d4a071930a00722dc682e459600b49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga33d4a071930a00722dc682e459600b49">More...</a><br /></td></tr>
<tr class="separator:ga33d4a071930a00722dc682e459600b49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac76add45106dcb20e9d129ff78f7da23"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gac76add45106dcb20e9d129ff78f7da23">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gac76add45106dcb20e9d129ff78f7da23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gac76add45106dcb20e9d129ff78f7da23">More...</a><br /></td></tr>
<tr class="separator:gac76add45106dcb20e9d129ff78f7da23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0e6897058045eb8fb5f2397b5d7ce36c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga0e6897058045eb8fb5f2397b5d7ce36c">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga0e6897058045eb8fb5f2397b5d7ce36c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga0e6897058045eb8fb5f2397b5d7ce36c">More...</a><br /></td></tr>
<tr class="separator:ga0e6897058045eb8fb5f2397b5d7ce36c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab7a2d6131053b07fd94b4baa3896f4f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gab7a2d6131053b07fd94b4baa3896f4f9">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:gab7a2d6131053b07fd94b4baa3896f4f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gab7a2d6131053b07fd94b4baa3896f4f9">More...</a><br /></td></tr>
<tr class="separator:gab7a2d6131053b07fd94b4baa3896f4f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga15510fd212e4032ed10683d58a86414d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga15510fd212e4032ed10683d58a86414d">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga15510fd212e4032ed10683d58a86414d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga15510fd212e4032ed10683d58a86414d">More...</a><br /></td></tr>
<tr class="separator:ga15510fd212e4032ed10683d58a86414d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34f745203cab1ff96f9c9ea5066b249b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga34f745203cab1ff96f9c9ea5066b249b">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga34f745203cab1ff96f9c9ea5066b249b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga34f745203cab1ff96f9c9ea5066b249b">More...</a><br /></td></tr>
<tr class="separator:ga34f745203cab1ff96f9c9ea5066b249b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f0e238c546bfc95fd19e8a78c0fbba8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga6f0e238c546bfc95fd19e8a78c0fbba8">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga6f0e238c546bfc95fd19e8a78c0fbba8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga6f0e238c546bfc95fd19e8a78c0fbba8">More...</a><br /></td></tr>
<tr class="separator:ga6f0e238c546bfc95fd19e8a78c0fbba8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc866a0eceeef9d130bdaeca1e180dfb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gacc866a0eceeef9d130bdaeca1e180dfb">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;rhs)</td></tr>
<tr class="memdesc:gacc866a0eceeef9d130bdaeca1e180dfb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gacc866a0eceeef9d130bdaeca1e180dfb">More...</a><br /></td></tr>
<tr class="separator:gacc866a0eceeef9d130bdaeca1e180dfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b5893fe7cf01ff7f4621939befc9922"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga4b5893fe7cf01ff7f4621939befc9922">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;rhs)</td></tr>
<tr class="separator:ga4b5893fe7cf01ff7f4621939befc9922"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a7e8a4fd759fe00417dd599bf3d41ee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga6a7e8a4fd759fe00417dd599bf3d41ee">operator&lt;</a> (const short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga6a7e8a4fd759fe00417dd599bf3d41ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga6a7e8a4fd759fe00417dd599bf3d41ee">More...</a><br /></td></tr>
<tr class="separator:ga6a7e8a4fd759fe00417dd599bf3d41ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga89a4c0b8c261e282b7c6b9e282769ecb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga89a4c0b8c261e282b7c6b9e282769ecb">operator&lt;</a> (const unsigned short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga89a4c0b8c261e282b7c6b9e282769ecb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga89a4c0b8c261e282b7c6b9e282769ecb">More...</a><br /></td></tr>
<tr class="separator:ga89a4c0b8c261e282b7c6b9e282769ecb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9ce3a4722ee38d04d1b4e3ac5307f652"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga9ce3a4722ee38d04d1b4e3ac5307f652">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga9ce3a4722ee38d04d1b4e3ac5307f652"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga9ce3a4722ee38d04d1b4e3ac5307f652">More...</a><br /></td></tr>
<tr class="separator:ga9ce3a4722ee38d04d1b4e3ac5307f652"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad5d178905a6baff6c9a69786f58570d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gad5d178905a6baff6c9a69786f58570d1">operator&lt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gad5d178905a6baff6c9a69786f58570d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Less than, an elementwise comparison of two arrays. </p>
<p >Check if the elements of one array are less than those of another array. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga4138eee00096c120e17e4aa8c1f01404" name="ga4138eee00096c120e17e4aa8c1f01404"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4138eee00096c120e17e4aa8c1f01404">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[1/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code> </dd></dl>

</div>
</div>
<a id="gad2b6bf9f6a557116c6139fb9320d5f0a" name="gad2b6bf9f6a557116c6139fb9320d5f0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad2b6bf9f6a557116c6139fb9320d5f0a">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[2/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga4b5893fe7cf01ff7f4621939befc9922" name="ga4b5893fe7cf01ff7f4621939befc9922"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4b5893fe7cf01ff7f4621939befc9922">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[3/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gacc866a0eceeef9d130bdaeca1e180dfb" name="gacc866a0eceeef9d130bdaeca1e180dfb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacc866a0eceeef9d130bdaeca1e180dfb">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[4/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga97e977c6313d195468f6cadd68e92cb1" name="ga97e977c6313d195468f6cadd68e92cb1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga97e977c6313d195468f6cadd68e92cb1">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[5/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga34f745203cab1ff96f9c9ea5066b249b" name="ga34f745203cab1ff96f9c9ea5066b249b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga34f745203cab1ff96f9c9ea5066b249b">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[6/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga6f0e238c546bfc95fd19e8a78c0fbba8" name="ga6f0e238c546bfc95fd19e8a78c0fbba8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6f0e238c546bfc95fd19e8a78c0fbba8">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[7/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga079132c99ee5d0dabe730c3b9293b9e9" name="ga079132c99ee5d0dabe730c3b9293b9e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga079132c99ee5d0dabe730c3b9293b9e9">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[8/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gac76add45106dcb20e9d129ff78f7da23" name="gac76add45106dcb20e9d129ff78f7da23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac76add45106dcb20e9d129ff78f7da23">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[9/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gab7a2d6131053b07fd94b4baa3896f4f9" name="gab7a2d6131053b07fd94b4baa3896f4f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab7a2d6131053b07fd94b4baa3896f4f9">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[10/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga9ce3a4722ee38d04d1b4e3ac5307f652" name="ga9ce3a4722ee38d04d1b4e3ac5307f652"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9ce3a4722ee38d04d1b4e3ac5307f652">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[11/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga18f16603d37068ccba725f160179e9a2" name="ga18f16603d37068ccba725f160179e9a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga18f16603d37068ccba725f160179e9a2">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[12/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga33d4a071930a00722dc682e459600b49" name="ga33d4a071930a00722dc682e459600b49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga33d4a071930a00722dc682e459600b49">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[13/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga0e6897058045eb8fb5f2397b5d7ce36c" name="ga0e6897058045eb8fb5f2397b5d7ce36c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0e6897058045eb8fb5f2397b5d7ce36c">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[14/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga15510fd212e4032ed10683d58a86414d" name="ga15510fd212e4032ed10683d58a86414d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga15510fd212e4032ed10683d58a86414d">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[15/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gad5d178905a6baff6c9a69786f58570d1" name="gad5d178905a6baff6c9a69786f58570d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad5d178905a6baff6c9a69786f58570d1">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[16/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga9cd7bedc62d32e2971cfdaf7d03665be" name="ga9cd7bedc62d32e2971cfdaf7d03665be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9cd7bedc62d32e2971cfdaf7d03665be">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[17/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga83930be47f60ee943f3fae8c5245a118" name="ga83930be47f60ee943f3fae8c5245a118"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga83930be47f60ee943f3fae8c5245a118">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[18/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga330a25b5269510ba479c624fecc8ae44" name="ga330a25b5269510ba479c624fecc8ae44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga330a25b5269510ba479c624fecc8ae44">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[19/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gab0e97fa05139cfe357f728c92f4946b8" name="gab0e97fa05139cfe357f728c92f4946b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab0e97fa05139cfe357f728c92f4946b8">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[20/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga4ea3f3ac717f1e63a2e7d34db59aed9a" name="ga4ea3f3ac717f1e63a2e7d34db59aed9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4ea3f3ac717f1e63a2e7d34db59aed9a">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[21/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga7bb3741d4c78797853098bca3cd271f3" name="ga7bb3741d4c78797853098bca3cd271f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7bb3741d4c78797853098bca3cd271f3">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[22/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga458a24c3a3e2d6c3078c1ce6676dc711" name="ga458a24c3a3e2d6c3078c1ce6676dc711"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga458a24c3a3e2d6c3078c1ce6676dc711">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[23/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga5618e69e001c55a1f9c8f90426787508" name="ga5618e69e001c55a1f9c8f90426787508"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5618e69e001c55a1f9c8f90426787508">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[24/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaa786113f71cf98be1f3a62b7d0563b87" name="gaa786113f71cf98be1f3a62b7d0563b87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa786113f71cf98be1f3a62b7d0563b87">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[25/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga6a7e8a4fd759fe00417dd599bf3d41ee" name="ga6a7e8a4fd759fe00417dd599bf3d41ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6a7e8a4fd759fe00417dd599bf3d41ee">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[26/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gac905d52014880458d7aea322ec8ba361" name="gac905d52014880458d7aea322ec8ba361"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac905d52014880458d7aea322ec8ba361">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[27/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga021d9de22461f9af8addd1c66d6c2f2e" name="ga021d9de22461f9af8addd1c66d6c2f2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga021d9de22461f9af8addd1c66d6c2f2e">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[28/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gab4c1fb1f9757c63602b170e2946e9343" name="gab4c1fb1f9757c63602b170e2946e9343"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab4c1fb1f9757c63602b170e2946e9343">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[29/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gae84f551a2389e8cd62b4201d660df1b9" name="gae84f551a2389e8cd62b4201d660df1b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae84f551a2389e8cd62b4201d660df1b9">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[30/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga89a4c0b8c261e282b7c6b9e282769ecb" name="ga89a4c0b8c261e282b7c6b9e282769ecb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga89a4c0b8c261e282b7c6b9e282769ecb">&#9670;&#160;</a></span>operator&lt;() <span class="overload">[31/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs a lower than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Wed Aug 30 2023 15:41:57 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
