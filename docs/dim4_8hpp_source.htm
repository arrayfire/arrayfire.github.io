<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: dim4.hpp (2020-10-27 00:11:00 -0400, (build d99887ae)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('dim4_8hpp_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">dim4.hpp (2020-10-27 00:11:00 -0400, (build d99887ae))</div>  </div>
</div><!--header-->
<div class="contents">
<a href="dim4_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*******************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2014, ArrayFire</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * All rights reserved.</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * This file is distributed under 3-clause BSD license.</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * The complete license agreement can be obtained at:</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * https://arrayfire.com/licenses/BSD-3-Clause</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> ********************************************************/</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;ostream&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;istream&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="defines_8h.htm">af/defines.h</a>&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="seq_8h.htm">af/seq.h</a>&gt;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceaf.htm">af</a></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classaf_1_1dim4.htm">   25</a></span>&#160;<span class="keyword">class </span><a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1dim4.htm">dim4</a></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classaf_1_1dim4.htm#a5893a5aaf803937c81622366906c920e">   28</a></span>&#160;    <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dims[4];</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="classaf_1_1dim4.htm">dim4</a>();</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="classaf_1_1dim4.htm">dim4</a>(   <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> first,</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> second = 1,</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> third = 1,</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> fourth = 1);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="classaf_1_1dim4.htm">dim4</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; other);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 38</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#if AF_COMPILER_CXX_RVALUE_REFERENCES</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="classaf_1_1dim4.htm">dim4</a>(<a class="code" href="classaf_1_1dim4.htm">dim4</a> &amp;&amp;other) AF_NOEXCEPT = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="classaf_1_1dim4.htm">dim4</a> &amp;operator=(<a class="code" href="classaf_1_1dim4.htm">dim4</a> other) AF_NOEXCEPT;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="classaf_1_1dim4.htm">dim4</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> ndims, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *<span class="keyword">const</span> dims);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> elements();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> elements() <span class="keyword">const</span>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> ndims();</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> ndims() <span class="keyword">const</span>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="group__arith__func__eq.htm#ga09dd9c72bd295829fd83e8802f454ca1">operator==</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a> &amp;other) <span class="keyword">const</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="group__arith__func__neq.htm#gabb296d1b19266a22f0816ba52984601c">operator!=</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a> &amp;other) <span class="keyword">const</span>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="classaf_1_1dim4.htm">dim4</a> &amp;operator*=(<span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a> &amp;other);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="classaf_1_1dim4.htm">dim4</a> &amp;operator+=(<span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a> &amp;other);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="classaf_1_1dim4.htm">dim4</a> &amp;operator-=(<span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a> &amp;other);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> &amp;operator[](<span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> &amp;operator[](<span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim) <span class="keyword">const</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classaf_1_1dim4.htm#acfe9236f37131e50c17bfb81654c9efc">  103</a></span>&#160;    <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *<span class="keyword">get</span>() { <span class="keywordflow">return</span> dims; }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classaf_1_1dim4.htm#a7e9f81ea42436aadce68fe3f835cb49b">  106</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *<span class="keyword">get</span>() <span class="keyword">const</span> { <span class="keywordflow">return</span> dims; }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;};</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1dim4.htm">dim4</a> <a class="code" href="group__arith__func__add.htm#ga7d51866424616760656cfa16c4c8164d">operator+</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; first, <span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; second);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1dim4.htm">dim4</a> <a class="code" href="group__arith__func__sub.htm#gafa57cf4a71580be2bfd04a83a66d9835">operator-</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; first, <span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; second);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1dim4.htm">dim4</a> <a class="code" href="group__arith__func__mul.htm#ga8317504ec8b9c15d29b27cc77039cb69">operator*</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; first, <span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; second);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;std::ostream&amp;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a4f5072be3c0830582537f38e2b49ab99">  125</a></span>&#160;<a class="code" href="group__arith__func__shiftl.htm#gade1f7cf5ba0c88126fef53eb6c48df47">operator&lt;&lt;</a>(std::ostream&amp; ostr, <span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; dims)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;{</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    ostr &lt;&lt; dims[0] &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;         &lt;&lt; dims[1] &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;         &lt;&lt; dims[2] &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;         &lt;&lt; dims[3];</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">return</span> ostr;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;std::istream&amp;</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a33bd4ad83b5c49fb3a8c5249c992a006">  141</a></span>&#160;<a class="code" href="group__arith__func__shiftr.htm#gad401146f5f407745770d593af6601a8d">operator&gt;&gt;</a>(std::istream&amp; istr, <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; dims)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;{</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    istr &gt;&gt; dims[0]</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;         &gt;&gt; dims[1]</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;         &gt;&gt; dims[2]</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;         &gt;&gt; dims[3];</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">return</span> istr;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">bool</span> <a class="code" href="namespaceaf.htm#a3c6bae4aadd8e506ef0da65eb0491e9e">isSpan</a>(<span class="keyword">const</span> <a class="code" href="structaf__seq.htm">af_seq</a> &amp;<a class="code" href="classaf_1_1seq.htm">seq</a>);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">size_t</span> <a class="code" href="namespaceaf.htm#a55ecb10c221b2648def30fad1e58d124">seqElements</a>(<span class="keyword">const</span> <a class="code" href="structaf__seq.htm">af_seq</a> &amp;seq);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> <a class="code" href="namespaceaf.htm#a4964be8c454e9ccf0ceeb91d6722cd9a">calcDim</a>(<span class="keyword">const</span> <a class="code" href="structaf__seq.htm">af_seq</a> &amp;seq, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> &amp;parentDim);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="namespaceaf_htm_a3c6bae4aadd8e506ef0da65eb0491e9e"><div class="ttname"><a href="namespaceaf.htm#a3c6bae4aadd8e506ef0da65eb0491e9e">af::isSpan</a></div><div class="ttdeci">AFAPI bool isSpan(const af_seq &amp;seq)</div><div class="ttdoc">Returns true if the af_seq object represents the entire range of an axis. </div></div>
<div class="ttc" id="namespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:14</a></div></div>
<div class="ttc" id="seq_8h_htm"><div class="ttname"><a href="seq_8h.htm">seq.h</a></div></div>
<div class="ttc" id="group__arith__func__eq_htm_ga09dd9c72bd295829fd83e8802f454ca1"><div class="ttname"><a href="group__arith__func__eq.htm#ga09dd9c72bd295829fd83e8802f454ca1">af::operator==</a></div><div class="ttdeci">AFAPI array operator==(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Performs an equality operation on two arrays or an array and a value. </div></div>
<div class="ttc" id="group__arith__func__mul_htm_ga8317504ec8b9c15d29b27cc77039cb69"><div class="ttname"><a href="group__arith__func__mul.htm#ga8317504ec8b9c15d29b27cc77039cb69">af::operator*</a></div><div class="ttdeci">AFAPI array operator*(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Multiplies two arrays or an array and a value. </div></div>
<div class="ttc" id="group__arith__func__shiftr_htm_gad401146f5f407745770d593af6601a8d"><div class="ttname"><a href="group__arith__func__shiftr.htm#gad401146f5f407745770d593af6601a8d">af::operator&gt;&gt;</a></div><div class="ttdeci">AFAPI array operator&gt;&gt;(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Performs an right shift operation on two arrays or an array and a value. </div></div>
<div class="ttc" id="classaf_1_1seq_htm"><div class="ttname"><a href="classaf_1_1seq.htm">af::seq</a></div><div class="ttdoc">seq is used to create sequences for indexing af::array </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00045">seq.h:45</a></div></div>
<div class="ttc" id="defines_8h_htm"><div class="ttname"><a href="defines_8h.htm">defines.h</a></div></div>
<div class="ttc" id="namespaceaf_htm_a4964be8c454e9ccf0ceeb91d6722cd9a"><div class="ttname"><a href="namespaceaf.htm#a4964be8c454e9ccf0ceeb91d6722cd9a">af::calcDim</a></div><div class="ttdeci">AFAPI dim_t calcDim(const af_seq &amp;seq, const dim_t &amp;parentDim)</div><div class="ttdoc">Returns the number of elements that will be represented by seq if applied on an array. </div></div>
<div class="ttc" id="defines_8h_htm_a7f026aa801b1fa6b85b0d992b414cccb"><div class="ttname"><a href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a></div><div class="ttdeci">long long dim_t</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00056">defines.h:56</a></div></div>
<div class="ttc" id="group__arith__func__neq_htm_gabb296d1b19266a22f0816ba52984601c"><div class="ttname"><a href="group__arith__func__neq.htm#gabb296d1b19266a22f0816ba52984601c">af::operator!=</a></div><div class="ttdeci">AFAPI array operator!=(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Performs an inequality operation on two arrays or an array and a value. </div></div>
<div class="ttc" id="defines_8h_htm_ab23e67549eba2cfbaf0eb5f88f947e48"><div class="ttname"><a href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a></div><div class="ttdeci">#define AFAPI</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00038">defines.h:38</a></div></div>
<div class="ttc" id="group__arith__func__shiftl_htm_gade1f7cf5ba0c88126fef53eb6c48df47"><div class="ttname"><a href="group__arith__func__shiftl.htm#gade1f7cf5ba0c88126fef53eb6c48df47">af::operator&lt;&lt;</a></div><div class="ttdeci">AFAPI array operator&lt;&lt;(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Performs an left shift operation on two arrays or an array and a value. </div></div>
<div class="ttc" id="structaf__seq_htm"><div class="ttname"><a href="structaf__seq.htm">af_seq</a></div><div class="ttdoc">C-style struct to creating sequences for indexing. </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00020">seq.h:20</a></div></div>
<div class="ttc" id="namespaceaf_htm_a55ecb10c221b2648def30fad1e58d124"><div class="ttname"><a href="namespaceaf.htm#a55ecb10c221b2648def30fad1e58d124">af::seqElements</a></div><div class="ttdeci">AFAPI size_t seqElements(const af_seq &amp;seq)</div><div class="ttdoc">Returns the number of elements that the af_seq object represents. </div></div>
<div class="ttc" id="group__arith__func__sub_htm_gafa57cf4a71580be2bfd04a83a66d9835"><div class="ttname"><a href="group__arith__func__sub.htm#gafa57cf4a71580be2bfd04a83a66d9835">af::operator-</a></div><div class="ttdeci">AFAPI array operator-(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Subtracts two arrays or an array and a value. </div></div>
<div class="ttc" id="classaf_1_1dim4_htm"><div class="ttname"><a href="classaf_1_1dim4.htm">af::dim4</a></div><div class="ttdoc">Generic object that represents size and shape. </div><div class="ttdef"><b>Definition:</b> <a href="dim4_8hpp_source.htm#l00025">dim4.hpp:25</a></div></div>
<div class="ttc" id="group__arith__func__add_htm_ga7d51866424616760656cfa16c4c8164d"><div class="ttname"><a href="group__arith__func__add.htm#ga7d51866424616760656cfa16c4c8164d">af::operator+</a></div><div class="ttdeci">AFAPI array operator+(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Adds two arrays or an array and a value. </div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
