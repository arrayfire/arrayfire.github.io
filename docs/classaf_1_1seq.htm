<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<title>seq Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classaf_1_1seq.htm','');});
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">seq Class Reference<div class="ingroups"><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__array__mat.htm">Functions to create and modify Arrays</a> &raquo; <a class="el" href="group__index__mat.htm">Assignment &amp; Indexing operation on arrays</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>seq is used to create seq for indexing <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container. ">af::array</a>  
 <a href="classaf_1_1seq.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="seq_8h_source.htm">seq.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2f590b2fa7d2d07618062edeaa4a4ac8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> (double length=0)</td></tr>
<tr class="memdesc:a2f590b2fa7d2d07618062edeaa4a4ac8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sequence of size length as [0, 1, 2..., length - 1].  <a href="#a2f590b2fa7d2d07618062edeaa4a4ac8">More...</a><br /></td></tr>
<tr class="separator:a2f590b2fa7d2d07618062edeaa4a4ac8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5df8ca1c937bc0c503174512b8f6367b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#a5df8ca1c937bc0c503174512b8f6367b">~seq</a> ()</td></tr>
<tr class="memdesc:a5df8ca1c937bc0c503174512b8f6367b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a5df8ca1c937bc0c503174512b8f6367b">More...</a><br /></td></tr>
<tr class="separator:a5df8ca1c937bc0c503174512b8f6367b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7340e628a70c0f6bc7273d6fc1eaab38"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#a7340e628a70c0f6bc7273d6fc1eaab38">seq</a> (double begin, double <a class="el" href="namespaceaf.htm#a923f02ce0a21b98935aaffd645f717e0">end</a>, double step=1)</td></tr>
<tr class="memdesc:a7340e628a70c0f6bc7273d6fc1eaab38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sequence starting at begin, ending at or before end (inclusive) with increments as step.  <a href="#a7340e628a70c0f6bc7273d6fc1eaab38">More...</a><br /></td></tr>
<tr class="separator:a7340e628a70c0f6bc7273d6fc1eaab38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8302a0ee31b504826d664dfd0257db75"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#a8302a0ee31b504826d664dfd0257db75">seq</a> (<a class="el" href="classaf_1_1seq.htm">seq</a> afs, bool is_gfor)</td></tr>
<tr class="memdesc:a8302a0ee31b504826d664dfd0257db75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="#a8302a0ee31b504826d664dfd0257db75">More...</a><br /></td></tr>
<tr class="separator:a8302a0ee31b504826d664dfd0257db75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6eac5a8ca5b555e81af678a0798745c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#ab6eac5a8ca5b555e81af678a0798745c">seq</a> (const <a class="el" href="structaf__seq.htm">af_seq</a> &amp;s_)</td></tr>
<tr class="memdesc:ab6eac5a8ca5b555e81af678a0798745c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a seq object from an <a class="el" href="structaf__seq.htm">af_seq</a> struct.  <a href="#ab6eac5a8ca5b555e81af678a0798745c">More...</a><br /></td></tr>
<tr class="separator:ab6eac5a8ca5b555e81af678a0798745c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e4b40ce0936eb80dde1424860a6a194"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1seq.htm">seq</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#a6e4b40ce0936eb80dde1424860a6a194">operator=</a> (const <a class="el" href="structaf__seq.htm">af_seq</a> &amp;<a class="el" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>)</td></tr>
<tr class="memdesc:a6e4b40ce0936eb80dde1424860a6a194"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment operator to create a new sequence from an <a class="el" href="structaf__seq.htm" title="C-style struct to creating sequences for indexing. ">af_seq</a>.  <a href="#a6e4b40ce0936eb80dde1424860a6a194">More...</a><br /></td></tr>
<tr class="separator:a6e4b40ce0936eb80dde1424860a6a194"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24d33e7c5c4fc6e4aa5265f18b3d7467"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1seq.htm">seq</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#a24d33e7c5c4fc6e4aa5265f18b3d7467">operator-</a> ()</td></tr>
<tr class="memdesc:a24d33e7c5c4fc6e4aa5265f18b3d7467"><td class="mdescLeft">&#160;</td><td class="mdescRight">Negation operator creates a sequence with the signs negated.  <a href="#a24d33e7c5c4fc6e4aa5265f18b3d7467">More...</a><br /></td></tr>
<tr class="separator:a24d33e7c5c4fc6e4aa5265f18b3d7467"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bada0d4940cb2a8c9dd837f9d1041a4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1seq.htm">seq</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#a7bada0d4940cb2a8c9dd837f9d1041a4">operator+</a> (double x)</td></tr>
<tr class="memdesc:a7bada0d4940cb2a8c9dd837f9d1041a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Addition operator offsets the begin and end by x.  <a href="#a7bada0d4940cb2a8c9dd837f9d1041a4">More...</a><br /></td></tr>
<tr class="separator:a7bada0d4940cb2a8c9dd837f9d1041a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7f2cbbd1e407faddce48881e318b077"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1seq.htm">seq</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#ac7f2cbbd1e407faddce48881e318b077">operator-</a> (double x)</td></tr>
<tr class="memdesc:ac7f2cbbd1e407faddce48881e318b077"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtraction operator offsets the begin and end by x.  <a href="#ac7f2cbbd1e407faddce48881e318b077">More...</a><br /></td></tr>
<tr class="separator:ac7f2cbbd1e407faddce48881e318b077"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ea7aa11bcfd62f7c2932a1eae7b9ad4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1seq.htm">seq</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#a9ea7aa11bcfd62f7c2932a1eae7b9ad4">operator*</a> (double x)</td></tr>
<tr class="memdesc:a9ea7aa11bcfd62f7c2932a1eae7b9ad4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplication operator spaces the sequence by a factor x.  <a href="#a9ea7aa11bcfd62f7c2932a1eae7b9ad4">More...</a><br /></td></tr>
<tr class="separator:a9ea7aa11bcfd62f7c2932a1eae7b9ad4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec88936a07e8c3c03ae59bcf9efccc45"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#aec88936a07e8c3c03ae59bcf9efccc45">operator array</a> () const</td></tr>
<tr class="memdesc:aec88936a07e8c3c03ae59bcf9efccc45"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implicit conversion operator from seq to <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container. ">af::array</a>.  <a href="#aec88936a07e8c3c03ae59bcf9efccc45">More...</a><br /></td></tr>
<tr class="separator:aec88936a07e8c3c03ae59bcf9efccc45"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a42eb4397e1efe3654f22799573c1b27d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structaf__seq.htm">af_seq</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a></td></tr>
<tr class="memdesc:a42eb4397e1efe3654f22799573c1b27d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the <a class="el" href="structaf__seq.htm">af_seq</a> C-style struct.  <a href="#a42eb4397e1efe3654f22799573c1b27d">More...</a><br /></td></tr>
<tr class="separator:a42eb4397e1efe3654f22799573c1b27d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a854352f53b148adc24983a58a1866d66"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#a854352f53b148adc24983a58a1866d66">size</a></td></tr>
<tr class="memdesc:a854352f53b148adc24983a58a1866d66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get's the length of the sequence.  <a href="#a854352f53b148adc24983a58a1866d66">More...</a><br /></td></tr>
<tr class="separator:a854352f53b148adc24983a58a1866d66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0246d0281dce52a72285c760b2b969fb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#a0246d0281dce52a72285c760b2b969fb">m_gfor</a></td></tr>
<tr class="memdesc:a0246d0281dce52a72285c760b2b969fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag for gfor.  <a href="#a0246d0281dce52a72285c760b2b969fb">More...</a><br /></td></tr>
<tr class="separator:a0246d0281dce52a72285c760b2b969fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a1438052e59df26e57ade24b943aa8da8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1seq.htm">seq</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#a1438052e59df26e57ade24b943aa8da8">operator+</a> (double x, <a class="el" href="classaf_1_1seq.htm">seq</a> y)</td></tr>
<tr class="separator:a1438052e59df26e57ade24b943aa8da8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec82836c17f81227acac6b36a172a8ab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1seq.htm">seq</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#aec82836c17f81227acac6b36a172a8ab">operator-</a> (double x, <a class="el" href="classaf_1_1seq.htm">seq</a> y)</td></tr>
<tr class="separator:aec82836c17f81227acac6b36a172a8ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d3d5d05220813af0c46194c38be2942"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1seq.htm">seq</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1seq.htm#a7d3d5d05220813af0c46194c38be2942">operator*</a> (double x, <a class="el" href="classaf_1_1seq.htm">seq</a> y)</td></tr>
<tr class="separator:a7d3d5d05220813af0c46194c38be2942"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>seq is used to create seq for indexing <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container. ">af::array</a> </p>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="computer_vision_2fast_8cpp-example.htm#_a11">computer_vision/fast.cpp</a>, <a class="el" href="computer_vision_2harris_8cpp-example.htm#_a13">computer_vision/harris.cpp</a>, <a class="el" href="computer_vision_2matching_8cpp-example.htm#_a1">computer_vision/matching.cpp</a>, <a class="el" href="computer_vision_2susan_8cpp-example.htm#_a11">computer_vision/susan.cpp</a>, <a class="el" href="getting_started_2rainfall_8cpp-example.htm#_a5">getting_started/rainfall.cpp</a>, <a class="el" href="getting_started_2vectorize_8cpp-example.htm#_a7">getting_started/vectorize.cpp</a>, <a class="el" href="graphics_2field_8cpp-example.htm#_a4">graphics/field.cpp</a>, <a class="el" href="graphics_2gravity_sim_8cpp-example.htm#_a6">graphics/gravity_sim.cpp</a>, <a class="el" href="graphics_2plot2d_8cpp-example.htm#_a4">graphics/plot2d.cpp</a>, <a class="el" href="graphics_2plot3_8cpp-example.htm#_a3">graphics/plot3.cpp</a>, <a class="el" href="helloworld_2helloworld_8cpp-example.htm#_a7">helloworld/helloworld.cpp</a>, <a class="el" href="image_processing_2binary_thresholding_8cpp-example.htm#_a10">image_processing/binary_thresholding.cpp</a>, <a class="el" href="image_processing_2filters_8cpp-example.htm#_a5">image_processing/filters.cpp</a>, <a class="el" href="image_processing_2image_editing_8cpp-example.htm#_a9">image_processing/image_editing.cpp</a>, <a class="el" href="image_processing_2morphing_8cpp-example.htm#_a6">image_processing/morphing.cpp</a>, <a class="el" href="image_processing_2pyramids_8cpp-example.htm#_a5">image_processing/pyramids.cpp</a>, <a class="el" href="lin_algebra_2svd_8cpp-example.htm#_a6">lin_algebra/svd.cpp</a>, <a class="el" href="machine_learning_2bagging_8cpp-example.htm#_a12">machine_learning/bagging.cpp</a>, <a class="el" href="machine_learning_2deep_belief_net_8cpp-example.htm#_a13">machine_learning/deep_belief_net.cpp</a>, <a class="el" href="machine_learning_2geneticalgorithm_8cpp-example.htm#_a3">machine_learning/geneticalgorithm.cpp</a>, <a class="el" href="machine_learning_2kmeans_8cpp-example.htm#_a8">machine_learning/kmeans.cpp</a>, <a class="el" href="machine_learning_2neural_network_8cpp-example.htm#_a13">machine_learning/neural_network.cpp</a>, and <a class="el" href="machine_learning_2rbm_8cpp-example.htm#_a14">machine_learning/rbm.cpp</a>.</dd>
</dl>
<p class="definition">Definition at line <a class="el" href="seq_8h_source.htm#l00045">45</a> of file <a class="el" href="seq_8h_source.htm">seq.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a2f590b2fa7d2d07618062edeaa4a4ac8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f590b2fa7d2d07618062edeaa4a4ac8">&#9670;&nbsp;</a></span>seq() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1seq.htm">seq</a> </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>length</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a sequence of size length as [0, 1, 2..., length - 1]. </p>
<p>The sequence has begin as 0, end as length - 1 and step as 1.</p>
<dl class="section note"><dt>Note</dt><dd>When doing seq(-n), where n is &gt; 0, then the sequence is generated as 0...-n but step remains +1. This is because when such a sequence is used for indexing <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container. ">af::array</a>, then -n represents n elements from the end. That is, seq(-2) will imply indexing an array 0...dimSize - 2.</dd></dl>
<div class="fragment"><div class="line">                    <span class="comment">// [begin, end, step]</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> a(10);          <span class="comment">// [0, 9, 1]    =&gt; 0, 1, 2....9</span></div></div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">length</td><td>is the size of the seq to be created. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5df8ca1c937bc0c503174512b8f6367b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5df8ca1c937bc0c503174512b8f6367b">&#9670;&nbsp;</a></span>~seq()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classaf_1_1seq.htm">seq</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<a id="a7340e628a70c0f6bc7273d6fc1eaab38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7340e628a70c0f6bc7273d6fc1eaab38">&#9670;&nbsp;</a></span>seq() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1seq.htm">seq</a> </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>step</em> = <code>1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a sequence starting at begin, ending at or before end (inclusive) with increments as step. </p>
<p>The sequence will be [begin, begin + step, begin + 2 * step...., begin + n * step] where the begin + n * step &lt;= end.</p>
<div class="fragment"><div class="line">                    <span class="comment">// [begin, end, step]</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> a(10, 20);      <span class="comment">// [10, 20, 1]  =&gt; 10, 11, 12....20</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> b(10, 20, 2);   <span class="comment">// [10, 20, 2]  =&gt; 10, 12, 14....20</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> c(-5, 5);       <span class="comment">// [-5, 5, 1]   =&gt; -5, -4, -3....0, 1....5</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> d(-5, -15, -1); <span class="comment">// [-5,-15, -1] =&gt; -5, -6, -7....-15</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> e(-15, -5, 1);  <span class="comment">// [-15, -5, 1] =&gt; -15, -14, -13....-5</span></div></div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">begin</td><td>is the start of the sequence </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">end</td><td>is the maximum value a sequence can take (inclusive) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">step</td><td>is the increment or decrement size (default is 1) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8302a0ee31b504826d664dfd0257db75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8302a0ee31b504826d664dfd0257db75">&#9670;&nbsp;</a></span>seq() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1seq.htm">seq</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classaf_1_1seq.htm">seq</a>&#160;</td>
          <td class="paramname"><em>afs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_gfor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy constructor. </p>
<p>Creates a copy seq from another sequence.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">afs</td><td>seqence to be copies </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_gfor</td><td>is the gfor flag </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab6eac5a8ca5b555e81af678a0798745c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6eac5a8ca5b555e81af678a0798745c">&#9670;&nbsp;</a></span>seq() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1seq.htm">seq</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structaf__seq.htm">af_seq</a> &amp;&#160;</td>
          <td class="paramname"><em>s_</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a seq object from an <a class="el" href="structaf__seq.htm">af_seq</a> struct. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s_</td><td>is the <a class="el" href="structaf__seq.htm">af_seq</a> struct </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aec88936a07e8c3c03ae59bcf9efccc45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec88936a07e8c3c03ae59bcf9efccc45">&#9670;&nbsp;</a></span>operator array()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">operator <a class="el" href="classaf_1_1array.htm">array</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Implicit conversion operator from seq to <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container. ">af::array</a>. </p>
<p>Convertes a seq object into an <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container. ">af::array</a> object. The contents of the af:array will be the explicit values from the seq.</p>
<dl class="section note"><dt>Note</dt><dd>Do not use this to create arrays of sequences. Use <a class="el" href="group__data__func__range.htm#ga3789475e962b4c31e07c1c3bdab8498b">range</a>.</dd></dl>
<div class="fragment"><div class="line">                    <span class="comment">// [begin, end, step]</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> <a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>(10, 20, 2);   <span class="comment">// [10, 20, 2] =&gt; 10, 12, 14....20</span></div><div class="line"><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> arr = <a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>;</div><div class="line"><a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(arr);      <span class="comment">// 10    12    14    16    18    20</span></div></div><!-- fragment --> 
</div>
</div>
<a id="a9ea7aa11bcfd62f7c2932a1eae7b9ad4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ea7aa11bcfd62f7c2932a1eae7b9ad4">&#9670;&nbsp;</a></span>operator*()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1seq.htm">seq</a> operator* </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Multiplication operator spaces the sequence by a factor x. </p>
<p>begin is changed to begin * x end is changed to end * x step is changed to step * x</p>
<div class="fragment"><div class="line">                    <span class="comment">// [begin, end, step]</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> a(10, 20, 2);   <span class="comment">// [10, 20, 2] =&gt; 10, 12, 14....20</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> b(-5, 5);       <span class="comment">// [-5, 5, 1] =&gt; -5, -4, -3....0, 1....5</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> c = a * 3;      <span class="comment">// [30, 60, 6] =&gt; 30, 36, 42....60</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> d = b * 3;      <span class="comment">// [-15, 15, 3] =&gt; -15, -12, -9....0, 3....15</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> e = a * 0.5;    <span class="comment">// [5, 10, 1] =&gt; 5, 6, 7....10</span></div></div><!-- fragment --> 
<p class="definition">Definition at line <a class="el" href="seq_8h_source.htm#l00199">199</a> of file <a class="el" href="seq_8h_source.htm">seq.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a>(<a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>.<a class="code" href="structaf__seq.htm#ad5a257d1d61c6ba22b332bfc93059304">begin</a> * x, <a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>.<a class="code" href="structaf__seq.htm#a2c6c1302fc577e5e226869e3b899043e">end</a> * x, <a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>.<a class="code" href="structaf__seq.htm#a4736138d712d9ee570d0652f08a4786a">step</a> * x); }</div><div class="ttc" id="structaf__seq_htm_a4736138d712d9ee570d0652f08a4786a"><div class="ttname"><a href="structaf__seq.htm#a4736138d712d9ee570d0652f08a4786a">af_seq::step</a></div><div class="ttdeci">double step</div><div class="ttdoc">Step size between sequence values. </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00028">seq.h:28</a></div></div>
<div class="ttc" id="structaf__seq_htm_ad5a257d1d61c6ba22b332bfc93059304"><div class="ttname"><a href="structaf__seq.htm#ad5a257d1d61c6ba22b332bfc93059304">af_seq::begin</a></div><div class="ttdeci">double begin</div><div class="ttdoc">Start position of the sequence. </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00022">seq.h:22</a></div></div>
<div class="ttc" id="structaf__seq_htm_a2c6c1302fc577e5e226869e3b899043e"><div class="ttname"><a href="structaf__seq.htm#a2c6c1302fc577e5e226869e3b899043e">af_seq::end</a></div><div class="ttdeci">double end</div><div class="ttdoc">End position of the sequence (inclusive) </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00025">seq.h:25</a></div></div>
<div class="ttc" id="classaf_1_1seq_htm_a2f590b2fa7d2d07618062edeaa4a4ac8"><div class="ttname"><a href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">af::seq::seq</a></div><div class="ttdeci">seq(double length=0)</div><div class="ttdoc">Creates a sequence of size length as [0, 1, 2..., length - 1]. </div></div>
<div class="ttc" id="classaf_1_1seq_htm_a42eb4397e1efe3654f22799573c1b27d"><div class="ttname"><a href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">af::seq::s</a></div><div class="ttdeci">af_seq s</div><div class="ttdoc">Get the af_seq C-style struct. </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00051">seq.h:51</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7bada0d4940cb2a8c9dd837f9d1041a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bada0d4940cb2a8c9dd837f9d1041a4">&#9670;&nbsp;</a></span>operator+()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1seq.htm">seq</a> operator+ </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Addition operator offsets the begin and end by x. </p>
<p>There is no change in step.</p>
<p>begin is changed to begin + x end is changed to end + x</p>
<div class="fragment"><div class="line">                    <span class="comment">// [begin, end, step]</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> a(2, 20, 2);    <span class="comment">// [2, 20, 2] =&gt; 2, 4, 6....20</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> b = a + 3;      <span class="comment">// [5, 23, 2] =&gt; 5, 7, 9....23</span></div></div><!-- fragment --> 
<p class="definition">Definition at line <a class="el" href="seq_8h_source.htm#l00164">164</a> of file <a class="el" href="seq_8h_source.htm">seq.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a>(<a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>.<a class="code" href="structaf__seq.htm#ad5a257d1d61c6ba22b332bfc93059304">begin</a> + x, <a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>.<a class="code" href="structaf__seq.htm#a2c6c1302fc577e5e226869e3b899043e">end</a> + x, <a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>.<a class="code" href="structaf__seq.htm#a4736138d712d9ee570d0652f08a4786a">step</a>); }</div><div class="ttc" id="structaf__seq_htm_a4736138d712d9ee570d0652f08a4786a"><div class="ttname"><a href="structaf__seq.htm#a4736138d712d9ee570d0652f08a4786a">af_seq::step</a></div><div class="ttdeci">double step</div><div class="ttdoc">Step size between sequence values. </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00028">seq.h:28</a></div></div>
<div class="ttc" id="structaf__seq_htm_ad5a257d1d61c6ba22b332bfc93059304"><div class="ttname"><a href="structaf__seq.htm#ad5a257d1d61c6ba22b332bfc93059304">af_seq::begin</a></div><div class="ttdeci">double begin</div><div class="ttdoc">Start position of the sequence. </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00022">seq.h:22</a></div></div>
<div class="ttc" id="structaf__seq_htm_a2c6c1302fc577e5e226869e3b899043e"><div class="ttname"><a href="structaf__seq.htm#a2c6c1302fc577e5e226869e3b899043e">af_seq::end</a></div><div class="ttdeci">double end</div><div class="ttdoc">End position of the sequence (inclusive) </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00025">seq.h:25</a></div></div>
<div class="ttc" id="classaf_1_1seq_htm_a2f590b2fa7d2d07618062edeaa4a4ac8"><div class="ttname"><a href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">af::seq::seq</a></div><div class="ttdeci">seq(double length=0)</div><div class="ttdoc">Creates a sequence of size length as [0, 1, 2..., length - 1]. </div></div>
<div class="ttc" id="classaf_1_1seq_htm_a42eb4397e1efe3654f22799573c1b27d"><div class="ttname"><a href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">af::seq::s</a></div><div class="ttdeci">af_seq s</div><div class="ttdoc">Get the af_seq C-style struct. </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00051">seq.h:51</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a24d33e7c5c4fc6e4aa5265f18b3d7467"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24d33e7c5c4fc6e4aa5265f18b3d7467">&#9670;&nbsp;</a></span>operator-() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1seq.htm">seq</a> operator- </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Negation operator creates a sequence with the signs negated. </p>
<p>begin is changed to -begin end is changed to -end step is changed to -step</p>
<div class="fragment"><div class="line">                <span class="comment">// [begin, end, step]</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> a(1, 10);   <span class="comment">// [ 1, 10, 1] =&gt; 1, 2, 3....10</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> b = -a;     <span class="comment">// [-1,-10,-1] =&gt; -1, -2, -3...-10</span></div></div><!-- fragment --> 
<p class="definition">Definition at line <a class="el" href="seq_8h_source.htm#l00149">149</a> of file <a class="el" href="seq_8h_source.htm">seq.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a>(-<a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>.<a class="code" href="structaf__seq.htm#ad5a257d1d61c6ba22b332bfc93059304">begin</a>, -<a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>.<a class="code" href="structaf__seq.htm#a2c6c1302fc577e5e226869e3b899043e">end</a>,  -<a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>.<a class="code" href="structaf__seq.htm#a4736138d712d9ee570d0652f08a4786a">step</a>); }</div><div class="ttc" id="structaf__seq_htm_a4736138d712d9ee570d0652f08a4786a"><div class="ttname"><a href="structaf__seq.htm#a4736138d712d9ee570d0652f08a4786a">af_seq::step</a></div><div class="ttdeci">double step</div><div class="ttdoc">Step size between sequence values. </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00028">seq.h:28</a></div></div>
<div class="ttc" id="structaf__seq_htm_ad5a257d1d61c6ba22b332bfc93059304"><div class="ttname"><a href="structaf__seq.htm#ad5a257d1d61c6ba22b332bfc93059304">af_seq::begin</a></div><div class="ttdeci">double begin</div><div class="ttdoc">Start position of the sequence. </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00022">seq.h:22</a></div></div>
<div class="ttc" id="structaf__seq_htm_a2c6c1302fc577e5e226869e3b899043e"><div class="ttname"><a href="structaf__seq.htm#a2c6c1302fc577e5e226869e3b899043e">af_seq::end</a></div><div class="ttdeci">double end</div><div class="ttdoc">End position of the sequence (inclusive) </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00025">seq.h:25</a></div></div>
<div class="ttc" id="classaf_1_1seq_htm_a2f590b2fa7d2d07618062edeaa4a4ac8"><div class="ttname"><a href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">af::seq::seq</a></div><div class="ttdeci">seq(double length=0)</div><div class="ttdoc">Creates a sequence of size length as [0, 1, 2..., length - 1]. </div></div>
<div class="ttc" id="classaf_1_1seq_htm_a42eb4397e1efe3654f22799573c1b27d"><div class="ttname"><a href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">af::seq::s</a></div><div class="ttdeci">af_seq s</div><div class="ttdoc">Get the af_seq C-style struct. </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00051">seq.h:51</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac7f2cbbd1e407faddce48881e318b077"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7f2cbbd1e407faddce48881e318b077">&#9670;&nbsp;</a></span>operator-() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1seq.htm">seq</a> operator- </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Subtraction operator offsets the begin and end by x. </p>
<p>There is no change in step.</p>
<p>begin is changed to begin - x end is changed to end - x</p>
<div class="fragment"><div class="line">                    <span class="comment">// [begin, end, step]</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> a(10, 20, 2);   <span class="comment">// [10, 20, 2] =&gt; 10, 12, 14....20</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> b(2, 10);       <span class="comment">// [ 2, 10, 1] =&gt; 2, 3, 4....10</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> c = a - 3;      <span class="comment">// [ 7, 17, 2] =&gt; 7, 9, 11....17</span></div><div class="line"><a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a> d = b - 3;      <span class="comment">// [-1,  7, 2] =&gt; -1, 1, 3....7</span></div></div><!-- fragment --> 
<p class="definition">Definition at line <a class="el" href="seq_8h_source.htm#l00181">181</a> of file <a class="el" href="seq_8h_source.htm">seq.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">seq</a>(<a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>.<a class="code" href="structaf__seq.htm#ad5a257d1d61c6ba22b332bfc93059304">begin</a> - x, <a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>.<a class="code" href="structaf__seq.htm#a2c6c1302fc577e5e226869e3b899043e">end</a> - x, <a class="code" href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">s</a>.<a class="code" href="structaf__seq.htm#a4736138d712d9ee570d0652f08a4786a">step</a>); }</div><div class="ttc" id="structaf__seq_htm_a4736138d712d9ee570d0652f08a4786a"><div class="ttname"><a href="structaf__seq.htm#a4736138d712d9ee570d0652f08a4786a">af_seq::step</a></div><div class="ttdeci">double step</div><div class="ttdoc">Step size between sequence values. </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00028">seq.h:28</a></div></div>
<div class="ttc" id="structaf__seq_htm_ad5a257d1d61c6ba22b332bfc93059304"><div class="ttname"><a href="structaf__seq.htm#ad5a257d1d61c6ba22b332bfc93059304">af_seq::begin</a></div><div class="ttdeci">double begin</div><div class="ttdoc">Start position of the sequence. </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00022">seq.h:22</a></div></div>
<div class="ttc" id="structaf__seq_htm_a2c6c1302fc577e5e226869e3b899043e"><div class="ttname"><a href="structaf__seq.htm#a2c6c1302fc577e5e226869e3b899043e">af_seq::end</a></div><div class="ttdeci">double end</div><div class="ttdoc">End position of the sequence (inclusive) </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00025">seq.h:25</a></div></div>
<div class="ttc" id="classaf_1_1seq_htm_a2f590b2fa7d2d07618062edeaa4a4ac8"><div class="ttname"><a href="classaf_1_1seq.htm#a2f590b2fa7d2d07618062edeaa4a4ac8">af::seq::seq</a></div><div class="ttdeci">seq(double length=0)</div><div class="ttdoc">Creates a sequence of size length as [0, 1, 2..., length - 1]. </div></div>
<div class="ttc" id="classaf_1_1seq_htm_a42eb4397e1efe3654f22799573c1b27d"><div class="ttname"><a href="classaf_1_1seq.htm#a42eb4397e1efe3654f22799573c1b27d">af::seq::s</a></div><div class="ttdeci">af_seq s</div><div class="ttdoc">Get the af_seq C-style struct. </div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00051">seq.h:51</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6e4b40ce0936eb80dde1424860a6a194"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e4b40ce0936eb80dde1424860a6a194">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1seq.htm">seq</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structaf__seq.htm">af_seq</a> &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignment operator to create a new sequence from an <a class="el" href="structaf__seq.htm" title="C-style struct to creating sequences for indexing. ">af_seq</a>. </p>
<p>This operator creates a new sequence using the begin, end and step from the input sequence.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>is the input sequence </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a7d3d5d05220813af0c46194c38be2942"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d3d5d05220813af0c46194c38be2942">&#9670;&nbsp;</a></span>operator*</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1seq.htm">seq</a> operator* </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1seq.htm">seq</a>&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="seq_8h_source.htm#l00205">205</a> of file <a class="el" href="seq_8h_source.htm">seq.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;{ <span class="keywordflow">return</span>  y * x; }</div></div><!-- fragment -->
</div>
</div>
<a id="a1438052e59df26e57ade24b943aa8da8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1438052e59df26e57ade24b943aa8da8">&#9670;&nbsp;</a></span>operator+</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1seq.htm">seq</a> operator+ </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1seq.htm">seq</a>&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="seq_8h_source.htm#l00201">201</a> of file <a class="el" href="seq_8h_source.htm">seq.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;{ <span class="keywordflow">return</span>  y + x; }</div></div><!-- fragment -->
</div>
</div>
<a id="aec82836c17f81227acac6b36a172a8ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec82836c17f81227acac6b36a172a8ab">&#9670;&nbsp;</a></span>operator-</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1seq.htm">seq</a> operator- </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1seq.htm">seq</a>&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="seq_8h_source.htm#l00203">203</a> of file <a class="el" href="seq_8h_source.htm">seq.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;{ <span class="keywordflow">return</span> -y + x; }</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a0246d0281dce52a72285c760b2b969fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0246d0281dce52a72285c760b2b969fb">&#9670;&nbsp;</a></span>m_gfor</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_gfor</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Flag for gfor. </p>

<p class="definition">Definition at line <a class="el" href="seq_8h_source.htm#l00061">61</a> of file <a class="el" href="seq_8h_source.htm">seq.h</a>.</p>

</div>
</div>
<a id="a42eb4397e1efe3654f22799573c1b27d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42eb4397e1efe3654f22799573c1b27d">&#9670;&nbsp;</a></span>s</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structaf__seq.htm">af_seq</a> s</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the <a class="el" href="structaf__seq.htm">af_seq</a> C-style struct. </p>

<p class="definition">Definition at line <a class="el" href="seq_8h_source.htm#l00051">51</a> of file <a class="el" href="seq_8h_source.htm">seq.h</a>.</p>

</div>
</div>
<a id="a854352f53b148adc24983a58a1866d66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a854352f53b148adc24983a58a1866d66">&#9670;&nbsp;</a></span>size</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t size</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get's the length of the sequence. </p>

<p class="definition">Definition at line <a class="el" href="seq_8h_source.htm#l00056">56</a> of file <a class="el" href="seq_8h_source.htm">seq.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="seq_8h_source.htm">seq.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
