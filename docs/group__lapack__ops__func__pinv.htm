<!-- HTML header for doxygen 1.9.3-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.3"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: pinverse</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
  <!--<td id="projectalign">
   <div id="projectname">ArrayFire<span id="projectnumber">&#160;3.8.1</span>
   </div>
   <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>-->
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.3 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__lapack__ops__func__pinv.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">pinverse<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__linalg__mat.htm">Linear Algebra</a> &raquo; <a class="el" href="group__lapack__ops__mat.htm">Matrix operations</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Pseudo-invert a matrix.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gabaa896b0ad90f59464682abfa080ff37"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__lapack__ops__func__pinv.htm#gabaa896b0ad90f59464682abfa080ff37">pinverse</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const double tol=1E-6, const <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421d">matProp</a> options=<a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421daccba98c5b50e203da4c452c2c00c3d3e">AF_MAT_NONE</a>)</td></tr>
<tr class="memdesc:gabaa896b0ad90f59464682abfa080ff37"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for pseudo-inverting (Moore-Penrose) a matrix.  <a href="group__lapack__ops__func__pinv.htm#gabaa896b0ad90f59464682abfa080ff37">More...</a><br /></td></tr>
<tr class="separator:gabaa896b0ad90f59464682abfa080ff37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00adc3678f4829c40d50359638f61c0c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__lapack__ops__func__pinv.htm#ga00adc3678f4829c40d50359638f61c0c">af_pinverse</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double tol, const <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421d">af_mat_prop</a> options)</td></tr>
<tr class="memdesc:ga00adc3678f4829c40d50359638f61c0c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for pseudo-inverting (Moore-Penrose) a matrix.  <a href="group__lapack__ops__func__pinv.htm#ga00adc3678f4829c40d50359638f61c0c">More...</a><br /></td></tr>
<tr class="separator:ga00adc3678f4829c40d50359638f61c0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Pseudo-invert a matrix. </p>
<p >This function calculates the Moore-Penrose pseudoinverse of a matrix \(A\), using <a class="el" href="group__lapack__factor__func__svd.htm#gab016ef45fce266ab9545054bea1cb6b7">af::svd</a> at its core. If \(A\) is of size \(M \times N\), then its pseudoinverse \(A^+\) will be of size \(N \times M\).</p>
<p >This calculation can be batched if the input array is three or four-dimensional \((M \times N \times P \times Q\), with \(Q=1\) for only three dimensions \()\). Each \(M \times N\) slice along the third dimension will have its own pseudoinverse, for a total of \(P \times Q\) pseudoinverses in the output array \((N \times M \times P \times Q)\).</p>
<p >Here's an example snippet of its usage. In this example, we have a matrix \(A\) and we compute its pseudoinverse \(A^+\). This condition must hold: \(AA^+A=A\), given that the two matrices are pseudoinverses of each other (in fact, this is one of the Moore-Penrose conditions):</p>
<div class="fragment"><div class="line">    <span class="keywordtype">float</span> hA[] = {0, 1, 2, 3, 4, 5};</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> A(3, 2, hA);</div>
<div class="line">    <span class="comment">//  0.0000     3.0000</span></div>
<div class="line">    <span class="comment">//  1.0000     4.0000</span></div>
<div class="line">    <span class="comment">//  2.0000     5.0000</span></div>
<div class="line"> </div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> Apinv = <a class="code hl_function" href="group__lapack__ops__func__pinv.htm#gabaa896b0ad90f59464682abfa080ff37">pinverse</a>(A);</div>
<div class="line">    <span class="comment">// -0.7778    -0.1111     0.5556</span></div>
<div class="line">    <span class="comment">//  0.2778     0.1111    -0.0556</span></div>
<div class="line"> </div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> MustBeA = <a class="code hl_function" href="group__blas__func__matmul.htm#ga63306b6ed967bd1055086db862fe885b">matmul</a>(A, Apinv, A);</div>
<div class="line">    <span class="comment">//  0.0000     3.0000</span></div>
<div class="line">    <span class="comment">//  1.0000     4.0000</span></div>
<div class="line">    <span class="comment">//  2.0000     5.0000</span></div>
<div class="ttc" id="agroup__blas__func__matmul_htm_ga63306b6ed967bd1055086db862fe885b"><div class="ttname"><a href="group__blas__func__matmul.htm#ga63306b6ed967bd1055086db862fe885b">af::matmul</a></div><div class="ttdeci">AFAPI array matmul(const array &amp;lhs, const array &amp;rhs, const matProp optLhs=AF_MAT_NONE, const matProp optRhs=AF_MAT_NONE)</div><div class="ttdoc">Matrix multiply of two arrays.</div></div>
<div class="ttc" id="agroup__lapack__ops__func__pinv_htm_gabaa896b0ad90f59464682abfa080ff37"><div class="ttname"><a href="group__lapack__ops__func__pinv.htm#gabaa896b0ad90f59464682abfa080ff37">af::pinverse</a></div><div class="ttdeci">AFAPI array pinverse(const array &amp;in, const double tol=1E-6, const matProp options=AF_MAT_NONE)</div><div class="ttdoc">C++ Interface for pseudo-inverting (Moore-Penrose) a matrix.</div></div>
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
</div><!-- fragment --><hr  />
 <h2 class="groupheader">Function Documentation</h2>
<a id="ga00adc3678f4829c40d50359638f61c0c" name="ga00adc3678f4829c40d50359638f61c0c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga00adc3678f4829c40d50359638f61c0c">&#9670;&nbsp;</a></span>af_pinverse()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_pinverse </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>tol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421d">af_mat_prop</a>&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for pseudo-inverting (Moore-Penrose) a matrix. </p>
<p >Currently uses the SVD-based approach.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the pseudo-inverse of matrix <code>in</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tol</td><td>defines the lower threshold for singular values from SVD </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>must be AF_MAT_NONE (more options might be supported in the future)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>tol</code> is not the actual lower threshold, but it is passed in as a parameter to the calculation of the actual threshold relative to the shape and contents of <code>in</code>. </dd>
<dd>
At first, try setting <code>tol</code> to 1e-6 for single precision and 1e-12 for double. </dd>
<dd>
This function is not supported in GFOR </dd></dl>

</div>
</div>
<a id="gabaa896b0ad90f59464682abfa080ff37" name="gabaa896b0ad90f59464682abfa080ff37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabaa896b0ad90f59464682abfa080ff37">&#9670;&nbsp;</a></span>pinverse()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::pinverse </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>tol</em> = <code>1E-6</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421d">matProp</a>&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421daccba98c5b50e203da4c452c2c00c3d3e">AF_MAT_NONE</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for pseudo-inverting (Moore-Penrose) a matrix. </p>
<p >Currently uses the SVD-based approach.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tol</td><td>defines the lower threshold for singular values from SVD </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>must be AF_MAT_NONE (more options might be supported in the future) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the pseudo-inverse of the input matrix</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>tol</code> is not the actual lower threshold, but it is passed in as a parameter to the calculation of the actual threshold relative to the shape and contents of <code>in</code>. </dd>
<dd>
This function is not supported in GFOR </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Thu Feb 24 2022 14:12:33 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.3 </li>
    </ul>
</div>
</body>
</html>
