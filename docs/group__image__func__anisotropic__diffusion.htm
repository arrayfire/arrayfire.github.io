<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<title>AnisotropicDiffusion</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__image__func__anisotropic__diffusion.htm','');});
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">AnisotropicDiffusion<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">Complete List of ArrayFire Functions</a><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__image__mat.htm">Image Processing</a> &raquo;  &#124; <a class="el" href="group__imageflt__mat.htm">Filters</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Anisotropic Smoothing Filter.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga62593ac0ae478394a2c194943ee19dbf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__anisotropic__diffusion.htm#ga62593ac0ae478394a2c194943ee19dbf">anisotropicDiffusion</a> (const <a class="el" href="classaf_1_1array.htm">af::array</a> &amp;in, const float timestep, const float conductance, const unsigned iterations, const <a class="el" href="defines_8h.htm#ae6df6eb017ab7030bfc10b6d98817bbb">fluxFunction</a> fftype=<a class="el" href="defines_8h.htm#ae6df6eb017ab7030bfc10b6d98817bbba356bf447a07e7dc28779dccb650e432a">AF_FLUX_EXPONENTIAL</a>, const <a class="el" href="defines_8h.htm#ac6ea6eab91acb3d99fa711fe514498a5">diffusionEq</a> diffusionKind=<a class="el" href="defines_8h.htm#ac6ea6eab91acb3d99fa711fe514498a5af54c5e7995abd1cf6286da145f6d0295">AF_DIFFUSION_GRAD</a>)</td></tr>
<tr class="memdesc:ga62593ac0ae478394a2c194943ee19dbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for gradient anisotropic(non-linear diffusion) smoothing.  <a href="group__image__func__anisotropic__diffusion.htm#ga62593ac0ae478394a2c194943ee19dbf">More...</a><br /></td></tr>
<tr class="separator:ga62593ac0ae478394a2c194943ee19dbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ef489c34a5dbc29bf9ec28c4d8aa310"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__anisotropic__diffusion.htm#ga4ef489c34a5dbc29bf9ec28c4d8aa310">af_anisotropic_diffusion</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const float timestep, const float conductance, const unsigned iterations, const <a class="el" href="defines_8h.htm#ae6df6eb017ab7030bfc10b6d98817bbb">af_flux_function</a> fftype, const <a class="el" href="defines_8h.htm#ac6ea6eab91acb3d99fa711fe514498a5">af_diffusion_eq</a> diffusion_kind)</td></tr>
<tr class="memdesc:ga4ef489c34a5dbc29bf9ec28c4d8aa310"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for anisotropic diffusion.  <a href="#ga4ef489c34a5dbc29bf9ec28c4d8aa310">More...</a><br /></td></tr>
<tr class="separator:ga4ef489c34a5dbc29bf9ec28c4d8aa310"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Anisotropic Smoothing Filter. </p>
<p>Anisotropic diffusion algorithm aims at removing noise in the images while preserving important features such as edges. The algorithm essentially creates a scale space representation of the original image, where image from previous step is used to create a new version of blurred image using the diffusion process. Standard isotropic diffusion methods such as gaussian blur, doesn't take into account the local content(smaller neighborhood of current processing pixel) while removing noise. Anisotropic diffusion uses the flux equations given below to achieve that. Flux equation is the formula used by the diffusion process to determine how much a pixel in neighborhood should contribute to the blurring operation being done at the current pixel at a given iteration.</p>
<p>The flux function can be either exponential or quadratic.</p>
<a class="anchor" id="multi row"></a>
<table class="doxtable">
<caption>Available Flux Functions</caption>
<tr>
<td>AF_FLUX_QUADRATIC  </td><td>\( \frac{1}{1 + (\frac{\| \nabla I\|}{K})^2} \)   </td></tr>
<tr>
<td>AF_FLUX_EXPONENTIAL  </td><td>\( \exp{-(\frac{\| \nabla I\|}{K})^2} \)   </td></tr>
</table>
<p>Please be cautious using the time step parameter to the function. Appropriate time steps for solving this type of p.d.e. depend on the dimensionality of the image and the order of the equation. Stable values for most 2D and 3D functions are 0.125 and 0.0625, respectively. The time step values are automatically constrained to the stable value.</p>
<p>Another input parameter to be cautious about is the conductance parameter, lower values strongly preserve image features and vice-versa. For human vision, this value ranges from 0.5 to 2.0.</p>
<h4>Reference</h4>
<p>Pietro Perona and Jitendra Malik, <code>Scale-space and edge detection using anisotropic diffusion,</code> IEEE Transactions on Pattern Analysis Machine Intelligence, vol. 12, pp. 629-639, 1990.</p>
<h4>Reference</h4>
<p>R. Whitaker and X. Xue. <code>Variable-Conductance, Level-Set Curvature for Image Denoising</code>, International Conference on Image Processing, 2001 pp. 142-145, Vol.3. </p><hr/>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga4ef489c34a5dbc29bf9ec28c4d8aa310"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4ef489c34a5dbc29bf9ec28c4d8aa310">&#9670;&nbsp;</a></span>af_anisotropic_diffusion()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_anisotropic_diffusion </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>timestep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>conductance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>iterations</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ae6df6eb017ab7030bfc10b6d98817bbb">af_flux_function</a>&#160;</td>
          <td class="paramname"><em>fftype</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac6ea6eab91acb3d99fa711fe514498a5">af_diffusion_eq</a>&#160;</td>
          <td class="paramname"><em>diffusion_kind</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for anisotropic diffusion. </p>
<p>It can do both gradient and curvature based anisotropic smoothing.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>is an af_array containing anisotropically smoothed image pixel values </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input image, expects non-integral (float/double) typed af_array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">timestep</td><td>is the time step used in solving the diffusion equation. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">conductance</td><td>parameter controls the sensitivity of conductance in diffusion equation. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">iterations</td><td>is the number of times the diffusion step is performed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fftype</td><td>indicates whether quadratic or exponential flux function is used by algorithm. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">diffusion_kind</td><td>will let the user choose what kind of diffusion method to perform. It will take any value of enum <a class="el" href="defines_8h.htm#ac6ea6eab91acb3d99fa711fe514498a5">af_diffusion_eq</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the moment calculation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="ga62593ac0ae478394a2c194943ee19dbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga62593ac0ae478394a2c194943ee19dbf">&#9670;&nbsp;</a></span>anisotropicDiffusion()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::anisotropicDiffusion </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">af::array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>timestep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>conductance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>iterations</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ae6df6eb017ab7030bfc10b6d98817bbb">fluxFunction</a>&#160;</td>
          <td class="paramname"><em>fftype</em> = <code><a class="el" href="defines_8h.htm#ae6df6eb017ab7030bfc10b6d98817bbba356bf447a07e7dc28779dccb650e432a">AF_FLUX_EXPONENTIAL</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac6ea6eab91acb3d99fa711fe514498a5">diffusionEq</a>&#160;</td>
          <td class="paramname"><em>diffusionKind</em> = <code><a class="el" href="defines_8h.htm#ac6ea6eab91acb3d99fa711fe514498a5af54c5e7995abd1cf6286da145f6d0295">AF_DIFFUSION_GRAD</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for gradient anisotropic(non-linear diffusion) smoothing. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input image, expects non-integral (float/double) typed <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container. ">af::array</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">timestep</td><td>is the time step used in solving the diffusion equation. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">conductance</td><td>parameter controls the sensitivity of conductance in diffusion equation. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">iterations</td><td>is the number of times the diffusion step is performed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fftype</td><td>indicates whether quadratic or exponential flux function is used by algorithm. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">diffusionKind</td><td>will let the user choose what kind of diffusion method to perform. It will take any value of enum <a class="el" href="namespaceaf.htm#a206f19b6579d41e92bf86927433c0c85">diffusionEq</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A filtered image that is of same size as the input. </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="image_processing_2gradient_diffusion_8cpp-example.htm#a6">image_processing/gradient_diffusion.cpp</a>.</dd>
</dl>
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.org']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
