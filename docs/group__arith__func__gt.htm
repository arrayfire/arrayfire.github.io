<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: gt</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__arith__func__gt.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">gt<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__mathfunc__mat.htm">Mathematical functions</a> &raquo; <a class="el" href="group__logic__mat.htm">Logical operations</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Greater than comparison, an elementwise comparison of two arrays.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga4e65603259515de8939899a163ebaf9e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga4e65603259515de8939899a163ebaf9e">af_gt</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga4e65603259515de8939899a163ebaf9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface to perform a greater-than comparison between corresponding elements of two arrays.  <a href="group__arith__func__gt.htm#ga4e65603259515de8939899a163ebaf9e">More...</a><br /></td></tr>
<tr class="separator:ga4e65603259515de8939899a163ebaf9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7635b61eff910853fb18e51a74a74411"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga7635b61eff910853fb18e51a74a74411">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga7635b61eff910853fb18e51a74a74411"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga7635b61eff910853fb18e51a74a74411">More...</a><br /></td></tr>
<tr class="separator:ga7635b61eff910853fb18e51a74a74411"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad7605910524e893a11546294d74df615"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gad7605910524e893a11546294d74df615">operator&gt;</a> (const bool &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gad7605910524e893a11546294d74df615"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gad7605910524e893a11546294d74df615">More...</a><br /></td></tr>
<tr class="separator:gad7605910524e893a11546294d74df615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga70f3b27e97c79985408d30deb57152d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga70f3b27e97c79985408d30deb57152d2">operator&gt;</a> (const int &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga70f3b27e97c79985408d30deb57152d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga70f3b27e97c79985408d30deb57152d2">More...</a><br /></td></tr>
<tr class="separator:ga70f3b27e97c79985408d30deb57152d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34b635046cd08e2f22e58e450af452bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga34b635046cd08e2f22e58e450af452bc">operator&gt;</a> (const unsigned &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga34b635046cd08e2f22e58e450af452bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga34b635046cd08e2f22e58e450af452bc">More...</a><br /></td></tr>
<tr class="separator:ga34b635046cd08e2f22e58e450af452bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4819b2a41d1b8c06a539ab0debdc48cb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga4819b2a41d1b8c06a539ab0debdc48cb">operator&gt;</a> (const char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga4819b2a41d1b8c06a539ab0debdc48cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga4819b2a41d1b8c06a539ab0debdc48cb">More...</a><br /></td></tr>
<tr class="separator:ga4819b2a41d1b8c06a539ab0debdc48cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga51869fdbd571ca553b2ceb84959f0f25"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga51869fdbd571ca553b2ceb84959f0f25">operator&gt;</a> (const unsigned char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga51869fdbd571ca553b2ceb84959f0f25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga51869fdbd571ca553b2ceb84959f0f25">More...</a><br /></td></tr>
<tr class="separator:ga51869fdbd571ca553b2ceb84959f0f25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e50647eb740c7217b10fd6e718e8896"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga1e50647eb740c7217b10fd6e718e8896">operator&gt;</a> (const long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga1e50647eb740c7217b10fd6e718e8896"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga1e50647eb740c7217b10fd6e718e8896">More...</a><br /></td></tr>
<tr class="separator:ga1e50647eb740c7217b10fd6e718e8896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b842df58ed8a8f525e0a3d6b8336a8c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga2b842df58ed8a8f525e0a3d6b8336a8c">operator&gt;</a> (const unsigned long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga2b842df58ed8a8f525e0a3d6b8336a8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga2b842df58ed8a8f525e0a3d6b8336a8c">More...</a><br /></td></tr>
<tr class="separator:ga2b842df58ed8a8f525e0a3d6b8336a8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga20677ba2fe710c9ca725613269e23e3d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga20677ba2fe710c9ca725613269e23e3d">operator&gt;</a> (const long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga20677ba2fe710c9ca725613269e23e3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga20677ba2fe710c9ca725613269e23e3d">More...</a><br /></td></tr>
<tr class="separator:ga20677ba2fe710c9ca725613269e23e3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f50fb99a4afee3920b531184fd6401b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga6f50fb99a4afee3920b531184fd6401b">operator&gt;</a> (const unsigned long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga6f50fb99a4afee3920b531184fd6401b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga6f50fb99a4afee3920b531184fd6401b">More...</a><br /></td></tr>
<tr class="separator:ga6f50fb99a4afee3920b531184fd6401b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad09c785a46aad8732a3fe4aa9bc831c2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gad09c785a46aad8732a3fe4aa9bc831c2">operator&gt;</a> (const double &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gad09c785a46aad8732a3fe4aa9bc831c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gad09c785a46aad8732a3fe4aa9bc831c2">More...</a><br /></td></tr>
<tr class="separator:gad09c785a46aad8732a3fe4aa9bc831c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0102cd1db9cc791f6b8f2c3c18f13bd6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga0102cd1db9cc791f6b8f2c3c18f13bd6">operator&gt;</a> (const float &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga0102cd1db9cc791f6b8f2c3c18f13bd6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga0102cd1db9cc791f6b8f2c3c18f13bd6">More...</a><br /></td></tr>
<tr class="separator:ga0102cd1db9cc791f6b8f2c3c18f13bd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa39a2d65a59306bc4c92d444b750173a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaa39a2d65a59306bc4c92d444b750173a">operator&gt;</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaa39a2d65a59306bc4c92d444b750173a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gaa39a2d65a59306bc4c92d444b750173a">More...</a><br /></td></tr>
<tr class="separator:gaa39a2d65a59306bc4c92d444b750173a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2c6e69d79ae930f31dc658b65026054e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga2c6e69d79ae930f31dc658b65026054e">operator&gt;</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga2c6e69d79ae930f31dc658b65026054e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga2c6e69d79ae930f31dc658b65026054e">More...</a><br /></td></tr>
<tr class="separator:ga2c6e69d79ae930f31dc658b65026054e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeac03f2dfc7462295724c365f8b59404"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaeac03f2dfc7462295724c365f8b59404">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gaeac03f2dfc7462295724c365f8b59404"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gaeac03f2dfc7462295724c365f8b59404">More...</a><br /></td></tr>
<tr class="separator:gaeac03f2dfc7462295724c365f8b59404"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9555749c2d079d547e01e20d3694ffaa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga9555749c2d079d547e01e20d3694ffaa">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga9555749c2d079d547e01e20d3694ffaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga9555749c2d079d547e01e20d3694ffaa">More...</a><br /></td></tr>
<tr class="separator:ga9555749c2d079d547e01e20d3694ffaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga16086c7ca60ced479d5b4ee1b1071143"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga16086c7ca60ced479d5b4ee1b1071143">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga16086c7ca60ced479d5b4ee1b1071143"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga16086c7ca60ced479d5b4ee1b1071143">More...</a><br /></td></tr>
<tr class="separator:ga16086c7ca60ced479d5b4ee1b1071143"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae0f3cae3b9676bd5d4f470f91f573d6c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gae0f3cae3b9676bd5d4f470f91f573d6c">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:gae0f3cae3b9676bd5d4f470f91f573d6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gae0f3cae3b9676bd5d4f470f91f573d6c">More...</a><br /></td></tr>
<tr class="separator:gae0f3cae3b9676bd5d4f470f91f573d6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0dc17ed9c2106d932e497c236f0427ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga0dc17ed9c2106d932e497c236f0427ce">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga0dc17ed9c2106d932e497c236f0427ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga0dc17ed9c2106d932e497c236f0427ce">More...</a><br /></td></tr>
<tr class="separator:ga0dc17ed9c2106d932e497c236f0427ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa03601239b1c6870da2d33783d0c8cc4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaa03601239b1c6870da2d33783d0c8cc4">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gaa03601239b1c6870da2d33783d0c8cc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gaa03601239b1c6870da2d33783d0c8cc4">More...</a><br /></td></tr>
<tr class="separator:gaa03601239b1c6870da2d33783d0c8cc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaff2fd7196d0cce3f06050a84ec6a0e8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaff2fd7196d0cce3f06050a84ec6a0e8e">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:gaff2fd7196d0cce3f06050a84ec6a0e8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gaff2fd7196d0cce3f06050a84ec6a0e8e">More...</a><br /></td></tr>
<tr class="separator:gaff2fd7196d0cce3f06050a84ec6a0e8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c373cbdebdad2e04f63066ba52d6702"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga8c373cbdebdad2e04f63066ba52d6702">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga8c373cbdebdad2e04f63066ba52d6702"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga8c373cbdebdad2e04f63066ba52d6702">More...</a><br /></td></tr>
<tr class="separator:ga8c373cbdebdad2e04f63066ba52d6702"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga237289482c2e3a66c5d7f03c6fd724f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga237289482c2e3a66c5d7f03c6fd724f4">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga237289482c2e3a66c5d7f03c6fd724f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga237289482c2e3a66c5d7f03c6fd724f4">More...</a><br /></td></tr>
<tr class="separator:ga237289482c2e3a66c5d7f03c6fd724f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3f5e56c3791da8e2811a5160bc5c1a75"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga3f5e56c3791da8e2811a5160bc5c1a75">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga3f5e56c3791da8e2811a5160bc5c1a75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga3f5e56c3791da8e2811a5160bc5c1a75">More...</a><br /></td></tr>
<tr class="separator:ga3f5e56c3791da8e2811a5160bc5c1a75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0e90cb941435f856b37b9e34448d969"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaa0e90cb941435f856b37b9e34448d969">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gaa0e90cb941435f856b37b9e34448d969"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gaa0e90cb941435f856b37b9e34448d969">More...</a><br /></td></tr>
<tr class="separator:gaa0e90cb941435f856b37b9e34448d969"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5a8534ed15ee827117391ef6dbc1143e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga5a8534ed15ee827117391ef6dbc1143e">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga5a8534ed15ee827117391ef6dbc1143e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga5a8534ed15ee827117391ef6dbc1143e">More...</a><br /></td></tr>
<tr class="separator:ga5a8534ed15ee827117391ef6dbc1143e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaedd3a20094d3786a6417b017c119bdf4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaedd3a20094d3786a6417b017c119bdf4">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;rhs)</td></tr>
<tr class="separator:gaedd3a20094d3786a6417b017c119bdf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga24773a0031478b917eed609f13ee7a80"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga24773a0031478b917eed609f13ee7a80">operator&gt;</a> (const short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga24773a0031478b917eed609f13ee7a80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga24773a0031478b917eed609f13ee7a80">More...</a><br /></td></tr>
<tr class="separator:ga24773a0031478b917eed609f13ee7a80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf9deb5aa3ba33a24ff21f390577b00ae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaf9deb5aa3ba33a24ff21f390577b00ae">operator&gt;</a> (const unsigned short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaf9deb5aa3ba33a24ff21f390577b00ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gaf9deb5aa3ba33a24ff21f390577b00ae">More...</a><br /></td></tr>
<tr class="separator:gaf9deb5aa3ba33a24ff21f390577b00ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11c940bb5dc1ae385bb0e4a15a88b008"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga11c940bb5dc1ae385bb0e4a15a88b008">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga11c940bb5dc1ae385bb0e4a15a88b008"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga11c940bb5dc1ae385bb0e4a15a88b008">More...</a><br /></td></tr>
<tr class="separator:ga11c940bb5dc1ae385bb0e4a15a88b008"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga918da93335a59938845d9cc3970f3961"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga918da93335a59938845d9cc3970f3961">operator&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga918da93335a59938845d9cc3970f3961"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Greater than comparison, an elementwise comparison of two arrays. </p>
<p >Check if the elements of one array are greater than those of another array. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga4e65603259515de8939899a163ebaf9e" name="ga4e65603259515de8939899a163ebaf9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4e65603259515de8939899a163ebaf9e">&#9670;&#160;</a></span>af_gt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_gt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>batch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface to perform a greater-than comparison between corresponding elements of two arrays. </p>
<p >Output type is b8.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>1's where <code>lhs &gt; rhs</code>, else 0's </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>first input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>second input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">batch</td><td>batch mode </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>, if function returns successfully, else an <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> code is given </dd></dl>

</div>
</div>
<a id="ga7635b61eff910853fb18e51a74a74411" name="ga7635b61eff910853fb18e51a74a74411"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7635b61eff910853fb18e51a74a74411">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[1/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code> </dd></dl>

</div>
</div>
<a id="gaeac03f2dfc7462295724c365f8b59404" name="gaeac03f2dfc7462295724c365f8b59404"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaeac03f2dfc7462295724c365f8b59404">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[2/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaedd3a20094d3786a6417b017c119bdf4" name="gaedd3a20094d3786a6417b017c119bdf4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaedd3a20094d3786a6417b017c119bdf4">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[3/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga5a8534ed15ee827117391ef6dbc1143e" name="ga5a8534ed15ee827117391ef6dbc1143e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5a8534ed15ee827117391ef6dbc1143e">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[4/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gae0f3cae3b9676bd5d4f470f91f573d6c" name="gae0f3cae3b9676bd5d4f470f91f573d6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae0f3cae3b9676bd5d4f470f91f573d6c">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[5/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga3f5e56c3791da8e2811a5160bc5c1a75" name="ga3f5e56c3791da8e2811a5160bc5c1a75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3f5e56c3791da8e2811a5160bc5c1a75">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[6/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaa0e90cb941435f856b37b9e34448d969" name="gaa0e90cb941435f856b37b9e34448d969"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa0e90cb941435f856b37b9e34448d969">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[7/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga9555749c2d079d547e01e20d3694ffaa" name="ga9555749c2d079d547e01e20d3694ffaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9555749c2d079d547e01e20d3694ffaa">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[8/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaa03601239b1c6870da2d33783d0c8cc4" name="gaa03601239b1c6870da2d33783d0c8cc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa03601239b1c6870da2d33783d0c8cc4">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[9/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga8c373cbdebdad2e04f63066ba52d6702" name="ga8c373cbdebdad2e04f63066ba52d6702"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8c373cbdebdad2e04f63066ba52d6702">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[10/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga11c940bb5dc1ae385bb0e4a15a88b008" name="ga11c940bb5dc1ae385bb0e4a15a88b008"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga11c940bb5dc1ae385bb0e4a15a88b008">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[11/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga16086c7ca60ced479d5b4ee1b1071143" name="ga16086c7ca60ced479d5b4ee1b1071143"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga16086c7ca60ced479d5b4ee1b1071143">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[12/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga0dc17ed9c2106d932e497c236f0427ce" name="ga0dc17ed9c2106d932e497c236f0427ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0dc17ed9c2106d932e497c236f0427ce">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[13/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaff2fd7196d0cce3f06050a84ec6a0e8e" name="gaff2fd7196d0cce3f06050a84ec6a0e8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaff2fd7196d0cce3f06050a84ec6a0e8e">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[14/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga237289482c2e3a66c5d7f03c6fd724f4" name="ga237289482c2e3a66c5d7f03c6fd724f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga237289482c2e3a66c5d7f03c6fd724f4">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[15/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga918da93335a59938845d9cc3970f3961" name="ga918da93335a59938845d9cc3970f3961"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga918da93335a59938845d9cc3970f3961">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[16/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gad7605910524e893a11546294d74df615" name="gad7605910524e893a11546294d74df615"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad7605910524e893a11546294d74df615">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[17/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga2c6e69d79ae930f31dc658b65026054e" name="ga2c6e69d79ae930f31dc658b65026054e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2c6e69d79ae930f31dc658b65026054e">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[18/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaa39a2d65a59306bc4c92d444b750173a" name="gaa39a2d65a59306bc4c92d444b750173a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa39a2d65a59306bc4c92d444b750173a">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[19/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga4819b2a41d1b8c06a539ab0debdc48cb" name="ga4819b2a41d1b8c06a539ab0debdc48cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4819b2a41d1b8c06a539ab0debdc48cb">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[20/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gad09c785a46aad8732a3fe4aa9bc831c2" name="gad09c785a46aad8732a3fe4aa9bc831c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad09c785a46aad8732a3fe4aa9bc831c2">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[21/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga0102cd1db9cc791f6b8f2c3c18f13bd6" name="ga0102cd1db9cc791f6b8f2c3c18f13bd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0102cd1db9cc791f6b8f2c3c18f13bd6">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[22/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga70f3b27e97c79985408d30deb57152d2" name="ga70f3b27e97c79985408d30deb57152d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga70f3b27e97c79985408d30deb57152d2">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[23/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga1e50647eb740c7217b10fd6e718e8896" name="ga1e50647eb740c7217b10fd6e718e8896"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1e50647eb740c7217b10fd6e718e8896">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[24/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga20677ba2fe710c9ca725613269e23e3d" name="ga20677ba2fe710c9ca725613269e23e3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga20677ba2fe710c9ca725613269e23e3d">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[25/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga24773a0031478b917eed609f13ee7a80" name="ga24773a0031478b917eed609f13ee7a80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga24773a0031478b917eed609f13ee7a80">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[26/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga34b635046cd08e2f22e58e450af452bc" name="ga34b635046cd08e2f22e58e450af452bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga34b635046cd08e2f22e58e450af452bc">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[27/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga51869fdbd571ca553b2ceb84959f0f25" name="ga51869fdbd571ca553b2ceb84959f0f25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga51869fdbd571ca553b2ceb84959f0f25">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[28/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga2b842df58ed8a8f525e0a3d6b8336a8c" name="ga2b842df58ed8a8f525e0a3d6b8336a8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2b842df58ed8a8f525e0a3d6b8336a8c">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[29/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga6f50fb99a4afee3920b531184fd6401b" name="ga6f50fb99a4afee3920b531184fd6401b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6f50fb99a4afee3920b531184fd6401b">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[30/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaf9deb5aa3ba33a24ff21f390577b00ae" name="gaf9deb5aa3ba33a24ff21f390577b00ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf9deb5aa3ba33a24ff21f390577b00ae">&#9670;&#160;</a></span>operator&gt;() <span class="overload">[31/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater than operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt; operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Wed Aug 30 2023 15:41:56 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
