<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: image_processing/gradient_diffusion.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('image_processing_2gradient_diffusion_8cpp-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle"><div class="title">image_processing/gradient_diffusion.cpp</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/*******************************************************</span></div>
<div class="line"><span class="comment"> * Copyright (c) 2017, ArrayFire</span></div>
<div class="line"><span class="comment"> * All rights reserved.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><span class="comment"> ********************************************************/</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="arrayfire_8h.htm">arrayfire.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="util_8h.htm">af/util.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;cstdlib&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span><a class="code hl_namespace" href="namespaceaf.htm">af</a>;</div>
<div class="line"> </div>
<div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> ITERS = 64;</div>
<div class="line"> </div>
<div class="line"><a id="_a0" name="_a0"></a><a class="code hl_class" href="classaf_1_1array.htm">array</a> normalize(<span class="keyword">const</span> <a class="code hl_class" href="classaf_1_1array.htm">array</a> &amp;p_in) {</div>
<div class="line">    <span class="keywordtype">float</span> mx = max&lt;float&gt;(p_in);</div>
<div class="line">    <span class="keywordtype">float</span> mn = min&lt;float&gt;(p_in);</div>
<div class="line">    <span class="keywordflow">return</span> (p_in - mn) / (mx - mn);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><a class="code hl_class" href="classaf_1_1array.htm">array</a> sobelFilter(<span class="keyword">const</span> <a class="code hl_class" href="classaf_1_1array.htm">array</a> &amp;p_in) {</div>
<div class="line">    <span class="keywordtype">int</span> w = 5;</div>
<div class="line">    <span class="keywordflow">if</span> (p_in.<a id="a1" name="a1"></a><a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(0) &lt; 512) w = 3;</div>
<div class="line">    <span class="keywordflow">if</span> (p_in.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(0) &gt; 2048) w = 7;</div>
<div class="line"> </div>
<div class="line">    <span class="keywordtype">int</span> h = 5;</div>
<div class="line">    <span class="keywordflow">if</span> (p_in.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(0) &lt; 512) h = 3;</div>
<div class="line">    <span class="keywordflow">if</span> (p_in.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(0) &gt; 2048) h = 7;</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> ker    = gaussianKernel(w, h);</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> smooth = convolve(p_in, ker);</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> i = 1; i &lt; ITERS; ++i) smooth = convolve(smooth, ker);</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> Gx, Gy;</div>
<div class="line">    sobel(Gx, Gy, smooth, 3);</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">return</span> normalize(hypot(Gx, Gy));</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><a class="code hl_class" href="classaf_1_1array.htm">array</a> in, edges, smoothed;</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> anisotropicSmoothing() {</div>
<div class="line">    smoothed = <a class="code hl_function" href="group__image__func__anisotropic__diffusion.htm#ga4cd2183544530cdc61e6073bd120a65e">anisotropicDiffusion</a>(in, 0.125, 0.35f, ITERS);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[]) {</div>
<div class="line">    <span class="keywordtype">int</span> device = argc &gt; 1 ? atoi(argv[1]) : 0;</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">try</span> {</div>
<div class="line">        <a class="code hl_function" href="group__device__func__set.htm#gad7c36828c21e7efc06a067bbc47d8d3b">setDevice</a>(device);</div>
<div class="line">        <a class="code hl_function" href="group__device__func__info.htm#ga3e22b6ff6e0940bb31577bea2863ca27">info</a>();</div>
<div class="line"> </div>
<div class="line">        printf(<span class="stringliteral">&quot;** ArrayFire Gradient Anisotropic Smoothing Demo **\n&quot;</span>);</div>
<div class="line"> </div>
<div class="line">        <a id="_a2" name="_a2"></a><a class="code hl_class" href="classaf_1_1Window.htm">Window</a> myWindow(<span class="stringliteral">&quot;Gradient Anisotropic Smoothing&quot;</span>);</div>
<div class="line"> </div>
<div class="line">        in = <a class="code hl_function" href="group__imageio__func__load.htm#ga5a57870c43a81ec21fcdb7a11bef20d4">loadImage</a>(ASSETS_DIR <span class="stringliteral">&quot;/examples/images/man.jpg&quot;</span>, <span class="keyword">false</span>);</div>
<div class="line"> </div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> sEdges = sobelFilter(in);</div>
<div class="line"> </div>
<div class="line">        anisotropicSmoothing();</div>
<div class="line"> </div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> Gx, Gy;</div>
<div class="line">        <a class="code hl_function" href="group__image__func__sobel.htm#ga7918bbf6f3e37d5bab9d9fb5a1a46607">sobel</a>(Gx, Gy, smoothed, 3);</div>
<div class="line"> </div>
<div class="line">        edges = normalize(<a class="code hl_function" href="group__arith__func__hypot.htm#ga290faa6384905def505b523879d4022d">hypot</a>(Gx, Gy));</div>
<div class="line"> </div>
<div class="line">        <span class="keywordflow">while</span> (!myWindow.close()) {</div>
<div class="line">            myWindow.grid(2, 2);</div>
<div class="line"> </div>
<div class="line">            myWindow(0, 0).image(in / 255.0f, <span class="stringliteral">&quot;Input Image&quot;</span>);</div>
<div class="line">            myWindow(0, 1).image(normalize(smoothed),</div>
<div class="line">                                 <span class="stringliteral">&quot;Anisotropically smooted Input&quot;</span>);</div>
<div class="line">            myWindow(1, 0).image(normalize(sEdges),</div>
<div class="line">                                 <span class="stringliteral">&quot;Gradient Magnitude after gaussian blur t=64&quot;</span>);</div>
<div class="line">            myWindow(1, 1).image(normalize(edges),</div>
<div class="line">                                 <span class="stringliteral">&quot;Gradient Magnitude after diffusion t=64&quot;</span>);</div>
<div class="line"> </div>
<div class="line">            myWindow.show();</div>
<div class="line">        }</div>
<div class="line"> </div>
<div class="line">        printf(</div>
<div class="line">            <span class="stringliteral">&quot;\nAnisotropic Diffusion avg runtime for current image in Seconds: &quot;</span></div>
<div class="line">            <span class="stringliteral">&quot;%g\n&quot;</span>,</div>
<div class="line">            <a class="code hl_function" href="namespaceaf.htm#a08955393264b77be242246c0b1148687">timeit</a>(anisotropicSmoothing));</div>
<div class="line"> </div>
<div class="line">    } <span class="keywordflow">catch</span> (<a id="_a3" name="_a3"></a><a class="code hl_class" href="classaf_1_1exception.htm">af::exception</a> &amp;e) {</div>
<div class="line">        fprintf(stderr, <span class="stringliteral">&quot;%s\n&quot;</span>, e.<a id="a4" name="a4"></a><a class="code hl_function" href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">what</a>());</div>
<div class="line">        <span class="keywordflow">throw</span>;</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
<div class="ttc" id="aarrayfire_8h_htm"><div class="ttname"><a href="arrayfire_8h.htm">arrayfire.h</a></div></div>
<div class="ttc" id="aclassaf_1_1Window_htm"><div class="ttname"><a href="classaf_1_1Window.htm">af::Window</a></div><div class="ttdoc">Window object to render af::arrays.</div><div class="ttdef"><b>Definition:</b> <a href="graphics_8h_source.htm#l00037">graphics.h:37</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00037">array.h:37</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm_a10d14b019693bc98f672ad7c4ac60bac"><div class="ttname"><a href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">af::array::dims</a></div><div class="ttdeci">dim4 dims() const</div><div class="ttdoc">Get dimensions of the array.</div></div>
<div class="ttc" id="aclassaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00021">exception.h:22</a></div></div>
<div class="ttc" id="aclassaf_1_1exception_htm_aa884ff67408851f00e50cf971a4dfd05"><div class="ttname"><a href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">af::exception::what</a></div><div class="ttdeci">virtual const char * what() const</div><div class="ttdoc">Returns an error message for the exception in a string format.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00046">exception.h:46</a></div></div>
<div class="ttc" id="agroup__arith__func__hypot_htm_ga290faa6384905def505b523879d4022d"><div class="ttname"><a href="group__arith__func__hypot.htm#ga290faa6384905def505b523879d4022d">af::hypot</a></div><div class="ttdeci">AFAPI array hypot(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">C++ Interface to calculate the length of the hypotenuse of two inputs.</div></div>
<div class="ttc" id="agroup__device__func__info_htm_ga3e22b6ff6e0940bb31577bea2863ca27"><div class="ttname"><a href="group__device__func__info.htm#ga3e22b6ff6e0940bb31577bea2863ca27">af::info</a></div><div class="ttdeci">AFAPI void info()</div></div>
<div class="ttc" id="agroup__device__func__set_htm_gad7c36828c21e7efc06a067bbc47d8d3b"><div class="ttname"><a href="group__device__func__set.htm#gad7c36828c21e7efc06a067bbc47d8d3b">af::setDevice</a></div><div class="ttdeci">AFAPI void setDevice(const int device)</div><div class="ttdoc">Sets the current device.</div></div>
<div class="ttc" id="agroup__image__func__anisotropic__diffusion_htm_ga4cd2183544530cdc61e6073bd120a65e"><div class="ttname"><a href="group__image__func__anisotropic__diffusion.htm#ga4cd2183544530cdc61e6073bd120a65e">af::anisotropicDiffusion</a></div><div class="ttdeci">AFAPI array anisotropicDiffusion(const af::array &amp;in, const float timestep, const float conductance, const unsigned iterations, const fluxFunction fftype=AF_FLUX_EXPONENTIAL, const diffusionEq diffusionKind=AF_DIFFUSION_GRAD)</div><div class="ttdoc">C++ Interface for gradient anisotropic(non-linear diffusion) smoothing.</div></div>
<div class="ttc" id="agroup__image__func__sobel_htm_ga7918bbf6f3e37d5bab9d9fb5a1a46607"><div class="ttname"><a href="group__image__func__sobel.htm#ga7918bbf6f3e37d5bab9d9fb5a1a46607">af::sobel</a></div><div class="ttdeci">AFAPI void sobel(array &amp;dx, array &amp;dy, const array &amp;img, const unsigned ker_size=3)</div><div class="ttdoc">C++ Interface for extracting sobel gradients.</div></div>
<div class="ttc" id="agroup__imageio__func__load_htm_ga5a57870c43a81ec21fcdb7a11bef20d4"><div class="ttname"><a href="group__imageio__func__load.htm#ga5a57870c43a81ec21fcdb7a11bef20d4">af::loadImage</a></div><div class="ttdeci">AFAPI array loadImage(const char *filename, const bool is_color=false)</div><div class="ttdoc">C++ Interface for loading an image.</div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:15</a></div></div>
<div class="ttc" id="anamespaceaf_htm_a08955393264b77be242246c0b1148687"><div class="ttname"><a href="namespaceaf.htm#a08955393264b77be242246c0b1148687">af::timeit</a></div><div class="ttdeci">AFAPI double timeit(void(*fn)())</div></div>
<div class="ttc" id="autil_8h_htm"><div class="ttname"><a href="util_8h.htm">util.h</a></div></div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Tue Feb 14 2023 10:39:41 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.6 </li>
    </ul>
</div>
</body>
</html>
