<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: image_processing/gradient_diffusion.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('image_processing_2gradient_diffusion_8cpp-example.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">image_processing/gradient_diffusion.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/*******************************************************</span></div><div class="line"><span class="comment"> * Copyright (c) 2017, ArrayFire</span></div><div class="line"><span class="comment"> * All rights reserved.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * This file is distributed under 3-clause BSD license.</span></div><div class="line"><span class="comment"> * The complete license agreement can be obtained at:</span></div><div class="line"><span class="comment"> * https://arrayfire.com/licenses/BSD-3-Clause</span></div><div class="line"><span class="comment"> ********************************************************/</span></div><div class="line"></div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="arrayfire_8h.htm">arrayfire.h</a>&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="util_8h.htm">af/util.h</a>&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;cstdlib&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">using namespace </span><a class="code" href="namespaceaf.htm">af</a>;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> ITERS = 64;</div><div class="line"></div><div class="line"><a name="_a0"></a><a class="code" href="classaf_1_1array.htm">array</a> normalize(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;p_in) {</div><div class="line">    <span class="keywordtype">float</span> mx = max&lt;float&gt;(p_in);</div><div class="line">    <span class="keywordtype">float</span> mn = min&lt;float&gt;(p_in);</div><div class="line">    <span class="keywordflow">return</span> (p_in - mn) / (mx - mn);</div><div class="line">}</div><div class="line"></div><div class="line"><a class="code" href="classaf_1_1array.htm">array</a> sobelFilter(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;p_in) {</div><div class="line">    <span class="keywordtype">int</span> w = 5;</div><div class="line">    <span class="keywordflow">if</span> (p_in.<a name="a1"></a><a class="code" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(0) &lt; 512) w = 3;</div><div class="line">    <span class="keywordflow">if</span> (p_in.<a class="code" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(0) &gt; 2048) w = 7;</div><div class="line"></div><div class="line">    <span class="keywordtype">int</span> h = 5;</div><div class="line">    <span class="keywordflow">if</span> (p_in.<a class="code" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(0) &lt; 512) h = 3;</div><div class="line">    <span class="keywordflow">if</span> (p_in.<a class="code" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(0) &gt; 2048) h = 7;</div><div class="line"></div><div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> ker    = <a name="a2"></a><a class="code" href="group__image__func__gauss.htm#gaa5de1866bc1bf50bf5fe3cb26d4e410d">gaussianKernel</a>(w, h);</div><div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> smooth = <a name="a3"></a><a class="code" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve</a>(p_in, ker);</div><div class="line"></div><div class="line">    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> i = 1; i &lt; ITERS; ++i) smooth = <a class="code" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve</a>(smooth, ker);</div><div class="line"></div><div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> Gx, Gy;</div><div class="line">    <a name="a4"></a><a class="code" href="group__image__func__sobel.htm#ga6c098aec0c9768f8264a95eb00deda3a">sobel</a>(Gx, Gy, smooth, 3);</div><div class="line"></div><div class="line">    <span class="keywordflow">return</span> normalize(<a name="a5"></a><a class="code" href="group__arith__func__hypot.htm#ga64b537a8205c867f03c86124a65570a7">hypot</a>(Gx, Gy));</div><div class="line">}</div><div class="line"></div><div class="line"><a class="code" href="classaf_1_1array.htm">array</a> in, edges, smoothed;</div><div class="line"></div><div class="line"><span class="keywordtype">void</span> anisotropicSmoothing() {</div><div class="line">    smoothed = <a name="a6"></a><a class="code" href="group__image__func__anisotropic__diffusion.htm#ga62593ac0ae478394a2c194943ee19dbf">anisotropicDiffusion</a>(in, 0.125, 0.35f, ITERS);</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[]) {</div><div class="line">    <span class="keywordtype">int</span> device = argc &gt; 1 ? atoi(argv[1]) : 0;</div><div class="line"></div><div class="line">    <span class="keywordflow">try</span> {</div><div class="line">        <a name="a7"></a><a class="code" href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7">setDevice</a>(device);</div><div class="line">        <a name="a8"></a><a class="code" href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">info</a>();</div><div class="line"></div><div class="line">        printf(<span class="stringliteral">&quot;** ArrayFire Gradient Anisotropic Smoothing Demo **\n&quot;</span>);</div><div class="line"></div><div class="line">        <a name="_a9"></a><a class="code" href="classaf_1_1Window.htm">Window</a> myWindow(<span class="stringliteral">&quot;Gradient Anisotropic Smoothing&quot;</span>);</div><div class="line"></div><div class="line">        in = <a name="a10"></a><a class="code" href="group__imageio__func__load.htm#ga8bcf01ffa60bc513856d98b8a63bb12a">loadImage</a>(ASSETS_DIR <span class="stringliteral">&quot;/examples/images/man.jpg&quot;</span>, <span class="keyword">false</span>);</div><div class="line"></div><div class="line">        <a class="code" href="classaf_1_1array.htm">array</a> sEdges = sobelFilter(in);</div><div class="line"></div><div class="line">        anisotropicSmoothing();</div><div class="line"></div><div class="line">        <a class="code" href="classaf_1_1array.htm">array</a> Gx, Gy;</div><div class="line">        <a class="code" href="group__image__func__sobel.htm#ga6c098aec0c9768f8264a95eb00deda3a">sobel</a>(Gx, Gy, smoothed, 3);</div><div class="line"></div><div class="line">        edges = normalize(<a class="code" href="group__arith__func__hypot.htm#ga64b537a8205c867f03c86124a65570a7">hypot</a>(Gx, Gy));</div><div class="line"></div><div class="line">        <span class="keywordflow">while</span> (!myWindow.<a name="a11"></a><a class="code" href="group__gfx__func__window.htm#ga46143fd6de3be9ab9951f140d3ae8c2f">close</a>()) {</div><div class="line">            myWindow.<a name="a12"></a><a class="code" href="group__gfx__func__window.htm#gaecba84f1690934bbc397e8ac7e141268">grid</a>(2, 2);</div><div class="line"></div><div class="line">            myWindow(0, 0).<a name="a13"></a><a class="code" href="group__gfx__func__draw.htm#gaed174450be6db4dfa5ef65b7baccbe57">image</a>(in / 255.0f, <span class="stringliteral">&quot;Input Image&quot;</span>);</div><div class="line">            myWindow(0, 1).<a class="code" href="group__gfx__func__draw.htm#gaed174450be6db4dfa5ef65b7baccbe57">image</a>(normalize(smoothed),</div><div class="line">                                 <span class="stringliteral">&quot;Anisotropically smooted Input&quot;</span>);</div><div class="line">            myWindow(1, 0).<a class="code" href="group__gfx__func__draw.htm#gaed174450be6db4dfa5ef65b7baccbe57">image</a>(normalize(sEdges),</div><div class="line">                                 <span class="stringliteral">&quot;Gradient Magnitude after gaussian blur t=64&quot;</span>);</div><div class="line">            myWindow(1, 1).<a class="code" href="group__gfx__func__draw.htm#gaed174450be6db4dfa5ef65b7baccbe57">image</a>(normalize(edges),</div><div class="line">                                 <span class="stringliteral">&quot;Gradient Magnitude after diffusion t=64&quot;</span>);</div><div class="line"></div><div class="line">            myWindow.<a name="a14"></a><a class="code" href="group__gfx__func__window.htm#ga4b148f40a95444d5669406b918ad2f52">show</a>();</div><div class="line">        }</div><div class="line"></div><div class="line">        printf(</div><div class="line">            <span class="stringliteral">&quot;\nAnisotropic Diffusion avg runtime for current image in Seconds: &quot;</span></div><div class="line">            <span class="stringliteral">&quot;%g\n&quot;</span>,</div><div class="line">            <a name="a15"></a><a class="code" href="namespaceaf.htm#a9ffb3ceefb515e1778cf8c4d5e29db59">timeit</a>(anisotropicSmoothing));</div><div class="line"></div><div class="line">    } <span class="keywordflow">catch</span> (<a name="_a16"></a><a class="code" href="classaf_1_1exception.htm">af::exception</a> &amp;e) {</div><div class="line">        fprintf(stderr, <span class="stringliteral">&quot;%s\n&quot;</span>, e.<a name="a17"></a><a class="code" href="classaf_1_1exception.htm#ad62489809e3df568e973597b928d6d9b">what</a>());</div><div class="line">        <span class="keywordflow">throw</span>;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="keywordflow">return</span> 0;</div><div class="line">}</div></div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
