<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: image_processing/image_editing.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('image_processing_2image_editing_8cpp-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle"><div class="title">image_processing/image_editing.cpp</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/*******************************************************</span></div>
<div class="line"><span class="comment"> * Copyright (c) 2014, ArrayFire</span></div>
<div class="line"><span class="comment"> * All rights reserved.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><span class="comment"> ********************************************************/</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="arrayfire_8h.htm">arrayfire.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;cstdio&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;cstdlib&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span><a class="code hl_namespace" href="namespaceaf.htm">af</a>;</div>
<div class="line"> </div>
<div class="line"><a id="_a0" name="_a0"></a><a class="code hl_class" href="classaf_1_1array.htm">array</a> changeContrast(<span class="keyword">const</span> <a class="code hl_class" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">float</span> contrast) {</div>
<div class="line">    <span class="keywordtype">float</span> scale = tan((contrast + 1) * Pi / 4);</div>
<div class="line">    <span class="keywordflow">return</span> (((in / 255.0f - 0.5f) * scale + 0.5f) * 255.0f);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><a class="code hl_class" href="classaf_1_1array.htm">array</a> changeBrightness(<span class="keyword">const</span> <a class="code hl_class" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">float</span> brightness,</div>
<div class="line">                       <span class="keyword">const</span> <span class="keywordtype">float</span> channelMax = 255.0f) {</div>
<div class="line">    <span class="keywordtype">float</span> factor = brightness * channelMax;</div>
<div class="line">    <span class="keywordflow">return</span> (in + factor);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><a class="code hl_class" href="classaf_1_1array.htm">array</a> <a class="code hl_function" href="group__arith__func__clamp.htm#ga7a28608d80d434a0019bc3090b0d29b4">clamp</a>(<span class="keyword">const</span> <a class="code hl_class" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keywordtype">float</span> min = 0.0f, <span class="keywordtype">float</span> max = 255.0f) {</div>
<div class="line">    <span class="keywordflow">return</span> ((in &lt; min) * 0.0f + (in &gt; max) * 255.0f +</div>
<div class="line">            (in &gt;= min &amp;&amp; in &lt;= max) * in);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><a class="code hl_class" href="classaf_1_1array.htm">array</a> usm(<span class="keyword">const</span> <a class="code hl_class" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keywordtype">float</span> radius, <span class="keywordtype">float</span> amount) {</div>
<div class="line">    <span class="keywordtype">int</span> gKernelLen   = 2 * radius + 1;</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> blurKernel = <a class="code hl_function" href="group__image__func__gauss.htm#gacd7cc37308ee4d90a0071968073987e5">gaussianKernel</a>(gKernelLen, gKernelLen);</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> blur       = <a class="code hl_function" href="group__signal__func__convolve.htm#ga801b0f4a09a017ccb196fac3c0dc417b">convolve</a>(in, blurKernel);</div>
<div class="line">    <span class="keywordflow">return</span> (in + amount * (in - blur));</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><a class="code hl_class" href="classaf_1_1array.htm">array</a> digZoom(<span class="keyword">const</span> <a class="code hl_class" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height) {</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> cropped = in(<a id="_a1" name="_a1"></a><a class="code hl_class" href="classaf_1_1seq.htm">seq</a>(x, width - 1), <a class="code hl_class" href="classaf_1_1seq.htm">seq</a>(y, height - 1), span);</div>
<div class="line">    <span class="keywordflow">return</span> <a class="code hl_function" href="group__transform__func__resize.htm#gaa80038ec7db0ce0836c79d2c8a75e788">resize</a>(cropped, (<span class="keywordtype">unsigned</span>)in.<a id="a2" name="a2"></a><a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(0), (<span class="keywordtype">unsigned</span>)in.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(1));</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><a class="code hl_class" href="classaf_1_1array.htm">array</a> alphaBlend(<span class="keyword">const</span> <a class="code hl_class" href="classaf_1_1array.htm">array</a> &amp;a, <span class="keyword">const</span> <a class="code hl_class" href="classaf_1_1array.htm">array</a> &amp;b, <span class="keyword">const</span> <a class="code hl_class" href="classaf_1_1array.htm">array</a> &amp;mask) {</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> tiledMask;</div>
<div class="line">    <span class="keywordflow">if</span> (mask.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(2) != a.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(2)) tiledMask = <a class="code hl_function" href="group__manip__func__tile.htm#gaeba95584319d7d90e2c371391db0083b">tile</a>(mask, 1, 1, a.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(2));</div>
<div class="line">    <span class="keywordflow">return</span> a * tiledMask + (1.0f - tiledMask) * b;</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> normalizeImage(<a class="code hl_class" href="classaf_1_1array.htm">array</a> &amp;in) {</div>
<div class="line">    <span class="keywordtype">float</span> <a class="code hl_function" href="group__reduce__func__min.htm#ga5c4c0c89dbc59ae5e20fb7e5438ceca5">min</a> = af::min&lt;float&gt;(in);</div>
<div class="line">    <span class="keywordtype">float</span> <a class="code hl_function" href="group__reduce__func__max.htm#ga8487a88bf44e0c88af44fec99cc205b1">max</a> = af::max&lt;float&gt;(in);</div>
<div class="line">    in        = 255.0f * ((in - <a class="code hl_function" href="group__reduce__func__min.htm#ga5c4c0c89dbc59ae5e20fb7e5438ceca5">min</a>) / (max - min));</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><a class="code hl_class" href="classaf_1_1array.htm">array</a> boundary(<span class="keyword">const</span> <a class="code hl_class" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <a class="code hl_class" href="classaf_1_1array.htm">array</a> &amp;mask) {</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> ret_val = in - <a class="code hl_function" href="group__image__func__erode.htm#gaa25e0009132b5aa83b6462b732cbf031">erode</a>(in, mask);</div>
<div class="line">    normalizeImage(ret_val);</div>
<div class="line">    <span class="keywordflow">return</span> ret_val;</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv) {</div>
<div class="line">    <span class="keywordflow">try</span> {</div>
<div class="line">        <span class="keywordtype">int</span> device = argc &gt; 1 ? atoi(argv[1]) : 0;</div>
<div class="line">        <a id="a3" name="a3"></a><a class="code hl_function" href="group__device__func__set.htm#gad7c36828c21e7efc06a067bbc47d8d3b">af::setDevice</a>(device);</div>
<div class="line">        <a id="a4" name="a4"></a><a class="code hl_function" href="group__device__func__info.htm#ga3e22b6ff6e0940bb31577bea2863ca27">af::info</a>();</div>
<div class="line"> </div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> man   = <a class="code hl_function" href="group__imageio__func__load.htm#ga5a57870c43a81ec21fcdb7a11bef20d4">loadImage</a>(ASSETS_DIR <span class="stringliteral">&quot;/examples/images/man.jpg&quot;</span>, <span class="keyword">true</span>);</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> fight = <a class="code hl_function" href="group__imageio__func__load.htm#ga5a57870c43a81ec21fcdb7a11bef20d4">loadImage</a>(ASSETS_DIR <span class="stringliteral">&quot;/examples/images/fight.jpg&quot;</span>, <span class="keyword">true</span>);</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> nature =</div>
<div class="line">            <a class="code hl_function" href="group__transform__func__resize.htm#gaa80038ec7db0ce0836c79d2c8a75e788">resize</a>(<a class="code hl_function" href="group__imageio__func__load.htm#ga5a57870c43a81ec21fcdb7a11bef20d4">loadImage</a>(ASSETS_DIR <span class="stringliteral">&quot;/examples/images/nature.jpg&quot;</span>, <span class="keyword">true</span>),</div>
<div class="line">                   fight.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(0), fight.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(1));</div>
<div class="line"> </div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> intensity  = <a class="code hl_function" href="group__image__func__colorspace.htm#gad2913948b841a2e14e2596e32d5dbc31">colorSpace</a>(fight, <a id="a5" name="a5"></a><a class="code hl_enumvalue" href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0da2b379305db06eb19ff82ce7e85b7c4b1">AF_GRAY</a>, <a id="a6" name="a6"></a><a class="code hl_enumvalue" href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0dad9c37bf4beee3f07b8b1aa4b887244e6">AF_RGB</a>);</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> mask       = <a class="code hl_function" href="group__arith__func__clamp.htm#ga7a28608d80d434a0019bc3090b0d29b4">clamp</a>(intensity, 10.0f, 255.0f) &gt; 0.0f;</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> blend      = alphaBlend(fight, nature, mask);</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> highcon    = changeContrast(man, 0.3);</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> highbright = changeBrightness(man, 0.2);</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> translated = <a class="code hl_function" href="group__transform__func__translate.htm#ga9478a180bc3822354a01cb06e1905133">translate</a>(man, 100, 100, 200, 126);</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> sharp      = usm(man, 3, 1.2);</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> zoom       = digZoom(man, 28, 10, 192, 192);</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> morph_mask = <a class="code hl_function" href="group__data__func__constant.htm#ga0db7363474e85542f16e4bbcf57fe842">constant</a>(1, 3, 3);</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">array</a> bdry       = boundary(man, morph_mask);</div>
<div class="line"> </div>
<div class="line">        <a id="_a7" name="_a7"></a><a class="code hl_class" href="classaf_1_1Window.htm">af::Window</a> wnd(<span class="stringliteral">&quot;Image Editing Operations&quot;</span>);</div>
<div class="line">        printf(<span class="stringliteral">&quot;Press ESC while the window is in focus to exit\n&quot;</span>);</div>
<div class="line">        <span class="keywordflow">while</span> (!wnd.close()) {</div>
<div class="line">            wnd.grid(2, 5);</div>
<div class="line">            wnd(0, 0).image(man / 255, <span class="stringliteral">&quot;Input&quot;</span>);</div>
<div class="line">            wnd(1, 0).image(highcon / 255, <span class="stringliteral">&quot;High Contrast&quot;</span>);</div>
<div class="line">            wnd(0, 1).image(highbright / 255, <span class="stringliteral">&quot;High Brightness&quot;</span>);</div>
<div class="line">            wnd(1, 1).image(translated / 255, <span class="stringliteral">&quot;Translation&quot;</span>);</div>
<div class="line">            wnd(0, 2).image(sharp / 255, <span class="stringliteral">&quot;Unsharp Masking&quot;</span>);</div>
<div class="line">            wnd(1, 2).image(zoom / 255, <span class="stringliteral">&quot;Digital Zoom&quot;</span>);</div>
<div class="line">            wnd(0, 3).image(nature / 255, <span class="stringliteral">&quot;Background for blend&quot;</span>);</div>
<div class="line">            wnd(1, 3).image(fight / 255, <span class="stringliteral">&quot;Foreground for blend&quot;</span>);</div>
<div class="line">            wnd(0, 4).image(blend / 255, <span class="stringliteral">&quot;Alpha blend&quot;</span>);</div>
<div class="line">            wnd(1, 4).image(bdry / 255, <span class="stringliteral">&quot;Boundary extraction&quot;</span>);</div>
<div class="line">            wnd.show();</div>
<div class="line">        }</div>
<div class="line">    } <span class="keywordflow">catch</span> (<a id="_a8" name="_a8"></a><a class="code hl_class" href="classaf_1_1exception.htm">af::exception</a> &amp;e) {</div>
<div class="line">        fprintf(stderr, <span class="stringliteral">&quot;%s\n&quot;</span>, e.<a id="a9" name="a9"></a><a class="code hl_function" href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">what</a>());</div>
<div class="line">        <span class="keywordflow">throw</span>;</div>
<div class="line">    }</div>
<div class="line">    <span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
<div class="ttc" id="aarrayfire_8h_htm"><div class="ttname"><a href="arrayfire_8h.htm">arrayfire.h</a></div></div>
<div class="ttc" id="aclassaf_1_1Window_htm"><div class="ttname"><a href="classaf_1_1Window.htm">af::Window</a></div><div class="ttdoc">Window object to render af::arrays.</div><div class="ttdef"><b>Definition:</b> <a href="graphics_8h_source.htm#l00037">graphics.h:37</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00037">array.h:37</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm_a10d14b019693bc98f672ad7c4ac60bac"><div class="ttname"><a href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">af::array::dims</a></div><div class="ttdeci">dim4 dims() const</div><div class="ttdoc">Get dimensions of the array.</div></div>
<div class="ttc" id="aclassaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00021">exception.h:22</a></div></div>
<div class="ttc" id="aclassaf_1_1exception_htm_aa884ff67408851f00e50cf971a4dfd05"><div class="ttname"><a href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">af::exception::what</a></div><div class="ttdeci">virtual const char * what() const</div><div class="ttdoc">Returns an error message for the exception in a string format.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00046">exception.h:46</a></div></div>
<div class="ttc" id="aclassaf_1_1seq_htm"><div class="ttname"><a href="classaf_1_1seq.htm">af::seq</a></div><div class="ttdoc">seq is used to create sequences for indexing af::array</div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00045">seq.h:46</a></div></div>
<div class="ttc" id="adefines_8h_htm_ae1e32be35ff02f167999723d77153f0da2b379305db06eb19ff82ce7e85b7c4b1"><div class="ttname"><a href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0da2b379305db06eb19ff82ce7e85b7c4b1">AF_GRAY</a></div><div class="ttdeci">@ AF_GRAY</div><div class="ttdoc">Grayscale.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00340">defines.h:340</a></div></div>
<div class="ttc" id="adefines_8h_htm_ae1e32be35ff02f167999723d77153f0dad9c37bf4beee3f07b8b1aa4b887244e6"><div class="ttname"><a href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0dad9c37bf4beee3f07b8b1aa4b887244e6">AF_RGB</a></div><div class="ttdeci">@ AF_RGB</div><div class="ttdoc">3-channel RGB</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00341">defines.h:341</a></div></div>
<div class="ttc" id="agroup__arith__func__clamp_htm_ga7a28608d80d434a0019bc3090b0d29b4"><div class="ttname"><a href="group__arith__func__clamp.htm#ga7a28608d80d434a0019bc3090b0d29b4">af::clamp</a></div><div class="ttdeci">AFAPI array clamp(const array &amp;in, const array &amp;lo, const array &amp;hi)</div></div>
<div class="ttc" id="agroup__data__func__constant_htm_ga0db7363474e85542f16e4bbcf57fe842"><div class="ttname"><a href="group__data__func__constant.htm#ga0db7363474e85542f16e4bbcf57fe842">af::constant</a></div><div class="ttdeci">array constant(T val, const dim4 &amp;dims, const dtype ty=(af_dtype) dtype_traits&lt; T &gt;::ctype)</div><div class="ttdoc">C++ Interface to generate an array with elements set to a specified value.</div></div>
<div class="ttc" id="agroup__device__func__info_htm_ga3e22b6ff6e0940bb31577bea2863ca27"><div class="ttname"><a href="group__device__func__info.htm#ga3e22b6ff6e0940bb31577bea2863ca27">af::info</a></div><div class="ttdeci">AFAPI void info()</div></div>
<div class="ttc" id="agroup__device__func__set_htm_gad7c36828c21e7efc06a067bbc47d8d3b"><div class="ttname"><a href="group__device__func__set.htm#gad7c36828c21e7efc06a067bbc47d8d3b">af::setDevice</a></div><div class="ttdeci">AFAPI void setDevice(const int device)</div><div class="ttdoc">Sets the current device.</div></div>
<div class="ttc" id="agroup__image__func__colorspace_htm_gad2913948b841a2e14e2596e32d5dbc31"><div class="ttname"><a href="group__image__func__colorspace.htm#gad2913948b841a2e14e2596e32d5dbc31">af::colorSpace</a></div><div class="ttdeci">AFAPI array colorSpace(const array &amp;image, const CSpace to, const CSpace from)</div><div class="ttdoc">C++ Interface wrapper for colorspace conversion.</div></div>
<div class="ttc" id="agroup__image__func__erode_htm_gaa25e0009132b5aa83b6462b732cbf031"><div class="ttname"><a href="group__image__func__erode.htm#gaa25e0009132b5aa83b6462b732cbf031">af::erode</a></div><div class="ttdeci">AFAPI array erode(const array &amp;in, const array &amp;mask)</div><div class="ttdoc">C++ Interface for image erosion (min filter)</div></div>
<div class="ttc" id="agroup__image__func__gauss_htm_gacd7cc37308ee4d90a0071968073987e5"><div class="ttname"><a href="group__image__func__gauss.htm#gacd7cc37308ee4d90a0071968073987e5">af::gaussianKernel</a></div><div class="ttdeci">AFAPI array gaussianKernel(const int rows, const int cols, const double sig_r=0, const double sig_c=0)</div><div class="ttdoc">C++ Interface for generating gausian kernels.</div></div>
<div class="ttc" id="agroup__imageio__func__load_htm_ga5a57870c43a81ec21fcdb7a11bef20d4"><div class="ttname"><a href="group__imageio__func__load.htm#ga5a57870c43a81ec21fcdb7a11bef20d4">af::loadImage</a></div><div class="ttdeci">AFAPI array loadImage(const char *filename, const bool is_color=false)</div><div class="ttdoc">C++ Interface for loading an image.</div></div>
<div class="ttc" id="agroup__manip__func__tile_htm_gaeba95584319d7d90e2c371391db0083b"><div class="ttname"><a href="group__manip__func__tile.htm#gaeba95584319d7d90e2c371391db0083b">af::tile</a></div><div class="ttdeci">AFAPI array tile(const array &amp;in, const unsigned x, const unsigned y=1, const unsigned z=1, const unsigned w=1)</div><div class="ttdoc">C++ Interface to generate a tiled array.</div></div>
<div class="ttc" id="agroup__reduce__func__max_htm_ga8487a88bf44e0c88af44fec99cc205b1"><div class="ttname"><a href="group__reduce__func__max.htm#ga8487a88bf44e0c88af44fec99cc205b1">af::max</a></div><div class="ttdeci">AFAPI array max(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface to return the maximum along a given dimension.</div></div>
<div class="ttc" id="agroup__reduce__func__min_htm_ga5c4c0c89dbc59ae5e20fb7e5438ceca5"><div class="ttname"><a href="group__reduce__func__min.htm#ga5c4c0c89dbc59ae5e20fb7e5438ceca5">af::min</a></div><div class="ttdeci">AFAPI array min(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface to return the minimum along a given dimension.</div></div>
<div class="ttc" id="agroup__signal__func__convolve_htm_ga801b0f4a09a017ccb196fac3c0dc417b"><div class="ttname"><a href="group__signal__func__convolve.htm#ga801b0f4a09a017ccb196fac3c0dc417b">af::convolve</a></div><div class="ttdeci">AFAPI array convolve(const array &amp;signal, const array &amp;filter, const convMode mode=AF_CONV_DEFAULT, const convDomain domain=AF_CONV_AUTO)</div><div class="ttdoc">C++ Interface for convolution any(one through three) dimensional signals.</div></div>
<div class="ttc" id="agroup__transform__func__resize_htm_gaa80038ec7db0ce0836c79d2c8a75e788"><div class="ttname"><a href="group__transform__func__resize.htm#gaa80038ec7db0ce0836c79d2c8a75e788">af::resize</a></div><div class="ttdeci">AFAPI array resize(const array &amp;in, const dim_t odim0, const dim_t odim1, const interpType method=AF_INTERP_NEAREST)</div><div class="ttdoc">C++ Interface for resizing an image to specified dimensions.</div></div>
<div class="ttc" id="agroup__transform__func__translate_htm_ga9478a180bc3822354a01cb06e1905133"><div class="ttname"><a href="group__transform__func__translate.htm#ga9478a180bc3822354a01cb06e1905133">af::translate</a></div><div class="ttdeci">AFAPI array translate(const array &amp;in, const float trans0, const float trans1, const dim_t odim0=0, const dim_t odim1=0, const interpType method=AF_INTERP_NEAREST)</div><div class="ttdoc">C++ Interface for translating an image.</div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:15</a></div></div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Mon Sep 25 2023 12:35:26 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
