<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>saveImage</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__imageio__func__save.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">saveImage<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">Complete List of ArrayFire Functions</a><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__io__mat.htm">Input and Output functions</a> &raquo;  &#124; <a class="el" href="group__imageio__mat.htm">Reading and writing images</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Save an array to disk as an image.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga2b0f060d7fb7bc4ca397f4ca82190fb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__save.htm#ga2b0f060d7fb7bc4ca397f4ca82190fb2">saveimage</a> (const char *filename, const array &amp;in)</td></tr>
<tr class="memdesc:ga2b0f060d7fb7bc4ca397f4ca82190fb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for saving an image.  <a href="group__imageio__func__save.htm#ga2b0f060d7fb7bc4ca397f4ca82190fb2">More...</a><br /></td></tr>
<tr class="separator:ga2b0f060d7fb7bc4ca397f4ca82190fb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae2e1e9354b0d29c4749ac368efd78b19"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__save.htm#gae2e1e9354b0d29c4749ac368efd78b19">saveImage</a> (const char *filename, const array &amp;in)</td></tr>
<tr class="memdesc:gae2e1e9354b0d29c4749ac368efd78b19"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for saving an image.  <a href="group__imageio__func__save.htm#gae2e1e9354b0d29c4749ac368efd78b19">More...</a><br /></td></tr>
<tr class="separator:gae2e1e9354b0d29c4749ac368efd78b19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga069f3a3b77fe83e8e3356569eb8a396d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__save.htm#ga069f3a3b77fe83e8e3356569eb8a396d">saveImageNative</a> (const char *filename, const array &amp;in)</td></tr>
<tr class="memdesc:ga069f3a3b77fe83e8e3356569eb8a396d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for saving an image without modifications.  <a href="group__imageio__func__save.htm#ga069f3a3b77fe83e8e3356569eb8a396d">More...</a><br /></td></tr>
<tr class="separator:ga069f3a3b77fe83e8e3356569eb8a396d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d73aad096dd1e0022fe7369112168b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__save.htm#ga2d73aad096dd1e0022fe7369112168b8">af_save_image</a> (const char *filename, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga2d73aad096dd1e0022fe7369112168b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for saving an image.  <a href="#ga2d73aad096dd1e0022fe7369112168b8">More...</a><br /></td></tr>
<tr class="separator:ga2d73aad096dd1e0022fe7369112168b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac19d3cc88b12d0ea8b9bc751927f5c83"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__save.htm#gac19d3cc88b12d0ea8b9bc751927f5c83">af_save_image_native</a> (const char *filename, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gac19d3cc88b12d0ea8b9bc751927f5c83"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for saving an image without modifications.  <a href="#gac19d3cc88b12d0ea8b9bc751927f5c83">More...</a><br /></td></tr>
<tr class="separator:gac19d3cc88b12d0ea8b9bc751927f5c83"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Save an array to disk as an image. </p>
<p>Supported formats include JPG, PNG, PPM and other formats supported by freeimage </p>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga2d73aad096dd1e0022fe7369112168b8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_save_image </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for saving an image. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>is name of file to be loaded </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the arrayfire array to be saved as an image </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the color transformation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a class="anchor" id="gac19d3cc88b12d0ea8b9bc751927f5c83"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_save_image_native </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for saving an image without modifications. </p>
<p>This function only accepts u8, u16, f32 arrays. These arrays are saved to images without any modifications.</p>
<p>You must also note that note all image type support 16 or 32 bit images.</p>
<p>The best options for 16 bit images are PNG, PPM and TIFF. The best option for 32 bit images is TIFF. These allow lossless storage.</p>
<p>The images stored have the following properties:</p>
<table class="doxtable">
<tr>
<th>Array Type </th><th>Bits per Color (Gray/RGB/RGBA Bits Per Pixel) </th><th>Range  </th></tr>
<tr>
<td>u8 </td><td>8 ( 8/24/32 BPP) </td><td>0 - 255 </td></tr>
<tr>
<td>u16 </td><td>16 (16/48/64 BPP) </td><td>0 - 65535 </td></tr>
<tr>
<td>f32 </td><td>32 (32/96/128 BPP) </td><td>0 - 1 </td></tr>
</table>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>is name of file to be saved </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the array to be saved. Should be u8 for saving 8-bit image, u16 for 16-bit image, and f32 for 32-bit image.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if successful </dd></dl>

</div>
</div>
<a class="anchor" id="ga2b0f060d7fb7bc4ca397f4ca82190fb2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void af::saveimage </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for saving an image. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>is name of file to be loaded </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the arrayfire array to be saved as an image </td></tr>
  </table>
  </dd>
</dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000005">Deprecated:</a></b></dt><dd>Use <a class="el" href="group__imageio__func__save.htm#gae2e1e9354b0d29c4749ac368efd78b19">saveImage</a> instead </dd></dl>

</div>
</div>
<a class="anchor" id="gae2e1e9354b0d29c4749ac368efd78b19"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void af::saveImage </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for saving an image. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>is name of file to be loaded </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the arrayfire array to be saved as an image </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga069f3a3b77fe83e8e3356569eb8a396d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void af::saveImageNative </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for saving an image without modifications. </p>
<p>This function only accepts u8, u16, f32 arrays. These arrays are saved to images without any modifications.</p>
<p>You must also note that note all image type support 16 or 32 bit images.</p>
<p>The best options for 16 bit images are PNG, PPM and TIFF. The best option for 32 bit images is TIFF. These allow lossless storage.</p>
<p>The images stored have the following properties:</p>
<table class="doxtable">
<tr>
<th>Array Type </th><th>Bits per Color (Gray/RGB/RGBA Bits Per Pixel) </th><th>Range  </th></tr>
<tr>
<td>u8 </td><td>8 ( 8/24/32 BPP) </td><td>0 - 255 </td></tr>
<tr>
<td>u16 </td><td>16 (16/48/64 BPP) </td><td>0 - 65535 </td></tr>
<tr>
<td>f32 </td><td>32 (32/96/128 BPP) </td><td>0 - 1 </td></tr>
</table>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>is name of file to be saved </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the array to be saved. Should be u8 for saving 8-bit image, u16 for 16-bit image, and f32 for 32-bit image. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
