<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.9.1"/>
<title>algorithm.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.9.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('algorithm_8h.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">algorithm.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<h3 class="version">(2016-03-16 20:05:50 -0400, (build f53efc3))</h3><div class="textblock"><code>#include &lt;<a class="el" href="defines_8h_source.htm">af/defines.h</a>&gt;</code><br />
</div>
<p><a href="algorithm_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceaf"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm">af</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga964a8e7e78dd6d8f4d20c17edf82dbf5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">sum</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:ga964a8e7e78dd6d8f4d20c17edf82dbf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sum of elements in an array.  <a href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">More...</a><br /></td></tr>
<tr class="separator:ga964a8e7e78dd6d8f4d20c17edf82dbf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2176b9ffbc6038cf6cebb19aa7736793"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#ga2176b9ffbc6038cf6cebb19aa7736793">sum</a> (const array &amp;in, const int dim, const double nanval)</td></tr>
<tr class="memdesc:ga2176b9ffbc6038cf6cebb19aa7736793"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sum of elements in an array while replacing nan values.  <a href="group__reduce__func__sum.htm#ga2176b9ffbc6038cf6cebb19aa7736793">More...</a><br /></td></tr>
<tr class="separator:ga2176b9ffbc6038cf6cebb19aa7736793"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac132e883d40243c420b4ccfa09ddaa3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">product</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:gaac132e883d40243c420b4ccfa09ddaa3"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for product of elements in an array.  <a href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">More...</a><br /></td></tr>
<tr class="separator:gaac132e883d40243c420b4ccfa09ddaa3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga322073dc3d7eefb9403f269840d4ecff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#ga322073dc3d7eefb9403f269840d4ecff">product</a> (const array &amp;in, const int dim, const double nanval)</td></tr>
<tr class="memdesc:ga322073dc3d7eefb9403f269840d4ecff"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for product of elements in an array while replacing nan values.  <a href="group__reduce__func__product.htm#ga322073dc3d7eefb9403f269840d4ecff">More...</a><br /></td></tr>
<tr class="separator:ga322073dc3d7eefb9403f269840d4ecff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b1287d1babb569d28bc6ee1c8e8e1ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">min</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:ga2b1287d1babb569d28bc6ee1c8e8e1ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for minimum values in an array.  <a href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">More...</a><br /></td></tr>
<tr class="separator:ga2b1287d1babb569d28bc6ee1c8e8e1ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4459daf5a3b081fb4ee15eb49d8c902a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:ga4459daf5a3b081fb4ee15eb49d8c902a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for maximum values in an array.  <a href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">More...</a><br /></td></tr>
<tr class="separator:ga4459daf5a3b081fb4ee15eb49d8c902a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf3f22add3a54fb729a969cf8f669fc2b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b">allTrue</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:gaf3f22add3a54fb729a969cf8f669fc2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for checking all true values in an array.  <a href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b">More...</a><br /></td></tr>
<tr class="separator:gaf3f22add3a54fb729a969cf8f669fc2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe4c8f22bbfa4288696f2a133b1b619e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__any__true.htm#gafe4c8f22bbfa4288696f2a133b1b619e">anyTrue</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:gafe4c8f22bbfa4288696f2a133b1b619e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for checking any true values in an array.  <a href="group__reduce__func__any__true.htm#gafe4c8f22bbfa4288696f2a133b1b619e">More...</a><br /></td></tr>
<tr class="separator:gafe4c8f22bbfa4288696f2a133b1b619e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga76b6172262aa0e64bf6979c16a40ea3c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__count.htm#ga76b6172262aa0e64bf6979c16a40ea3c">count</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:ga76b6172262aa0e64bf6979c16a40ea3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for counting non-zero values in an array.  <a href="group__reduce__func__count.htm#ga76b6172262aa0e64bf6979c16a40ea3c">More...</a><br /></td></tr>
<tr class="separator:ga76b6172262aa0e64bf6979c16a40ea3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga27080996b6ea1c422f16da4b06fb76a7"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga27080996b6ea1c422f16da4b06fb76a7"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#ga27080996b6ea1c422f16da4b06fb76a7">sum</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga27080996b6ea1c422f16da4b06fb76a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sum of all elements in an array.  <a href="group__reduce__func__sum.htm#ga27080996b6ea1c422f16da4b06fb76a7">More...</a><br /></td></tr>
<tr class="separator:ga27080996b6ea1c422f16da4b06fb76a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7a52bcc5d9a41e291ddb283732ea3adc"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga7a52bcc5d9a41e291ddb283732ea3adc"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#ga7a52bcc5d9a41e291ddb283732ea3adc">sum</a> (const array &amp;in, double nanval)</td></tr>
<tr class="memdesc:ga7a52bcc5d9a41e291ddb283732ea3adc"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sum of all elements in an array while replacing nan values.  <a href="group__reduce__func__sum.htm#ga7a52bcc5d9a41e291ddb283732ea3adc">More...</a><br /></td></tr>
<tr class="separator:ga7a52bcc5d9a41e291ddb283732ea3adc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab1e3ecae8d63be355c41a54b0fb7b09c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gab1e3ecae8d63be355c41a54b0fb7b09c"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#gab1e3ecae8d63be355c41a54b0fb7b09c">product</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gab1e3ecae8d63be355c41a54b0fb7b09c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for product of all elements in an array.  <a href="group__reduce__func__product.htm#gab1e3ecae8d63be355c41a54b0fb7b09c">More...</a><br /></td></tr>
<tr class="separator:gab1e3ecae8d63be355c41a54b0fb7b09c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d52d3862f703558a86e99db88c3de50"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga9d52d3862f703558a86e99db88c3de50"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#ga9d52d3862f703558a86e99db88c3de50">product</a> (const array &amp;in, double nanval)</td></tr>
<tr class="memdesc:ga9d52d3862f703558a86e99db88c3de50"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for product of all elements in an array while replacing nan values.  <a href="group__reduce__func__product.htm#ga9d52d3862f703558a86e99db88c3de50">More...</a><br /></td></tr>
<tr class="separator:ga9d52d3862f703558a86e99db88c3de50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8739f890dec19e3f9642ae4678229ca4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga8739f890dec19e3f9642ae4678229ca4"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#ga8739f890dec19e3f9642ae4678229ca4">min</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga8739f890dec19e3f9642ae4678229ca4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting minimum value of an array.  <a href="group__reduce__func__min.htm#ga8739f890dec19e3f9642ae4678229ca4">More...</a><br /></td></tr>
<tr class="separator:ga8739f890dec19e3f9642ae4678229ca4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga27a8604de959200acd69d20dbede1e32"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga27a8604de959200acd69d20dbede1e32"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#ga27a8604de959200acd69d20dbede1e32">max</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga27a8604de959200acd69d20dbede1e32"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting maximum value of an array.  <a href="group__reduce__func__max.htm#ga27a8604de959200acd69d20dbede1e32">More...</a><br /></td></tr>
<tr class="separator:ga27a8604de959200acd69d20dbede1e32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd33df6a3470afb073d8537722e7aedf"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gafd33df6a3470afb073d8537722e7aedf"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__all__true.htm#gafd33df6a3470afb073d8537722e7aedf">allTrue</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gafd33df6a3470afb073d8537722e7aedf"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for checking if all values in an array are true.  <a href="group__reduce__func__all__true.htm#gafd33df6a3470afb073d8537722e7aedf">More...</a><br /></td></tr>
<tr class="separator:gafd33df6a3470afb073d8537722e7aedf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9275d7c81c19045beac99103edbbf63"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gae9275d7c81c19045beac99103edbbf63"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__any__true.htm#gae9275d7c81c19045beac99103edbbf63">anyTrue</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gae9275d7c81c19045beac99103edbbf63"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for checking if any values in an array are true.  <a href="group__reduce__func__any__true.htm#gae9275d7c81c19045beac99103edbbf63">More...</a><br /></td></tr>
<tr class="separator:gae9275d7c81c19045beac99103edbbf63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d9bfd6fdee267ac0eef096321d16470"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga6d9bfd6fdee267ac0eef096321d16470"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__count.htm#ga6d9bfd6fdee267ac0eef096321d16470">count</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga6d9bfd6fdee267ac0eef096321d16470"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for counting total number of non-zero values in an array.  <a href="group__reduce__func__count.htm#ga6d9bfd6fdee267ac0eef096321d16470">More...</a><br /></td></tr>
<tr class="separator:ga6d9bfd6fdee267ac0eef096321d16470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4f4b4607803d8fd4fea8e862d3685d15"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#ga4f4b4607803d8fd4fea8e862d3685d15">min</a> (array &amp;val, array &amp;idx, const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:ga4f4b4607803d8fd4fea8e862d3685d15"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting minimum values and their locations in an array.  <a href="group__reduce__func__min.htm#ga4f4b4607803d8fd4fea8e862d3685d15">More...</a><br /></td></tr>
<tr class="separator:ga4f4b4607803d8fd4fea8e862d3685d15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga22189e6402e433ed7061dfee61ab482b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#ga22189e6402e433ed7061dfee61ab482b">max</a> (array &amp;val, array &amp;idx, const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:ga22189e6402e433ed7061dfee61ab482b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting maximum values and their locations in an array.  <a href="group__reduce__func__max.htm#ga22189e6402e433ed7061dfee61ab482b">More...</a><br /></td></tr>
<tr class="separator:ga22189e6402e433ed7061dfee61ab482b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8f9827148261c1deea3adde7aa7accdb"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga8f9827148261c1deea3adde7aa7accdb"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#ga8f9827148261c1deea3adde7aa7accdb">min</a> (T *val, unsigned *idx, const array &amp;in)</td></tr>
<tr class="memdesc:ga8f9827148261c1deea3adde7aa7accdb"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting minimum value and its location from the entire array.  <a href="group__reduce__func__min.htm#ga8f9827148261c1deea3adde7aa7accdb">More...</a><br /></td></tr>
<tr class="separator:ga8f9827148261c1deea3adde7aa7accdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab0de5929db14a2449c935ed82acf5153"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gab0de5929db14a2449c935ed82acf5153"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#gab0de5929db14a2449c935ed82acf5153">max</a> (T *val, unsigned *idx, const array &amp;in)</td></tr>
<tr class="memdesc:gab0de5929db14a2449c935ed82acf5153"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting maximum value and its location from the entire array.  <a href="group__reduce__func__max.htm#gab0de5929db14a2449c935ed82acf5153">More...</a><br /></td></tr>
<tr class="separator:gab0de5929db14a2449c935ed82acf5153"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae450135c4ae1bdaa4489804a215f3214"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__scan__func__accum.htm#gae450135c4ae1bdaa4489804a215f3214">accum</a> (const array &amp;in, const int dim=0)</td></tr>
<tr class="memdesc:gae450135c4ae1bdaa4489804a215f3214"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface exclusive sum (cumulative sum) of an array.  <a href="group__scan__func__accum.htm#gae450135c4ae1bdaa4489804a215f3214">More...</a><br /></td></tr>
<tr class="separator:gae450135c4ae1bdaa4489804a215f3214"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e677067915477bc4aec1605d80d9b7b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__scan__func__where.htm#ga1e677067915477bc4aec1605d80d9b7b">where</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga1e677067915477bc4aec1605d80d9b7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for finding the locations of non-zero values in an array.  <a href="group__scan__func__where.htm#ga1e677067915477bc4aec1605d80d9b7b">More...</a><br /></td></tr>
<tr class="separator:ga1e677067915477bc4aec1605d80d9b7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab099192b1beeddab1ad14536aba689b2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__calc__func__diff1.htm#gab099192b1beeddab1ad14536aba689b2">diff1</a> (const array &amp;in, const int dim=0)</td></tr>
<tr class="memdesc:gab099192b1beeddab1ad14536aba689b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for calculating first order differences in an array.  <a href="group__calc__func__diff1.htm#gab099192b1beeddab1ad14536aba689b2">More...</a><br /></td></tr>
<tr class="separator:gab099192b1beeddab1ad14536aba689b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad803d1bc99910533a5789c428522aaef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__calc__func__diff2.htm#gad803d1bc99910533a5789c428522aaef">diff2</a> (const array &amp;in, const int dim=0)</td></tr>
<tr class="memdesc:gad803d1bc99910533a5789c428522aaef"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for calculating second order differences in an array.  <a href="group__calc__func__diff2.htm#gad803d1bc99910533a5789c428522aaef">More...</a><br /></td></tr>
<tr class="separator:gad803d1bc99910533a5789c428522aaef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8d1a62b3e41bfcdeef810a442869b42c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">sort</a> (const array &amp;in, const unsigned dim=0, const bool isAscending=true)</td></tr>
<tr class="memdesc:ga8d1a62b3e41bfcdeef810a442869b42c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sorting an array.  <a href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">More...</a><br /></td></tr>
<tr class="separator:ga8d1a62b3e41bfcdeef810a442869b42c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ae274b20379a6c9ef07afb0a8d81eaa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sort__func__sort__index.htm#ga7ae274b20379a6c9ef07afb0a8d81eaa">sort</a> (array &amp;out, array &amp;indices, const array &amp;in, const unsigned dim=0, const bool isAscending=true)</td></tr>
<tr class="memdesc:ga7ae274b20379a6c9ef07afb0a8d81eaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sorting an array and getting original indices.  <a href="group__sort__func__sort__index.htm#ga7ae274b20379a6c9ef07afb0a8d81eaa">More...</a><br /></td></tr>
<tr class="separator:ga7ae274b20379a6c9ef07afb0a8d81eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c2aa7856108a24d8bfb9a0cdcc84e03"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sort__func__sort__keys.htm#ga0c2aa7856108a24d8bfb9a0cdcc84e03">sort</a> (array &amp;out_keys, array &amp;out_values, const array &amp;keys, const array &amp;values, const unsigned dim=0, const bool isAscending=true)</td></tr>
<tr class="memdesc:ga0c2aa7856108a24d8bfb9a0cdcc84e03"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sorting an array based on keys.  <a href="group__sort__func__sort__keys.htm#ga0c2aa7856108a24d8bfb9a0cdcc84e03">More...</a><br /></td></tr>
<tr class="separator:ga0c2aa7856108a24d8bfb9a0cdcc84e03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga73f2f768af96755af50df21e384287c6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">setUnique</a> (const array &amp;in, const bool is_sorted=false)</td></tr>
<tr class="memdesc:ga73f2f768af96755af50df21e384287c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting unique values.  <a href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">More...</a><br /></td></tr>
<tr class="separator:ga73f2f768af96755af50df21e384287c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa793c080cfa2c5ed7f422479e8e0bfe3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__union.htm#gaa793c080cfa2c5ed7f422479e8e0bfe3">setUnion</a> (const array &amp;first, const array &amp;second, const bool is_unique=false)</td></tr>
<tr class="memdesc:gaa793c080cfa2c5ed7f422479e8e0bfe3"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for performing union of two arrays.  <a href="group__set__func__union.htm#gaa793c080cfa2c5ed7f422479e8e0bfe3">More...</a><br /></td></tr>
<tr class="separator:gaa793c080cfa2c5ed7f422479e8e0bfe3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4549aee29c563edfb0b4a444fbf9200"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__intersect.htm#gae4549aee29c563edfb0b4a444fbf9200">setIntersect</a> (const array &amp;first, const array &amp;second, const bool is_unique=false)</td></tr>
<tr class="memdesc:gae4549aee29c563edfb0b4a444fbf9200"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for performing intersect of two arrays.  <a href="group__set__func__intersect.htm#gae4549aee29c563edfb0b4a444fbf9200">More...</a><br /></td></tr>
<tr class="separator:gae4549aee29c563edfb0b4a444fbf9200"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd4917c2e916870ebdf54afc2f61d533"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#gacd4917c2e916870ebdf54afc2f61d533">af_sum</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:gacd4917c2e916870ebdf54afc2f61d533"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sum of elements in an array.  <a href="group__reduce__func__sum.htm#gacd4917c2e916870ebdf54afc2f61d533">More...</a><br /></td></tr>
<tr class="separator:gacd4917c2e916870ebdf54afc2f61d533"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga52461231e2d9995f689b7f23eea0e798"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#ga52461231e2d9995f689b7f23eea0e798">af_sum_nan</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim, const double nanval)</td></tr>
<tr class="memdesc:ga52461231e2d9995f689b7f23eea0e798"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sum of elements in an array while replacing nans.  <a href="group__reduce__func__sum.htm#ga52461231e2d9995f689b7f23eea0e798">More...</a><br /></td></tr>
<tr class="separator:ga52461231e2d9995f689b7f23eea0e798"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2be338d39be30ad22dddf658a4f5676e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#ga2be338d39be30ad22dddf658a4f5676e">af_product</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga2be338d39be30ad22dddf658a4f5676e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for product of elements in an array.  <a href="group__reduce__func__product.htm#ga2be338d39be30ad22dddf658a4f5676e">More...</a><br /></td></tr>
<tr class="separator:ga2be338d39be30ad22dddf658a4f5676e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d25447c16d492767ba7efa7ee72a36e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#ga1d25447c16d492767ba7efa7ee72a36e">af_product_nan</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim, const double nanval)</td></tr>
<tr class="memdesc:ga1d25447c16d492767ba7efa7ee72a36e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for product of elements in an array while replacing nans.  <a href="group__reduce__func__product.htm#ga1d25447c16d492767ba7efa7ee72a36e">More...</a><br /></td></tr>
<tr class="separator:ga1d25447c16d492767ba7efa7ee72a36e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2ac4c8d9ba613dbc9bfec0bee7be8eb8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#ga2ac4c8d9ba613dbc9bfec0bee7be8eb8">af_min</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga2ac4c8d9ba613dbc9bfec0bee7be8eb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for minimum values in an array.  <a href="group__reduce__func__min.htm#ga2ac4c8d9ba613dbc9bfec0bee7be8eb8">More...</a><br /></td></tr>
<tr class="separator:ga2ac4c8d9ba613dbc9bfec0bee7be8eb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga267f32b8dbb1b508e8738e3748d8dc3f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#ga267f32b8dbb1b508e8738e3748d8dc3f">af_max</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga267f32b8dbb1b508e8738e3748d8dc3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for maximum values in an array.  <a href="group__reduce__func__max.htm#ga267f32b8dbb1b508e8738e3748d8dc3f">More...</a><br /></td></tr>
<tr class="separator:ga267f32b8dbb1b508e8738e3748d8dc3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga068708be5177a0aa3788af140bb5ebd6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__all__true.htm#ga068708be5177a0aa3788af140bb5ebd6">af_all_true</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga068708be5177a0aa3788af140bb5ebd6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking all true values in an array.  <a href="group__reduce__func__all__true.htm#ga068708be5177a0aa3788af140bb5ebd6">More...</a><br /></td></tr>
<tr class="separator:ga068708be5177a0aa3788af140bb5ebd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7c275cda2cfc8eb0bd20ea86472ca0d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__any__true.htm#ga7c275cda2cfc8eb0bd20ea86472ca0d5">af_any_true</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga7c275cda2cfc8eb0bd20ea86472ca0d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking any true values in an array.  <a href="group__reduce__func__any__true.htm#ga7c275cda2cfc8eb0bd20ea86472ca0d5">More...</a><br /></td></tr>
<tr class="separator:ga7c275cda2cfc8eb0bd20ea86472ca0d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf2664c25ee6ca30aa3f5aa77db789f95"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__count.htm#gaf2664c25ee6ca30aa3f5aa77db789f95">af_count</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:gaf2664c25ee6ca30aa3f5aa77db789f95"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for counting non-zero values in an array.  <a href="group__reduce__func__count.htm#gaf2664c25ee6ca30aa3f5aa77db789f95">More...</a><br /></td></tr>
<tr class="separator:gaf2664c25ee6ca30aa3f5aa77db789f95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc009d04df0faf29ba1e381c7badde58"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#gabc009d04df0faf29ba1e381c7badde58">af_sum_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gabc009d04df0faf29ba1e381c7badde58"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sum of all elements in an array.  <a href="group__reduce__func__sum.htm#gabc009d04df0faf29ba1e381c7badde58">More...</a><br /></td></tr>
<tr class="separator:gabc009d04df0faf29ba1e381c7badde58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65bb08cd2644d5828d72fc42b2eb8abc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#ga65bb08cd2644d5828d72fc42b2eb8abc">af_sum_nan_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double nanval)</td></tr>
<tr class="memdesc:ga65bb08cd2644d5828d72fc42b2eb8abc"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sum of all elements in an array while replacing nans.  <a href="group__reduce__func__sum.htm#ga65bb08cd2644d5828d72fc42b2eb8abc">More...</a><br /></td></tr>
<tr class="separator:ga65bb08cd2644d5828d72fc42b2eb8abc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad226a6ec77c12fd16cf42e3fe3264e22"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#gad226a6ec77c12fd16cf42e3fe3264e22">af_product_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gad226a6ec77c12fd16cf42e3fe3264e22"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for product of all elements in an array.  <a href="group__reduce__func__product.htm#gad226a6ec77c12fd16cf42e3fe3264e22">More...</a><br /></td></tr>
<tr class="separator:gad226a6ec77c12fd16cf42e3fe3264e22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaca78d54c53a33b419bfdb5c64accbc7b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#gaca78d54c53a33b419bfdb5c64accbc7b">af_product_nan_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double nanval)</td></tr>
<tr class="memdesc:gaca78d54c53a33b419bfdb5c64accbc7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for product of all elements in an array while replacing nans.  <a href="group__reduce__func__product.htm#gaca78d54c53a33b419bfdb5c64accbc7b">More...</a><br /></td></tr>
<tr class="separator:gaca78d54c53a33b419bfdb5c64accbc7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab10198ae7ead1dc10f220d576f118104"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#gab10198ae7ead1dc10f220d576f118104">af_min_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gab10198ae7ead1dc10f220d576f118104"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting minimum value of an array.  <a href="group__reduce__func__min.htm#gab10198ae7ead1dc10f220d576f118104">More...</a><br /></td></tr>
<tr class="separator:gab10198ae7ead1dc10f220d576f118104"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f71ab6056943723149585d2aebade7c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#ga5f71ab6056943723149585d2aebade7c">af_max_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga5f71ab6056943723149585d2aebade7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting maximum value of an array.  <a href="group__reduce__func__max.htm#ga5f71ab6056943723149585d2aebade7c">More...</a><br /></td></tr>
<tr class="separator:ga5f71ab6056943723149585d2aebade7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b50d4adffe3050c3d21bbbbb3d2e434"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__all__true.htm#ga9b50d4adffe3050c3d21bbbbb3d2e434">af_all_true_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga9b50d4adffe3050c3d21bbbbb3d2e434"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking if all values in an array are true.  <a href="group__reduce__func__all__true.htm#ga9b50d4adffe3050c3d21bbbbb3d2e434">More...</a><br /></td></tr>
<tr class="separator:ga9b50d4adffe3050c3d21bbbbb3d2e434"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga47d991276bb5bf8cdba8340e8751e536"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__any__true.htm#ga47d991276bb5bf8cdba8340e8751e536">af_any_true_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga47d991276bb5bf8cdba8340e8751e536"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking if any values in an array are true.  <a href="group__reduce__func__any__true.htm#ga47d991276bb5bf8cdba8340e8751e536">More...</a><br /></td></tr>
<tr class="separator:ga47d991276bb5bf8cdba8340e8751e536"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga38699c5ce172c15e9850a9eda6050da5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__count.htm#ga38699c5ce172c15e9850a9eda6050da5">af_count_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga38699c5ce172c15e9850a9eda6050da5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for counting total number of non-zero values in an array.  <a href="group__reduce__func__count.htm#ga38699c5ce172c15e9850a9eda6050da5">More...</a><br /></td></tr>
<tr class="separator:ga38699c5ce172c15e9850a9eda6050da5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f65943090e0c2317bd682c25594b901"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#ga2f65943090e0c2317bd682c25594b901">af_imin</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga2f65943090e0c2317bd682c25594b901"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting minimum values and their locations in an array.  <a href="group__reduce__func__min.htm#ga2f65943090e0c2317bd682c25594b901">More...</a><br /></td></tr>
<tr class="separator:ga2f65943090e0c2317bd682c25594b901"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf0e6a523e2e435d5409d5d8cb843d8a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#gaf0e6a523e2e435d5409d5d8cb843d8a2">af_imax</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:gaf0e6a523e2e435d5409d5d8cb843d8a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting maximum values and their locations in an array.  <a href="group__reduce__func__max.htm#gaf0e6a523e2e435d5409d5d8cb843d8a2">More...</a><br /></td></tr>
<tr class="separator:gaf0e6a523e2e435d5409d5d8cb843d8a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae75785af0fdfcbb1f4c34461235f5206"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#gae75785af0fdfcbb1f4c34461235f5206">af_imin_all</a> (double *real, double *imag, unsigned *idx, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gae75785af0fdfcbb1f4c34461235f5206"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting minimum value and its location from the entire array.  <a href="group__reduce__func__min.htm#gae75785af0fdfcbb1f4c34461235f5206">More...</a><br /></td></tr>
<tr class="separator:gae75785af0fdfcbb1f4c34461235f5206"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea009bd51145be2fcc688b2390725401"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#gaea009bd51145be2fcc688b2390725401">af_imax_all</a> (double *real, double *imag, unsigned *idx, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gaea009bd51145be2fcc688b2390725401"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting maximum value and it's location from the entire array.  <a href="group__reduce__func__max.htm#gaea009bd51145be2fcc688b2390725401">More...</a><br /></td></tr>
<tr class="separator:gaea009bd51145be2fcc688b2390725401"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga50d499e844e0b63e338cb3ea50439629"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__scan__func__accum.htm#ga50d499e844e0b63e338cb3ea50439629">af_accum</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga50d499e844e0b63e338cb3ea50439629"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface exclusive sum (cumulative sum) of an array.  <a href="group__scan__func__accum.htm#ga50d499e844e0b63e338cb3ea50439629">More...</a><br /></td></tr>
<tr class="separator:ga50d499e844e0b63e338cb3ea50439629"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafda59a3d25d35238592dd09907be9d07"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__scan__func__where.htm#gafda59a3d25d35238592dd09907be9d07">af_where</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gafda59a3d25d35238592dd09907be9d07"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for finding the locations of non-zero values in an array.  <a href="group__scan__func__where.htm#gafda59a3d25d35238592dd09907be9d07">More...</a><br /></td></tr>
<tr class="separator:gafda59a3d25d35238592dd09907be9d07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad3be33ce8114f65c188645e958fce171"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__calc__func__diff1.htm#gad3be33ce8114f65c188645e958fce171">af_diff1</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:gad3be33ce8114f65c188645e958fce171"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for calculating first order differences in an array.  <a href="group__calc__func__diff1.htm#gad3be33ce8114f65c188645e958fce171">More...</a><br /></td></tr>
<tr class="separator:gad3be33ce8114f65c188645e958fce171"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafc7b2d05e4e85aeb3e8b3239f598f70c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__calc__func__diff2.htm#gafc7b2d05e4e85aeb3e8b3239f598f70c">af_diff2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:gafc7b2d05e4e85aeb3e8b3239f598f70c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for calculating second order differences in an array.  <a href="group__calc__func__diff2.htm#gafc7b2d05e4e85aeb3e8b3239f598f70c">More...</a><br /></td></tr>
<tr class="separator:gafc7b2d05e4e85aeb3e8b3239f598f70c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac4460d605452515d07ee8432f906aa8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sort__func__sort.htm#gac4460d605452515d07ee8432f906aa8e">af_sort</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const unsigned dim, const bool isAscending)</td></tr>
<tr class="memdesc:gac4460d605452515d07ee8432f906aa8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sorting an array.  <a href="group__sort__func__sort.htm#gac4460d605452515d07ee8432f906aa8e">More...</a><br /></td></tr>
<tr class="separator:gac4460d605452515d07ee8432f906aa8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga55675cd825c320db87398b1010b6ae41"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sort__func__sort__index.htm#ga55675cd825c320db87398b1010b6ae41">af_sort_index</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *indices, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const unsigned dim, const bool isAscending)</td></tr>
<tr class="memdesc:ga55675cd825c320db87398b1010b6ae41"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sorting an array and getting original indices.  <a href="group__sort__func__sort__index.htm#ga55675cd825c320db87398b1010b6ae41">More...</a><br /></td></tr>
<tr class="separator:ga55675cd825c320db87398b1010b6ae41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7d4fcaf229ece5fbbe30a638d9a60b8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sort__func__sort__keys.htm#ga7d4fcaf229ece5fbbe30a638d9a60b8a">af_sort_by_key</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out_keys, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out_values, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> values, const unsigned dim, const bool isAscending)</td></tr>
<tr class="memdesc:ga7d4fcaf229ece5fbbe30a638d9a60b8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sorting an array based on keys.  <a href="group__sort__func__sort__keys.htm#ga7d4fcaf229ece5fbbe30a638d9a60b8a">More...</a><br /></td></tr>
<tr class="separator:ga7d4fcaf229ece5fbbe30a638d9a60b8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6afa1de48cbbc4b2df530c2530087943"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__unique.htm#ga6afa1de48cbbc4b2df530c2530087943">af_set_unique</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const bool is_sorted)</td></tr>
<tr class="memdesc:ga6afa1de48cbbc4b2df530c2530087943"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting unique values.  <a href="group__set__func__unique.htm#ga6afa1de48cbbc4b2df530c2530087943">More...</a><br /></td></tr>
<tr class="separator:ga6afa1de48cbbc4b2df530c2530087943"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaabeead0c0dc360db9398e9703dbb273f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__union.htm#gaabeead0c0dc360db9398e9703dbb273f">af_set_union</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> first, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> second, const bool is_unique)</td></tr>
<tr class="memdesc:gaabeead0c0dc360db9398e9703dbb273f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for performing union of two arrays.  <a href="group__set__func__union.htm#gaabeead0c0dc360db9398e9703dbb273f">More...</a><br /></td></tr>
<tr class="separator:gaabeead0c0dc360db9398e9703dbb273f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga985f9332c5f858eec66c717881ef2607"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__intersect.htm#ga985f9332c5f858eec66c717881ef2607">af_set_intersect</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> first, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> second, const bool is_unique)</td></tr>
<tr class="memdesc:ga985f9332c5f858eec66c717881ef2607"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for performing intersect of two arrays.  <a href="group__set__func__intersect.htm#ga985f9332c5f858eec66c717881ef2607">More...</a><br /></td></tr>
<tr class="separator:ga985f9332c5f858eec66c717881ef2607"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
