<!-- HTML header for doxygen 1.9.3-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.3"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: algorithm.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
  <!--<td id="projectalign">
   <div id="projectname">ArrayFire<span id="projectnumber">&#160;3.8.1</span>
   </div>
   <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>-->
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.3 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('algorithm_8h.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">algorithm.h File Reference</div></div>
</div><!--header-->
<div class="contents">
<h3 class="version">(2022-02-24 14:07:56 -0500, (build 8c2561559))</h3><div class="textblock"><code>#include &lt;<a class="el" href="defines_8h_source.htm">af/defines.h</a>&gt;</code><br />
</div>
<p><a href="algorithm_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceaf"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm">af</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga964a8e7e78dd6d8f4d20c17edf82dbf5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">sum</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:ga964a8e7e78dd6d8f4d20c17edf82dbf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sum of elements in an array.  <a href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">More...</a><br /></td></tr>
<tr class="separator:ga964a8e7e78dd6d8f4d20c17edf82dbf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2176b9ffbc6038cf6cebb19aa7736793"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#ga2176b9ffbc6038cf6cebb19aa7736793">sum</a> (const array &amp;in, const int dim, const double nanval)</td></tr>
<tr class="memdesc:ga2176b9ffbc6038cf6cebb19aa7736793"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sum of elements in an array while replacing nan values.  <a href="group__reduce__func__sum.htm#ga2176b9ffbc6038cf6cebb19aa7736793">More...</a><br /></td></tr>
<tr class="separator:ga2176b9ffbc6038cf6cebb19aa7736793"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga436bf839bf091339678c77cf0534078b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum__by__key.htm#ga436bf839bf091339678c77cf0534078b">sumByKey</a> (array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</td></tr>
<tr class="memdesc:ga436bf839bf091339678c77cf0534078b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sum of elements along given dimension by key.  <a href="group__reduce__func__sum__by__key.htm#ga436bf839bf091339678c77cf0534078b">More...</a><br /></td></tr>
<tr class="separator:ga436bf839bf091339678c77cf0534078b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9200f1d34c1890633bac5adbf2f25312"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum__by__key.htm#ga9200f1d34c1890633bac5adbf2f25312">sumByKey</a> (array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim, const double nanval)</td></tr>
<tr class="memdesc:ga9200f1d34c1890633bac5adbf2f25312"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sum of elements along given dimension by key while replacing nan values.  <a href="group__reduce__func__sum__by__key.htm#ga9200f1d34c1890633bac5adbf2f25312">More...</a><br /></td></tr>
<tr class="separator:ga9200f1d34c1890633bac5adbf2f25312"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac132e883d40243c420b4ccfa09ddaa3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">product</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:gaac132e883d40243c420b4ccfa09ddaa3"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for product of elements in an array.  <a href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">More...</a><br /></td></tr>
<tr class="separator:gaac132e883d40243c420b4ccfa09ddaa3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga322073dc3d7eefb9403f269840d4ecff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#ga322073dc3d7eefb9403f269840d4ecff">product</a> (const array &amp;in, const int dim, const double nanval)</td></tr>
<tr class="memdesc:ga322073dc3d7eefb9403f269840d4ecff"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for product of elements in an array while replacing nan values.  <a href="group__reduce__func__product.htm#ga322073dc3d7eefb9403f269840d4ecff">More...</a><br /></td></tr>
<tr class="separator:ga322073dc3d7eefb9403f269840d4ecff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga001f04ff52e6fcfd8e8a8534cbd723e6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product__by__key.htm#ga001f04ff52e6fcfd8e8a8534cbd723e6">productByKey</a> (array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</td></tr>
<tr class="memdesc:ga001f04ff52e6fcfd8e8a8534cbd723e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for product of elements in an array according to a key.  <a href="group__reduce__func__product__by__key.htm#ga001f04ff52e6fcfd8e8a8534cbd723e6">More...</a><br /></td></tr>
<tr class="separator:ga001f04ff52e6fcfd8e8a8534cbd723e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga31b013961c75d71e002fd83c3a20939d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product__by__key.htm#ga31b013961c75d71e002fd83c3a20939d">productByKey</a> (array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim, const double nanval)</td></tr>
<tr class="memdesc:ga31b013961c75d71e002fd83c3a20939d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for product of elements in an array according to a key while replacing nan values.  <a href="group__reduce__func__product__by__key.htm#ga31b013961c75d71e002fd83c3a20939d">More...</a><br /></td></tr>
<tr class="separator:ga31b013961c75d71e002fd83c3a20939d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b1287d1babb569d28bc6ee1c8e8e1ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">min</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:ga2b1287d1babb569d28bc6ee1c8e8e1ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for minimum values in an array.  <a href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">More...</a><br /></td></tr>
<tr class="separator:ga2b1287d1babb569d28bc6ee1c8e8e1ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7c57e49e2d6947cf0ed3475ba0c5693a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min__by__key.htm#ga7c57e49e2d6947cf0ed3475ba0c5693a">minByKey</a> (array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</td></tr>
<tr class="memdesc:ga7c57e49e2d6947cf0ed3475ba0c5693a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for minimum values in an array according to a key.  <a href="group__reduce__func__min__by__key.htm#ga7c57e49e2d6947cf0ed3475ba0c5693a">More...</a><br /></td></tr>
<tr class="separator:ga7c57e49e2d6947cf0ed3475ba0c5693a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4459daf5a3b081fb4ee15eb49d8c902a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:ga4459daf5a3b081fb4ee15eb49d8c902a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for maximum values in an array.  <a href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">More...</a><br /></td></tr>
<tr class="separator:ga4459daf5a3b081fb4ee15eb49d8c902a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac1957071462ec10da9a7958fe0f6723"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max__by__key.htm#gaac1957071462ec10da9a7958fe0f6723">maxByKey</a> (array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</td></tr>
<tr class="memdesc:gaac1957071462ec10da9a7958fe0f6723"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for maximum values in an array according to a key.  <a href="group__reduce__func__max__by__key.htm#gaac1957071462ec10da9a7958fe0f6723">More...</a><br /></td></tr>
<tr class="separator:gaac1957071462ec10da9a7958fe0f6723"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf6ad5b4c9974cc0f5d67976adfd5c439"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#gaf6ad5b4c9974cc0f5d67976adfd5c439">max</a> (array &amp;val, array &amp;idx, const array &amp;in, const array &amp;ragged_len, const int dim)</td></tr>
<tr class="memdesc:gaf6ad5b4c9974cc0f5d67976adfd5c439"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for ragged max values in an array Uses an additional input array to determine the number of elements to use along the reduction axis.  <a href="group__reduce__func__max.htm#gaf6ad5b4c9974cc0f5d67976adfd5c439">More...</a><br /></td></tr>
<tr class="separator:gaf6ad5b4c9974cc0f5d67976adfd5c439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf3f22add3a54fb729a969cf8f669fc2b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b">allTrue</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:gaf3f22add3a54fb729a969cf8f669fc2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for checking all true values in an array.  <a href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b">More...</a><br /></td></tr>
<tr class="separator:gaf3f22add3a54fb729a969cf8f669fc2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35aa2f544c3762a14762de1451f0f141"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm#a35aa2f544c3762a14762de1451f0f141">allTrueByKey</a> (array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</td></tr>
<tr class="memdesc:a35aa2f544c3762a14762de1451f0f141"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for checking all true values in an array according to a key.  <a href="namespaceaf.htm#a35aa2f544c3762a14762de1451f0f141">More...</a><br /></td></tr>
<tr class="separator:a35aa2f544c3762a14762de1451f0f141"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe4c8f22bbfa4288696f2a133b1b619e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__any__true.htm#gafe4c8f22bbfa4288696f2a133b1b619e">anyTrue</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:gafe4c8f22bbfa4288696f2a133b1b619e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for checking any true values in an array.  <a href="group__reduce__func__any__true.htm#gafe4c8f22bbfa4288696f2a133b1b619e">More...</a><br /></td></tr>
<tr class="separator:gafe4c8f22bbfa4288696f2a133b1b619e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad14de5a58792e166fac5da3deda5dbb9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__anytrue__by__key.htm#gad14de5a58792e166fac5da3deda5dbb9">anyTrueByKey</a> (array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</td></tr>
<tr class="memdesc:gad14de5a58792e166fac5da3deda5dbb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for checking any true values in an array according to a key.  <a href="group__reduce__func__anytrue__by__key.htm#gad14de5a58792e166fac5da3deda5dbb9">More...</a><br /></td></tr>
<tr class="separator:gad14de5a58792e166fac5da3deda5dbb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga76b6172262aa0e64bf6979c16a40ea3c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__count.htm#ga76b6172262aa0e64bf6979c16a40ea3c">count</a> (const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:ga76b6172262aa0e64bf6979c16a40ea3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for counting non-zero values in an array.  <a href="group__reduce__func__count.htm#ga76b6172262aa0e64bf6979c16a40ea3c">More...</a><br /></td></tr>
<tr class="separator:ga76b6172262aa0e64bf6979c16a40ea3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad0aef7e7c253d12b376fca59067ee487"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__count__by__key.htm#gad0aef7e7c253d12b376fca59067ee487">countByKey</a> (array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</td></tr>
<tr class="memdesc:gad0aef7e7c253d12b376fca59067ee487"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for counting non-zero values in an array according to a key.  <a href="group__reduce__func__count__by__key.htm#gad0aef7e7c253d12b376fca59067ee487">More...</a><br /></td></tr>
<tr class="separator:gad0aef7e7c253d12b376fca59067ee487"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga27080996b6ea1c422f16da4b06fb76a7"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga27080996b6ea1c422f16da4b06fb76a7"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#ga27080996b6ea1c422f16da4b06fb76a7">sum</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga27080996b6ea1c422f16da4b06fb76a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sum of all elements in an array.  <a href="group__reduce__func__sum.htm#ga27080996b6ea1c422f16da4b06fb76a7">More...</a><br /></td></tr>
<tr class="separator:ga27080996b6ea1c422f16da4b06fb76a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7a52bcc5d9a41e291ddb283732ea3adc"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga7a52bcc5d9a41e291ddb283732ea3adc"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#ga7a52bcc5d9a41e291ddb283732ea3adc">sum</a> (const array &amp;in, double nanval)</td></tr>
<tr class="memdesc:ga7a52bcc5d9a41e291ddb283732ea3adc"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sum of all elements in an array while replacing nan values.  <a href="group__reduce__func__sum.htm#ga7a52bcc5d9a41e291ddb283732ea3adc">More...</a><br /></td></tr>
<tr class="separator:ga7a52bcc5d9a41e291ddb283732ea3adc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab1e3ecae8d63be355c41a54b0fb7b09c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gab1e3ecae8d63be355c41a54b0fb7b09c"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#gab1e3ecae8d63be355c41a54b0fb7b09c">product</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gab1e3ecae8d63be355c41a54b0fb7b09c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for product of all elements in an array.  <a href="group__reduce__func__product.htm#gab1e3ecae8d63be355c41a54b0fb7b09c">More...</a><br /></td></tr>
<tr class="separator:gab1e3ecae8d63be355c41a54b0fb7b09c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d52d3862f703558a86e99db88c3de50"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga9d52d3862f703558a86e99db88c3de50"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#ga9d52d3862f703558a86e99db88c3de50">product</a> (const array &amp;in, double nanval)</td></tr>
<tr class="memdesc:ga9d52d3862f703558a86e99db88c3de50"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for product of all elements in an array while replacing nan values.  <a href="group__reduce__func__product.htm#ga9d52d3862f703558a86e99db88c3de50">More...</a><br /></td></tr>
<tr class="separator:ga9d52d3862f703558a86e99db88c3de50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8739f890dec19e3f9642ae4678229ca4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga8739f890dec19e3f9642ae4678229ca4"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#ga8739f890dec19e3f9642ae4678229ca4">min</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga8739f890dec19e3f9642ae4678229ca4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting minimum value of an array.  <a href="group__reduce__func__min.htm#ga8739f890dec19e3f9642ae4678229ca4">More...</a><br /></td></tr>
<tr class="separator:ga8739f890dec19e3f9642ae4678229ca4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga27a8604de959200acd69d20dbede1e32"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga27a8604de959200acd69d20dbede1e32"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#ga27a8604de959200acd69d20dbede1e32">max</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga27a8604de959200acd69d20dbede1e32"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting maximum value of an array.  <a href="group__reduce__func__max.htm#ga27a8604de959200acd69d20dbede1e32">More...</a><br /></td></tr>
<tr class="separator:ga27a8604de959200acd69d20dbede1e32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd33df6a3470afb073d8537722e7aedf"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gafd33df6a3470afb073d8537722e7aedf"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__all__true.htm#gafd33df6a3470afb073d8537722e7aedf">allTrue</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gafd33df6a3470afb073d8537722e7aedf"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for checking if all values in an array are true.  <a href="group__reduce__func__all__true.htm#gafd33df6a3470afb073d8537722e7aedf">More...</a><br /></td></tr>
<tr class="separator:gafd33df6a3470afb073d8537722e7aedf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9275d7c81c19045beac99103edbbf63"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gae9275d7c81c19045beac99103edbbf63"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__any__true.htm#gae9275d7c81c19045beac99103edbbf63">anyTrue</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gae9275d7c81c19045beac99103edbbf63"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for checking if any values in an array are true.  <a href="group__reduce__func__any__true.htm#gae9275d7c81c19045beac99103edbbf63">More...</a><br /></td></tr>
<tr class="separator:gae9275d7c81c19045beac99103edbbf63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d9bfd6fdee267ac0eef096321d16470"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga6d9bfd6fdee267ac0eef096321d16470"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__count.htm#ga6d9bfd6fdee267ac0eef096321d16470">count</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga6d9bfd6fdee267ac0eef096321d16470"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for counting total number of non-zero values in an array.  <a href="group__reduce__func__count.htm#ga6d9bfd6fdee267ac0eef096321d16470">More...</a><br /></td></tr>
<tr class="separator:ga6d9bfd6fdee267ac0eef096321d16470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4f4b4607803d8fd4fea8e862d3685d15"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#ga4f4b4607803d8fd4fea8e862d3685d15">min</a> (array &amp;val, array &amp;idx, const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:ga4f4b4607803d8fd4fea8e862d3685d15"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting minimum values and their locations in an array.  <a href="group__reduce__func__min.htm#ga4f4b4607803d8fd4fea8e862d3685d15">More...</a><br /></td></tr>
<tr class="separator:ga4f4b4607803d8fd4fea8e862d3685d15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga22189e6402e433ed7061dfee61ab482b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#ga22189e6402e433ed7061dfee61ab482b">max</a> (array &amp;val, array &amp;idx, const array &amp;in, const int dim=-1)</td></tr>
<tr class="memdesc:ga22189e6402e433ed7061dfee61ab482b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting maximum values and their locations in an array.  <a href="group__reduce__func__max.htm#ga22189e6402e433ed7061dfee61ab482b">More...</a><br /></td></tr>
<tr class="separator:ga22189e6402e433ed7061dfee61ab482b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8f9827148261c1deea3adde7aa7accdb"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga8f9827148261c1deea3adde7aa7accdb"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#ga8f9827148261c1deea3adde7aa7accdb">min</a> (T *val, unsigned *idx, const array &amp;in)</td></tr>
<tr class="memdesc:ga8f9827148261c1deea3adde7aa7accdb"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting minimum value and its location from the entire array.  <a href="group__reduce__func__min.htm#ga8f9827148261c1deea3adde7aa7accdb">More...</a><br /></td></tr>
<tr class="separator:ga8f9827148261c1deea3adde7aa7accdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab0de5929db14a2449c935ed82acf5153"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gab0de5929db14a2449c935ed82acf5153"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#gab0de5929db14a2449c935ed82acf5153">max</a> (T *val, unsigned *idx, const array &amp;in)</td></tr>
<tr class="memdesc:gab0de5929db14a2449c935ed82acf5153"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting maximum value and its location from the entire array.  <a href="group__reduce__func__max.htm#gab0de5929db14a2449c935ed82acf5153">More...</a><br /></td></tr>
<tr class="separator:gab0de5929db14a2449c935ed82acf5153"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae450135c4ae1bdaa4489804a215f3214"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__scan__func__accum.htm#gae450135c4ae1bdaa4489804a215f3214">accum</a> (const array &amp;in, const int dim=0)</td></tr>
<tr class="memdesc:gae450135c4ae1bdaa4489804a215f3214"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for computing the cumulative sum (inclusive) of an array.  <a href="group__scan__func__accum.htm#gae450135c4ae1bdaa4489804a215f3214">More...</a><br /></td></tr>
<tr class="separator:gae450135c4ae1bdaa4489804a215f3214"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe3e469eb355990345012bbe6393b4c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__scan__func__scan.htm#gabe3e469eb355990345012bbe6393b4c3">scan</a> (const array &amp;in, const int dim=0, binaryOp op=<a class="el" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6ca335c219d88e113349f6ce08e830314a1">AF_BINARY_ADD</a>, bool inclusive_scan=true)</td></tr>
<tr class="memdesc:gabe3e469eb355990345012bbe6393b4c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface generalized scan of an array.  <a href="group__scan__func__scan.htm#gabe3e469eb355990345012bbe6393b4c3">More...</a><br /></td></tr>
<tr class="separator:gabe3e469eb355990345012bbe6393b4c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga881c15b2d5ae0dea679eb3fd700ad681"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__scan__func__scanbykey.htm#ga881c15b2d5ae0dea679eb3fd700ad681">scanByKey</a> (const array &amp;key, const array &amp;in, const int dim=0, binaryOp op=<a class="el" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6ca335c219d88e113349f6ce08e830314a1">AF_BINARY_ADD</a>, bool inclusive_scan=true)</td></tr>
<tr class="memdesc:ga881c15b2d5ae0dea679eb3fd700ad681"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface generalized scan by key of an array.  <a href="group__scan__func__scanbykey.htm#ga881c15b2d5ae0dea679eb3fd700ad681">More...</a><br /></td></tr>
<tr class="separator:ga881c15b2d5ae0dea679eb3fd700ad681"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e677067915477bc4aec1605d80d9b7b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__scan__func__where.htm#ga1e677067915477bc4aec1605d80d9b7b">where</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga1e677067915477bc4aec1605d80d9b7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for finding the locations of non-zero values in an array.  <a href="group__scan__func__where.htm#ga1e677067915477bc4aec1605d80d9b7b">More...</a><br /></td></tr>
<tr class="separator:ga1e677067915477bc4aec1605d80d9b7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab099192b1beeddab1ad14536aba689b2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__calc__func__diff1.htm#gab099192b1beeddab1ad14536aba689b2">diff1</a> (const array &amp;in, const int dim=0)</td></tr>
<tr class="memdesc:gab099192b1beeddab1ad14536aba689b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for calculating first order differences in an array.  <a href="group__calc__func__diff1.htm#gab099192b1beeddab1ad14536aba689b2">More...</a><br /></td></tr>
<tr class="separator:gab099192b1beeddab1ad14536aba689b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad803d1bc99910533a5789c428522aaef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__calc__func__diff2.htm#gad803d1bc99910533a5789c428522aaef">diff2</a> (const array &amp;in, const int dim=0)</td></tr>
<tr class="memdesc:gad803d1bc99910533a5789c428522aaef"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for calculating second order differences in an array.  <a href="group__calc__func__diff2.htm#gad803d1bc99910533a5789c428522aaef">More...</a><br /></td></tr>
<tr class="separator:gad803d1bc99910533a5789c428522aaef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8d1a62b3e41bfcdeef810a442869b42c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">sort</a> (const array &amp;in, const unsigned dim=0, const bool isAscending=true)</td></tr>
<tr class="memdesc:ga8d1a62b3e41bfcdeef810a442869b42c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sorting an array.  <a href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">More...</a><br /></td></tr>
<tr class="separator:ga8d1a62b3e41bfcdeef810a442869b42c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ae274b20379a6c9ef07afb0a8d81eaa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sort__func__sort__index.htm#ga7ae274b20379a6c9ef07afb0a8d81eaa">sort</a> (array &amp;out, array &amp;indices, const array &amp;in, const unsigned dim=0, const bool isAscending=true)</td></tr>
<tr class="memdesc:ga7ae274b20379a6c9ef07afb0a8d81eaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sorting an array and getting original indices.  <a href="group__sort__func__sort__index.htm#ga7ae274b20379a6c9ef07afb0a8d81eaa">More...</a><br /></td></tr>
<tr class="separator:ga7ae274b20379a6c9ef07afb0a8d81eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c2aa7856108a24d8bfb9a0cdcc84e03"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sort__func__sort__keys.htm#ga0c2aa7856108a24d8bfb9a0cdcc84e03">sort</a> (array &amp;out_keys, array &amp;out_values, const array &amp;keys, const array &amp;values, const unsigned dim=0, const bool isAscending=true)</td></tr>
<tr class="memdesc:ga0c2aa7856108a24d8bfb9a0cdcc84e03"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sorting an array based on keys.  <a href="group__sort__func__sort__keys.htm#ga0c2aa7856108a24d8bfb9a0cdcc84e03">More...</a><br /></td></tr>
<tr class="separator:ga0c2aa7856108a24d8bfb9a0cdcc84e03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga73f2f768af96755af50df21e384287c6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">setUnique</a> (const array &amp;in, const bool is_sorted=false)</td></tr>
<tr class="memdesc:ga73f2f768af96755af50df21e384287c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting unique values.  <a href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">More...</a><br /></td></tr>
<tr class="separator:ga73f2f768af96755af50df21e384287c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa793c080cfa2c5ed7f422479e8e0bfe3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__union.htm#gaa793c080cfa2c5ed7f422479e8e0bfe3">setUnion</a> (const array &amp;first, const array &amp;second, const bool is_unique=false)</td></tr>
<tr class="memdesc:gaa793c080cfa2c5ed7f422479e8e0bfe3"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for finding the union of two arrays.  <a href="group__set__func__union.htm#gaa793c080cfa2c5ed7f422479e8e0bfe3">More...</a><br /></td></tr>
<tr class="separator:gaa793c080cfa2c5ed7f422479e8e0bfe3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4549aee29c563edfb0b4a444fbf9200"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__intersect.htm#gae4549aee29c563edfb0b4a444fbf9200">setIntersect</a> (const array &amp;first, const array &amp;second, const bool is_unique=false)</td></tr>
<tr class="memdesc:gae4549aee29c563edfb0b4a444fbf9200"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for finding the intersection of two arrays.  <a href="group__set__func__intersect.htm#gae4549aee29c563edfb0b4a444fbf9200">More...</a><br /></td></tr>
<tr class="separator:gae4549aee29c563edfb0b4a444fbf9200"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd4917c2e916870ebdf54afc2f61d533"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#gacd4917c2e916870ebdf54afc2f61d533">af_sum</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:gacd4917c2e916870ebdf54afc2f61d533"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sum of elements in an array.  <a href="group__reduce__func__sum.htm#gacd4917c2e916870ebdf54afc2f61d533">More...</a><br /></td></tr>
<tr class="separator:gacd4917c2e916870ebdf54afc2f61d533"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga52461231e2d9995f689b7f23eea0e798"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#ga52461231e2d9995f689b7f23eea0e798">af_sum_nan</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim, const double nanval)</td></tr>
<tr class="memdesc:ga52461231e2d9995f689b7f23eea0e798"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sum of elements in an array while replacing nans.  <a href="group__reduce__func__sum.htm#ga52461231e2d9995f689b7f23eea0e798">More...</a><br /></td></tr>
<tr class="separator:ga52461231e2d9995f689b7f23eea0e798"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a1fdb7417aa59287db593159c19ed2d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum__by__key.htm#ga2a1fdb7417aa59287db593159c19ed2d">af_sum_by_key</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals, const int dim)</td></tr>
<tr class="memdesc:ga2a1fdb7417aa59287db593159c19ed2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sum of elements in an array according to key.  <a href="group__reduce__func__sum__by__key.htm#ga2a1fdb7417aa59287db593159c19ed2d">More...</a><br /></td></tr>
<tr class="separator:ga2a1fdb7417aa59287db593159c19ed2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafa695edde00c43ac638ca7d9961938f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum__by__key.htm#gafa695edde00c43ac638ca7d9961938f4">af_sum_by_key_nan</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals, const int dim, const double nanval)</td></tr>
<tr class="memdesc:gafa695edde00c43ac638ca7d9961938f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sum of elements in an array according to key while replacing nans.  <a href="group__reduce__func__sum__by__key.htm#gafa695edde00c43ac638ca7d9961938f4">More...</a><br /></td></tr>
<tr class="separator:gafa695edde00c43ac638ca7d9961938f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2be338d39be30ad22dddf658a4f5676e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#ga2be338d39be30ad22dddf658a4f5676e">af_product</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga2be338d39be30ad22dddf658a4f5676e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for product of elements in an array.  <a href="group__reduce__func__product.htm#ga2be338d39be30ad22dddf658a4f5676e">More...</a><br /></td></tr>
<tr class="separator:ga2be338d39be30ad22dddf658a4f5676e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d25447c16d492767ba7efa7ee72a36e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#ga1d25447c16d492767ba7efa7ee72a36e">af_product_nan</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim, const double nanval)</td></tr>
<tr class="memdesc:ga1d25447c16d492767ba7efa7ee72a36e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for product of elements in an array while replacing nans.  <a href="group__reduce__func__product.htm#ga1d25447c16d492767ba7efa7ee72a36e">More...</a><br /></td></tr>
<tr class="separator:ga1d25447c16d492767ba7efa7ee72a36e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga098382fc8f79446d6e2af1473fac4350"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product__by__key.htm#ga098382fc8f79446d6e2af1473fac4350">af_product_by_key</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals, const int dim)</td></tr>
<tr class="memdesc:ga098382fc8f79446d6e2af1473fac4350"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for product of elements in an array according to key.  <a href="group__reduce__func__product__by__key.htm#ga098382fc8f79446d6e2af1473fac4350">More...</a><br /></td></tr>
<tr class="separator:ga098382fc8f79446d6e2af1473fac4350"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaff3459e70525e5e472591231037351e0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product__by__key.htm#gaff3459e70525e5e472591231037351e0">af_product_by_key_nan</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals, const int dim, const double nanval)</td></tr>
<tr class="memdesc:gaff3459e70525e5e472591231037351e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for product of elements in an array according to key while replacing nans.  <a href="group__reduce__func__product__by__key.htm#gaff3459e70525e5e472591231037351e0">More...</a><br /></td></tr>
<tr class="separator:gaff3459e70525e5e472591231037351e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2ac4c8d9ba613dbc9bfec0bee7be8eb8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#ga2ac4c8d9ba613dbc9bfec0bee7be8eb8">af_min</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga2ac4c8d9ba613dbc9bfec0bee7be8eb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for minimum values in an array.  <a href="group__reduce__func__min.htm#ga2ac4c8d9ba613dbc9bfec0bee7be8eb8">More...</a><br /></td></tr>
<tr class="separator:ga2ac4c8d9ba613dbc9bfec0bee7be8eb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga24037db6a2a5c117f2ade85b0412f548"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min__by__key.htm#ga24037db6a2a5c117f2ade85b0412f548">af_min_by_key</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals, const int dim)</td></tr>
<tr class="memdesc:ga24037db6a2a5c117f2ade85b0412f548"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for minimum values in an array according to key.  <a href="group__reduce__func__min__by__key.htm#ga24037db6a2a5c117f2ade85b0412f548">More...</a><br /></td></tr>
<tr class="separator:ga24037db6a2a5c117f2ade85b0412f548"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga267f32b8dbb1b508e8738e3748d8dc3f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#ga267f32b8dbb1b508e8738e3748d8dc3f">af_max</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga267f32b8dbb1b508e8738e3748d8dc3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for maximum values in an array.  <a href="group__reduce__func__max.htm#ga267f32b8dbb1b508e8738e3748d8dc3f">More...</a><br /></td></tr>
<tr class="separator:ga267f32b8dbb1b508e8738e3748d8dc3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga002d03c0ebd674644c8a6831ebb775e2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max__by__key.htm#ga002d03c0ebd674644c8a6831ebb775e2">af_max_by_key</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals, const int dim)</td></tr>
<tr class="memdesc:ga002d03c0ebd674644c8a6831ebb775e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for maximum values in an array according to key.  <a href="group__reduce__func__max__by__key.htm#ga002d03c0ebd674644c8a6831ebb775e2">More...</a><br /></td></tr>
<tr class="separator:ga002d03c0ebd674644c8a6831ebb775e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga564bbeca8e4c243355979a6cb5dc4970"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#ga564bbeca8e4c243355979a6cb5dc4970">af_max_ragged</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *val, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> ragged_len, const int dim)</td></tr>
<tr class="memdesc:ga564bbeca8e4c243355979a6cb5dc4970"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for finding ragged max values in an array Uses an additional input array to determine the number of elements to use along the reduction axis.  <a href="group__reduce__func__max.htm#ga564bbeca8e4c243355979a6cb5dc4970">More...</a><br /></td></tr>
<tr class="separator:ga564bbeca8e4c243355979a6cb5dc4970"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga068708be5177a0aa3788af140bb5ebd6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__all__true.htm#ga068708be5177a0aa3788af140bb5ebd6">af_all_true</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga068708be5177a0aa3788af140bb5ebd6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking all true values in an array.  <a href="group__reduce__func__all__true.htm#ga068708be5177a0aa3788af140bb5ebd6">More...</a><br /></td></tr>
<tr class="separator:ga068708be5177a0aa3788af140bb5ebd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65fa5577c81a2c2fcf7406bf48cc014a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="algorithm_8h.htm#a65fa5577c81a2c2fcf7406bf48cc014a">af_all_true_by_key</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals, const int dim)</td></tr>
<tr class="memdesc:a65fa5577c81a2c2fcf7406bf48cc014a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking all true values in an array according to key.  <a href="algorithm_8h.htm#a65fa5577c81a2c2fcf7406bf48cc014a">More...</a><br /></td></tr>
<tr class="separator:a65fa5577c81a2c2fcf7406bf48cc014a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7c275cda2cfc8eb0bd20ea86472ca0d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__any__true.htm#ga7c275cda2cfc8eb0bd20ea86472ca0d5">af_any_true</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga7c275cda2cfc8eb0bd20ea86472ca0d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking any true values in an array.  <a href="group__reduce__func__any__true.htm#ga7c275cda2cfc8eb0bd20ea86472ca0d5">More...</a><br /></td></tr>
<tr class="separator:ga7c275cda2cfc8eb0bd20ea86472ca0d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga973fd650f8a57533f675cfd7ad6f0718"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__anytrue__by__key.htm#ga973fd650f8a57533f675cfd7ad6f0718">af_any_true_by_key</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals, const int dim)</td></tr>
<tr class="memdesc:ga973fd650f8a57533f675cfd7ad6f0718"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking any true values in an array according to key.  <a href="group__reduce__func__anytrue__by__key.htm#ga973fd650f8a57533f675cfd7ad6f0718">More...</a><br /></td></tr>
<tr class="separator:ga973fd650f8a57533f675cfd7ad6f0718"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf2664c25ee6ca30aa3f5aa77db789f95"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__count.htm#gaf2664c25ee6ca30aa3f5aa77db789f95">af_count</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:gaf2664c25ee6ca30aa3f5aa77db789f95"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for counting non-zero values in an array.  <a href="group__reduce__func__count.htm#gaf2664c25ee6ca30aa3f5aa77db789f95">More...</a><br /></td></tr>
<tr class="separator:gaf2664c25ee6ca30aa3f5aa77db789f95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga96b01fd7375b3a3cb065ba860885e723"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__count__by__key.htm#ga96b01fd7375b3a3cb065ba860885e723">af_count_by_key</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals, const int dim)</td></tr>
<tr class="memdesc:ga96b01fd7375b3a3cb065ba860885e723"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for counting non-zero values in an array according to key.  <a href="group__reduce__func__count__by__key.htm#ga96b01fd7375b3a3cb065ba860885e723">More...</a><br /></td></tr>
<tr class="separator:ga96b01fd7375b3a3cb065ba860885e723"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc009d04df0faf29ba1e381c7badde58"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#gabc009d04df0faf29ba1e381c7badde58">af_sum_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gabc009d04df0faf29ba1e381c7badde58"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sum of all elements in an array.  <a href="group__reduce__func__sum.htm#gabc009d04df0faf29ba1e381c7badde58">More...</a><br /></td></tr>
<tr class="separator:gabc009d04df0faf29ba1e381c7badde58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65bb08cd2644d5828d72fc42b2eb8abc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__sum.htm#ga65bb08cd2644d5828d72fc42b2eb8abc">af_sum_nan_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double nanval)</td></tr>
<tr class="memdesc:ga65bb08cd2644d5828d72fc42b2eb8abc"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sum of all elements in an array while replacing nans.  <a href="group__reduce__func__sum.htm#ga65bb08cd2644d5828d72fc42b2eb8abc">More...</a><br /></td></tr>
<tr class="separator:ga65bb08cd2644d5828d72fc42b2eb8abc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad226a6ec77c12fd16cf42e3fe3264e22"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#gad226a6ec77c12fd16cf42e3fe3264e22">af_product_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gad226a6ec77c12fd16cf42e3fe3264e22"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for product of all elements in an array.  <a href="group__reduce__func__product.htm#gad226a6ec77c12fd16cf42e3fe3264e22">More...</a><br /></td></tr>
<tr class="separator:gad226a6ec77c12fd16cf42e3fe3264e22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaca78d54c53a33b419bfdb5c64accbc7b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__product.htm#gaca78d54c53a33b419bfdb5c64accbc7b">af_product_nan_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double nanval)</td></tr>
<tr class="memdesc:gaca78d54c53a33b419bfdb5c64accbc7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for product of all elements in an array while replacing nans.  <a href="group__reduce__func__product.htm#gaca78d54c53a33b419bfdb5c64accbc7b">More...</a><br /></td></tr>
<tr class="separator:gaca78d54c53a33b419bfdb5c64accbc7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab10198ae7ead1dc10f220d576f118104"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#gab10198ae7ead1dc10f220d576f118104">af_min_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gab10198ae7ead1dc10f220d576f118104"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting minimum value of an array.  <a href="group__reduce__func__min.htm#gab10198ae7ead1dc10f220d576f118104">More...</a><br /></td></tr>
<tr class="separator:gab10198ae7ead1dc10f220d576f118104"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f71ab6056943723149585d2aebade7c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#ga5f71ab6056943723149585d2aebade7c">af_max_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga5f71ab6056943723149585d2aebade7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting maximum value of an array.  <a href="group__reduce__func__max.htm#ga5f71ab6056943723149585d2aebade7c">More...</a><br /></td></tr>
<tr class="separator:ga5f71ab6056943723149585d2aebade7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b50d4adffe3050c3d21bbbbb3d2e434"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__all__true.htm#ga9b50d4adffe3050c3d21bbbbb3d2e434">af_all_true_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga9b50d4adffe3050c3d21bbbbb3d2e434"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking if all values in an array are true.  <a href="group__reduce__func__all__true.htm#ga9b50d4adffe3050c3d21bbbbb3d2e434">More...</a><br /></td></tr>
<tr class="separator:ga9b50d4adffe3050c3d21bbbbb3d2e434"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga47d991276bb5bf8cdba8340e8751e536"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__any__true.htm#ga47d991276bb5bf8cdba8340e8751e536">af_any_true_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga47d991276bb5bf8cdba8340e8751e536"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking if any values in an array are true.  <a href="group__reduce__func__any__true.htm#ga47d991276bb5bf8cdba8340e8751e536">More...</a><br /></td></tr>
<tr class="separator:ga47d991276bb5bf8cdba8340e8751e536"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga38699c5ce172c15e9850a9eda6050da5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__count.htm#ga38699c5ce172c15e9850a9eda6050da5">af_count_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga38699c5ce172c15e9850a9eda6050da5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for counting total number of non-zero values in an array.  <a href="group__reduce__func__count.htm#ga38699c5ce172c15e9850a9eda6050da5">More...</a><br /></td></tr>
<tr class="separator:ga38699c5ce172c15e9850a9eda6050da5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f65943090e0c2317bd682c25594b901"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#ga2f65943090e0c2317bd682c25594b901">af_imin</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga2f65943090e0c2317bd682c25594b901"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting minimum values and their locations in an array.  <a href="group__reduce__func__min.htm#ga2f65943090e0c2317bd682c25594b901">More...</a><br /></td></tr>
<tr class="separator:ga2f65943090e0c2317bd682c25594b901"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf0e6a523e2e435d5409d5d8cb843d8a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#gaf0e6a523e2e435d5409d5d8cb843d8a2">af_imax</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:gaf0e6a523e2e435d5409d5d8cb843d8a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting maximum values and their locations in an array.  <a href="group__reduce__func__max.htm#gaf0e6a523e2e435d5409d5d8cb843d8a2">More...</a><br /></td></tr>
<tr class="separator:gaf0e6a523e2e435d5409d5d8cb843d8a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae75785af0fdfcbb1f4c34461235f5206"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__min.htm#gae75785af0fdfcbb1f4c34461235f5206">af_imin_all</a> (double *real, double *imag, unsigned *idx, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gae75785af0fdfcbb1f4c34461235f5206"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting minimum value and its location from the entire array.  <a href="group__reduce__func__min.htm#gae75785af0fdfcbb1f4c34461235f5206">More...</a><br /></td></tr>
<tr class="separator:gae75785af0fdfcbb1f4c34461235f5206"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea009bd51145be2fcc688b2390725401"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__max.htm#gaea009bd51145be2fcc688b2390725401">af_imax_all</a> (double *real, double *imag, unsigned *idx, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gaea009bd51145be2fcc688b2390725401"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting maximum value and it's location from the entire array.  <a href="group__reduce__func__max.htm#gaea009bd51145be2fcc688b2390725401">More...</a><br /></td></tr>
<tr class="separator:gaea009bd51145be2fcc688b2390725401"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga50d499e844e0b63e338cb3ea50439629"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__scan__func__accum.htm#ga50d499e844e0b63e338cb3ea50439629">af_accum</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:ga50d499e844e0b63e338cb3ea50439629"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for computing the cumulative sum (inclusive) of an array.  <a href="group__scan__func__accum.htm#ga50d499e844e0b63e338cb3ea50439629">More...</a><br /></td></tr>
<tr class="separator:ga50d499e844e0b63e338cb3ea50439629"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c864e22826f61bec2e9b6c61aa93fce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__scan__func__scan.htm#ga1c864e22826f61bec2e9b6c61aa93fce">af_scan</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim, <a class="el" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6c">af_binary_op</a> op, bool inclusive_scan)</td></tr>
<tr class="memdesc:ga1c864e22826f61bec2e9b6c61aa93fce"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface generalized scan of an array.  <a href="group__scan__func__scan.htm#ga1c864e22826f61bec2e9b6c61aa93fce">More...</a><br /></td></tr>
<tr class="separator:ga1c864e22826f61bec2e9b6c61aa93fce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaae150e0f197782782f45340d137b027"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__scan__func__scanbykey.htm#gaaae150e0f197782782f45340d137b027">af_scan_by_key</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> key, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim, <a class="el" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6c">af_binary_op</a> op, bool inclusive_scan)</td></tr>
<tr class="memdesc:gaaae150e0f197782782f45340d137b027"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface generalized scan by key of an array.  <a href="group__scan__func__scanbykey.htm#gaaae150e0f197782782f45340d137b027">More...</a><br /></td></tr>
<tr class="separator:gaaae150e0f197782782f45340d137b027"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafda59a3d25d35238592dd09907be9d07"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__scan__func__where.htm#gafda59a3d25d35238592dd09907be9d07">af_where</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gafda59a3d25d35238592dd09907be9d07"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for finding the locations of non-zero values in an array.  <a href="group__scan__func__where.htm#gafda59a3d25d35238592dd09907be9d07">More...</a><br /></td></tr>
<tr class="separator:gafda59a3d25d35238592dd09907be9d07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad3be33ce8114f65c188645e958fce171"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__calc__func__diff1.htm#gad3be33ce8114f65c188645e958fce171">af_diff1</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:gad3be33ce8114f65c188645e958fce171"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for calculating first order differences in an array.  <a href="group__calc__func__diff1.htm#gad3be33ce8114f65c188645e958fce171">More...</a><br /></td></tr>
<tr class="separator:gad3be33ce8114f65c188645e958fce171"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafc7b2d05e4e85aeb3e8b3239f598f70c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__calc__func__diff2.htm#gafc7b2d05e4e85aeb3e8b3239f598f70c">af_diff2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int dim)</td></tr>
<tr class="memdesc:gafc7b2d05e4e85aeb3e8b3239f598f70c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for calculating second order differences in an array.  <a href="group__calc__func__diff2.htm#gafc7b2d05e4e85aeb3e8b3239f598f70c">More...</a><br /></td></tr>
<tr class="separator:gafc7b2d05e4e85aeb3e8b3239f598f70c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac4460d605452515d07ee8432f906aa8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sort__func__sort.htm#gac4460d605452515d07ee8432f906aa8e">af_sort</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const unsigned dim, const bool isAscending)</td></tr>
<tr class="memdesc:gac4460d605452515d07ee8432f906aa8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sorting an array.  <a href="group__sort__func__sort.htm#gac4460d605452515d07ee8432f906aa8e">More...</a><br /></td></tr>
<tr class="separator:gac4460d605452515d07ee8432f906aa8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga55675cd825c320db87398b1010b6ae41"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sort__func__sort__index.htm#ga55675cd825c320db87398b1010b6ae41">af_sort_index</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *indices, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const unsigned dim, const bool isAscending)</td></tr>
<tr class="memdesc:ga55675cd825c320db87398b1010b6ae41"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sorting an array and getting original indices.  <a href="group__sort__func__sort__index.htm#ga55675cd825c320db87398b1010b6ae41">More...</a><br /></td></tr>
<tr class="separator:ga55675cd825c320db87398b1010b6ae41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7d4fcaf229ece5fbbe30a638d9a60b8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sort__func__sort__keys.htm#ga7d4fcaf229ece5fbbe30a638d9a60b8a">af_sort_by_key</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out_keys, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out_values, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> values, const unsigned dim, const bool isAscending)</td></tr>
<tr class="memdesc:ga7d4fcaf229ece5fbbe30a638d9a60b8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sorting an array based on keys.  <a href="group__sort__func__sort__keys.htm#ga7d4fcaf229ece5fbbe30a638d9a60b8a">More...</a><br /></td></tr>
<tr class="separator:ga7d4fcaf229ece5fbbe30a638d9a60b8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6afa1de48cbbc4b2df530c2530087943"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__unique.htm#ga6afa1de48cbbc4b2df530c2530087943">af_set_unique</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const bool is_sorted)</td></tr>
<tr class="memdesc:ga6afa1de48cbbc4b2df530c2530087943"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting unique values.  <a href="group__set__func__unique.htm#ga6afa1de48cbbc4b2df530c2530087943">More...</a><br /></td></tr>
<tr class="separator:ga6afa1de48cbbc4b2df530c2530087943"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaabeead0c0dc360db9398e9703dbb273f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__union.htm#gaabeead0c0dc360db9398e9703dbb273f">af_set_union</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> first, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> second, const bool is_unique)</td></tr>
<tr class="memdesc:gaabeead0c0dc360db9398e9703dbb273f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for finding the union of two arrays.  <a href="group__set__func__union.htm#gaabeead0c0dc360db9398e9703dbb273f">More...</a><br /></td></tr>
<tr class="separator:gaabeead0c0dc360db9398e9703dbb273f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga985f9332c5f858eec66c717881ef2607"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__intersect.htm#ga985f9332c5f858eec66c717881ef2607">af_set_intersect</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> first, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> second, const bool is_unique)</td></tr>
<tr class="memdesc:ga985f9332c5f858eec66c717881ef2607"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for finding the intersection of two arrays.  <a href="group__set__func__intersect.htm#ga985f9332c5f858eec66c717881ef2607">More...</a><br /></td></tr>
<tr class="separator:ga985f9332c5f858eec66c717881ef2607"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a65fa5577c81a2c2fcf7406bf48cc014a" name="a65fa5577c81a2c2fcf7406bf48cc014a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65fa5577c81a2c2fcf7406bf48cc014a">&#9670;&nbsp;</a></span>af_all_true_by_key()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_all_true_by_key </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>keys_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>vals_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>vals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>dim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for checking all true values in an array according to key. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">keys_out</td><td>will contain the reduced keys in <code>vals</code> along <code>dim</code> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">vals_out</td><td>will contain the the reduced and of all values in <code>vals</code> along <code>dim</code> according to <code>keys</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">keys</td><td>is the key array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">vals</td><td>is the array containing the values to be reduced </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>The dimension along which the "and" operation occurs </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="navelem"><a class="el" href="algorithm_8h.htm">algorithm.h</a></li>
        <li class="footer">Generated on Thu Feb 24 2022 14:12:32 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.3 </li>
    </ul>
</div>
</body>
</html>
