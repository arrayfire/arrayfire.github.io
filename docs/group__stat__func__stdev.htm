<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: stdev</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__stat__func__stdev.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">stdev<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__stats__mat.htm">Statistics</a> &raquo;  &#124; <a class="el" href="group__basicstats__mat.htm">Basic statistics functions</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Find the standard deviation of values in the input.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaaebaa1553ae823fd0229fc7e6abdf350"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#gaaebaa1553ae823fd0229fc7e6abdf350">stdev</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:gaaebaa1553ae823fd0229fc7e6abdf350"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for standard deviation.  <a href="group__stat__func__stdev.htm#gaaebaa1553ae823fd0229fc7e6abdf350">More...</a><br /></td></tr>
<tr class="separator:gaaebaa1553ae823fd0229fc7e6abdf350"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga35657295742631166f4df76f4a186026"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#ga35657295742631166f4df76f4a186026">stdev</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:ga35657295742631166f4df76f4a186026"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for standard deviation.  <a href="group__stat__func__stdev.htm#ga35657295742631166f4df76f4a186026">More...</a><br /></td></tr>
<tr class="separator:ga35657295742631166f4df76f4a186026"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga55df1afccd27eba77725b7096173cf98"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga55df1afccd27eba77725b7096173cf98"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#ga55df1afccd27eba77725b7096173cf98">stdev</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in)</td></tr>
<tr class="memdesc:ga55df1afccd27eba77725b7096173cf98"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for standard deviation of all elements.  <a href="group__stat__func__stdev.htm#ga55df1afccd27eba77725b7096173cf98">More...</a><br /></td></tr>
<tr class="separator:ga55df1afccd27eba77725b7096173cf98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a76ba70a4a1dbb8cba7cadbffe5cfd9"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga2a76ba70a4a1dbb8cba7cadbffe5cfd9"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#ga2a76ba70a4a1dbb8cba7cadbffe5cfd9">stdev</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias)</td></tr>
<tr class="memdesc:ga2a76ba70a4a1dbb8cba7cadbffe5cfd9"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for standard deviation of all elements.  <a href="group__stat__func__stdev.htm#ga2a76ba70a4a1dbb8cba7cadbffe5cfd9">More...</a><br /></td></tr>
<tr class="separator:ga2a76ba70a4a1dbb8cba7cadbffe5cfd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d81575f2edbddea880db838ebadaac7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#ga3d81575f2edbddea880db838ebadaac7">af_stdev</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:ga3d81575f2edbddea880db838ebadaac7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for standard deviation.  <a href="#ga3d81575f2edbddea880db838ebadaac7">More...</a><br /></td></tr>
<tr class="separator:ga3d81575f2edbddea880db838ebadaac7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac96bb45869add8c949020112b5350ea5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#gac96bb45869add8c949020112b5350ea5">af_stdev_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:gac96bb45869add8c949020112b5350ea5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for standard deviation.  <a href="#gac96bb45869add8c949020112b5350ea5">More...</a><br /></td></tr>
<tr class="separator:gac96bb45869add8c949020112b5350ea5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0fbb49ddd033b0fcabd58a64ce355806"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#ga0fbb49ddd033b0fcabd58a64ce355806">af_stdev_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga0fbb49ddd033b0fcabd58a64ce355806"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for standard deviation of all elements.  <a href="#ga0fbb49ddd033b0fcabd58a64ce355806">More...</a><br /></td></tr>
<tr class="separator:ga0fbb49ddd033b0fcabd58a64ce355806"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1642775a5abef993213306e0fd6d72cf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#ga1642775a5abef993213306e0fd6d72cf">af_stdev_all_v2</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias)</td></tr>
<tr class="memdesc:ga1642775a5abef993213306e0fd6d72cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for standard deviation of all elements.  <a href="#ga1642775a5abef993213306e0fd6d72cf">More...</a><br /></td></tr>
<tr class="separator:ga1642775a5abef993213306e0fd6d72cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Find the standard deviation of values in the input. </p>
<p>This function performs the operation across all dimensions of the input array. </p><hr/>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga3d81575f2edbddea880db838ebadaac7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3d81575f2edbddea880db838ebadaac7">&#9670;&nbsp;</a></span>af_stdev()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_stdev </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for standard deviation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the standard deviation of the input array along dimension <code>dim</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the standard deviation is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000026">Deprecated:</a></b></dt><dd>Use <a class="el" href="group__stat__func__stdev.htm#gac96bb45869add8c949020112b5350ea5">af_stdev_v2</a> instead </dd></dl>

</div>
</div>
<a id="ga0fbb49ddd033b0fcabd58a64ce355806"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0fbb49ddd033b0fcabd58a64ce355806">&#9670;&nbsp;</a></span>af_stdev_all()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_stdev_all </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>real</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>imag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for standard deviation of all elements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">real</td><td>will contain the real part of standard deviation of the entire input array </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">imag</td><td>will contain the imaginary part of standard deviation of the entire input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000029">Deprecated:</a></b></dt><dd>Use <a class="el" href="group__stat__func__stdev.htm#ga1642775a5abef993213306e0fd6d72cf">af_stdev_all_v2</a> instead </dd></dl>

</div>
</div>
<a id="ga1642775a5abef993213306e0fd6d72cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1642775a5abef993213306e0fd6d72cf">&#9670;&nbsp;</a></span>af_stdev_all_v2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_stdev_all_v2 </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>real</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>imag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a>&#160;</td>
          <td class="paramname"><em>bias</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for standard deviation of all elements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">real</td><td>will contain the real part of standard deviation of the entire input array </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">imag</td><td>will contain the imaginary part of standard deviation of the entire input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bias</td><td>The type of bias used for variance calculation. Takes of value of type <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="gac96bb45869add8c949020112b5350ea5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac96bb45869add8c949020112b5350ea5">&#9670;&nbsp;</a></span>af_stdev_v2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_stdev_v2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a>&#160;</td>
          <td class="paramname"><em>bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for standard deviation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the standard deviation of the input array along dimension <code>dim</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bias</td><td>The type of bias used for variance calculation. Takes of value of type <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the standard deviation is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="gaaebaa1553ae823fd0229fc7e6abdf350"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaaebaa1553ae823fd0229fc7e6abdf350">&#9670;&nbsp;</a></span>stdev() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::stdev </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for standard deviation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the standard deviation is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the standard deviation of the input array along dimension <code>dim</code> </dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>dim</code> is -1 by default. -1 denotes the first non-singleton dimension.</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000031">Deprecated:</a></b></dt><dd>Use <a class="el" href="group__stat__func__stdev.htm#gaaebaa1553ae823fd0229fc7e6abdf350">af::stdev</a> that takes <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> instead </dd></dl>

</div>
</div>
<a id="ga35657295742631166f4df76f4a186026"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga35657295742631166f4df76f4a186026">&#9670;&nbsp;</a></span>stdev() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::stdev </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a>&#160;</td>
          <td class="paramname"><em>bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for standard deviation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bias</td><td>The type of bias used for variance calculation. Takes of value of type <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the standard deviation is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the standard deviation of the input array along dimension <code>dim</code> </dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>dim</code> is -1 by default. -1 denotes the first non-singleton dimension. </dd></dl>

</div>
</div>
<a id="ga55df1afccd27eba77725b7096173cf98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga55df1afccd27eba77725b7096173cf98">&#9670;&nbsp;</a></span>stdev() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T af::stdev </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for standard deviation of all elements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>standard deviation of the entire input array</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000034">Deprecated:</a></b></dt><dd>Use <a class="el" href="group__stat__func__stdev.htm#gaaebaa1553ae823fd0229fc7e6abdf350">af::stdev</a> that takes <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> instead </dd></dl>

</div>
</div>
<a id="ga2a76ba70a4a1dbb8cba7cadbffe5cfd9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2a76ba70a4a1dbb8cba7cadbffe5cfd9">&#9670;&nbsp;</a></span>stdev() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T af::stdev </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a>&#160;</td>
          <td class="paramname"><em>bias</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for standard deviation of all elements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bias</td><td>The type of bias used for variance calculation. Takes of value of type <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>standard deviation of the entire input array </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
