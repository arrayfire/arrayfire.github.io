<!-- HTML header for doxygen 1.9.3-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.3"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: image_processing/edge.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
  <!--<td id="projectalign">
   <div id="projectname">ArrayFire<span id="projectnumber">&#160;3.8.1</span>
   </div>
   <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>-->
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.3 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('image_processing_2edge_8cpp-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle"><div class="title">image_processing/edge.cpp</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/*******************************************************</span></div>
<div class="line"><span class="comment"> * Copyright (c) 2014, ArrayFire</span></div>
<div class="line"><span class="comment"> * All rights reserved.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><span class="comment"> ********************************************************/</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="arrayfire_8h.htm">arrayfire.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="util_8h.htm">af/util.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;cstdlib&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span><a class="code hl_namespace" href="namespaceaf.htm">af</a>;</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> prewitt(<a id="a0" name="a0"></a><a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;mag, <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;dir, <span class="keyword">const</span> <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;in) {</div>
<div class="line">    <span class="keyword">static</span> <span class="keywordtype">float</span> h1[] = {1, 1, 1};</div>
<div class="line">    <span class="keyword">static</span> <span class="keywordtype">float</span> h2[] = {-1, 0, 1};</div>
<div class="line">    <span class="keyword">static</span> <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> colf(3, 1, h1);</div>
<div class="line">    <span class="keyword">static</span> <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> rowf(3, 1, h2);</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Find the gradients</span></div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> Gy = <a id="a1" name="a1"></a><a class="code hl_function" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve</a>(rowf, colf, in);</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> Gx = <a class="code hl_function" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve</a>(colf, rowf, in);</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Find magnitude and direction</span></div>
<div class="line">    mag = <a id="a2" name="a2"></a><a class="code hl_function" href="group__arith__func__hypot.htm#ga64b537a8205c867f03c86124a65570a7">hypot</a>(Gx, Gy);</div>
<div class="line">    dir = <a id="a3" name="a3"></a><a class="code hl_function" href="group__arith__func__atan.htm#gacb73cfb704e7e4d49c1e8c46ff601b58">atan2</a>(Gy, Gx);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> sobelFilter(<a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;mag, <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;dir, <span class="keyword">const</span> <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;in) {</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> Gx, Gy;</div>
<div class="line">    <a id="a4" name="a4"></a><a class="code hl_function" href="group__image__func__sobel.htm#ga6c098aec0c9768f8264a95eb00deda3a">sobel</a>(Gx, Gy, in, 3);</div>
<div class="line">    <span class="comment">// Find magnitude and direction</span></div>
<div class="line">    mag = <a class="code hl_function" href="group__arith__func__hypot.htm#ga64b537a8205c867f03c86124a65570a7">hypot</a>(Gx, Gy);</div>
<div class="line">    dir = <a class="code hl_function" href="group__arith__func__atan.htm#gacb73cfb704e7e4d49c1e8c46ff601b58">atan2</a>(Gy, Gx);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> normalize(<span class="keyword">const</span> <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;in) {</div>
<div class="line">    <span class="keywordtype">float</span> mx = max&lt;float&gt;(in);</div>
<div class="line">    <span class="keywordtype">float</span> mn = min&lt;float&gt;(in);</div>
<div class="line">    <span class="keywordflow">return</span> (in - mn) / (mx - mn);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> edge(<span class="keyword">const</span> <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;in, <span class="keywordtype">int</span> method = 0) {</div>
<div class="line">    <span class="keywordtype">int</span> w = 5;</div>
<div class="line">    <span class="keywordflow">if</span> (in.dims(0) &lt; 512) w = 3;</div>
<div class="line">    <span class="keywordflow">if</span> (in.dims(0) &gt; 2048) w = 7;</div>
<div class="line"> </div>
<div class="line">    <span class="keywordtype">int</span> h = 5;</div>
<div class="line">    <span class="keywordflow">if</span> (in.dims(0) &lt; 512) h = 3;</div>
<div class="line">    <span class="keywordflow">if</span> (in.dims(0) &gt; 2048) h = 7;</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> ker    = <a id="a5" name="a5"></a><a class="code hl_function" href="group__image__func__gauss.htm#gaa5de1866bc1bf50bf5fe3cb26d4e410d">gaussianKernel</a>(w, h);</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> smooth = <a class="code hl_function" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve</a>(in, ker);</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> mag, dir;</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">switch</span> (method) {</div>
<div class="line">        <span class="keywordflow">case</span> 1: prewitt(mag, dir, smooth); <span class="keywordflow">break</span>;</div>
<div class="line">        <span class="keywordflow">case</span> 2: sobelFilter(mag, dir, smooth); <span class="keywordflow">break</span>;</div>
<div class="line">        <span class="keywordflow">case</span> 3:</div>
<div class="line">            mag = <a id="a6" name="a6"></a><a class="code hl_function" href="group__image__func__canny.htm#gae7b79d6b508a72d1ae2edf8ce408783e">canny</a>(in, <a id="a7" name="a7"></a><a class="code hl_enumvalue" href="defines_8h.htm#a179019caba59979e58ec07d81cd25ef2a66fa4273820139916620c1dbbba122a6">AF_CANNY_THRESHOLD_AUTO_OTSU</a>, 0.18, 0.54).<a id="a8" name="a8"></a><a class="code hl_function" href="classaf_1_1array.htm#a5822c6bdfbf4ff01f23c4417934b924c">as</a>(<a id="a9" name="a9"></a><a class="code hl_enumvalue" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line">            <span class="keywordflow">break</span>;</div>
<div class="line">        <span class="keywordflow">default</span>: <span class="keywordflow">throw</span> <a id="_a10" name="_a10"></a><a class="code hl_class" href="classaf_1_1exception.htm">af::exception</a>(<span class="stringliteral">&quot;Unsupported type&quot;</span>);</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">return</span> normalize(mag);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> edge() {</div>
<div class="line">    <a id="_a11" name="_a11"></a><a class="code hl_class" href="classaf_1_1Window.htm">af::Window</a> myWindow(<span class="stringliteral">&quot;Edge Dectectors&quot;</span>);</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1Window.htm">af::Window</a> myWindow2(512, 512, <span class="stringliteral">&quot;Histogram&quot;</span>);</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> in = <a id="a12" name="a12"></a><a class="code hl_function" href="group__imageio__func__load.htm#ga8bcf01ffa60bc513856d98b8a63bb12a">loadImage</a>(ASSETS_DIR <span class="stringliteral">&quot;/examples/images/trees_ctm.jpg&quot;</span>, <span class="keyword">false</span>);</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> prewitt     = edge(in, 1);</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> sobelFilter = edge(in, 2);</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> hst         = <a id="a13" name="a13"></a><a class="code hl_function" href="group__image__func__histogram.htm#gafb93ba76739ef18b3698e39c7768c90a">histogram</a>(in, 256, 0, 255);</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> cny         = edge(in, 3);</div>
<div class="line"> </div>
<div class="line">    myWindow2.setAxesTitles(<span class="stringliteral">&quot;Bins&quot;</span>, <span class="stringliteral">&quot;Frequency&quot;</span>);</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">while</span> (!myWindow.close() &amp;&amp; !myWindow2.close()) {</div>
<div class="line">        <span class="comment">/* show input, prewitt and sobel edge detectors in a grid */</span></div>
<div class="line">        myWindow.grid(2, 2);</div>
<div class="line"> </div>
<div class="line">        myWindow(0, 0).image(in / 255, <span class="stringliteral">&quot;Input Image&quot;</span>);</div>
<div class="line">        myWindow(0, 1).image(prewitt, <span class="stringliteral">&quot;Prewitt&quot;</span>);</div>
<div class="line">        myWindow(1, 0).image(sobelFilter, <span class="stringliteral">&quot;Sobel&quot;</span>);</div>
<div class="line">        myWindow(1, 1).image(cny, <span class="stringliteral">&quot;Canny&quot;</span>);</div>
<div class="line"> </div>
<div class="line">        myWindow.show();</div>
<div class="line"> </div>
<div class="line">        <span class="comment">/* show histogram on input in separate window */</span></div>
<div class="line">        myWindow2.hist(hst, 0, 255);</div>
<div class="line">    }</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[]) {</div>
<div class="line">    <span class="keywordtype">int</span> device = argc &gt; 1 ? atoi(argv[1]) : 0;</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">try</span> {</div>
<div class="line">        <a id="a14" name="a14"></a><a class="code hl_function" href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7">af::setDevice</a>(device);</div>
<div class="line">        <a id="a15" name="a15"></a><a class="code hl_function" href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a>();</div>
<div class="line"> </div>
<div class="line">        printf(<span class="stringliteral">&quot;** ArrayFire Edge Detection Demo **\n&quot;</span>);</div>
<div class="line">        edge();</div>
<div class="line"> </div>
<div class="line">    } <span class="keywordflow">catch</span> (<a class="code hl_class" href="classaf_1_1exception.htm">af::exception</a> &amp;e) {</div>
<div class="line">        fprintf(stderr, <span class="stringliteral">&quot;%s\n&quot;</span>, e.<a id="a16" name="a16"></a><a class="code hl_function" href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">what</a>());</div>
<div class="line">        <span class="keywordflow">throw</span>;</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
<div class="ttc" id="aarrayfire_8h_htm"><div class="ttname"><a href="arrayfire_8h.htm">arrayfire.h</a></div></div>
<div class="ttc" id="aclassaf_1_1Window_htm"><div class="ttname"><a href="classaf_1_1Window.htm">af::Window</a></div><div class="ttdoc">Window object to render af::arrays.</div><div class="ttdef"><b>Definition:</b> <a href="graphics_8h_source.htm#l00037">graphics.h:37</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm_a5822c6bdfbf4ff01f23c4417934b924c"><div class="ttname"><a href="classaf_1_1array.htm#a5822c6bdfbf4ff01f23c4417934b924c">af::array::as</a></div><div class="ttdeci">const array as(dtype type) const</div><div class="ttdoc">Converts the array into another type.</div></div>
<div class="ttc" id="aclassaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00021">exception.h:22</a></div></div>
<div class="ttc" id="aclassaf_1_1exception_htm_aa884ff67408851f00e50cf971a4dfd05"><div class="ttname"><a href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">af::exception::what</a></div><div class="ttdeci">virtual const char * what() const</div><div class="ttdoc">Returns an error message for the exception in a string format.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00046">exception.h:46</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div><div class="ttdeci">@ f32</div><div class="ttdoc">32-bit floating point values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00211">defines.h:211</a></div></div>
<div class="ttc" id="adefines_8h_htm_a179019caba59979e58ec07d81cd25ef2a66fa4273820139916620c1dbbba122a6"><div class="ttname"><a href="defines_8h.htm#a179019caba59979e58ec07d81cd25ef2a66fa4273820139916620c1dbbba122a6">AF_CANNY_THRESHOLD_AUTO_OTSU</a></div><div class="ttdeci">@ AF_CANNY_THRESHOLD_AUTO_OTSU</div><div class="ttdoc">Determine canny algorithm thresholds using Otsu algorithm.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00485">defines.h:484</a></div></div>
<div class="ttc" id="agroup__arith__func__atan_htm_gacb73cfb704e7e4d49c1e8c46ff601b58"><div class="ttname"><a href="group__arith__func__atan.htm#gacb73cfb704e7e4d49c1e8c46ff601b58">af::atan2</a></div><div class="ttdeci">AFAPI array atan2(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">C++ Interface for arc tan of two arrays.</div></div>
<div class="ttc" id="agroup__arith__func__hypot_htm_ga64b537a8205c867f03c86124a65570a7"><div class="ttname"><a href="group__arith__func__hypot.htm#ga64b537a8205c867f03c86124a65570a7">af::hypot</a></div><div class="ttdeci">AFAPI array hypot(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">C++ Interface for getting length of hypotenuse of two inputs.</div></div>
<div class="ttc" id="agroup__device__func__info_htm_ga1360e706b046b1c5b299bd6e689a0276"><div class="ttname"><a href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a></div><div class="ttdeci">AFAPI void info()</div></div>
<div class="ttc" id="agroup__device__func__set_htm_gafbb906ca5b89ec43fdb0e3a14d1df1e7"><div class="ttname"><a href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7">af::setDevice</a></div><div class="ttdeci">AFAPI void setDevice(const int device)</div><div class="ttdoc">Sets the current device.</div></div>
<div class="ttc" id="agroup__image__func__canny_htm_gae7b79d6b508a72d1ae2edf8ce408783e"><div class="ttname"><a href="group__image__func__canny.htm#gae7b79d6b508a72d1ae2edf8ce408783e">af::canny</a></div><div class="ttdeci">AFAPI array canny(const array &amp;in, const cannyThreshold thresholdType, const float lowThresholdRatio, const float highThresholdRatio, const unsigned sobelWindow=3, const bool isFast=false)</div><div class="ttdoc">C++ Interface for canny edge detector.</div></div>
<div class="ttc" id="agroup__image__func__gauss_htm_gaa5de1866bc1bf50bf5fe3cb26d4e410d"><div class="ttname"><a href="group__image__func__gauss.htm#gaa5de1866bc1bf50bf5fe3cb26d4e410d">af::gaussianKernel</a></div><div class="ttdeci">AFAPI array gaussianKernel(const int rows, const int cols, const double sig_r=0, const double sig_c=0)</div><div class="ttdoc">C++ Interface for generating gausian kernels.</div></div>
<div class="ttc" id="agroup__image__func__histogram_htm_gafb93ba76739ef18b3698e39c7768c90a"><div class="ttname"><a href="group__image__func__histogram.htm#gafb93ba76739ef18b3698e39c7768c90a">af::histogram</a></div><div class="ttdeci">AFAPI array histogram(const array &amp;in, const unsigned nbins, const double minval, const double maxval)</div><div class="ttdoc">C++ Interface for histogram.</div></div>
<div class="ttc" id="agroup__image__func__sobel_htm_ga6c098aec0c9768f8264a95eb00deda3a"><div class="ttname"><a href="group__image__func__sobel.htm#ga6c098aec0c9768f8264a95eb00deda3a">af::sobel</a></div><div class="ttdeci">AFAPI void sobel(array &amp;dx, array &amp;dy, const array &amp;img, const unsigned ker_size=3)</div><div class="ttdoc">C++ Interface for extracting sobel gradients.</div></div>
<div class="ttc" id="agroup__imageio__func__load_htm_ga8bcf01ffa60bc513856d98b8a63bb12a"><div class="ttname"><a href="group__imageio__func__load.htm#ga8bcf01ffa60bc513856d98b8a63bb12a">af::loadImage</a></div><div class="ttdeci">AFAPI array loadImage(const char *filename, const bool is_color=false)</div><div class="ttdoc">C++ Interface for loading an image.</div></div>
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
<div class="ttc" id="agroup__signal__func__convolve_htm_gae79b64c8b0d6a06309e8b67bf89cf6c9"><div class="ttname"><a href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">af::convolve</a></div><div class="ttdeci">AFAPI array convolve(const array &amp;signal, const array &amp;filter, const convMode mode=AF_CONV_DEFAULT, const convDomain domain=AF_CONV_AUTO)</div><div class="ttdoc">C++ Interface for convolution any(one through three) dimensional signals.</div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:15</a></div></div>
<div class="ttc" id="autil_8h_htm"><div class="ttname"><a href="util_8h.htm">util.h</a></div></div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Thu Feb 24 2022 14:12:32 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.3 </li>
    </ul>
</div>
</body>
</html>
