<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: operator=</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__array__mem__operator__eq.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle"><div class="title">operator=<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__array__mat.htm">Functions to create and modify Arrays</a> &raquo; <a class="el" href="group__index__mat.htm">Assignment &amp; Indexing operation on arrays</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Assignes the value(s) of val to the elements of the <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a>.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="memitem:ga44408990fbf862a5bfcb540332669bdb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga44408990fbf862a5bfcb540332669bdb">operator=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;val)</td></tr>
<tr class="memdesc:ga44408990fbf862a5bfcb540332669bdb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#ga44408990fbf862a5bfcb540332669bdb">More...</a><br /></td></tr>
<tr class="separator:ga44408990fbf862a5bfcb540332669bdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1b5613654b69c2b85a29db33c5aa821d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga1b5613654b69c2b85a29db33c5aa821d">operator=</a> (const double &amp;val)</td></tr>
<tr class="memdesc:ga1b5613654b69c2b85a29db33c5aa821d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.   <a href="group__array__mem__operator__eq.htm#ga1b5613654b69c2b85a29db33c5aa821d">More...</a><br /></td></tr>
<tr class="separator:ga1b5613654b69c2b85a29db33c5aa821d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4708f6ac601c0158252ff4125d48df6e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga4708f6ac601c0158252ff4125d48df6e">operator=</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;val)</td></tr>
<tr class="memdesc:ga4708f6ac601c0158252ff4125d48df6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.   <a href="group__array__mem__operator__eq.htm#ga4708f6ac601c0158252ff4125d48df6e">More...</a><br /></td></tr>
<tr class="separator:ga4708f6ac601c0158252ff4125d48df6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1b8011aba3399f25a35129e3b6b221fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga1b8011aba3399f25a35129e3b6b221fa">operator=</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;val)</td></tr>
<tr class="memdesc:ga1b8011aba3399f25a35129e3b6b221fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.   <a href="group__array__mem__operator__eq.htm#ga1b8011aba3399f25a35129e3b6b221fa">More...</a><br /></td></tr>
<tr class="separator:ga1b8011aba3399f25a35129e3b6b221fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga83b7b73fd4b949d165713924d223309d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga83b7b73fd4b949d165713924d223309d">operator=</a> (const float &amp;val)</td></tr>
<tr class="memdesc:ga83b7b73fd4b949d165713924d223309d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.   <a href="group__array__mem__operator__eq.htm#ga83b7b73fd4b949d165713924d223309d">More...</a><br /></td></tr>
<tr class="separator:ga83b7b73fd4b949d165713924d223309d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga049bef9728b657a2d9ab557484719da2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga049bef9728b657a2d9ab557484719da2">operator=</a> (const int &amp;val)</td></tr>
<tr class="memdesc:ga049bef9728b657a2d9ab557484719da2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.   <a href="group__array__mem__operator__eq.htm#ga049bef9728b657a2d9ab557484719da2">More...</a><br /></td></tr>
<tr class="separator:ga049bef9728b657a2d9ab557484719da2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga64b30d0491617033d15db7fcc8bead3c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga64b30d0491617033d15db7fcc8bead3c">operator=</a> (const unsigned &amp;val)</td></tr>
<tr class="memdesc:ga64b30d0491617033d15db7fcc8bead3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.   <a href="group__array__mem__operator__eq.htm#ga64b30d0491617033d15db7fcc8bead3c">More...</a><br /></td></tr>
<tr class="separator:ga64b30d0491617033d15db7fcc8bead3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0b05ab7a6c5c90264499f9214f1ed7f6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga0b05ab7a6c5c90264499f9214f1ed7f6">operator=</a> (const bool &amp;val)</td></tr>
<tr class="memdesc:ga0b05ab7a6c5c90264499f9214f1ed7f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.   <a href="group__array__mem__operator__eq.htm#ga0b05ab7a6c5c90264499f9214f1ed7f6">More...</a><br /></td></tr>
<tr class="separator:ga0b05ab7a6c5c90264499f9214f1ed7f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f527a51bfdce80d224f90e4b148f582"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga9f527a51bfdce80d224f90e4b148f582">operator=</a> (const char &amp;val)</td></tr>
<tr class="memdesc:ga9f527a51bfdce80d224f90e4b148f582"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.   <a href="group__array__mem__operator__eq.htm#ga9f527a51bfdce80d224f90e4b148f582">More...</a><br /></td></tr>
<tr class="separator:ga9f527a51bfdce80d224f90e4b148f582"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3c920f2ea1e0db848bcba120cff763ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga3c920f2ea1e0db848bcba120cff763ca">operator=</a> (const unsigned char &amp;val)</td></tr>
<tr class="memdesc:ga3c920f2ea1e0db848bcba120cff763ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.   <a href="group__array__mem__operator__eq.htm#ga3c920f2ea1e0db848bcba120cff763ca">More...</a><br /></td></tr>
<tr class="separator:ga3c920f2ea1e0db848bcba120cff763ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae81fa5b231119240a78f7ec745be62d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#gae81fa5b231119240a78f7ec745be62d1">operator=</a> (const long &amp;val)</td></tr>
<tr class="memdesc:gae81fa5b231119240a78f7ec745be62d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.   <a href="group__array__mem__operator__eq.htm#gae81fa5b231119240a78f7ec745be62d1">More...</a><br /></td></tr>
<tr class="separator:gae81fa5b231119240a78f7ec745be62d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaec96cc307af46a8d9eb08d61583f14ec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#gaec96cc307af46a8d9eb08d61583f14ec">operator=</a> (const unsigned long &amp;val)</td></tr>
<tr class="memdesc:gaec96cc307af46a8d9eb08d61583f14ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.   <a href="group__array__mem__operator__eq.htm#gaec96cc307af46a8d9eb08d61583f14ec">More...</a><br /></td></tr>
<tr class="separator:gaec96cc307af46a8d9eb08d61583f14ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad5d52fd08d3ff1b3658f7550de1a8c4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#gad5d52fd08d3ff1b3658f7550de1a8c4f">operator=</a> (const long long &amp;val)</td></tr>
<tr class="memdesc:gad5d52fd08d3ff1b3658f7550de1a8c4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.   <a href="group__array__mem__operator__eq.htm#gad5d52fd08d3ff1b3658f7550de1a8c4f">More...</a><br /></td></tr>
<tr class="separator:gad5d52fd08d3ff1b3658f7550de1a8c4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga27e9106b8e81525c08e84745b78665eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga27e9106b8e81525c08e84745b78665eb">operator=</a> (const unsigned long long &amp;val)</td></tr>
<tr class="separator:ga27e9106b8e81525c08e84745b78665eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac3fc8309b4bce2905a28f4325c186bfb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#gac3fc8309b4bce2905a28f4325c186bfb">operator=</a> (const short &amp;val)</td></tr>
<tr class="memdesc:gac3fc8309b4bce2905a28f4325c186bfb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.   <a href="group__array__mem__operator__eq.htm#gac3fc8309b4bce2905a28f4325c186bfb">More...</a><br /></td></tr>
<tr class="separator:gac3fc8309b4bce2905a28f4325c186bfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf71eb6bdb9834156c0d8aa2f3e77e6bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#gaf71eb6bdb9834156c0d8aa2f3e77e6bb">operator=</a> (const unsigned short &amp;val)</td></tr>
<tr class="separator:gaf71eb6bdb9834156c0d8aa2f3e77e6bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Assignes the value(s) of val to the elements of the <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a>. </p>
<p >Assigns a value</p>
<hr  />
 <h2 class="groupheader">Function Documentation</h2>
<a id="ga44408990fbf862a5bfcb540332669bdb" name="ga44408990fbf862a5bfcb540332669bdb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga44408990fbf862a5bfcb540332669bdb">&#9670;&#160;</a></span>operator=() <span class="overload">[1/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side. </dd></dl>

</div>
</div>
<a id="ga0b05ab7a6c5c90264499f9214f1ed7f6" name="ga0b05ab7a6c5c90264499f9214f1ed7f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0b05ab7a6c5c90264499f9214f1ed7f6">&#9670;&#160;</a></span>operator=() <span class="overload">[2/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side.   </dd></dl>

</div>
</div>
<a id="ga4708f6ac601c0158252ff4125d48df6e" name="ga4708f6ac601c0158252ff4125d48df6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4708f6ac601c0158252ff4125d48df6e">&#9670;&#160;</a></span>operator=() <span class="overload">[3/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side.   </dd></dl>

</div>
</div>
<a id="ga1b8011aba3399f25a35129e3b6b221fa" name="ga1b8011aba3399f25a35129e3b6b221fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1b8011aba3399f25a35129e3b6b221fa">&#9670;&#160;</a></span>operator=() <span class="overload">[4/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side.   </dd></dl>

</div>
</div>
<a id="ga9f527a51bfdce80d224f90e4b148f582" name="ga9f527a51bfdce80d224f90e4b148f582"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9f527a51bfdce80d224f90e4b148f582">&#9670;&#160;</a></span>operator=() <span class="overload">[5/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side.   </dd></dl>

</div>
</div>
<a id="ga1b5613654b69c2b85a29db33c5aa821d" name="ga1b5613654b69c2b85a29db33c5aa821d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1b5613654b69c2b85a29db33c5aa821d">&#9670;&#160;</a></span>operator=() <span class="overload">[6/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side.   </dd></dl>

</div>
</div>
<a id="ga83b7b73fd4b949d165713924d223309d" name="ga83b7b73fd4b949d165713924d223309d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga83b7b73fd4b949d165713924d223309d">&#9670;&#160;</a></span>operator=() <span class="overload">[7/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side.   </dd></dl>

</div>
</div>
<a id="ga049bef9728b657a2d9ab557484719da2" name="ga049bef9728b657a2d9ab557484719da2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga049bef9728b657a2d9ab557484719da2">&#9670;&#160;</a></span>operator=() <span class="overload">[8/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side.   </dd></dl>

</div>
</div>
<a id="gae81fa5b231119240a78f7ec745be62d1" name="gae81fa5b231119240a78f7ec745be62d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae81fa5b231119240a78f7ec745be62d1">&#9670;&#160;</a></span>operator=() <span class="overload">[9/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side.   </dd></dl>

</div>
</div>
<a id="gad5d52fd08d3ff1b3658f7550de1a8c4f" name="gad5d52fd08d3ff1b3658f7550de1a8c4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad5d52fd08d3ff1b3658f7550de1a8c4f">&#9670;&#160;</a></span>operator=() <span class="overload">[10/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side.   </dd></dl>

</div>
</div>
<a id="gac3fc8309b4bce2905a28f4325c186bfb" name="gac3fc8309b4bce2905a28f4325c186bfb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac3fc8309b4bce2905a28f4325c186bfb">&#9670;&#160;</a></span>operator=() <span class="overload">[11/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side.   </dd></dl>

</div>
</div>
<a id="ga64b30d0491617033d15db7fcc8bead3c" name="ga64b30d0491617033d15db7fcc8bead3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga64b30d0491617033d15db7fcc8bead3c">&#9670;&#160;</a></span>operator=() <span class="overload">[12/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side.   </dd></dl>

</div>
</div>
<a id="ga3c920f2ea1e0db848bcba120cff763ca" name="ga3c920f2ea1e0db848bcba120cff763ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3c920f2ea1e0db848bcba120cff763ca">&#9670;&#160;</a></span>operator=() <span class="overload">[13/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side.   </dd></dl>

</div>
</div>
<a id="gaec96cc307af46a8d9eb08d61583f14ec" name="gaec96cc307af46a8d9eb08d61583f14ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaec96cc307af46a8d9eb08d61583f14ec">&#9670;&#160;</a></span>operator=() <span class="overload">[14/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignes the value(s) of val to the elements of the array.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value to be assigned to the /ref <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container.">af::array</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This is a copy on write operation. The copy only occurs when the operator() is used on the left hand side.   </dd></dl>

</div>
</div>
<a id="ga27e9106b8e81525c08e84745b78665eb" name="ga27e9106b8e81525c08e84745b78665eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga27e9106b8e81525c08e84745b78665eb">&#9670;&#160;</a></span>operator=() <span class="overload">[15/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaf71eb6bdb9834156c0d8aa2f3e77e6bb" name="gaf71eb6bdb9834156c0d8aa2f3e77e6bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf71eb6bdb9834156c0d8aa2f3e77e6bb">&#9670;&#160;</a></span>operator=() <span class="overload">[16/16]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Wed Aug 30 2023 15:41:57 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
