<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: le</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__arith__func__le.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">le<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__mathfunc__mat.htm">Mathematical functions</a> &raquo; <a class="el" href="group__logic__mat.htm">Logical operations</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Less than or equal to, an elementwise comparison of two arrays.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gad5535ce64dbed46d0773fd494e84e922"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gad5535ce64dbed46d0773fd494e84e922">af_le</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:gad5535ce64dbed46d0773fd494e84e922"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface to perform a less-than-or-equal comparison between corresponding elements of two arrays.  <a href="group__arith__func__le.htm#gad5535ce64dbed46d0773fd494e84e922">More...</a><br /></td></tr>
<tr class="separator:gad5535ce64dbed46d0773fd494e84e922"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga63ba21d149d3978f11d95a6c31ed727c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga63ba21d149d3978f11d95a6c31ed727c">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga63ba21d149d3978f11d95a6c31ed727c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga63ba21d149d3978f11d95a6c31ed727c">More...</a><br /></td></tr>
<tr class="separator:ga63ba21d149d3978f11d95a6c31ed727c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d9c70991d468b40a8378c7f41139b16"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga5d9c70991d468b40a8378c7f41139b16">operator&lt;=</a> (const bool &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga5d9c70991d468b40a8378c7f41139b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga5d9c70991d468b40a8378c7f41139b16">More...</a><br /></td></tr>
<tr class="separator:ga5d9c70991d468b40a8378c7f41139b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01cecc3469325f615318e1299870acd2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga01cecc3469325f615318e1299870acd2">operator&lt;=</a> (const int &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga01cecc3469325f615318e1299870acd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga01cecc3469325f615318e1299870acd2">More...</a><br /></td></tr>
<tr class="separator:ga01cecc3469325f615318e1299870acd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11dbf083254c2059615a2044fa0ce706"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga11dbf083254c2059615a2044fa0ce706">operator&lt;=</a> (const unsigned &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga11dbf083254c2059615a2044fa0ce706"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga11dbf083254c2059615a2044fa0ce706">More...</a><br /></td></tr>
<tr class="separator:ga11dbf083254c2059615a2044fa0ce706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga16026d885c53b5d400d3179117e92a38"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga16026d885c53b5d400d3179117e92a38">operator&lt;=</a> (const char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga16026d885c53b5d400d3179117e92a38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga16026d885c53b5d400d3179117e92a38">More...</a><br /></td></tr>
<tr class="separator:ga16026d885c53b5d400d3179117e92a38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf7a78edce0757c28f63332140e1269f7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gaf7a78edce0757c28f63332140e1269f7">operator&lt;=</a> (const unsigned char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaf7a78edce0757c28f63332140e1269f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#gaf7a78edce0757c28f63332140e1269f7">More...</a><br /></td></tr>
<tr class="separator:gaf7a78edce0757c28f63332140e1269f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad7c705798e98fc10fb10ecc42fcdda81"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gad7c705798e98fc10fb10ecc42fcdda81">operator&lt;=</a> (const long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gad7c705798e98fc10fb10ecc42fcdda81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#gad7c705798e98fc10fb10ecc42fcdda81">More...</a><br /></td></tr>
<tr class="separator:gad7c705798e98fc10fb10ecc42fcdda81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6e72c52ee5ff9476ba1618f2ec01027d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga6e72c52ee5ff9476ba1618f2ec01027d">operator&lt;=</a> (const unsigned long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga6e72c52ee5ff9476ba1618f2ec01027d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga6e72c52ee5ff9476ba1618f2ec01027d">More...</a><br /></td></tr>
<tr class="separator:ga6e72c52ee5ff9476ba1618f2ec01027d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5e267da65d60bbd710ee7853d2877302"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga5e267da65d60bbd710ee7853d2877302">operator&lt;=</a> (const long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga5e267da65d60bbd710ee7853d2877302"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga5e267da65d60bbd710ee7853d2877302">More...</a><br /></td></tr>
<tr class="separator:ga5e267da65d60bbd710ee7853d2877302"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae791686139c895ab725e39d19866ec47"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gae791686139c895ab725e39d19866ec47">operator&lt;=</a> (const unsigned long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gae791686139c895ab725e39d19866ec47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#gae791686139c895ab725e39d19866ec47">More...</a><br /></td></tr>
<tr class="separator:gae791686139c895ab725e39d19866ec47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5c654b369a3122fc8a25ec41f2a9dc89"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga5c654b369a3122fc8a25ec41f2a9dc89">operator&lt;=</a> (const double &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga5c654b369a3122fc8a25ec41f2a9dc89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga5c654b369a3122fc8a25ec41f2a9dc89">More...</a><br /></td></tr>
<tr class="separator:ga5c654b369a3122fc8a25ec41f2a9dc89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab72cf6eaaae723619c480c4b1cab5a3d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gab72cf6eaaae723619c480c4b1cab5a3d">operator&lt;=</a> (const float &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gab72cf6eaaae723619c480c4b1cab5a3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#gab72cf6eaaae723619c480c4b1cab5a3d">More...</a><br /></td></tr>
<tr class="separator:gab72cf6eaaae723619c480c4b1cab5a3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4412b316eff10a690cae00f194d2b64b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga4412b316eff10a690cae00f194d2b64b">operator&lt;=</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga4412b316eff10a690cae00f194d2b64b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga4412b316eff10a690cae00f194d2b64b">More...</a><br /></td></tr>
<tr class="separator:ga4412b316eff10a690cae00f194d2b64b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fa57ea4474c3fe5d84ad8075d5963ed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga9fa57ea4474c3fe5d84ad8075d5963ed">operator&lt;=</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga9fa57ea4474c3fe5d84ad8075d5963ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga9fa57ea4474c3fe5d84ad8075d5963ed">More...</a><br /></td></tr>
<tr class="separator:ga9fa57ea4474c3fe5d84ad8075d5963ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8131193b7b8e43d8c79967ae179c4c1c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga8131193b7b8e43d8c79967ae179c4c1c">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga8131193b7b8e43d8c79967ae179c4c1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga8131193b7b8e43d8c79967ae179c4c1c">More...</a><br /></td></tr>
<tr class="separator:ga8131193b7b8e43d8c79967ae179c4c1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga54d2b06c2ee202e59443f5083ea63a69"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga54d2b06c2ee202e59443f5083ea63a69">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga54d2b06c2ee202e59443f5083ea63a69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga54d2b06c2ee202e59443f5083ea63a69">More...</a><br /></td></tr>
<tr class="separator:ga54d2b06c2ee202e59443f5083ea63a69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d84d5c4bf71d040e86c6c4164775c4d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga3d84d5c4bf71d040e86c6c4164775c4d">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga3d84d5c4bf71d040e86c6c4164775c4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga3d84d5c4bf71d040e86c6c4164775c4d">More...</a><br /></td></tr>
<tr class="separator:ga3d84d5c4bf71d040e86c6c4164775c4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga366678df011a2d02349b16cf109b5125"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga366678df011a2d02349b16cf109b5125">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga366678df011a2d02349b16cf109b5125"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga366678df011a2d02349b16cf109b5125">More...</a><br /></td></tr>
<tr class="separator:ga366678df011a2d02349b16cf109b5125"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga60134cf5915f9f6f685e4eac9ef8f002"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga60134cf5915f9f6f685e4eac9ef8f002">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga60134cf5915f9f6f685e4eac9ef8f002"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga60134cf5915f9f6f685e4eac9ef8f002">More...</a><br /></td></tr>
<tr class="separator:ga60134cf5915f9f6f685e4eac9ef8f002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65ee6929c569504ca3b525d0aa0dd40a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga65ee6929c569504ca3b525d0aa0dd40a">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga65ee6929c569504ca3b525d0aa0dd40a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga65ee6929c569504ca3b525d0aa0dd40a">More...</a><br /></td></tr>
<tr class="separator:ga65ee6929c569504ca3b525d0aa0dd40a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga26c0148b326d3437e96d24bb982053de"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga26c0148b326d3437e96d24bb982053de">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga26c0148b326d3437e96d24bb982053de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga26c0148b326d3437e96d24bb982053de">More...</a><br /></td></tr>
<tr class="separator:ga26c0148b326d3437e96d24bb982053de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga18434f653ec6f2a0995a1505472f851c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga18434f653ec6f2a0995a1505472f851c">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga18434f653ec6f2a0995a1505472f851c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga18434f653ec6f2a0995a1505472f851c">More...</a><br /></td></tr>
<tr class="separator:ga18434f653ec6f2a0995a1505472f851c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga282fe76d8a162246c4190564be1dbec4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga282fe76d8a162246c4190564be1dbec4">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga282fe76d8a162246c4190564be1dbec4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga282fe76d8a162246c4190564be1dbec4">More...</a><br /></td></tr>
<tr class="separator:ga282fe76d8a162246c4190564be1dbec4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9ad2828896355dce54f394cbecb975d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga9ad2828896355dce54f394cbecb975d2">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga9ad2828896355dce54f394cbecb975d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga9ad2828896355dce54f394cbecb975d2">More...</a><br /></td></tr>
<tr class="separator:ga9ad2828896355dce54f394cbecb975d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga315f98c5b13cc9621bc3d8310f4aa35b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga315f98c5b13cc9621bc3d8310f4aa35b">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga315f98c5b13cc9621bc3d8310f4aa35b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga315f98c5b13cc9621bc3d8310f4aa35b">More...</a><br /></td></tr>
<tr class="separator:ga315f98c5b13cc9621bc3d8310f4aa35b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac19668bd9c248270f14a217d9524d741"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gac19668bd9c248270f14a217d9524d741">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;rhs)</td></tr>
<tr class="memdesc:gac19668bd9c248270f14a217d9524d741"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#gac19668bd9c248270f14a217d9524d741">More...</a><br /></td></tr>
<tr class="separator:gac19668bd9c248270f14a217d9524d741"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00e4d48d2fadb11d983d6a8e0000378f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga00e4d48d2fadb11d983d6a8e0000378f">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;rhs)</td></tr>
<tr class="separator:ga00e4d48d2fadb11d983d6a8e0000378f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2274d84d94661acdc2193a92e1f05a66"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga2274d84d94661acdc2193a92e1f05a66">operator&lt;=</a> (const short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga2274d84d94661acdc2193a92e1f05a66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga2274d84d94661acdc2193a92e1f05a66">More...</a><br /></td></tr>
<tr class="separator:ga2274d84d94661acdc2193a92e1f05a66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f6a2c06c7e96abc55a00e250702fb51"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga5f6a2c06c7e96abc55a00e250702fb51">operator&lt;=</a> (const unsigned short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga5f6a2c06c7e96abc55a00e250702fb51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga5f6a2c06c7e96abc55a00e250702fb51">More...</a><br /></td></tr>
<tr class="separator:ga5f6a2c06c7e96abc55a00e250702fb51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae03c6d9dcaa91051947708890ece8fa1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gae03c6d9dcaa91051947708890ece8fa1">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:gae03c6d9dcaa91051947708890ece8fa1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#gae03c6d9dcaa91051947708890ece8fa1">More...</a><br /></td></tr>
<tr class="separator:gae03c6d9dcaa91051947708890ece8fa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab4d7064cd2160d431502269483900c75"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gab4d7064cd2160d431502269483900c75">operator&lt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gab4d7064cd2160d431502269483900c75"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Less than or equal to, an elementwise comparison of two arrays. </p>
<p >Check if the elements of one array are less than or equal to those of another array. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="gad5535ce64dbed46d0773fd494e84e922" name="gad5535ce64dbed46d0773fd494e84e922"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad5535ce64dbed46d0773fd494e84e922">&#9670;&#160;</a></span>af_le()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_le </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>batch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface to perform a less-than-or-equal comparison between corresponding elements of two arrays. </p>
<p >Output type is b8.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>1's where <code>lhs &lt;= rhs</code>, else 0's </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>first input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>second input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">batch</td><td>batch mode </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>, if function returns successfully, else an <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> code is given </dd></dl>

</div>
</div>
<a id="ga63ba21d149d3978f11d95a6c31ed727c" name="ga63ba21d149d3978f11d95a6c31ed727c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga63ba21d149d3978f11d95a6c31ed727c">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[1/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element </dd></dl>

</div>
</div>
<a id="ga8131193b7b8e43d8c79967ae179c4c1c" name="ga8131193b7b8e43d8c79967ae179c4c1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8131193b7b8e43d8c79967ae179c4c1c">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[2/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga00e4d48d2fadb11d983d6a8e0000378f" name="ga00e4d48d2fadb11d983d6a8e0000378f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga00e4d48d2fadb11d983d6a8e0000378f">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[3/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gac19668bd9c248270f14a217d9524d741" name="gac19668bd9c248270f14a217d9524d741"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac19668bd9c248270f14a217d9524d741">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[4/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga366678df011a2d02349b16cf109b5125" name="ga366678df011a2d02349b16cf109b5125"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga366678df011a2d02349b16cf109b5125">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[5/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga9ad2828896355dce54f394cbecb975d2" name="ga9ad2828896355dce54f394cbecb975d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9ad2828896355dce54f394cbecb975d2">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[6/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga315f98c5b13cc9621bc3d8310f4aa35b" name="ga315f98c5b13cc9621bc3d8310f4aa35b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga315f98c5b13cc9621bc3d8310f4aa35b">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[7/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga54d2b06c2ee202e59443f5083ea63a69" name="ga54d2b06c2ee202e59443f5083ea63a69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga54d2b06c2ee202e59443f5083ea63a69">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[8/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga65ee6929c569504ca3b525d0aa0dd40a" name="ga65ee6929c569504ca3b525d0aa0dd40a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga65ee6929c569504ca3b525d0aa0dd40a">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[9/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga18434f653ec6f2a0995a1505472f851c" name="ga18434f653ec6f2a0995a1505472f851c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga18434f653ec6f2a0995a1505472f851c">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[10/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="gae03c6d9dcaa91051947708890ece8fa1" name="gae03c6d9dcaa91051947708890ece8fa1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae03c6d9dcaa91051947708890ece8fa1">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[11/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga3d84d5c4bf71d040e86c6c4164775c4d" name="ga3d84d5c4bf71d040e86c6c4164775c4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3d84d5c4bf71d040e86c6c4164775c4d">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[12/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga60134cf5915f9f6f685e4eac9ef8f002" name="ga60134cf5915f9f6f685e4eac9ef8f002"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga60134cf5915f9f6f685e4eac9ef8f002">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[13/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga26c0148b326d3437e96d24bb982053de" name="ga26c0148b326d3437e96d24bb982053de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga26c0148b326d3437e96d24bb982053de">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[14/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga282fe76d8a162246c4190564be1dbec4" name="ga282fe76d8a162246c4190564be1dbec4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga282fe76d8a162246c4190564be1dbec4">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[15/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="gab4d7064cd2160d431502269483900c75" name="gab4d7064cd2160d431502269483900c75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab4d7064cd2160d431502269483900c75">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[16/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga5d9c70991d468b40a8378c7f41139b16" name="ga5d9c70991d468b40a8378c7f41139b16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5d9c70991d468b40a8378c7f41139b16">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[17/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga9fa57ea4474c3fe5d84ad8075d5963ed" name="ga9fa57ea4474c3fe5d84ad8075d5963ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9fa57ea4474c3fe5d84ad8075d5963ed">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[18/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga4412b316eff10a690cae00f194d2b64b" name="ga4412b316eff10a690cae00f194d2b64b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4412b316eff10a690cae00f194d2b64b">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[19/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga16026d885c53b5d400d3179117e92a38" name="ga16026d885c53b5d400d3179117e92a38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga16026d885c53b5d400d3179117e92a38">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[20/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga5c654b369a3122fc8a25ec41f2a9dc89" name="ga5c654b369a3122fc8a25ec41f2a9dc89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5c654b369a3122fc8a25ec41f2a9dc89">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[21/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="gab72cf6eaaae723619c480c4b1cab5a3d" name="gab72cf6eaaae723619c480c4b1cab5a3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab72cf6eaaae723619c480c4b1cab5a3d">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[22/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga01cecc3469325f615318e1299870acd2" name="ga01cecc3469325f615318e1299870acd2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga01cecc3469325f615318e1299870acd2">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[23/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="gad7c705798e98fc10fb10ecc42fcdda81" name="gad7c705798e98fc10fb10ecc42fcdda81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad7c705798e98fc10fb10ecc42fcdda81">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[24/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga5e267da65d60bbd710ee7853d2877302" name="ga5e267da65d60bbd710ee7853d2877302"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5e267da65d60bbd710ee7853d2877302">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[25/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga2274d84d94661acdc2193a92e1f05a66" name="ga2274d84d94661acdc2193a92e1f05a66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2274d84d94661acdc2193a92e1f05a66">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[26/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga11dbf083254c2059615a2044fa0ce706" name="ga11dbf083254c2059615a2044fa0ce706"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga11dbf083254c2059615a2044fa0ce706">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[27/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="gaf7a78edce0757c28f63332140e1269f7" name="gaf7a78edce0757c28f63332140e1269f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf7a78edce0757c28f63332140e1269f7">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[28/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga6e72c52ee5ff9476ba1618f2ec01027d" name="ga6e72c52ee5ff9476ba1618f2ec01027d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6e72c52ee5ff9476ba1618f2ec01027d">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[29/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="gae791686139c895ab725e39d19866ec47" name="gae791686139c895ab725e39d19866ec47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae791686139c895ab725e39d19866ec47">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[30/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga5f6a2c06c7e96abc55a00e250702fb51" name="ga5f6a2c06c7e96abc55a00e250702fb51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5f6a2c06c7e96abc55a00e250702fb51">&#9670;&#160;</a></span>operator&lt;=() <span class="overload">[31/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an lower or equal operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &lt;= operation performed on each element   </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Wed Aug 30 2023 15:41:57 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
