<!-- HTML header for doxygen 1.9.3-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.3"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: convolve3</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
  <!--<td id="projectalign">
   <div id="projectname">ArrayFire<span id="projectnumber">&#160;3.8.1</span>
   </div>
   <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>-->
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.3 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__signal__func__convolve3.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">convolve3<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__signal__mat.htm">Signal Processing</a> &raquo; <a class="el" href="group__convolve__mat.htm">Convolutions</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Convolution Integral for three dimensional data.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga612982eb8719085e327ca764e4f728d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve3.htm#ga612982eb8719085e327ca764e4f728d6">convolve3</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;signal, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;<a class="el" href="namespaceaf.htm#a53c4f9a4b5440458bffe355803514c90">filter</a>, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">convMode</a> mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>, const <a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3db">convDomain</a> domain=<a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dbae105d11695ba3a2287e32c552d3567dd">AF_CONV_AUTO</a>)</td></tr>
<tr class="memdesc:ga612982eb8719085e327ca764e4f728d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on three dimensional signals.  <a href="group__signal__func__convolve3.htm#ga612982eb8719085e327ca764e4f728d6">More...</a><br /></td></tr>
<tr class="separator:ga612982eb8719085e327ca764e4f728d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f8961d19f4fba3e585a14e3864fdd2f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve3.htm#ga1f8961d19f4fba3e585a14e3864fdd2f">fftConvolve3</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;signal, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;<a class="el" href="namespaceaf.htm#a53c4f9a4b5440458bffe355803514c90">filter</a>, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">convMode</a> mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>)</td></tr>
<tr class="memdesc:ga1f8961d19f4fba3e585a14e3864fdd2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on 3D signals using FFT.  <a href="group__signal__func__convolve3.htm#ga1f8961d19f4fba3e585a14e3864fdd2f">More...</a><br /></td></tr>
<tr class="separator:ga1f8961d19f4fba3e585a14e3864fdd2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab87335bb7ca6ce057811248c4c641182"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve3.htm#gab87335bb7ca6ce057811248c4c641182">af_convolve3</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode, <a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3db">af_conv_domain</a> domain)</td></tr>
<tr class="memdesc:gab87335bb7ca6ce057811248c4c641182"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for convolution on three dimensional signals.  <a href="group__signal__func__convolve3.htm#gab87335bb7ca6ce057811248c4c641182">More...</a><br /></td></tr>
<tr class="separator:gab87335bb7ca6ce057811248c4c641182"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75f2ee15302b8aa7fa2ba0f5589af00e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve3.htm#ga75f2ee15302b8aa7fa2ba0f5589af00e">af_fft_convolve3</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode)</td></tr>
<tr class="memdesc:ga75f2ee15302b8aa7fa2ba0f5589af00e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for convolution on 3D signals using FFT.  <a href="group__signal__func__convolve3.htm#ga75f2ee15302b8aa7fa2ba0f5589af00e">More...</a><br /></td></tr>
<tr class="separator:ga75f2ee15302b8aa7fa2ba0f5589af00e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Convolution Integral for three dimensional data. </p>
<p >A convolution is a common operation between a source array, a, and a filter (or kernel) array b. The answer to the convolution is the same as computing the coefficients in polynomial multiplication, if a and b are the coefficients.</p>
<p >Another way to think about it is that the filter kernel is centered on each pixel in a, and the output for that pixel or data point is the sum of the products.</p>
<p >Depending on the size of the signal and the filter, any one of the following batch mode convolutions take place.</p>
<ul>
<li><b>No Batch</b> - Single filter applied to single input.</li>
<li><b>Filter is Batched</b> - Many filters applied on same input</li>
<li><b>Signal is Batched</b> - Single filter applied to a set of inputs.</li>
<li><b>Identical Batches</b> - A set of filters applied onto to a set of inputs in one-to-one correspondence.</li>
<li><b>Non overlapping Batches</b> - All batched filters are applied to all batched signals. The batch axis of Signal and Filter <b>should not</b> be the same.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd>All non-overlapping(interleaved) convolutions default to frequency domain <a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dba0a1b168b058f58bd6b092af8bd5581fd">AF_CONV_FREQ</a> irrespective of the provided convolution mode argument.</dd></dl>
<p>For three dimensional inputs with m, n &amp; p sizes along the 0th, 1st &amp; 2nd axes respectively, given below are the possible batch operations.</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadCenter">Signal Size   </th><th class="markdownTableHeadCenter">Filter Size   </th><th class="markdownTableHeadCenter">Output Size   </th><th class="markdownTableHeadCenter">Batch Mode   </th><th class="markdownTableHeadLeft">Description    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyCenter">\( [m \ n \ p \ 1] \)   </td><td class="markdownTableBodyCenter">\( [a \ b \ c \ 1] \)   </td><td class="markdownTableBodyCenter">\( [m \ n \ p \ 1] \)   </td><td class="markdownTableBodyCenter">No Batch   </td><td class="markdownTableBodyLeft">Output will be a single convolve array    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyCenter">\( [m \ n \ p \ 1] \)   </td><td class="markdownTableBodyCenter">\( [a \ b \ c \ d] \)   </td><td class="markdownTableBodyCenter">\( [m \ n \ p \ d] \)   </td><td class="markdownTableBodyCenter">Filter is Batched   </td><td class="markdownTableBodyLeft">d filters applied to same input    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyCenter">\( [m \ n \ p \ q] \)   </td><td class="markdownTableBodyCenter">\( [a \ b \ c \ 1] \)   </td><td class="markdownTableBodyCenter">\( [m \ n \ p \ q] \)   </td><td class="markdownTableBodyCenter">Signal is Batched   </td><td class="markdownTableBodyLeft">1 filter applied to q inputs    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyCenter">\( [m \ n \ p \ k] \)   </td><td class="markdownTableBodyCenter">\( [a \ b \ c \ k] \)   </td><td class="markdownTableBodyCenter">\( [m \ n \ p \ k] \)   </td><td class="markdownTableBodyCenter">Identical Batches   </td><td class="markdownTableBodyLeft">k filters applied to k inputs in one-to-one correspondence   </td></tr>
</table>
<dl class="section note"><dt>Note</dt><dd>For the above tabular illustrations, we assumed <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> is <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>. </dd></dl>
<h2 class="groupheader">Function Documentation</h2>
<a id="gab87335bb7ca6ce057811248c4c641182" name="gab87335bb7ca6ce057811248c4c641182"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab87335bb7ca6ce057811248c4c641182">&#9670;&nbsp;</a></span>af_convolve3()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_convolve3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>signal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a>&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3db">af_conv_domain</a>&#160;</td>
          <td class="paramname"><em>domain</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for convolution on three dimensional signals. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>is convolved array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">signal</td><td>is the input signal </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filter</td><td>is the signal that shall be flipped for the convolution operation </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>indicates if the convolution should be expanded or not(where output size equals input) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">domain</td><td>specifies if the convolution should be performed in frequency os spatial domain </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the convolution is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The default parameter of <code>domain</code>, <a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dbae105d11695ba3a2287e32c552d3567dd">AF_CONV_AUTO</a>, heuristically switches between frequency and spatial domain. </dd></dl>

</div>
</div>
<a id="ga75f2ee15302b8aa7fa2ba0f5589af00e" name="ga75f2ee15302b8aa7fa2ba0f5589af00e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga75f2ee15302b8aa7fa2ba0f5589af00e">&#9670;&nbsp;</a></span>af_fft_convolve3()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_fft_convolve3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>signal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a>&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for convolution on 3D signals using FFT. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>is convolved array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">signal</td><td>is the input signal </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filter</td><td>is the signal that shall be used for the convolution operation </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>indicates if the convolution should be expanded or not(where output size equals input) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the convolution is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="ga612982eb8719085e327ca764e4f728d6" name="ga612982eb8719085e327ca764e4f728d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga612982eb8719085e327ca764e4f728d6">&#9670;&nbsp;</a></span>convolve3()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::convolve3 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>signal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">convMode</a>&#160;</td>
          <td class="paramname"><em>mode</em> = <code><a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3db">convDomain</a>&#160;</td>
          <td class="paramname"><em>domain</em> = <code><a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dbae105d11695ba3a2287e32c552d3567dd">AF_CONV_AUTO</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for convolution on three dimensional signals. </p>
<div class="fragment"><div class="line">    <span class="comment">// vector&lt;dim4&gt; numDims;</span></div>
<div class="line">    <span class="comment">// vector&lt;vector&lt;float&gt; &gt; in;</span></div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> signal(numDims[0], &amp;(in[0].front()));</div>
<div class="line">    <span class="comment">// signal dims = [10 11 2 2]</span></div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> <a class="code hl_function" href="namespaceaf.htm#a53c4f9a4b5440458bffe355803514c90">filter</a>(numDims[1], &amp;(in[1].front()));</div>
<div class="line">    <span class="comment">// filter dims = [4 2 3 2]</span></div>
<div class="line"> </div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> output = <a class="code hl_function" href="group__signal__func__convolve3.htm#ga612982eb8719085e327ca764e4f728d6">convolve3</a>(signal, <a class="code hl_function" href="namespaceaf.htm#a53c4f9a4b5440458bffe355803514c90">filter</a>, <a class="code hl_enumvalue" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>);</div>
<div class="line">    <span class="comment">// output dims = [10 11 2 2] - same as input since expand(3rd argument is</span></div>
<div class="line">    <span class="comment">// false) however, notice that the 4th dimension is &gt; 1 for both signal and</span></div>
<div class="line">    <span class="comment">// the filter, therefore many to many batch mode will be activated where</span></div>
<div class="line">    <span class="comment">// each 3d signal is convolved with the corresponding 3d filter</span></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00037">array.h:37</a></div></div>
<div class="ttc" id="adefines_8h_htm_ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48"><div class="ttname"><a href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a></div><div class="ttdeci">@ AF_CONV_DEFAULT</div><div class="ttdoc">Output of the convolution is the same size as input.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00305">defines.h:305</a></div></div>
<div class="ttc" id="agroup__signal__func__convolve3_htm_ga612982eb8719085e327ca764e4f728d6"><div class="ttname"><a href="group__signal__func__convolve3.htm#ga612982eb8719085e327ca764e4f728d6">af::convolve3</a></div><div class="ttdeci">AFAPI array convolve3(const array &amp;signal, const array &amp;filter, const convMode mode=AF_CONV_DEFAULT, const convDomain domain=AF_CONV_AUTO)</div><div class="ttdoc">C++ Interface for convolution on three dimensional signals.</div></div>
<div class="ttc" id="anamespaceaf_htm_a53c4f9a4b5440458bffe355803514c90"><div class="ttname"><a href="namespaceaf.htm#a53c4f9a4b5440458bffe355803514c90">af::filter</a></div><div class="ttdeci">AFAPI array filter(const array &amp;image, const array &amp;kernel)</div><div class="ttdoc">Image Filtering.</div></div>
</div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">signal</td><td>is the input signal </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filter</td><td>is the signal that shall be flipped for the convolution operation </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>indicates if the convolution should be expanded or not(where output size equals input) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">domain</td><td>specifies if the convolution should be performed in frequency os spatial domain </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the convolved array</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The default parameter of <code>domain</code>, <a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dbae105d11695ba3a2287e32c552d3567dd">AF_CONV_AUTO</a>, heuristically switches between frequency and spatial domain. </dd></dl>

</div>
</div>
<a id="ga1f8961d19f4fba3e585a14e3864fdd2f" name="ga1f8961d19f4fba3e585a14e3864fdd2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1f8961d19f4fba3e585a14e3864fdd2f">&#9670;&nbsp;</a></span>fftConvolve3()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::fftConvolve3 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>signal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">convMode</a>&#160;</td>
          <td class="paramname"><em>mode</em> = <code><a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for convolution on 3D signals using FFT. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">signal</td><td>is the input signal </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filter</td><td>is the signal that shall be used for the convolution operation </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>indicates if the convolution should be expanded or not(where output size equals input) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the convolved array </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Thu Feb 24 2022 14:12:33 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.3 </li>
    </ul>
</div>
</body>
</html>
