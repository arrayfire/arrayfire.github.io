<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: div</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__arith__func__div.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">div<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__mathfunc__mat.htm">Mathematical functions</a> &raquo; <a class="el" href="group__arith__mat.htm">Arithmetic operations</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Elementwise division.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga21f3f97755702692ec8976934e75fde6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga21f3f97755702692ec8976934e75fde6">af_div</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga21f3f97755702692ec8976934e75fde6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface to divide one array by another array.  <a href="group__arith__func__div.htm#ga21f3f97755702692ec8976934e75fde6">More...</a><br /></td></tr>
<tr class="separator:ga21f3f97755702692ec8976934e75fde6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac7a9219fcd1bbba9c0434517597d31f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gac7a9219fcd1bbba9c0434517597d31f9">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gac7a9219fcd1bbba9c0434517597d31f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#gac7a9219fcd1bbba9c0434517597d31f9">More...</a><br /></td></tr>
<tr class="separator:gac7a9219fcd1bbba9c0434517597d31f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga88549b63504e5a03ac9a952746cbaadd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga88549b63504e5a03ac9a952746cbaadd">operator/</a> (const bool &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga88549b63504e5a03ac9a952746cbaadd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga88549b63504e5a03ac9a952746cbaadd">More...</a><br /></td></tr>
<tr class="separator:ga88549b63504e5a03ac9a952746cbaadd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11ede17c49eb79aa4949de2725583a9a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga11ede17c49eb79aa4949de2725583a9a">operator/</a> (const int &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga11ede17c49eb79aa4949de2725583a9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga11ede17c49eb79aa4949de2725583a9a">More...</a><br /></td></tr>
<tr class="separator:ga11ede17c49eb79aa4949de2725583a9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2521511e74c4a3473c46eb1ac785dc3a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga2521511e74c4a3473c46eb1ac785dc3a">operator/</a> (const unsigned &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga2521511e74c4a3473c46eb1ac785dc3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga2521511e74c4a3473c46eb1ac785dc3a">More...</a><br /></td></tr>
<tr class="separator:ga2521511e74c4a3473c46eb1ac785dc3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8dfc1ecd97920c6e5ee9f15f3f0e45f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga8dfc1ecd97920c6e5ee9f15f3f0e45f1">operator/</a> (const char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga8dfc1ecd97920c6e5ee9f15f3f0e45f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga8dfc1ecd97920c6e5ee9f15f3f0e45f1">More...</a><br /></td></tr>
<tr class="separator:ga8dfc1ecd97920c6e5ee9f15f3f0e45f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad7ff040825dcd81d626759dd0ca9461f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gad7ff040825dcd81d626759dd0ca9461f">operator/</a> (const unsigned char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gad7ff040825dcd81d626759dd0ca9461f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gad7ff040825dcd81d626759dd0ca9461f">More...</a><br /></td></tr>
<tr class="separator:gad7ff040825dcd81d626759dd0ca9461f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3bbf8b911c33a9f807fe87ae8aa85076"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga3bbf8b911c33a9f807fe87ae8aa85076">operator/</a> (const long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga3bbf8b911c33a9f807fe87ae8aa85076"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga3bbf8b911c33a9f807fe87ae8aa85076">More...</a><br /></td></tr>
<tr class="separator:ga3bbf8b911c33a9f807fe87ae8aa85076"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga13eb6566125c03361397c7034a5c3a3b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga13eb6566125c03361397c7034a5c3a3b">operator/</a> (const unsigned long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga13eb6566125c03361397c7034a5c3a3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga13eb6566125c03361397c7034a5c3a3b">More...</a><br /></td></tr>
<tr class="separator:ga13eb6566125c03361397c7034a5c3a3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga43a09070fb51fcbf7477bdc2964e7816"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga43a09070fb51fcbf7477bdc2964e7816">operator/</a> (const long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga43a09070fb51fcbf7477bdc2964e7816"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga43a09070fb51fcbf7477bdc2964e7816">More...</a><br /></td></tr>
<tr class="separator:ga43a09070fb51fcbf7477bdc2964e7816"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa15d1ff741a42685c44249d3d5309ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaaa15d1ff741a42685c44249d3d5309ea">operator/</a> (const unsigned long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaaa15d1ff741a42685c44249d3d5309ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gaaa15d1ff741a42685c44249d3d5309ea">More...</a><br /></td></tr>
<tr class="separator:gaaa15d1ff741a42685c44249d3d5309ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8192587f54a219759ca533e4ab75c464"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga8192587f54a219759ca533e4ab75c464">operator/</a> (const double &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga8192587f54a219759ca533e4ab75c464"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga8192587f54a219759ca533e4ab75c464">More...</a><br /></td></tr>
<tr class="separator:ga8192587f54a219759ca533e4ab75c464"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f0f8e472ba7acd544c6cf4860b08064"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga6f0f8e472ba7acd544c6cf4860b08064">operator/</a> (const float &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga6f0f8e472ba7acd544c6cf4860b08064"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga6f0f8e472ba7acd544c6cf4860b08064">More...</a><br /></td></tr>
<tr class="separator:ga6f0f8e472ba7acd544c6cf4860b08064"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5eb9bce7a9a472d7389206f083a512bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga5eb9bce7a9a472d7389206f083a512bb">operator/</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga5eb9bce7a9a472d7389206f083a512bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga5eb9bce7a9a472d7389206f083a512bb">More...</a><br /></td></tr>
<tr class="separator:ga5eb9bce7a9a472d7389206f083a512bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8ecd3e3b8d80fdecd9112ca8643222b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga8ecd3e3b8d80fdecd9112ca8643222b6">operator/</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga8ecd3e3b8d80fdecd9112ca8643222b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga8ecd3e3b8d80fdecd9112ca8643222b6">More...</a><br /></td></tr>
<tr class="separator:ga8ecd3e3b8d80fdecd9112ca8643222b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab4859157798bfdd81b857aa0557c9d32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gab4859157798bfdd81b857aa0557c9d32">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gab4859157798bfdd81b857aa0557c9d32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gab4859157798bfdd81b857aa0557c9d32">More...</a><br /></td></tr>
<tr class="separator:gab4859157798bfdd81b857aa0557c9d32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ed6293b46357914802f25244b014567"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga1ed6293b46357914802f25244b014567">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga1ed6293b46357914802f25244b014567"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga1ed6293b46357914802f25244b014567">More...</a><br /></td></tr>
<tr class="separator:ga1ed6293b46357914802f25244b014567"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaffd94b99847ae639f27d172db6b12323"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaffd94b99847ae639f27d172db6b12323">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gaffd94b99847ae639f27d172db6b12323"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gaffd94b99847ae639f27d172db6b12323">More...</a><br /></td></tr>
<tr class="separator:gaffd94b99847ae639f27d172db6b12323"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf6c762f308633eab3a159d45be19bc8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaf6c762f308633eab3a159d45be19bc8a">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:gaf6c762f308633eab3a159d45be19bc8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gaf6c762f308633eab3a159d45be19bc8a">More...</a><br /></td></tr>
<tr class="separator:gaf6c762f308633eab3a159d45be19bc8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad13f72d4bd5930670943df280d236db7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gad13f72d4bd5930670943df280d236db7">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:gad13f72d4bd5930670943df280d236db7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gad13f72d4bd5930670943df280d236db7">More...</a><br /></td></tr>
<tr class="separator:gad13f72d4bd5930670943df280d236db7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6445d5b69ed9fd523d840588d6f2b710"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga6445d5b69ed9fd523d840588d6f2b710">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga6445d5b69ed9fd523d840588d6f2b710"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga6445d5b69ed9fd523d840588d6f2b710">More...</a><br /></td></tr>
<tr class="separator:ga6445d5b69ed9fd523d840588d6f2b710"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae5ad2f1264bc67e3059fe6c52b7c9fb3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gae5ad2f1264bc67e3059fe6c52b7c9fb3">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:gae5ad2f1264bc67e3059fe6c52b7c9fb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gae5ad2f1264bc67e3059fe6c52b7c9fb3">More...</a><br /></td></tr>
<tr class="separator:gae5ad2f1264bc67e3059fe6c52b7c9fb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa4f3f4eca02c1b60df99d814a944ee74"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaa4f3f4eca02c1b60df99d814a944ee74">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:gaa4f3f4eca02c1b60df99d814a944ee74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gaa4f3f4eca02c1b60df99d814a944ee74">More...</a><br /></td></tr>
<tr class="separator:gaa4f3f4eca02c1b60df99d814a944ee74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc4587a45147f264416395dce6a1e7cd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gacc4587a45147f264416395dce6a1e7cd">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gacc4587a45147f264416395dce6a1e7cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gacc4587a45147f264416395dce6a1e7cd">More...</a><br /></td></tr>
<tr class="separator:gacc4587a45147f264416395dce6a1e7cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2806dcf22803b5b48428b0722f8332fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga2806dcf22803b5b48428b0722f8332fc">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga2806dcf22803b5b48428b0722f8332fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga2806dcf22803b5b48428b0722f8332fc">More...</a><br /></td></tr>
<tr class="separator:ga2806dcf22803b5b48428b0722f8332fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf83133a2448c09e9badaf3f0d6bf70bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaf83133a2448c09e9badaf3f0d6bf70bc">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gaf83133a2448c09e9badaf3f0d6bf70bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gaf83133a2448c09e9badaf3f0d6bf70bc">More...</a><br /></td></tr>
<tr class="separator:gaf83133a2448c09e9badaf3f0d6bf70bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3df79e8bfe8bc183beeb0e9788c3f657"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga3df79e8bfe8bc183beeb0e9788c3f657">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga3df79e8bfe8bc183beeb0e9788c3f657"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga3df79e8bfe8bc183beeb0e9788c3f657">More...</a><br /></td></tr>
<tr class="separator:ga3df79e8bfe8bc183beeb0e9788c3f657"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67e05f1b3d6fa5601ad8531218dd3087"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga67e05f1b3d6fa5601ad8531218dd3087">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;rhs)</td></tr>
<tr class="separator:ga67e05f1b3d6fa5601ad8531218dd3087"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae6547556f9d0ff3e5e7cde6b6525ff2f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gae6547556f9d0ff3e5e7cde6b6525ff2f">operator/</a> (const short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gae6547556f9d0ff3e5e7cde6b6525ff2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gae6547556f9d0ff3e5e7cde6b6525ff2f">More...</a><br /></td></tr>
<tr class="separator:gae6547556f9d0ff3e5e7cde6b6525ff2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga04bd4faedee476392a2c968071d12cfa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga04bd4faedee476392a2c968071d12cfa">operator/</a> (const unsigned short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga04bd4faedee476392a2c968071d12cfa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga04bd4faedee476392a2c968071d12cfa">More...</a><br /></td></tr>
<tr class="separator:ga04bd4faedee476392a2c968071d12cfa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f245e59c31cabb009d18da6a1a62631"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga9f245e59c31cabb009d18da6a1a62631">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga9f245e59c31cabb009d18da6a1a62631"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga9f245e59c31cabb009d18da6a1a62631">More...</a><br /></td></tr>
<tr class="separator:ga9f245e59c31cabb009d18da6a1a62631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae3b8cb05fbad3680b14eeea657eca42e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gae3b8cb05fbad3680b14eeea657eca42e">operator/</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gae3b8cb05fbad3680b14eeea657eca42e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Elementwise division. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga21f3f97755702692ec8976934e75fde6" name="ga21f3f97755702692ec8976934e75fde6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga21f3f97755702692ec8976934e75fde6">&#9670;&#160;</a></span>af_div()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_div </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>batch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface to divide one array by another array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>\ </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>first input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>second input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">batch</td><td>batch mode </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>, if function returns successfully, else an <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> code is given </dd></dl>

</div>
</div>
<a id="gac7a9219fcd1bbba9c0434517597d31f9" name="gac7a9219fcd1bbba9c0434517597d31f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac7a9219fcd1bbba9c0434517597d31f9">&#9670;&#160;</a></span>operator/() <span class="overload">[1/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code> </dd></dl>

</div>
</div>
<a id="gab4859157798bfdd81b857aa0557c9d32" name="gab4859157798bfdd81b857aa0557c9d32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab4859157798bfdd81b857aa0557c9d32">&#9670;&#160;</a></span>operator/() <span class="overload">[2/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga67e05f1b3d6fa5601ad8531218dd3087" name="ga67e05f1b3d6fa5601ad8531218dd3087"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga67e05f1b3d6fa5601ad8531218dd3087">&#9670;&#160;</a></span>operator/() <span class="overload">[3/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga3df79e8bfe8bc183beeb0e9788c3f657" name="ga3df79e8bfe8bc183beeb0e9788c3f657"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3df79e8bfe8bc183beeb0e9788c3f657">&#9670;&#160;</a></span>operator/() <span class="overload">[4/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaf6c762f308633eab3a159d45be19bc8a" name="gaf6c762f308633eab3a159d45be19bc8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf6c762f308633eab3a159d45be19bc8a">&#9670;&#160;</a></span>operator/() <span class="overload">[5/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga2806dcf22803b5b48428b0722f8332fc" name="ga2806dcf22803b5b48428b0722f8332fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2806dcf22803b5b48428b0722f8332fc">&#9670;&#160;</a></span>operator/() <span class="overload">[6/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaf83133a2448c09e9badaf3f0d6bf70bc" name="gaf83133a2448c09e9badaf3f0d6bf70bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf83133a2448c09e9badaf3f0d6bf70bc">&#9670;&#160;</a></span>operator/() <span class="overload">[7/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga1ed6293b46357914802f25244b014567" name="ga1ed6293b46357914802f25244b014567"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1ed6293b46357914802f25244b014567">&#9670;&#160;</a></span>operator/() <span class="overload">[8/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga6445d5b69ed9fd523d840588d6f2b710" name="ga6445d5b69ed9fd523d840588d6f2b710"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6445d5b69ed9fd523d840588d6f2b710">&#9670;&#160;</a></span>operator/() <span class="overload">[9/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaa4f3f4eca02c1b60df99d814a944ee74" name="gaa4f3f4eca02c1b60df99d814a944ee74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa4f3f4eca02c1b60df99d814a944ee74">&#9670;&#160;</a></span>operator/() <span class="overload">[10/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga9f245e59c31cabb009d18da6a1a62631" name="ga9f245e59c31cabb009d18da6a1a62631"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9f245e59c31cabb009d18da6a1a62631">&#9670;&#160;</a></span>operator/() <span class="overload">[11/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaffd94b99847ae639f27d172db6b12323" name="gaffd94b99847ae639f27d172db6b12323"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaffd94b99847ae639f27d172db6b12323">&#9670;&#160;</a></span>operator/() <span class="overload">[12/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gad13f72d4bd5930670943df280d236db7" name="gad13f72d4bd5930670943df280d236db7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad13f72d4bd5930670943df280d236db7">&#9670;&#160;</a></span>operator/() <span class="overload">[13/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gae5ad2f1264bc67e3059fe6c52b7c9fb3" name="gae5ad2f1264bc67e3059fe6c52b7c9fb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae5ad2f1264bc67e3059fe6c52b7c9fb3">&#9670;&#160;</a></span>operator/() <span class="overload">[14/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gacc4587a45147f264416395dce6a1e7cd" name="gacc4587a45147f264416395dce6a1e7cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacc4587a45147f264416395dce6a1e7cd">&#9670;&#160;</a></span>operator/() <span class="overload">[15/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gae3b8cb05fbad3680b14eeea657eca42e" name="gae3b8cb05fbad3680b14eeea657eca42e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae3b8cb05fbad3680b14eeea657eca42e">&#9670;&#160;</a></span>operator/() <span class="overload">[16/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga88549b63504e5a03ac9a952746cbaadd" name="ga88549b63504e5a03ac9a952746cbaadd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga88549b63504e5a03ac9a952746cbaadd">&#9670;&#160;</a></span>operator/() <span class="overload">[17/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga8ecd3e3b8d80fdecd9112ca8643222b6" name="ga8ecd3e3b8d80fdecd9112ca8643222b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8ecd3e3b8d80fdecd9112ca8643222b6">&#9670;&#160;</a></span>operator/() <span class="overload">[18/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga5eb9bce7a9a472d7389206f083a512bb" name="ga5eb9bce7a9a472d7389206f083a512bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5eb9bce7a9a472d7389206f083a512bb">&#9670;&#160;</a></span>operator/() <span class="overload">[19/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga8dfc1ecd97920c6e5ee9f15f3f0e45f1" name="ga8dfc1ecd97920c6e5ee9f15f3f0e45f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8dfc1ecd97920c6e5ee9f15f3f0e45f1">&#9670;&#160;</a></span>operator/() <span class="overload">[20/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga8192587f54a219759ca533e4ab75c464" name="ga8192587f54a219759ca533e4ab75c464"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8192587f54a219759ca533e4ab75c464">&#9670;&#160;</a></span>operator/() <span class="overload">[21/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga6f0f8e472ba7acd544c6cf4860b08064" name="ga6f0f8e472ba7acd544c6cf4860b08064"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6f0f8e472ba7acd544c6cf4860b08064">&#9670;&#160;</a></span>operator/() <span class="overload">[22/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga11ede17c49eb79aa4949de2725583a9a" name="ga11ede17c49eb79aa4949de2725583a9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga11ede17c49eb79aa4949de2725583a9a">&#9670;&#160;</a></span>operator/() <span class="overload">[23/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga3bbf8b911c33a9f807fe87ae8aa85076" name="ga3bbf8b911c33a9f807fe87ae8aa85076"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3bbf8b911c33a9f807fe87ae8aa85076">&#9670;&#160;</a></span>operator/() <span class="overload">[24/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga43a09070fb51fcbf7477bdc2964e7816" name="ga43a09070fb51fcbf7477bdc2964e7816"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga43a09070fb51fcbf7477bdc2964e7816">&#9670;&#160;</a></span>operator/() <span class="overload">[25/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gae6547556f9d0ff3e5e7cde6b6525ff2f" name="gae6547556f9d0ff3e5e7cde6b6525ff2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae6547556f9d0ff3e5e7cde6b6525ff2f">&#9670;&#160;</a></span>operator/() <span class="overload">[26/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga2521511e74c4a3473c46eb1ac785dc3a" name="ga2521511e74c4a3473c46eb1ac785dc3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2521511e74c4a3473c46eb1ac785dc3a">&#9670;&#160;</a></span>operator/() <span class="overload">[27/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gad7ff040825dcd81d626759dd0ca9461f" name="gad7ff040825dcd81d626759dd0ca9461f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad7ff040825dcd81d626759dd0ca9461f">&#9670;&#160;</a></span>operator/() <span class="overload">[28/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga13eb6566125c03361397c7034a5c3a3b" name="ga13eb6566125c03361397c7034a5c3a3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga13eb6566125c03361397c7034a5c3a3b">&#9670;&#160;</a></span>operator/() <span class="overload">[29/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaaa15d1ff741a42685c44249d3d5309ea" name="gaaa15d1ff741a42685c44249d3d5309ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaaa15d1ff741a42685c44249d3d5309ea">&#9670;&#160;</a></span>operator/() <span class="overload">[30/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga04bd4faedee476392a2c968071d12cfa" name="ga04bd4faedee476392a2c968071d12cfa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga04bd4faedee476392a2c968071d12cfa">&#9670;&#160;</a></span>operator/() <span class="overload">[31/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divides two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the quotient of the <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Wed Aug 30 2023 15:41:56 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
