<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: Memory Manager API</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__memory__manager__api.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a>  </div>
  <div class="headertitle"><div class="title">Memory Manager API<div class="ingroups"><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__memory__manager.htm">Memory Management</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Functions for defining custom memory managers.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga093dce1fb6172abb9a360b2fb5fe6fd2"><td class="memItemLeft" align="right" valign="top">typedef void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a></td></tr>
<tr class="separator:ga093dce1fb6172abb9a360b2fb5fe6fd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga98c355febddbed0fc3e8dc17d92685f8"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#ga98c355febddbed0fc3e8dc17d92685f8">af_memory_manager_initialize_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle)</td></tr>
<tr class="memdesc:ga98c355febddbed0fc3e8dc17d92685f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called after a memory manager is set and becomes active.  <a href="group__memory__manager__api.htm#ga98c355febddbed0fc3e8dc17d92685f8">More...</a><br /></td></tr>
<tr class="separator:ga98c355febddbed0fc3e8dc17d92685f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga783812733859d1076fda2c340663a4d1"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#ga783812733859d1076fda2c340663a4d1">af_memory_manager_shutdown_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle)</td></tr>
<tr class="memdesc:ga783812733859d1076fda2c340663a4d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called after a memory manager is unset and becomes unused.  <a href="group__memory__manager__api.htm#ga783812733859d1076fda2c340663a4d1">More...</a><br /></td></tr>
<tr class="separator:ga783812733859d1076fda2c340663a4d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab50cc0ba4b054a1a75365cfa6af7648d"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#gab50cc0ba4b054a1a75365cfa6af7648d">af_memory_manager_alloc_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, void **ptr, int user_lock, const unsigned ndims, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *dims, const unsigned element_size)</td></tr>
<tr class="memdesc:gab50cc0ba4b054a1a75365cfa6af7648d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function pointer that will be called by ArrayFire to allocate memory.  <a href="group__memory__manager__api.htm#gab50cc0ba4b054a1a75365cfa6af7648d">More...</a><br /></td></tr>
<tr class="separator:gab50cc0ba4b054a1a75365cfa6af7648d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3593d2f27d3974b4191bb06b1f8db982"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#ga3593d2f27d3974b4191bb06b1f8db982">af_memory_manager_allocated_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, size_t *size, void *ptr)</td></tr>
<tr class="memdesc:ga3593d2f27d3974b4191bb06b1f8db982"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks the amount of allocated memory for a pointer.  <a href="group__memory__manager__api.htm#ga3593d2f27d3974b4191bb06b1f8db982">More...</a><br /></td></tr>
<tr class="separator:ga3593d2f27d3974b4191bb06b1f8db982"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0eaaf59059512916b67982d08814f448"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#ga0eaaf59059512916b67982d08814f448">af_memory_manager_unlock_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, void *ptr, int user_unlock)</td></tr>
<tr class="memdesc:ga0eaaf59059512916b67982d08814f448"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unlocks memory from use.  <a href="group__memory__manager__api.htm#ga0eaaf59059512916b67982d08814f448">More...</a><br /></td></tr>
<tr class="separator:ga0eaaf59059512916b67982d08814f448"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c9a74941621bd6827dfae0dc4ddca73"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#ga8c9a74941621bd6827dfae0dc4ddca73">af_memory_manager_signal_memory_cleanup_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle)</td></tr>
<tr class="memdesc:ga8c9a74941621bd6827dfae0dc4ddca73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called to signal the memory manager should free memory if possible.  <a href="group__memory__manager__api.htm#ga8c9a74941621bd6827dfae0dc4ddca73">More...</a><br /></td></tr>
<tr class="separator:ga8c9a74941621bd6827dfae0dc4ddca73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga25ef526d33694354465af41e2ee5f3f8"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#ga25ef526d33694354465af41e2ee5f3f8">af_memory_manager_print_info_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, char *buffer, int id)</td></tr>
<tr class="memdesc:ga25ef526d33694354465af41e2ee5f3f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Populates a character array with human readable information about the current state of the memory manager.  <a href="group__memory__manager__api.htm#ga25ef526d33694354465af41e2ee5f3f8">More...</a><br /></td></tr>
<tr class="separator:ga25ef526d33694354465af41e2ee5f3f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d7f11c310be4ddeb769a0ff0fd35f38"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#ga6d7f11c310be4ddeb769a0ff0fd35f38">af_memory_manager_user_lock_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, void *ptr)</td></tr>
<tr class="memdesc:ga6d7f11c310be4ddeb769a0ff0fd35f38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called to lock a buffer as user-owned memory.  <a href="group__memory__manager__api.htm#ga6d7f11c310be4ddeb769a0ff0fd35f38">More...</a><br /></td></tr>
<tr class="separator:ga6d7f11c310be4ddeb769a0ff0fd35f38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadf12a4e6d7d2055c4a14c4307928fda9"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#gadf12a4e6d7d2055c4a14c4307928fda9">af_memory_manager_user_unlock_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, void *ptr)</td></tr>
<tr class="memdesc:gadf12a4e6d7d2055c4a14c4307928fda9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called to unlock a buffer from user-owned memory.  <a href="group__memory__manager__api.htm#gadf12a4e6d7d2055c4a14c4307928fda9">More...</a><br /></td></tr>
<tr class="separator:gadf12a4e6d7d2055c4a14c4307928fda9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga055c4c99289f6924515f9792c2cdcb5c"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#ga055c4c99289f6924515f9792c2cdcb5c">af_memory_manager_is_user_locked_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, int *out, void *ptr)</td></tr>
<tr class="memdesc:ga055c4c99289f6924515f9792c2cdcb5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries if a buffer is user locked.  <a href="group__memory__manager__api.htm#ga055c4c99289f6924515f9792c2cdcb5c">More...</a><br /></td></tr>
<tr class="separator:ga055c4c99289f6924515f9792c2cdcb5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3075af35222241a0adc31db1a2e071c0"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#ga3075af35222241a0adc31db1a2e071c0">af_memory_manager_get_memory_pressure_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, float *pressure)</td></tr>
<tr class="memdesc:ga3075af35222241a0adc31db1a2e071c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets memory pressure for a memory manager.  <a href="group__memory__manager__api.htm#ga3075af35222241a0adc31db1a2e071c0">More...</a><br /></td></tr>
<tr class="separator:ga3075af35222241a0adc31db1a2e071c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5598ba07373ca83e4ef9c50ebf041ccb"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#ga5598ba07373ca83e4ef9c50ebf041ccb">af_memory_manager_jit_tree_exceeds_memory_pressure_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, int *out, size_t size)</td></tr>
<tr class="memdesc:ga5598ba07373ca83e4ef9c50ebf041ccb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called to query if additions to the JIT tree would exert too much memory pressure.  <a href="group__memory__manager__api.htm#ga5598ba07373ca83e4ef9c50ebf041ccb">More...</a><br /></td></tr>
<tr class="separator:ga5598ba07373ca83e4ef9c50ebf041ccb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga43970431ba5e246e045a6eca68706837"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#ga43970431ba5e246e045a6eca68706837">af_memory_manager_add_memory_management_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, int id)</td></tr>
<tr class="memdesc:ga43970431ba5e246e045a6eca68706837"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a new device to the memory manager (OpenCL only)  <a href="group__memory__manager__api.htm#ga43970431ba5e246e045a6eca68706837">More...</a><br /></td></tr>
<tr class="separator:ga43970431ba5e246e045a6eca68706837"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga304563436cdfc1aed6fb3eb9d59dcd83"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__memory__manager__api.htm#ga304563436cdfc1aed6fb3eb9d59dcd83">af_memory_manager_remove_memory_management_fn</a>) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, int id)</td></tr>
<tr class="memdesc:ga304563436cdfc1aed6fb3eb9d59dcd83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a device from the memory manager (OpenCL only)  <a href="group__memory__manager__api.htm#ga304563436cdfc1aed6fb3eb9d59dcd83">More...</a><br /></td></tr>
<tr class="separator:ga304563436cdfc1aed6fb3eb9d59dcd83"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Functions for defining custom memory managers. </p>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga093dce1fb6172abb9a360b2fb5fe6fd2" name="ga093dce1fb6172abb9a360b2fb5fe6fd2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga093dce1fb6172abb9a360b2fb5fe6fd2">&#9670;&#160;</a></span>af_memory_manager</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void* <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00022">22</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="ga43970431ba5e246e045a6eca68706837" name="ga43970431ba5e246e045a6eca68706837"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga43970431ba5e246e045a6eca68706837">&#9670;&#160;</a></span>af_memory_manager_add_memory_management_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* af_memory_manager_add_memory_management_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, int id)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a new device to the memory manager (OpenCL only) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>the id of the device to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00215">215</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="gab50cc0ba4b054a1a75365cfa6af7648d" name="gab50cc0ba4b054a1a75365cfa6af7648d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab50cc0ba4b054a1a75365cfa6af7648d">&#9670;&#160;</a></span>af_memory_manager_alloc_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(* af_memory_manager_alloc_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, void **ptr, int user_lock, const unsigned ndims, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *dims, const unsigned element_size)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function pointer that will be called by ArrayFire to allocate memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ptr</td><td>pointer to the allocated buffer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">user_lock</td><td>a truthy value corresponding to whether or not the memory should have a user lock associated with it </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ndims</td><td>the number of dimensions associated with the allocated memory. This value is currently always 1 </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">dims</td><td>a <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> containing the dimensions of the allocation by number of elements. After the function returns, the pointer contains the shape of the allocated tensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">element_size</td><td>the number of bytes per element of allocated memory</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00066">66</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="ga3593d2f27d3974b4191bb06b1f8db982" name="ga3593d2f27d3974b4191bb06b1f8db982"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3593d2f27d3974b4191bb06b1f8db982">&#9670;&#160;</a></span>af_memory_manager_allocated_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(* af_memory_manager_allocated_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, size_t *size, void *ptr)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks the amount of allocated memory for a pointer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">size</td><td>the size of the allocated memory for the pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ptr</td><td>the pointer to query </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00082">82</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="ga3075af35222241a0adc31db1a2e071c0" name="ga3075af35222241a0adc31db1a2e071c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3075af35222241a0adc31db1a2e071c0">&#9670;&#160;</a></span>af_memory_manager_get_memory_pressure_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(* af_memory_manager_get_memory_pressure_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, float *pressure)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets memory pressure for a memory manager. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">pressure</td><td>the memory pressure value </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00176">176</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="ga98c355febddbed0fc3e8dc17d92685f8" name="ga98c355febddbed0fc3e8dc17d92685f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga98c355febddbed0fc3e8dc17d92685f8">&#9670;&#160;</a></span>af_memory_manager_initialize_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(* af_memory_manager_initialize_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called after a memory manager is set and becomes active. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00036">36</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="ga055c4c99289f6924515f9792c2cdcb5c" name="ga055c4c99289f6924515f9792c2cdcb5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga055c4c99289f6924515f9792c2cdcb5c">&#9670;&#160;</a></span>af_memory_manager_is_user_locked_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(* af_memory_manager_is_user_locked_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, int *out, void *ptr)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Queries if a buffer is user locked. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>a truthy value corresponding to if the buffer is user locked </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ptr</td><td>pointer to the buffer to query </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00164">164</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="ga5598ba07373ca83e4ef9c50ebf041ccb" name="ga5598ba07373ca83e4ef9c50ebf041ccb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5598ba07373ca83e4ef9c50ebf041ccb">&#9670;&#160;</a></span>af_memory_manager_jit_tree_exceeds_memory_pressure_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(* af_memory_manager_jit_tree_exceeds_memory_pressure_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, int *out, size_t size)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called to query if additions to the JIT tree would exert too much memory pressure. </p>
<p >The ArrayFire JIT compiler will call this function to determine if the number of bytes referenced by the buffers in the JIT tree are causing too much memory pressure on the system.</p>
<p >If the memory manager decides that the pressure is too great, the JIT tree will be evaluated and this COULD result in some buffers being freed if they are not referenced by other af_arrays. If the memory pressure is not too great the JIT tree may not be evaluated and could continue to get bigger.</p>
<p >The default memory manager will trigger an evaluation if the buffers in the JIT tree account for half of all buffers allocated.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>a truthy value if too much memory pressure is exerted </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>the total number of bytes allocated by all the buffer nodes in the current JIT tree </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00203">203</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="ga25ef526d33694354465af41e2ee5f3f8" name="ga25ef526d33694354465af41e2ee5f3f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga25ef526d33694354465af41e2ee5f3f8">&#9670;&#160;</a></span>af_memory_manager_print_info_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(* af_memory_manager_print_info_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, char *buffer, int id)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Populates a character array with human readable information about the current state of the memory manager. </p>
<p >Prints useful information about the memory manger and its state. No format is enforced and can include any information that could be useful to the user. This function is only called by <a class="el" href="group__device__func__mem.htm#ga7c928031579de47fe21594fd745e9188">af_print_mem_info</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">buffer</td><td>a buffer to which a message will be populated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>the device id for which to print memory </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00127">127</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="ga304563436cdfc1aed6fb3eb9d59dcd83" name="ga304563436cdfc1aed6fb3eb9d59dcd83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga304563436cdfc1aed6fb3eb9d59dcd83">&#9670;&#160;</a></span>af_memory_manager_remove_memory_management_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* af_memory_manager_remove_memory_management_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, int id)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes a device from the memory manager (OpenCL only) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>the id of the device to remove </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00227">227</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="ga783812733859d1076fda2c340663a4d1" name="ga783812733859d1076fda2c340663a4d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga783812733859d1076fda2c340663a4d1">&#9670;&#160;</a></span>af_memory_manager_shutdown_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(* af_memory_manager_shutdown_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called after a memory manager is unset and becomes unused. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00046">46</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="ga8c9a74941621bd6827dfae0dc4ddca73" name="ga8c9a74941621bd6827dfae0dc4ddca73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8c9a74941621bd6827dfae0dc4ddca73">&#9670;&#160;</a></span>af_memory_manager_signal_memory_cleanup_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(* af_memory_manager_signal_memory_cleanup_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called to signal the memory manager should free memory if possible. </p>
<p >Called by some external functions that allocate their own memory if they receive an out of memory in order to free up other memory on a device</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00109">109</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="ga0eaaf59059512916b67982d08814f448" name="ga0eaaf59059512916b67982d08814f448"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0eaaf59059512916b67982d08814f448">&#9670;&#160;</a></span>af_memory_manager_unlock_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(* af_memory_manager_unlock_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, void *ptr, int user_unlock)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unlocks memory from use. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ptr</td><td>the pointer to query </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">user_unlock</td><td>frees the memory from user lock </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00095">95</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="ga6d7f11c310be4ddeb769a0ff0fd35f38" name="ga6d7f11c310be4ddeb769a0ff0fd35f38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6d7f11c310be4ddeb769a0ff0fd35f38">&#9670;&#160;</a></span>af_memory_manager_user_lock_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(* af_memory_manager_user_lock_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, void *ptr)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called to lock a buffer as user-owned memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ptr</td><td>pointer to the buffer to lock </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00139">139</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
<a id="gadf12a4e6d7d2055c4a14c4307928fda9" name="gadf12a4e6d7d2055c4a14c4307928fda9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadf12a4e6d7d2055c4a14c4307928fda9">&#9670;&#160;</a></span>af_memory_manager_user_unlock_fn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>(* af_memory_manager_user_unlock_fn) (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, void *ptr)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called to unlock a buffer from user-owned memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>a pointer to the active <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ptr</td><td>pointer to the buffer to unlock </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

<p class="definition">Definition at line <a class="el" href="memory_8h_source.htm#l00151">151</a> of file <a class="el" href="memory_8h_source.htm">memory.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Wed Aug 30 2023 15:41:55 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
