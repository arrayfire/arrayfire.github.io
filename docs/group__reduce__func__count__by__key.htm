<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: countByKey</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__reduce__func__count__by__key.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">countByKey<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__vector__mat.htm">Vector Algorithms</a> &raquo;  &#124; <a class="el" href="group__reduce__mat.htm">Reduction operations</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Counts the non-zero values of an input array according to an array of keys.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gad0aef7e7c253d12b376fca59067ee487"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__count__by__key.htm#gad0aef7e7c253d12b376fca59067ee487">countByKey</a> (<a class="el" href="classaf_1_1array.htm">array</a> &amp;keys_out, <a class="el" href="classaf_1_1array.htm">array</a> &amp;vals_out, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;keys, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;vals, const int dim=-1)</td></tr>
<tr class="memdesc:gad0aef7e7c253d12b376fca59067ee487"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for counting non-zero values in an array according to a key.  <a href="group__reduce__func__count__by__key.htm#gad0aef7e7c253d12b376fca59067ee487">More...</a><br /></td></tr>
<tr class="separator:gad0aef7e7c253d12b376fca59067ee487"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga96b01fd7375b3a3cb065ba860885e723"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__reduce__func__count__by__key.htm#ga96b01fd7375b3a3cb065ba860885e723">af_count_by_key</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals, const int dim)</td></tr>
<tr class="memdesc:ga96b01fd7375b3a3cb065ba860885e723"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for counting non-zero values in an array according to key.  <a href="#ga96b01fd7375b3a3cb065ba860885e723">More...</a><br /></td></tr>
<tr class="separator:ga96b01fd7375b3a3cb065ba860885e723"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Counts the non-zero values of an input array according to an array of keys. </p>
<p>All non-zero values corresponding to each group of consecutive equal keys will be counted. Keys can repeat, however only consecutive key values will be considered for each reduction. If a key value is repeated somewhere else in the keys array it will be considered the start of a new reduction. There are two outputs: the reduced set of consecutive keys and the corresponding final reduced values. An example demonstrating the reduction behavior can be seen in the following snippet.</p>
<div class="fragment"><div class="line"></div><div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> keys(9, hkeys);  <span class="comment">// keys = [ 0 0 1 1 1 0 0 2 2 ]</span></div><div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> vals(9, hvals);  <span class="comment">// vals = [ 1 1 0 1 1 0 0 1 0 ];</span></div><div class="line"></div><div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> okeys, ovals;</div><div class="line">    <a class="code" href="group__reduce__func__count__by__key.htm#gad0aef7e7c253d12b376fca59067ee487">countByKey</a>(okeys, ovals, keys, vals);</div><div class="line"></div><div class="line">    <span class="comment">// okeys = [ 0 1 0 2 ]</span></div><div class="line">    <span class="comment">// ovals = [ 2 2 0 1 ]</span></div><div class="line"></div></div><!-- fragment --><p> The keys input type must be an integer type(s32 or u32). The values return type will be of type u32.</p>
<p>The input keys must be a 1-D vector matching the size of the reduced dimension. In the case of multiple dimensions in the input values array, the dim parameter specifies which dimension to reduce along. An example of multi-dimensional reduce by key can be seen below:</p>
<div class="fragment"><div class="line"></div><div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> keys(5, hkeys);</div><div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> vals(2, 5, hvals);</div><div class="line"></div><div class="line">    <span class="comment">// keys = [ 1 0 0 2 2 ]</span></div><div class="line"></div><div class="line">    <span class="comment">// vals = [[ 1 1 1 0 1 ]</span></div><div class="line">    <span class="comment">//         [ 0 1 0 1 1 ]]</span></div><div class="line"></div><div class="line">    <span class="keyword">const</span> <span class="keywordtype">int</span> reduce_dim = 1;</div><div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> okeys, ovals;</div><div class="line">    <a class="code" href="group__reduce__func__count__by__key.htm#gad0aef7e7c253d12b376fca59067ee487">countByKey</a>(okeys, ovals, keys, vals, reduce_dim);</div><div class="line"></div><div class="line">    <span class="comment">// okeys = [ 1 0 2 ]</span></div><div class="line"></div><div class="line">    <span class="comment">// ovals = [[ 1 2 1 ],</span></div><div class="line">    <span class="comment">//          [ 0 1 2 ]]</span></div><div class="line"></div></div><!-- fragment --><h2 class="groupheader">Function Documentation</h2>
<a id="ga96b01fd7375b3a3cb065ba860885e723"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga96b01fd7375b3a3cb065ba860885e723">&#9670;&nbsp;</a></span>af_count_by_key()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_count_by_key </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>keys_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>vals_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>vals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>dim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for counting non-zero values in an array according to key. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">keys_out</td><td>will contain the reduced keys in <code>vals</code> along <code>dim</code> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">vals_out</td><td>will contain the count of all values in <code>vals</code> along <code>dim</code> according to <code>keys</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">keys</td><td>is the key array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">vals</td><td>is the array containing the values to be reduced </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>The dimension along which the non-zero values are counted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
<a id="gad0aef7e7c253d12b376fca59067ee487"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad0aef7e7c253d12b376fca59067ee487">&#9670;&nbsp;</a></span>countByKey()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void af::countByKey </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>keys_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>vals_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>vals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>dim</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for counting non-zero values in an array according to a key. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">keys_out</td><td>will contain the reduced keys in <code>vals</code> along <code>dim</code> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">vals_out</td><td>will contain the count of all values in <code>vals</code> along <code>dim</code> according to <code>keys</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">keys</td><td>is the key array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">vals</td><td>is the array containing the values to be reduced </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>The dimension along which the count operation occurs</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>dim</code> is -1 by default. -1 denotes the first non-singleton dimension. </dd>
<dd>
NaN values are treated as non zero. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
