<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<title>getting_started/integer.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('getting_started_2integer_8cpp-example.htm','');});
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">getting_started/integer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/*******************************************************</span></div><div class="line"><span class="comment"> * Copyright (c) 2014, ArrayFire</span></div><div class="line"><span class="comment"> * All rights reserved.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * This file is distributed under 3-clause BSD license.</span></div><div class="line"><span class="comment"> * The complete license agreement can be obtained at:</span></div><div class="line"><span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div><div class="line"><span class="comment"> ********************************************************/</span></div><div class="line"></div><div class="line"><span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="arrayfire_8h.htm">arrayfire.h</a>&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="util_8h.htm">af/util.h</a>&gt;</span></div><div class="line"><span class="preprocessor">#include &lt;cstdlib&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">using namespace </span><a class="code" href="namespaceaf.htm">af</a>;</div><div class="line"></div><div class="line"><span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> ** argv)</div><div class="line">{</div><div class="line">    <span class="keywordflow">try</span> {</div><div class="line">        <span class="keywordtype">int</span> device = argc &gt; 1 ? atoi(argv[1]) : 0;</div><div class="line">        <a name="a0"></a><a class="code" href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7">af::setDevice</a>(device);</div><div class="line">        <a name="a1"></a><a class="code" href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a>();</div><div class="line"></div><div class="line">        printf(<span class="stringliteral">&quot;\n=== ArrayFire signed(s32) / unsigned(u32) Integer Example ===\n&quot;</span>);</div><div class="line"></div><div class="line">        <span class="keywordtype">int</span> h_A[] = {1, 2, 4, -1, 2, 0, 4, 2, 3};</div><div class="line">        <span class="keywordtype">int</span> h_B[] = {2, 3, -5, 6, 0, 10, -12, 0, 1};</div><div class="line">        <a name="_a2"></a><a class="code" href="classaf_1_1array.htm">array</a> A = <a name="a3"></a><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(3, 3, h_A);</div><div class="line">        <a class="code" href="classaf_1_1array.htm">array</a> B = <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(3, 3, h_B);</div><div class="line"></div><div class="line">        printf(<span class="stringliteral">&quot;--\nSub-refencing and Sub-assignment\n&quot;</span>);</div><div class="line">        <a name="a4"></a><a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A.<a name="a5"></a><a class="code" href="group__array__mem__col.htm#gae54ff0116727d4f4f5f91306c609704e">col</a>(0));</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A.<a name="a6"></a><a class="code" href="group__array__mem__row.htm#gab4b3d8fcff693a861c0748faf06fd65e">row</a>(0));</div><div class="line">        A(0) = 11;</div><div class="line">        A(1) = 100;</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(B);</div><div class="line">        A(1,<a name="a7"></a><a class="code" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>) = B(2,<a class="code" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A);</div><div class="line"></div><div class="line">        printf(<span class="stringliteral">&quot;--Bit-wise operations\n&quot;</span>);</div><div class="line">        <span class="comment">// Returns an array of type s32</span></div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A &amp; B);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A | B);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A ^ B);</div><div class="line"></div><div class="line">        printf(<span class="stringliteral">&quot;\n--Logical operations\n&quot;</span>);</div><div class="line">        <span class="comment">// Returns an array of type b8</span></div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A &amp;&amp; B);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A || B);</div><div class="line"></div><div class="line">        printf(<span class="stringliteral">&quot;\n--Transpose\n&quot;</span>);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A.<a name="a8"></a><a class="code" href="group__method__mat.htm#ga7fc1c437c072767fc8acea2b67469498">T</a>());</div><div class="line"></div><div class="line">        printf(<span class="stringliteral">&quot;\n--Flip Vertically / Horizontally\n&quot;</span>);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(<a name="a9"></a><a class="code" href="group__manip__func__flip.htm#ga1dcebf2f17837b217ee9e880d028dd18">flip</a>(A,0));</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(<a class="code" href="group__manip__func__flip.htm#ga1dcebf2f17837b217ee9e880d028dd18">flip</a>(A,1));</div><div class="line"></div><div class="line">        printf(<span class="stringliteral">&quot;\n--Sum along columns\n&quot;</span>);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(<a name="a10"></a><a class="code" href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">sum</a>(A));</div><div class="line"></div><div class="line">        printf(<span class="stringliteral">&quot;\n--Product along columns\n&quot;</span>);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(<a name="a11"></a><a class="code" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">product</a>(A));</div><div class="line"></div><div class="line">        printf(<span class="stringliteral">&quot;\n--Minimum along columns\n&quot;</span>);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(<a name="a12"></a><a class="code" href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">min</a>(A));</div><div class="line"></div><div class="line">        printf(<span class="stringliteral">&quot;\n--Maximum along columns\n&quot;</span>);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(<a name="a13"></a><a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>(A));</div><div class="line"></div><div class="line">        printf(<span class="stringliteral">&quot;\n--Minimum along columns with index\n&quot;</span>);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A);</div><div class="line"></div><div class="line">        <a class="code" href="classaf_1_1array.htm">array</a> out, idx;</div><div class="line">        <a class="code" href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">min</a>(out, idx, A);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(out);</div><div class="line">        <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(idx);</div><div class="line"></div><div class="line">    } <span class="keywordflow">catch</span> (<a name="_a14"></a><a class="code" href="classaf_1_1exception.htm">af::exception</a>&amp; e) {</div><div class="line">        fprintf(stderr, <span class="stringliteral">&quot;%s\n&quot;</span>, e.<a name="a15"></a><a class="code" href="classaf_1_1exception.htm#ad62489809e3df568e973597b928d6d9b">what</a>());</div><div class="line">        <span class="keywordflow">throw</span>;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="keywordflow">return</span> 0;</div><div class="line">}</div></div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.org']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
