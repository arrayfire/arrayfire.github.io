<!-- HTML header for doxygen 1.9.3-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.3"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: image_processing/binary_thresholding.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
  <!--<td id="projectalign">
   <div id="projectname">ArrayFire<span id="projectnumber">&#160;3.8.1</span>
   </div>
   <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>-->
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.3 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('image_processing_2binary_thresholding_8cpp-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle"><div class="title">image_processing/binary_thresholding.cpp</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/*******************************************************</span></div>
<div class="line"><span class="comment"> * Copyright (c) 2015, ArrayFire</span></div>
<div class="line"><span class="comment"> * All rights reserved.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><span class="comment"> ********************************************************/</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="arrayfire_8h.htm">arrayfire.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;cstdio&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;cstdlib&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span><a class="code hl_namespace" href="namespaceaf.htm">af</a>;</div>
<div class="line"> </div>
<div class="line"><a id="a0" name="a0"></a><a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> threshold(<span class="keyword">const</span> <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; in, <span class="keywordtype">float</span> thresholdValue) {</div>
<div class="line">    <span class="keywordtype">int</span> channels  = in.<a id="a1" name="a1"></a><a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(2);</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> ret_val = in.<a id="a2" name="a2"></a><a class="code hl_function" href="classaf_1_1array.htm#aa859f53b411dd3ab37c8c817b4352e07">copy</a>();</div>
<div class="line">    <span class="keywordflow">if</span> (channels &gt; 1) ret_val = <a id="a3" name="a3"></a><a class="code hl_function" href="group__image__func__colorspace.htm#ga9dabba47b9390faacf8fb146605339b0">colorSpace</a>(in, <a id="a4" name="a4"></a><a class="code hl_enumvalue" href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0da2b379305db06eb19ff82ce7e85b7c4b1">AF_GRAY</a>, <a id="a5" name="a5"></a><a class="code hl_enumvalue" href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0dad9c37bf4beee3f07b8b1aa4b887244e6">AF_RGB</a>);</div>
<div class="line">    ret_val =</div>
<div class="line">        (ret_val &lt; thresholdValue) * 0.0f + 255.0f * (ret_val &gt; thresholdValue);</div>
<div class="line">    <span class="keywordflow">return</span> ret_val;</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> otsu(<span class="keyword">const</span> <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; in) {</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> gray;</div>
<div class="line">    <span class="keywordtype">int</span> channels = in.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(2);</div>
<div class="line">    <span class="keywordflow">if</span> (channels &gt; 1)</div>
<div class="line">        gray = <a class="code hl_function" href="group__image__func__colorspace.htm#ga9dabba47b9390faacf8fb146605339b0">colorSpace</a>(in, <a class="code hl_enumvalue" href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0da2b379305db06eb19ff82ce7e85b7c4b1">AF_GRAY</a>, <a class="code hl_enumvalue" href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0dad9c37bf4beee3f07b8b1aa4b887244e6">AF_RGB</a>);</div>
<div class="line">    <span class="keywordflow">else</span></div>
<div class="line">        gray = in;</div>
<div class="line">    <span class="keywordtype">unsigned</span> total = gray.elements();</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> hist     = <a id="a6" name="a6"></a><a class="code hl_function" href="group__image__func__histogram.htm#gafb93ba76739ef18b3698e39c7768c90a">histogram</a>(gray, 256, 0.0f, 255.0f);</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> wts      = <a id="a7" name="a7"></a><a class="code hl_function" href="group__data__func__range.htm#ga3789475e962b4c31e07c1c3bdab8498b">range</a>(256);</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> wtB   = <a id="a8" name="a8"></a><a class="code hl_function" href="group__scan__func__accum.htm#gae450135c4ae1bdaa4489804a215f3214">accum</a>(hist);</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> wtF   = total - wtB;</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> sumB  = <a class="code hl_function" href="group__scan__func__accum.htm#gae450135c4ae1bdaa4489804a215f3214">accum</a>(wts * hist);</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> meanB = sumB / wtB;</div>
<div class="line">    <span class="keywordtype">float</span> lastElemInSumB;</div>
<div class="line">    sumB(seq(255, 255, 1)).<a id="a9" name="a9"></a><a class="code hl_function" href="classaf_1_1array.htm#a44a7a503b21a96e6bb16636227ae5e35">host</a>((<span class="keywordtype">void</span>*)&amp;lastElemInSumB);</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> meanF = (lastElemInSumB - sumB) / wtF;</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> mDiff = meanB - meanF;</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> interClsVar = wtB * wtF * mDiff * mDiff;</div>
<div class="line"> </div>
<div class="line">    <span class="keywordtype">float</span> <a id="a10" name="a10"></a><a class="code hl_function" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>        = af::max&lt;float&gt;(interClsVar);</div>
<div class="line">    <span class="keywordtype">float</span> threshold2 = <a id="a11" name="a11"></a><a class="code hl_function" href="group__scan__func__where.htm#ga1e677067915477bc4aec1605d80d9b7b">where</a>(interClsVar == <a class="code hl_function" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>).<a id="a12" name="a12"></a><a class="code hl_function" href="classaf_1_1array.htm#a048d77db849d74f18a13dabfd43ce55d">scalar</a>&lt;<span class="keywordtype">unsigned</span>&gt;();</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> threshIdx  = <a class="code hl_function" href="group__scan__func__where.htm#ga1e677067915477bc4aec1605d80d9b7b">where</a>(interClsVar &gt;= <a class="code hl_function" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>);</div>
<div class="line">    <span class="keywordtype">float</span> threshold1 =</div>
<div class="line">        threshIdx.elements() &gt; 0 ? threshIdx.scalar&lt;<span class="keywordtype">unsigned</span>&gt;() : 0.0f;</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">return</span> threshold(gray, (threshold1 + threshold2) / 2.0f);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span>** argv) {</div>
<div class="line">    <span class="keywordflow">try</span> {</div>
<div class="line">        <span class="keywordtype">int</span> device = argc &gt; 1 ? atoi(argv[1]) : 0;</div>
<div class="line">        <a id="a13" name="a13"></a><a class="code hl_function" href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7">af::setDevice</a>(device);</div>
<div class="line">        <a id="a14" name="a14"></a><a class="code hl_function" href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a>();</div>
<div class="line"> </div>
<div class="line">        <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> bimodal =</div>
<div class="line">            <a id="a15" name="a15"></a><a class="code hl_function" href="group__imageio__func__load.htm#ga8bcf01ffa60bc513856d98b8a63bb12a">loadImage</a>(ASSETS_DIR <span class="stringliteral">&quot;/examples/images/noisy_square.png&quot;</span>, <span class="keyword">false</span>);</div>
<div class="line">        bimodal = <a id="a16" name="a16"></a><a class="code hl_function" href="group__transform__func__resize.htm#ga017b9370e3e287693519de5b59fcc8ff">resize</a>(0.75f, bimodal);</div>
<div class="line"> </div>
<div class="line">        <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> bt         = threshold(bimodal, 180.0f);</div>
<div class="line">        <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> ot         = otsu(bimodal);</div>
<div class="line">        <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> bimodHist  = <a class="code hl_function" href="group__image__func__histogram.htm#gafb93ba76739ef18b3698e39c7768c90a">histogram</a>(bimodal, 256, 0, 255);</div>
<div class="line">        <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> smooth     = <a id="a17" name="a17"></a><a class="code hl_function" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve</a>(bimodal, <a id="a18" name="a18"></a><a class="code hl_function" href="group__image__func__gauss.htm#gaa5de1866bc1bf50bf5fe3cb26d4e410d">gaussianKernel</a>(5, 5));</div>
<div class="line">        <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> smoothHist = <a class="code hl_function" href="group__image__func__histogram.htm#gafb93ba76739ef18b3698e39c7768c90a">histogram</a>(smooth, 256, 0, 255);</div>
<div class="line"> </div>
<div class="line">        <a id="_a19" name="_a19"></a><a class="code hl_class" href="classaf_1_1Window.htm">af::Window</a> wnd(1536, 1024, <span class="stringliteral">&quot;Binary Thresholding Algorithms&quot;</span>);</div>
<div class="line">        printf(<span class="stringliteral">&quot;Press ESC while the window is in focus to proceed to exit\n&quot;</span>);</div>
<div class="line"> </div>
<div class="line">        wnd.grid(3, 3);</div>
<div class="line">        wnd(0, 1).setAxesTitles(<span class="stringliteral">&quot;Bins&quot;</span>, <span class="stringliteral">&quot;Frequency&quot;</span>);</div>
<div class="line">        wnd(1, 1).setAxesTitles(<span class="stringliteral">&quot;Bins&quot;</span>, <span class="stringliteral">&quot;Frequency&quot;</span>);</div>
<div class="line">        wnd(2, 1).setAxesTitles(<span class="stringliteral">&quot;Bins&quot;</span>, <span class="stringliteral">&quot;Frequency&quot;</span>);</div>
<div class="line">        <span class="keywordflow">while</span> (!wnd.close()) {</div>
<div class="line">            wnd(0, 0).image(bimodal / 255, <span class="stringliteral">&quot;Input Image&quot;</span>);</div>
<div class="line">            wnd(1, 0).image(bimodal / 255, <span class="stringliteral">&quot;Input Image&quot;</span>);</div>
<div class="line">            wnd(2, 0).image(smooth / 255, <span class="stringliteral">&quot;Input Smoothed by Gaussian Filter&quot;</span>);</div>
<div class="line">            wnd(0, 1).hist(bimodHist, 0, 255, <span class="stringliteral">&quot;Input Histogram&quot;</span>);</div>
<div class="line">            wnd(1, 1).hist(bimodHist, 0, 255, <span class="stringliteral">&quot;Input Histogram&quot;</span>);</div>
<div class="line">            wnd(2, 1).hist(smoothHist, 0, 255, <span class="stringliteral">&quot;Smoothed Input Histogram&quot;</span>);</div>
<div class="line">            wnd(0, 2).image(bt, <span class="stringliteral">&quot;Simple Binary threshold&quot;</span>);</div>
<div class="line">            wnd(1, 2).image(ot, <span class="stringliteral">&quot;Otsu&#39;s Threshold&quot;</span>);</div>
<div class="line">            wnd(2, 2).image(otsu(smooth), <span class="stringliteral">&quot;Otsu&#39;s Threshold on Smoothed Image&quot;</span>);</div>
<div class="line">            wnd.show();</div>
<div class="line">        }</div>
<div class="line">    } <span class="keywordflow">catch</span> (<a id="_a20" name="_a20"></a><a class="code hl_class" href="classaf_1_1exception.htm">af::exception</a>&amp; e) {</div>
<div class="line">        fprintf(stderr, <span class="stringliteral">&quot;%s\n&quot;</span>, e.<a id="a21" name="a21"></a><a class="code hl_function" href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">what</a>());</div>
<div class="line">        <span class="keywordflow">throw</span>;</div>
<div class="line">    }</div>
<div class="line">    <span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
<div class="ttc" id="aarrayfire_8h_htm"><div class="ttname"><a href="arrayfire_8h.htm">arrayfire.h</a></div></div>
<div class="ttc" id="aclassaf_1_1Window_htm"><div class="ttname"><a href="classaf_1_1Window.htm">af::Window</a></div><div class="ttdoc">Window object to render af::arrays.</div><div class="ttdef"><b>Definition:</b> <a href="graphics_8h_source.htm#l00037">graphics.h:37</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm_a048d77db849d74f18a13dabfd43ce55d"><div class="ttname"><a href="classaf_1_1array.htm#a048d77db849d74f18a13dabfd43ce55d">af::array::scalar</a></div><div class="ttdeci">T scalar() const</div><div class="ttdoc">Get the first element of the array as a scalar.</div></div>
<div class="ttc" id="aclassaf_1_1array_htm_a10d14b019693bc98f672ad7c4ac60bac"><div class="ttname"><a href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">af::array::dims</a></div><div class="ttdeci">dim4 dims() const</div><div class="ttdoc">Get dimensions of the array.</div></div>
<div class="ttc" id="aclassaf_1_1array_htm_a44a7a503b21a96e6bb16636227ae5e35"><div class="ttname"><a href="classaf_1_1array.htm#a44a7a503b21a96e6bb16636227ae5e35">af::array::host</a></div><div class="ttdeci">T * host() const</div><div class="ttdoc">Copy array data to host and return host pointer.</div></div>
<div class="ttc" id="aclassaf_1_1array_htm_aa859f53b411dd3ab37c8c817b4352e07"><div class="ttname"><a href="classaf_1_1array.htm#aa859f53b411dd3ab37c8c817b4352e07">af::array::copy</a></div><div class="ttdeci">array copy() const</div><div class="ttdoc">Perform deep copy of the array.</div></div>
<div class="ttc" id="aclassaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00021">exception.h:22</a></div></div>
<div class="ttc" id="aclassaf_1_1exception_htm_aa884ff67408851f00e50cf971a4dfd05"><div class="ttname"><a href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">af::exception::what</a></div><div class="ttdeci">virtual const char * what() const</div><div class="ttdoc">Returns an error message for the exception in a string format.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00046">exception.h:46</a></div></div>
<div class="ttc" id="adefines_8h_htm_ae1e32be35ff02f167999723d77153f0da2b379305db06eb19ff82ce7e85b7c4b1"><div class="ttname"><a href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0da2b379305db06eb19ff82ce7e85b7c4b1">AF_GRAY</a></div><div class="ttdeci">@ AF_GRAY</div><div class="ttdoc">Grayscale.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00340">defines.h:340</a></div></div>
<div class="ttc" id="adefines_8h_htm_ae1e32be35ff02f167999723d77153f0dad9c37bf4beee3f07b8b1aa4b887244e6"><div class="ttname"><a href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0dad9c37bf4beee3f07b8b1aa4b887244e6">AF_RGB</a></div><div class="ttdeci">@ AF_RGB</div><div class="ttdoc">3-channel RGB</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00341">defines.h:341</a></div></div>
<div class="ttc" id="agroup__data__func__range_htm_ga3789475e962b4c31e07c1c3bdab8498b"><div class="ttname"><a href="group__data__func__range.htm#ga3789475e962b4c31e07c1c3bdab8498b">af::range</a></div><div class="ttdeci">AFAPI array range(const dim4 &amp;dims, const int seq_dim=-1, const dtype ty=f32)</div></div>
<div class="ttc" id="agroup__device__func__info_htm_ga1360e706b046b1c5b299bd6e689a0276"><div class="ttname"><a href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a></div><div class="ttdeci">AFAPI void info()</div></div>
<div class="ttc" id="agroup__device__func__set_htm_gafbb906ca5b89ec43fdb0e3a14d1df1e7"><div class="ttname"><a href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7">af::setDevice</a></div><div class="ttdeci">AFAPI void setDevice(const int device)</div><div class="ttdoc">Sets the current device.</div></div>
<div class="ttc" id="agroup__image__func__colorspace_htm_ga9dabba47b9390faacf8fb146605339b0"><div class="ttname"><a href="group__image__func__colorspace.htm#ga9dabba47b9390faacf8fb146605339b0">af::colorSpace</a></div><div class="ttdeci">AFAPI array colorSpace(const array &amp;image, const CSpace to, const CSpace from)</div><div class="ttdoc">C++ Interface wrapper for colorspace conversion.</div></div>
<div class="ttc" id="agroup__image__func__gauss_htm_gaa5de1866bc1bf50bf5fe3cb26d4e410d"><div class="ttname"><a href="group__image__func__gauss.htm#gaa5de1866bc1bf50bf5fe3cb26d4e410d">af::gaussianKernel</a></div><div class="ttdeci">AFAPI array gaussianKernel(const int rows, const int cols, const double sig_r=0, const double sig_c=0)</div><div class="ttdoc">C++ Interface for generating gausian kernels.</div></div>
<div class="ttc" id="agroup__image__func__histogram_htm_gafb93ba76739ef18b3698e39c7768c90a"><div class="ttname"><a href="group__image__func__histogram.htm#gafb93ba76739ef18b3698e39c7768c90a">af::histogram</a></div><div class="ttdeci">AFAPI array histogram(const array &amp;in, const unsigned nbins, const double minval, const double maxval)</div><div class="ttdoc">C++ Interface for histogram.</div></div>
<div class="ttc" id="agroup__imageio__func__load_htm_ga8bcf01ffa60bc513856d98b8a63bb12a"><div class="ttname"><a href="group__imageio__func__load.htm#ga8bcf01ffa60bc513856d98b8a63bb12a">af::loadImage</a></div><div class="ttdeci">AFAPI array loadImage(const char *filename, const bool is_color=false)</div><div class="ttdoc">C++ Interface for loading an image.</div></div>
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
<div class="ttc" id="agroup__reduce__func__max_htm_ga4459daf5a3b081fb4ee15eb49d8c902a"><div class="ttname"><a href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">af::max</a></div><div class="ttdeci">AFAPI array max(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for maximum values in an array.</div></div>
<div class="ttc" id="agroup__scan__func__accum_htm_gae450135c4ae1bdaa4489804a215f3214"><div class="ttname"><a href="group__scan__func__accum.htm#gae450135c4ae1bdaa4489804a215f3214">af::accum</a></div><div class="ttdeci">AFAPI array accum(const array &amp;in, const int dim=0)</div><div class="ttdoc">C++ Interface for computing the cumulative sum (inclusive) of an array.</div></div>
<div class="ttc" id="agroup__scan__func__where_htm_ga1e677067915477bc4aec1605d80d9b7b"><div class="ttname"><a href="group__scan__func__where.htm#ga1e677067915477bc4aec1605d80d9b7b">af::where</a></div><div class="ttdeci">AFAPI array where(const array &amp;in)</div><div class="ttdoc">C++ Interface for finding the locations of non-zero values in an array.</div></div>
<div class="ttc" id="agroup__signal__func__convolve_htm_gae79b64c8b0d6a06309e8b67bf89cf6c9"><div class="ttname"><a href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">af::convolve</a></div><div class="ttdeci">AFAPI array convolve(const array &amp;signal, const array &amp;filter, const convMode mode=AF_CONV_DEFAULT, const convDomain domain=AF_CONV_AUTO)</div><div class="ttdoc">C++ Interface for convolution any(one through three) dimensional signals.</div></div>
<div class="ttc" id="agroup__transform__func__resize_htm_ga017b9370e3e287693519de5b59fcc8ff"><div class="ttname"><a href="group__transform__func__resize.htm#ga017b9370e3e287693519de5b59fcc8ff">af::resize</a></div><div class="ttdeci">AFAPI array resize(const array &amp;in, const dim_t odim0, const dim_t odim1, const interpType method=AF_INTERP_NEAREST)</div><div class="ttdoc">C++ Interface for resizing an image to specified dimensions.</div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:15</a></div></div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Thu Feb 24 2022 14:12:32 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.3 </li>
    </ul>
</div>
</body>
</html>
