<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: complex.h (2020-07-07 17:43:34 +0530, (build 218dd2c99)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('complex_8h_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">complex.h (2020-07-07 17:43:34 +0530, (build 218dd2c99))</div>  </div>
</div><!--header-->
<div class="contents">
<a href="complex_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*******************************************************</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2014, ArrayFire</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * https://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> ********************************************************/</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="defines_8h.htm">af/defines.h</a>&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;ostream&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;istream&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceaf.htm">af</a>{</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="namespaceaf.htm#a686f38b2bf903b7168423db31b8ed17e">af_cfloat</a> {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordtype">float</span> <a class="code" href="structaf_1_1af__cfloat.htm#a06ed4269b34924d748f2f77b17db7d21">real</a>;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordtype">float</span> <a class="code" href="structaf_1_1af__cfloat.htm#add94d585be4b8a725d3a4cd3fabb7f98">imag</a>;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="structaf_1_1af__cfloat.htm#a8f971db8a5b54bee6bb7daf30a8be657">af_cfloat</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> _real = 0, <span class="keyword">const</span> <span class="keywordtype">float</span> _imag = 0) :<a class="code" href="structaf_1_1af__cfloat.htm#a06ed4269b34924d748f2f77b17db7d21">real</a>(_real), <a class="code" href="structaf_1_1af__cfloat.htm#add94d585be4b8a725d3a4cd3fabb7f98">imag</a>(_imag) {}</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;} <a class="code" href="namespaceaf.htm#a686f38b2bf903b7168423db31b8ed17e">af_cfloat</a>;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="structaf_1_1af__cfloat.htm">   31</a></span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structaf_1_1af__cdouble.htm">af_cdouble</a> {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordtype">double</span> <a class="code" href="structaf_1_1af__cdouble.htm#a51c821fcf95975271abfc49311e983d4">real</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordtype">double</span> <a class="code" href="structaf_1_1af__cdouble.htm#a9aace20780eedccdde9fe2352ee4fb05">imag</a>;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="structaf_1_1af__cdouble.htm#a159ecd7a98e5c696b53f4bb583073caa">af_cdouble</a>(<span class="keyword">const</span> <span class="keywordtype">double</span> _real = 0, <span class="keyword">const</span> <span class="keywordtype">double</span> _imag = 0) :<a class="code" href="structaf_1_1af__cdouble.htm#a51c821fcf95975271abfc49311e983d4">real</a>(_real), <a class="code" href="structaf_1_1af__cdouble.htm#a9aace20780eedccdde9fe2352ee4fb05">imag</a>(_imag) {}</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a686f38b2bf903b7168423db31b8ed17e">   37</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;} <a class="code" href="namespaceaf.htm#abb644ea63cfe438ea51235af80ac8469">af_cdouble</a>;</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="structaf_1_1af__cfloat.htm#a06ed4269b34924d748f2f77b17db7d21">   39</a></span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="structaf_1_1af__cdouble.htm#a51c821fcf95975271abfc49311e983d4">   40</a></span>&#160;}</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="structaf_1_1af__cdouble.htm#a9aace20780eedccdde9fe2352ee4fb05">   41</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="structaf_1_1af__cfloat.htm#a8f971db8a5b54bee6bb7daf30a8be657">   42</a></span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="structaf_1_1af__cdouble.htm#a159ecd7a98e5c696b53f4bb583073caa">   43</a></span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">typedef</span> <a class="code" href="structaf_1_1af__cfloat.htm">af::af_cfloat</a>   <a class="code" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a>;</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="namespaceaf.htm#abb644ea63cfe438ea51235af80ac8469">   45</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="structaf_1_1af__cdouble.htm">af::af_cdouble</a>  <a class="code" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">float</span> <a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>(<a class="code" href="structaf_1_1af__cfloat.htm">af_cfloat</a> val);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">double</span> <a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>(<a class="code" href="structaf_1_1af__cdouble.htm">af_cdouble</a> val);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">float</span> <a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>(<a class="code" href="structaf_1_1af__cfloat.htm">af_cfloat</a> val);</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">   51</a></span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">double</span> <a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>(<a class="code" href="structaf_1_1af__cdouble.htm">af_cdouble</a> val);</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">   52</a></span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">// +,-,*,/ for (cfloat, cfloat) and (cdouble, cdouble)</span></div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a74dccc725330fc255aee141f613c418c">   54</a></span>&#160;<span class="preprocessor">#define DEFINE_OP(OP)                                                               \</span></div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a405b319b613a24a4d216030e4cddb101">   55</a></span>&#160;<span class="preprocessor">    AFAPI af::cfloat  operator OP(const af::cfloat  &amp;lhs, const af::cfloat  &amp;rhs);  \</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">    AFAPI af::cdouble operator OP(const af::cdouble &amp;lhs, const af::cdouble &amp;rhs);  \</span></div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="namespaceaf.htm#addd3d679e7c6bc246a6867397ae7621e">   57</a></span>&#160;<span class="preprocessor"></span> </div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="namespaceaf.htm#abc25dea11e9bc0d60577906671e96cf4">   58</a></span>&#160;<a class="code" href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">DEFINE_OP</a>(+)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<a class="code" href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">DEFINE_OP</a>(-)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<a class="code" href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">DEFINE_OP</a>(*)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<a class="code" href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">DEFINE_OP</a>(/)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">#undef DEFINE_OP</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="namespaceaf.htm#aeff6602fcce587dbb5f21632a2503888">   65</a></span>&#160;<span class="comment">// +,/ for (cfloat, double) and (cdouble, double)</span></div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a33f925205c58a00259c401d680d660d5">   66</a></span>&#160;<span class="preprocessor">#define DEFINE_OP(OP)                                                               \</span></div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a2e4beb0013455c2f7bd8b62872e42fb0">   67</a></span>&#160;<span class="preprocessor">    AFAPI af::cfloat  operator OP(const af::cfloat  &amp;lhs, const     double  &amp;rhs);  \</span></div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a882ef10c610e99ecdb970e9cb8429089">   68</a></span>&#160;<span class="preprocessor">    AFAPI af::cdouble operator OP(const af::cdouble &amp;lhs, const     double  &amp;rhs);  \</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor"></span> </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<a class="code" href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">DEFINE_OP</a>(+)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<a class="code" href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">DEFINE_OP</a>(/)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#undef DEFINE_OP</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">// -,* for (cfloat, double) and (cdouble, double)</span></div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="namespaceaf.htm#ae52b439ba5a6833f5e087df42577f6cc">   77</a></span>&#160;<span class="preprocessor">#define DEFINE_OP(OP)                                                               \</span></div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a73e894d5cb9ae6a71f00a7883d2a2dac">   78</a></span>&#160;<span class="preprocessor">    AFAPI af::cfloat  operator OP(const af::cfloat  &amp;lhs, const     double  &amp;rhs);  \</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor">    AFAPI af::cdouble operator OP(const af::cdouble &amp;lhs, const     double  &amp;rhs);  \</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor"></span> </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<a class="code" href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">DEFINE_OP</a>(-)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<a class="code" href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">DEFINE_OP</a>(*)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor">#undef DEFINE_OP</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">#endif  // AF_API_VERSION</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a2a8247be5b35d670a340ff4ce8385d5f">   88</a></span>&#160;<span class="comment">// +, -, *, / for (double, cfloat/cdouble) and (cfloat/cdouble, cdouble/cfloat)</span></div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a5eb9119ce56e8e55977e87a49e2202b7">   89</a></span>&#160;<span class="preprocessor">#define DEFINE_OP(OP)                                                               \</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">    AFAPI af::cfloat  operator OP(const double      &amp;rhs, const af::cfloat  &amp;lhs);  \</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">    AFAPI af::cdouble operator OP(const double      &amp;rhs, const af::cdouble &amp;lhs);  \</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">    AFAPI af::cdouble operator OP(const af::cfloat  &amp;lhs, const af::cdouble &amp;rhs);  \</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">    AFAPI af::cdouble operator OP(const af::cdouble &amp;lhs, const af::cfloat  &amp;rhs);  \</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor"></span> </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<a class="code" href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">DEFINE_OP</a>(+)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<a class="code" href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">DEFINE_OP</a>(-)</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">   97</a></span>&#160;<a class="code" href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">DEFINE_OP</a>(*)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<a class="code" href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">DEFINE_OP</a>(/)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">#undef DEFINE_OP</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor">#endif  // AF_API_VERSION</span></div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a926c4185bb75e500faba82cdf9cdddd9">  102</a></span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a8b2fa26470cb9cc89e2438bfe4f23a27">  103</a></span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">bool</span> <a class="code" href="group__arith__func__eq.htm#ga09dd9c72bd295829fd83e8802f454ca1">operator==</a>(<span class="keyword">const</span> <a class="code" href="structaf_1_1af__cfloat.htm">cfloat</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="structaf_1_1af__cfloat.htm">cfloat</a> &amp;rhs);</div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="namespaceaf.htm#afec6156a6be4817e8c8a9f35dadaa02a">  104</a></span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">bool</span> <a class="code" href="group__arith__func__eq.htm#ga09dd9c72bd295829fd83e8802f454ca1">operator==</a>(<span class="keyword">const</span> <a class="code" href="structaf_1_1af__cdouble.htm">cdouble</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="structaf_1_1af__cdouble.htm">cdouble</a> &amp;rhs);</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a8273d165f999c973b0eb4ff58c7ed4f3">  105</a></span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">bool</span> <a class="code" href="group__arith__func__neq.htm#gabb296d1b19266a22f0816ba52984601c">operator!=</a>(<span class="keyword">const</span> <a class="code" href="structaf_1_1af__cfloat.htm">cfloat</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="structaf_1_1af__cfloat.htm">cfloat</a> &amp;rhs);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">bool</span> <a class="code" href="group__arith__func__neq.htm#gabb296d1b19266a22f0816ba52984601c">operator!=</a>(<span class="keyword">const</span> <a class="code" href="structaf_1_1af__cdouble.htm">cdouble</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="structaf_1_1af__cdouble.htm">cdouble</a> &amp;rhs);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> std::istream&amp; <a class="code" href="group__arith__func__shiftr.htm#gad401146f5f407745770d593af6601a8d">operator&gt;&gt; </a>(std::istream &amp;is, <a class="code" href="structaf_1_1af__cfloat.htm">cfloat</a> &amp;in);</div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="namespaceaf.htm#af1fefa885fa781ae8c03c3c8fa25804b">  110</a></span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> std::istream&amp; <a class="code" href="group__arith__func__shiftr.htm#gad401146f5f407745770d593af6601a8d">operator&gt;&gt; </a>(std::istream &amp;is, <a class="code" href="structaf_1_1af__cdouble.htm">cdouble</a> &amp;in);</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a6434134336ba158e9d3a7b40e65da918">  111</a></span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> std::ostream&amp; <a class="code" href="group__arith__func__shiftl.htm#gade1f7cf5ba0c88126fef53eb6c48df47">operator&lt;&lt; </a>(std::ostream &amp;os, <span class="keyword">const</span> <a class="code" href="structaf_1_1af__cfloat.htm">cfloat</a> &amp;in);</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="namespaceaf.htm#af130b743b5abe48393f8f8ac7c974a5a">  113</a></span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> std::ostream&amp; <a class="code" href="group__arith__func__shiftl.htm#gade1f7cf5ba0c88126fef53eb6c48df47">operator&lt;&lt; </a>(std::ostream &amp;os, <span class="keyword">const</span> <a class="code" href="structaf_1_1af__cdouble.htm">cdouble</a> &amp;in);</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="namespaceaf.htm#aa23148bc47d3229ac683d35b8021fb1d">  114</a></span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a6f8b141f8a61fb46cf9b9550a74db5be">  116</a></span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">float</span> <a class="code" href="group__arith__func__abs.htm#ga23aa8c28a5ffa9368cc92abb143f5eaa">abs</a>(<span class="keyword">const</span> <a class="code" href="structaf_1_1af__cfloat.htm">cfloat</a> &amp;val);</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="namespaceaf.htm#af89e92a1b2fb8a38768fefa04b7df9ed">  117</a></span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">double</span> <a class="code" href="group__arith__func__abs.htm#ga23aa8c28a5ffa9368cc92abb143f5eaa">abs</a>(<span class="keyword">const</span> <a class="code" href="structaf_1_1af__cdouble.htm">cdouble</a> &amp;val);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="namespaceaf.htm#ab11d30f44bd5affed653ff11e0d9406d">  119</a></span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="structaf_1_1af__cfloat.htm">cfloat</a> <a class="code" href="namespaceaf.htm#aee503b023cfbcf64eb2d230b7c24c280">conj</a>(<span class="keyword">const</span> <a class="code" href="structaf_1_1af__cfloat.htm">cfloat</a> &amp;val);</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="namespaceaf.htm#a28b2a1ee007b59f8c5f69413e8c1a7e2">  120</a></span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="structaf_1_1af__cdouble.htm">cdouble</a> <a class="code" href="namespaceaf.htm#aee503b023cfbcf64eb2d230b7c24c280">conj</a>(<span class="keyword">const</span> <a class="code" href="structaf_1_1af__cdouble.htm">cdouble</a> &amp;val);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="namespaceaf.htm#aef8c240a34d08d2b4d95abf30499df18">  123</a></span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespaceaf_htm_abb644ea63cfe438ea51235af80ac8469"><div class="ttname"><a href="namespaceaf.htm#abb644ea63cfe438ea51235af80ac8469">af::af_cdouble</a></div><div class="ttdeci">struct af::af_cdouble af_cdouble</div></div>
<div class="ttc" id="agroup__arith__func__neq_htm_gabb296d1b19266a22f0816ba52984601c"><div class="ttname"><a href="group__arith__func__neq.htm#gabb296d1b19266a22f0816ba52984601c">af::operator!=</a></div><div class="ttdeci">AFAPI array operator!=(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Performs an inequality operation on two arrays or an array and a value.</div></div>
<div class="ttc" id="anamespaceaf_htm_aee503b023cfbcf64eb2d230b7c24c280"><div class="ttname"><a href="namespaceaf.htm#aee503b023cfbcf64eb2d230b7c24c280">af::conj</a></div><div class="ttdeci">AFAPI cfloat conj(const cfloat &amp;val)</div></div>
<div class="ttc" id="anamespaceaf_htm_a63e29e484b92e217fe817fe78abc4f5f"><div class="ttname"><a href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">af::cfloat</a></div><div class="ttdeci">af::af_cfloat cfloat</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00051">complex.h:51</a></div></div>
<div class="ttc" id="agroup__arith__func__eq_htm_ga09dd9c72bd295829fd83e8802f454ca1"><div class="ttname"><a href="group__arith__func__eq.htm#ga09dd9c72bd295829fd83e8802f454ca1">af::operator==</a></div><div class="ttdeci">AFAPI array operator==(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Performs an equality operation on two arrays or an array and a value.</div></div>
<div class="ttc" id="agroup__arith__func__abs_htm_ga23aa8c28a5ffa9368cc92abb143f5eaa"><div class="ttname"><a href="group__arith__func__abs.htm#ga23aa8c28a5ffa9368cc92abb143f5eaa">af::abs</a></div><div class="ttdeci">AFAPI array abs(const array &amp;in)</div><div class="ttdoc">C++ Interface for absolute value.</div></div>
<div class="ttc" id="adefines_8h_htm_ab23e67549eba2cfbaf0eb5f88f947e48"><div class="ttname"><a href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a></div><div class="ttdeci">#define AFAPI</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00039">defines.h:38</a></div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:15</a></div></div>
<div class="ttc" id="acomplex_8h_htm_a7cb04f4ee5d65aa4d9954c37f48b3ac7"><div class="ttname"><a href="complex_8h.htm#a7cb04f4ee5d65aa4d9954c37f48b3ac7">DEFINE_OP</a></div><div class="ttdeci">#define DEFINE_OP(OP)</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00097">complex.h:96</a></div></div>
<div class="ttc" id="astructaf_1_1af__cfloat_htm_a8f971db8a5b54bee6bb7daf30a8be657"><div class="ttname"><a href="structaf_1_1af__cfloat.htm#a8f971db8a5b54bee6bb7daf30a8be657">af::af_cfloat::af_cfloat</a></div><div class="ttdeci">af_cfloat(const float _real=0, const float _imag=0)</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00042">complex.h:42</a></div></div>
<div class="ttc" id="astructaf_1_1af__cdouble_htm_a9aace20780eedccdde9fe2352ee4fb05"><div class="ttname"><a href="structaf_1_1af__cdouble.htm#a9aace20780eedccdde9fe2352ee4fb05">af::af_cdouble::imag</a></div><div class="ttdeci">double imag</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00041">complex.h:41</a></div></div>
<div class="ttc" id="anamespaceaf_htm_a686f38b2bf903b7168423db31b8ed17e"><div class="ttname"><a href="namespaceaf.htm#a686f38b2bf903b7168423db31b8ed17e">af::af_cfloat</a></div><div class="ttdeci">struct af::af_cfloat af_cfloat</div></div>
<div class="ttc" id="astructaf_1_1af__cfloat_htm_a06ed4269b34924d748f2f77b17db7d21"><div class="ttname"><a href="structaf_1_1af__cfloat.htm#a06ed4269b34924d748f2f77b17db7d21">af::af_cfloat::real</a></div><div class="ttdeci">float real</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00039">complex.h:39</a></div></div>
<div class="ttc" id="agroup__arith__func__real_htm_ga09209f0d8ffd557608fef6bade1689c9"><div class="ttname"><a href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">af::real</a></div><div class="ttdeci">AFAPI array real(const array &amp;in)</div><div class="ttdoc">C++ Interface for getting real part from complex array.</div></div>
<div class="ttc" id="astructaf_1_1af__cdouble_htm_a51c821fcf95975271abfc49311e983d4"><div class="ttname"><a href="structaf_1_1af__cdouble.htm#a51c821fcf95975271abfc49311e983d4">af::af_cdouble::real</a></div><div class="ttdeci">double real</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00040">complex.h:40</a></div></div>
<div class="ttc" id="astructaf_1_1af__cfloat_htm_add94d585be4b8a725d3a4cd3fabb7f98"><div class="ttname"><a href="structaf_1_1af__cfloat.htm#add94d585be4b8a725d3a4cd3fabb7f98">af::af_cfloat::imag</a></div><div class="ttdeci">float imag</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00040">complex.h:40</a></div></div>
<div class="ttc" id="agroup__arith__func__shiftr_htm_gad401146f5f407745770d593af6601a8d"><div class="ttname"><a href="group__arith__func__shiftr.htm#gad401146f5f407745770d593af6601a8d">af::operator&gt;&gt;</a></div><div class="ttdeci">AFAPI array operator&gt;&gt;(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Performs an right shift operation on two arrays or an array and a value.</div></div>
<div class="ttc" id="agroup__arith__func__imag_htm_gade4b0cbdc402bc05d45a7f130b1fa865"><div class="ttname"><a href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">af::imag</a></div><div class="ttdeci">AFAPI array imag(const array &amp;in)</div><div class="ttdoc">C++ Interface for getting imaginary part from complex array.</div></div>
<div class="ttc" id="astructaf_1_1af__cdouble_htm_a159ecd7a98e5c696b53f4bb583073caa"><div class="ttname"><a href="structaf_1_1af__cdouble.htm#a159ecd7a98e5c696b53f4bb583073caa">af::af_cdouble::af_cdouble</a></div><div class="ttdeci">af_cdouble(const double _real=0, const double _imag=0)</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00043">complex.h:43</a></div></div>
<div class="ttc" id="astructaf_1_1af__cdouble_htm"><div class="ttname"><a href="structaf_1_1af__cdouble.htm">af::af_cdouble</a></div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00039">complex.h:39</a></div></div>
<div class="ttc" id="astructaf_1_1af__cfloat_htm"><div class="ttname"><a href="structaf_1_1af__cfloat.htm">af::af_cfloat</a></div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00031">complex.h:31</a></div></div>
<div class="ttc" id="agroup__arith__func__shiftl_htm_gade1f7cf5ba0c88126fef53eb6c48df47"><div class="ttname"><a href="group__arith__func__shiftl.htm#gade1f7cf5ba0c88126fef53eb6c48df47">af::operator&lt;&lt;</a></div><div class="ttdeci">AFAPI array operator&lt;&lt;(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Performs an left shift operation on two arrays or an array and a value.</div></div>
<div class="ttc" id="adefines_8h_htm"><div class="ttname"><a href="defines_8h.htm">defines.h</a></div></div>
<div class="ttc" id="anamespaceaf_htm_acd654c72624253fcd7fd88fe5298aa9a"><div class="ttname"><a href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">af::cdouble</a></div><div class="ttdeci">af::af_cdouble cdouble</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00052">complex.h:52</a></div></div>
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
