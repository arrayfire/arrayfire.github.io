<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: statistics.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('statistics_8h.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">statistics.h File Reference</div></div>
</div><!--header-->
<div class="contents">
<h3 class="version">(2023-01-24 18:32:46 -0500, (build 987d5675a))</h3><div class="textblock"><code>#include &lt;<a class="el" href="defines_8h_source.htm">af/defines.h</a>&gt;</code><br />
</div>
<p><a href="statistics_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceaf"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm">af</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga4cc3ee9a9aa91806d52ba6bca6288b04"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__mean.htm#ga4cc3ee9a9aa91806d52ba6bca6288b04">mean</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:ga4cc3ee9a9aa91806d52ba6bca6288b04"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for mean.  <br /></td></tr>
<tr class="separator:ga4cc3ee9a9aa91806d52ba6bca6288b04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab1cd34dff991f160e65caa7109a31ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__mean.htm#gaab1cd34dff991f160e65caa7109a31ef">mean</a> (const array &amp;in, const array &amp;weights, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:gaab1cd34dff991f160e65caa7109a31ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for mean of weighted inputs.  <br /></td></tr>
<tr class="separator:gaab1cd34dff991f160e65caa7109a31ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga15da39f142c646212b8e881bf14575e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga15da39f142c646212b8e881bf14575e9">var</a> (const array &amp;in, const bool isbiased=false, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:ga15da39f142c646212b8e881bf14575e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance.  <br /></td></tr>
<tr class="separator:ga15da39f142c646212b8e881bf14575e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2be08efff9f8a0364db1da5965a09d99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga2be08efff9f8a0364db1da5965a09d99">var</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:ga2be08efff9f8a0364db1da5965a09d99"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance.  <br /></td></tr>
<tr class="separator:ga2be08efff9f8a0364db1da5965a09d99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4816fc6ab68bc5e7273abbf6b32a2b1a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga4816fc6ab68bc5e7273abbf6b32a2b1a">var</a> (const array &amp;in, const array &amp;weights, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:ga4816fc6ab68bc5e7273abbf6b32a2b1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance of weighted inputs.  <br /></td></tr>
<tr class="separator:ga4816fc6ab68bc5e7273abbf6b32a2b1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2149bdb2e5ac3c3593441332edda163c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm#a2149bdb2e5ac3c3593441332edda163c">meanvar</a> (array &amp;mean, array &amp;var, const array &amp;in, const array &amp;weights, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias=<a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6ae4f72a0687f083f8988f481f68c58a05">AF_VARIANCE_POPULATION</a>, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:a2149bdb2e5ac3c3593441332edda163c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for mean and variance.  <br /></td></tr>
<tr class="separator:a2149bdb2e5ac3c3593441332edda163c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1635a37d1b8a7156edba1549aa9d0178"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#ga1635a37d1b8a7156edba1549aa9d0178">stdev</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:ga1635a37d1b8a7156edba1549aa9d0178"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for standard deviation.  <br /></td></tr>
<tr class="separator:ga1635a37d1b8a7156edba1549aa9d0178"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad4fb1183b5666f8455594bea2694d0c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#gad4fb1183b5666f8455594bea2694d0c4">stdev</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:gad4fb1183b5666f8455594bea2694d0c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for standard deviation.  <br /></td></tr>
<tr class="separator:gad4fb1183b5666f8455594bea2694d0c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa1614b303b77f3856a212bbb4a796908"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__cov.htm#gaa1614b303b77f3856a212bbb4a796908">cov</a> (const array &amp;X, const array &amp;Y, const bool isbiased=false)</td></tr>
<tr class="memdesc:gaa1614b303b77f3856a212bbb4a796908"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for covariance.  <br /></td></tr>
<tr class="separator:gaa1614b303b77f3856a212bbb4a796908"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d52a232e3503434ba4eb8dd8d0f6a09"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__cov.htm#ga1d52a232e3503434ba4eb8dd8d0f6a09">cov</a> (const array &amp;X, const array &amp;Y, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias)</td></tr>
<tr class="memdesc:ga1d52a232e3503434ba4eb8dd8d0f6a09"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for covariance.  <br /></td></tr>
<tr class="separator:ga1d52a232e3503434ba4eb8dd8d0f6a09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6c170573573ae397b18f4b3b38f13f29"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__median.htm#ga6c170573573ae397b18f4b3b38f13f29">median</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:ga6c170573573ae397b18f4b3b38f13f29"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for median.  <br /></td></tr>
<tr class="separator:ga6c170573573ae397b18f4b3b38f13f29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga036c72970f13458fd8649bebd28fabb3"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga036c72970f13458fd8649bebd28fabb3"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__mean.htm#ga036c72970f13458fd8649bebd28fabb3">mean</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga036c72970f13458fd8649bebd28fabb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for mean of all elements.  <br /></td></tr>
<tr class="separator:ga036c72970f13458fd8649bebd28fabb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1a3ed118fac6743ca71022bdf3e3b99b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga1a3ed118fac6743ca71022bdf3e3b99b"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__mean.htm#ga1a3ed118fac6743ca71022bdf3e3b99b">mean</a> (const array &amp;in, const array &amp;weights)</td></tr>
<tr class="memdesc:ga1a3ed118fac6743ca71022bdf3e3b99b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for mean of all elements in weighted input.  <br /></td></tr>
<tr class="separator:ga1a3ed118fac6743ca71022bdf3e3b99b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga125d9bb2ab282cd6b9cec9f9fc763be4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga125d9bb2ab282cd6b9cec9f9fc763be4"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga125d9bb2ab282cd6b9cec9f9fc763be4">var</a> (const array &amp;in, const bool isbiased=false)</td></tr>
<tr class="memdesc:ga125d9bb2ab282cd6b9cec9f9fc763be4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance of all elements.  <br /></td></tr>
<tr class="separator:ga125d9bb2ab282cd6b9cec9f9fc763be4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7a13eca3b692375397464ea35249bd72"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga7a13eca3b692375397464ea35249bd72"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga7a13eca3b692375397464ea35249bd72">var</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias)</td></tr>
<tr class="memdesc:ga7a13eca3b692375397464ea35249bd72"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance of all elements.  <br /></td></tr>
<tr class="separator:ga7a13eca3b692375397464ea35249bd72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0cca5d8f3637b6a5cb60ed2830256c2b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga0cca5d8f3637b6a5cb60ed2830256c2b"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga0cca5d8f3637b6a5cb60ed2830256c2b">var</a> (const array &amp;in, const array &amp;weights)</td></tr>
<tr class="memdesc:ga0cca5d8f3637b6a5cb60ed2830256c2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance of all elements in weighted input.  <br /></td></tr>
<tr class="separator:ga0cca5d8f3637b6a5cb60ed2830256c2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6433b6a91f811356c1ef7f876b0149ff"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga6433b6a91f811356c1ef7f876b0149ff"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#ga6433b6a91f811356c1ef7f876b0149ff">stdev</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga6433b6a91f811356c1ef7f876b0149ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for standard deviation of all elements.  <br /></td></tr>
<tr class="separator:ga6433b6a91f811356c1ef7f876b0149ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga16b742de1551b654ed787751c022c79b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga16b742de1551b654ed787751c022c79b"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#ga16b742de1551b654ed787751c022c79b">stdev</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias)</td></tr>
<tr class="memdesc:ga16b742de1551b654ed787751c022c79b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for standard deviation of all elements.  <br /></td></tr>
<tr class="separator:ga16b742de1551b654ed787751c022c79b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d18d7c34d42649a6375f6451e96eb25"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga3d18d7c34d42649a6375f6451e96eb25"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__median.htm#ga3d18d7c34d42649a6375f6451e96eb25">median</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga3d18d7c34d42649a6375f6451e96eb25"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for median of all elements.  <br /></td></tr>
<tr class="separator:ga3d18d7c34d42649a6375f6451e96eb25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga669d1d719f9cd0057591c5b9eebc06c6"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga669d1d719f9cd0057591c5b9eebc06c6"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__corrcoef.htm#ga669d1d719f9cd0057591c5b9eebc06c6">corrcoef</a> (const array &amp;X, const array &amp;Y)</td></tr>
<tr class="memdesc:ga669d1d719f9cd0057591c5b9eebc06c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for correlation coefficient.  <br /></td></tr>
<tr class="separator:ga669d1d719f9cd0057591c5b9eebc06c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4e47e9fcf3117e5385152d2ef53c7eda"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__topk.htm#ga4e47e9fcf3117e5385152d2ef53c7eda">topk</a> (array &amp;values, array &amp;indices, const array &amp;in, const int k, const int dim=-1, const topkFunction order=<a class="el" href="defines_8h.htm#a9da1ffc26eb1d77eda51f209f943487ba91ed15b3164e5a3fd6cd3d688c40d640">AF_TOPK_MAX</a>)</td></tr>
<tr class="memdesc:ga4e47e9fcf3117e5385152d2ef53c7eda"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for finding top k elements along a given dimension.  <br /></td></tr>
<tr class="separator:ga4e47e9fcf3117e5385152d2ef53c7eda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga762600f4aa698a1de34ce72f7d4a0d89"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__mean.htm#ga762600f4aa698a1de34ce72f7d4a0d89">af_mean</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:ga762600f4aa698a1de34ce72f7d4a0d89"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for mean.  <br /></td></tr>
<tr class="separator:ga762600f4aa698a1de34ce72f7d4a0d89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f044b72cc04e39fc336f07c89a71491"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__mean.htm#ga0f044b72cc04e39fc336f07c89a71491">af_mean_weighted</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> weights, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:ga0f044b72cc04e39fc336f07c89a71491"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for mean of weighted input array.  <br /></td></tr>
<tr class="separator:ga0f044b72cc04e39fc336f07c89a71491"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7782e8de146ef2e7816aa75448ef8648"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga7782e8de146ef2e7816aa75448ef8648">af_var</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const bool isbiased, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:ga7782e8de146ef2e7816aa75448ef8648"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance.  <br /></td></tr>
<tr class="separator:ga7782e8de146ef2e7816aa75448ef8648"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae80f87451f42050dc75bf18f543fc410"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#gae80f87451f42050dc75bf18f543fc410">af_var_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:gae80f87451f42050dc75bf18f543fc410"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance.  <br /></td></tr>
<tr class="separator:gae80f87451f42050dc75bf18f543fc410"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga06ad132cb12a5760c2058278456d041e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga06ad132cb12a5760c2058278456d041e">af_var_weighted</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> weights, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:ga06ad132cb12a5760c2058278456d041e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance of weighted input array.  <br /></td></tr>
<tr class="separator:ga06ad132cb12a5760c2058278456d041e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42dbfc69e8a5dbb614a1addd40d6686a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="statistics_8h.htm#a42dbfc69e8a5dbb614a1addd40d6686a">af_meanvar</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *mean, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *var, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> weights, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:a42dbfc69e8a5dbb614a1addd40d6686a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for mean and variance.  <br /></td></tr>
<tr class="separator:a42dbfc69e8a5dbb614a1addd40d6686a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d81575f2edbddea880db838ebadaac7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#ga3d81575f2edbddea880db838ebadaac7">af_stdev</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:ga3d81575f2edbddea880db838ebadaac7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for standard deviation.  <br /></td></tr>
<tr class="separator:ga3d81575f2edbddea880db838ebadaac7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac96bb45869add8c949020112b5350ea5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#gac96bb45869add8c949020112b5350ea5">af_stdev_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:gac96bb45869add8c949020112b5350ea5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for standard deviation.  <br /></td></tr>
<tr class="separator:gac96bb45869add8c949020112b5350ea5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c1c9a1d919efb02729958a91666162f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__cov.htm#ga1c1c9a1d919efb02729958a91666162f">af_cov</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> X, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> Y, const bool isbiased)</td></tr>
<tr class="memdesc:ga1c1c9a1d919efb02729958a91666162f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for covariance.  <br /></td></tr>
<tr class="separator:ga1c1c9a1d919efb02729958a91666162f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6961966875af7e967ad290ad3721ea1e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__cov.htm#ga6961966875af7e967ad290ad3721ea1e">af_cov_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> X, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> Y, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias)</td></tr>
<tr class="memdesc:ga6961966875af7e967ad290ad3721ea1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for covariance.  <br /></td></tr>
<tr class="separator:ga6961966875af7e967ad290ad3721ea1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga79ced0d340f8cbebb9fd1e0e75b7ee9e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__median.htm#ga79ced0d340f8cbebb9fd1e0e75b7ee9e">af_median</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:ga79ced0d340f8cbebb9fd1e0e75b7ee9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for median.  <br /></td></tr>
<tr class="separator:ga79ced0d340f8cbebb9fd1e0e75b7ee9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga87fd44bb47e6ea6380ea8b7dadd2f4e8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__mean.htm#ga87fd44bb47e6ea6380ea8b7dadd2f4e8">af_mean_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga87fd44bb47e6ea6380ea8b7dadd2f4e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for mean of all elements.  <br /></td></tr>
<tr class="separator:ga87fd44bb47e6ea6380ea8b7dadd2f4e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga008221f09b128799b2382493916a4bc8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__mean.htm#ga008221f09b128799b2382493916a4bc8">af_mean_all_weighted</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> weights)</td></tr>
<tr class="memdesc:ga008221f09b128799b2382493916a4bc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for mean of all elements in weighted input.  <br /></td></tr>
<tr class="separator:ga008221f09b128799b2382493916a4bc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga59baa7e073507920910e1c32ae1d8432"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga59baa7e073507920910e1c32ae1d8432">af_var_all</a> (double *realVal, double *imagVal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const bool isbiased)</td></tr>
<tr class="memdesc:ga59baa7e073507920910e1c32ae1d8432"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance of all elements.  <br /></td></tr>
<tr class="separator:ga59baa7e073507920910e1c32ae1d8432"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad6a3ed0dd2e0b6878eb6538211c55f5b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#gad6a3ed0dd2e0b6878eb6538211c55f5b">af_var_all_v2</a> (double *realVal, double *imagVal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias)</td></tr>
<tr class="memdesc:gad6a3ed0dd2e0b6878eb6538211c55f5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance of all elements.  <br /></td></tr>
<tr class="separator:gad6a3ed0dd2e0b6878eb6538211c55f5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga26f83014829926e3112de3435a87ac1d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga26f83014829926e3112de3435a87ac1d">af_var_all_weighted</a> (double *realVal, double *imagVal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> weights)</td></tr>
<tr class="memdesc:ga26f83014829926e3112de3435a87ac1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance of all elements in weighted input.  <br /></td></tr>
<tr class="separator:ga26f83014829926e3112de3435a87ac1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0fbb49ddd033b0fcabd58a64ce355806"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#ga0fbb49ddd033b0fcabd58a64ce355806">af_stdev_all</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga0fbb49ddd033b0fcabd58a64ce355806"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for standard deviation of all elements.  <br /></td></tr>
<tr class="separator:ga0fbb49ddd033b0fcabd58a64ce355806"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1642775a5abef993213306e0fd6d72cf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__stdev.htm#ga1642775a5abef993213306e0fd6d72cf">af_stdev_all_v2</a> (double *real, double *imag, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias)</td></tr>
<tr class="memdesc:ga1642775a5abef993213306e0fd6d72cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for standard deviation of all elements.  <br /></td></tr>
<tr class="separator:ga1642775a5abef993213306e0fd6d72cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga82b3d518bb7838eb6795af4a92c08b92"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__median.htm#ga82b3d518bb7838eb6795af4a92c08b92">af_median_all</a> (double *realVal, double *imagVal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga82b3d518bb7838eb6795af4a92c08b92"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for median.  <br /></td></tr>
<tr class="separator:ga82b3d518bb7838eb6795af4a92c08b92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga26b894c86731234136bfe1342453d8a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__corrcoef.htm#ga26b894c86731234136bfe1342453d8a7">af_corrcoef</a> (double *realVal, double *imagVal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> X, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> Y)</td></tr>
<tr class="memdesc:ga26b894c86731234136bfe1342453d8a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for correlation coefficient.  <br /></td></tr>
<tr class="separator:ga26b894c86731234136bfe1342453d8a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea5a2a6aa11ce7d25f7a7c0ffadbdf51"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__topk.htm#gaea5a2a6aa11ce7d25f7a7c0ffadbdf51">af_topk</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *values, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *indices, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const int k, const int dim, const <a class="el" href="defines_8h.htm#a9da1ffc26eb1d77eda51f209f943487b">af_topk_function</a> order)</td></tr>
<tr class="memdesc:gaea5a2a6aa11ce7d25f7a7c0ffadbdf51"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for finding top k elements along a given dimension.  <br /></td></tr>
<tr class="separator:gaea5a2a6aa11ce7d25f7a7c0ffadbdf51"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a42dbfc69e8a5dbb614a1addd40d6686a" name="a42dbfc69e8a5dbb614a1addd40d6686a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42dbfc69e8a5dbb614a1addd40d6686a">&#9670;&#160;</a></span>af_meanvar()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_meanvar </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>mean</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>var</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a>&#160;</td>
          <td class="paramname"><em>bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for mean and variance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">mean</td><td>The mean of the input array along <code>dim</code> dimension </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">var</td><td>The variance of the input array along the <code>dim</code> dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>The input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights</td><td>The weights to scale the input array before calculating the mean and varience. If empty, the input is not scaled </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bias</td><td>The type of bias used for variance calculation </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>The dimension along which the variance and mean are calculated. Default is -1 meaning the first non-zero dim </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="navelem"><a class="el" href="statistics_8h.htm">statistics.h</a></li>
        <li class="footer">Generated on Tue Feb 14 2023 10:39:42 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.6 </li>
    </ul>
</div>
</body>
</html>
