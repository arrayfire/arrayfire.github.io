<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<title>matmul</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__blas__func__matmul.htm','');});
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">matmul<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">Complete List of ArrayFire Functions</a><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__linalg__mat.htm">Linear Algebra</a> &raquo;  &#124; <a class="el" href="group__blas__mat.htm">BLAS operations</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Matrix multiplication using array.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga63306b6ed967bd1055086db862fe885b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__blas__func__matmul.htm#ga63306b6ed967bd1055086db862fe885b">matmul</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs, const <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421d">matProp</a> optLhs=<a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421daccba98c5b50e203da4c452c2c00c3d3e">AF_MAT_NONE</a>, const <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421d">matProp</a> optRhs=<a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421daccba98c5b50e203da4c452c2c00c3d3e">AF_MAT_NONE</a>)</td></tr>
<tr class="memdesc:ga63306b6ed967bd1055086db862fe885b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Matrix multiply of two arrays.  <a href="group__blas__func__matmul.htm#ga63306b6ed967bd1055086db862fe885b">More...</a><br /></td></tr>
<tr class="separator:ga63306b6ed967bd1055086db862fe885b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadf90230a67ea7a0b4697511dd978b9c7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__blas__func__matmul.htm#gadf90230a67ea7a0b4697511dd978b9c7">matmulNT</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gadf90230a67ea7a0b4697511dd978b9c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Matrix multiply of two arrays.  <a href="group__blas__func__matmul.htm#gadf90230a67ea7a0b4697511dd978b9c7">More...</a><br /></td></tr>
<tr class="separator:gadf90230a67ea7a0b4697511dd978b9c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6655d7913b35d7e59f7c8560a5368fbc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__blas__func__matmul.htm#ga6655d7913b35d7e59f7c8560a5368fbc">matmulTN</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga6655d7913b35d7e59f7c8560a5368fbc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Matrix multiply of two arrays.  <a href="group__blas__func__matmul.htm#ga6655d7913b35d7e59f7c8560a5368fbc">More...</a><br /></td></tr>
<tr class="separator:ga6655d7913b35d7e59f7c8560a5368fbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7f3e5a6f282ea2c2c32886c95694bb88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__blas__func__matmul.htm#ga7f3e5a6f282ea2c2c32886c95694bb88">matmulTT</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga7f3e5a6f282ea2c2c32886c95694bb88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Matrix multiply of two arrays.  <a href="group__blas__func__matmul.htm#ga7f3e5a6f282ea2c2c32886c95694bb88">More...</a><br /></td></tr>
<tr class="separator:ga7f3e5a6f282ea2c2c32886c95694bb88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d05bc14538f14713fe3ce65f6841f44"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__blas__func__matmul.htm#ga3d05bc14538f14713fe3ce65f6841f44">matmul</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;a, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;b, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;c)</td></tr>
<tr class="memdesc:ga3d05bc14538f14713fe3ce65f6841f44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Chain 2 matrix multiplications.  <a href="group__blas__func__matmul.htm#ga3d05bc14538f14713fe3ce65f6841f44">More...</a><br /></td></tr>
<tr class="separator:ga3d05bc14538f14713fe3ce65f6841f44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga329f6ec3d910ca0443e4bc6b7cfe129f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__blas__func__matmul.htm#ga329f6ec3d910ca0443e4bc6b7cfe129f">matmul</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;a, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;b, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;c, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;d)</td></tr>
<tr class="memdesc:ga329f6ec3d910ca0443e4bc6b7cfe129f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Chain 3 matrix multiplications.  <a href="group__blas__func__matmul.htm#ga329f6ec3d910ca0443e4bc6b7cfe129f">More...</a><br /></td></tr>
<tr class="separator:ga329f6ec3d910ca0443e4bc6b7cfe129f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3f3f29358b44286d19ff2037547649fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__blas__func__matmul.htm#ga3f3f29358b44286d19ff2037547649fe">af_matmul</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421d">af_mat_prop</a> optLhs, const <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421d">af_mat_prop</a> optRhs)</td></tr>
<tr class="memdesc:ga3f3f29358b44286d19ff2037547649fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Matrix multiply of two <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>.  <a href="#ga3f3f29358b44286d19ff2037547649fe">More...</a><br /></td></tr>
<tr class="separator:ga3f3f29358b44286d19ff2037547649fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Matrix multiplication using array. </p>
<p>Performs a matrix multiplication on the two input arrays after performing the operations specified in the options. The operations are done while reading the data from memory. This results in no additional memory being used for temporary buffers.</p>
<dl class="section note"><dt>Note</dt><dd>Sparse support was added to ArrayFire in v3.4.0. This function can be use for Sparse-Dense matrix multiplication. See the notes of the function for usage and restrictions.</dd></dl>
<hr/>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga3f3f29358b44286d19ff2037547649fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3f3f29358b44286d19ff2037547649fe">&#9670;&nbsp;</a></span>af_matmul()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_matmul </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421d">af_mat_prop</a>&#160;</td>
          <td class="paramname"><em>optLhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421d">af_mat_prop</a>&#160;</td>
          <td class="paramname"><em>optRhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Matrix multiply of two <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>. </p>
<p>Performs a matrix multiplication on two arrays (lhs, rhs).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>Pointer to the output <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>A 2D matrix <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>A 2D matrix <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">optLhs</td><td>Transpose left hand side before the function is performed </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">optRhs</td><td>Transpose right hand side before the function is performed</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS if the process is successful.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><b> The following applies for Sparse-Dense matrix multiplication.</b> </dd>
<dd>
This function can be used with one sparse input. The sparse input must always be the <code>lhs</code> and the dense matrix must be <code>rhs</code>. </dd>
<dd>
The sparse array can only be of <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa33553814922263702c5a95695c988d8b">AF_STORAGE_CSR</a> format. </dd>
<dd>
The returned array is always dense. </dd>
<dd>
<code>optLhs</code> an only be one of <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421daccba98c5b50e203da4c452c2c00c3d3e">AF_MAT_NONE</a>, <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421dab5052a3677cb5a64d91b16946cff1a75">AF_MAT_TRANS</a>, <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421da0d69e3f61f97ca65cdb8bc2ee5a21a03">AF_MAT_CTRANS</a>. </dd>
<dd>
<code>optRhs</code> can only be <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421daccba98c5b50e203da4c452c2c00c3d3e">AF_MAT_NONE</a>. </dd></dl>

</div>
</div>
<a id="ga63306b6ed967bd1055086db862fe885b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga63306b6ed967bd1055086db862fe885b">&#9670;&nbsp;</a></span>matmul() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::matmul </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421d">matProp</a>&#160;</td>
          <td class="paramname"><em>optLhs</em> = <code><a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421daccba98c5b50e203da4c452c2c00c3d3e">AF_MAT_NONE</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421d">matProp</a>&#160;</td>
          <td class="paramname"><em>optRhs</em> = <code><a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421daccba98c5b50e203da4c452c2c00c3d3e">AF_MAT_NONE</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Matrix multiply of two arrays. </p>
<p>Performs a matrix multiplication on the two input arrays after performing the operations specified in the options. The operations are done while reading the data from memory. This results in no additional memory being used for temporary buffers.</p>
<dl class="section note"><dt>Note</dt><dd>Sparse support was added to ArrayFire in v3.4.0. This function can be use for Sparse-Dense matrix multiplication. See the notes of the function for usage and restrictions.</dd></dl>
<hr/>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>The array object on the left hand side </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>The array object on the right hand side </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">optLhs</td><td>Transpose left hand side before the function is performed </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">optRhs</td><td>Transpose right hand side before the function is performed </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The result of the matrix multiplication of lhs, rhs</dd></dl>
<dl class="section note"><dt>Note</dt><dd>optLhs and optRhs can only be one of <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421daccba98c5b50e203da4c452c2c00c3d3e">AF_MAT_NONE</a>, <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421dab5052a3677cb5a64d91b16946cff1a75">AF_MAT_TRANS</a>, <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421da0d69e3f61f97ca65cdb8bc2ee5a21a03">AF_MAT_CTRANS</a> </dd>
<dd>
This function is not supported in GFOR</dd>
<dd>
<b> The following applies for Sparse-Dense matrix multiplication.</b> </dd>
<dd>
This function can be used with one sparse input. The sparse input must always be the <code>lhs</code> and the dense matrix must be <code>rhs</code>. </dd>
<dd>
The sparse array can only be of <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa33553814922263702c5a95695c988d8b">AF_STORAGE_CSR</a> format. </dd>
<dd>
The returned array is always dense. </dd>
<dd>
<code>optLhs</code> an only be one of <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421daccba98c5b50e203da4c452c2c00c3d3e">AF_MAT_NONE</a>, <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421dab5052a3677cb5a64d91b16946cff1a75">AF_MAT_TRANS</a>, <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421da0d69e3f61f97ca65cdb8bc2ee5a21a03">AF_MAT_CTRANS</a>. </dd>
<dd>
<code>optRhs</code> can only be <a class="el" href="defines_8h.htm#a67fd2718ccb6233ec081fc7b4757421daccba98c5b50e203da4c452c2c00c3d3e">AF_MAT_NONE</a>. </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="benchmarks_2blas_8cpp-example.htm#a1">benchmarks/blas.cpp</a>, <a class="el" href="benchmarks_2cg_8cpp-example.htm#a8">benchmarks/cg.cpp</a>, <a class="el" href="financial_2heston_model_8cpp-example.htm#a5">financial/heston_model.cpp</a>, <a class="el" href="getting_started_2convolve_8cpp-example.htm#a8">getting_started/convolve.cpp</a>, <a class="el" href="graphics_2gravity_sim_8cpp-example.htm#a17">graphics/gravity_sim.cpp</a>, <a class="el" href="lin_algebra_2svd_8cpp-example.htm#a5">lin_algebra/svd.cpp</a>, <a class="el" href="machine_learning_2deep_belief_net_8cpp-example.htm#a17">machine_learning/deep_belief_net.cpp</a>, <a class="el" href="machine_learning_2logistic_regression_8cpp-example.htm#a4">machine_learning/logistic_regression.cpp</a>, <a class="el" href="machine_learning_2neural_network_8cpp-example.htm#a8">machine_learning/neural_network.cpp</a>, <a class="el" href="machine_learning_2perceptron_8cpp-example.htm#a4">machine_learning/perceptron.cpp</a>, <a class="el" href="machine_learning_2rbm_8cpp-example.htm#a12">machine_learning/rbm.cpp</a>, and <a class="el" href="machine_learning_2softmax_regression_8cpp-example.htm#a4">machine_learning/softmax_regression.cpp</a>.</dd>
</dl>
</div>
</div>
<a id="ga3d05bc14538f14713fe3ce65f6841f44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3d05bc14538f14713fe3ce65f6841f44">&#9670;&nbsp;</a></span>matmul() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::matmul </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Chain 2 matrix multiplications. </p>
<p>The matrix multiplications are done in a way to reduce temporary memory</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">a</td><td>The first array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td>The second array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">c</td><td>The third array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>out = a x b x c</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function is not supported in GFOR </dd></dl>

</div>
</div>
<a id="ga329f6ec3d910ca0443e4bc6b7cfe129f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga329f6ec3d910ca0443e4bc6b7cfe129f">&#9670;&nbsp;</a></span>matmul() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::matmul </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>d</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Chain 3 matrix multiplications. </p>
<p>The matrix multiplications are done in a way to reduce temporary memory</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">a</td><td>The first array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td>The second array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">c</td><td>The third array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d</td><td>The fourth array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>out = a x b x c x d</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function is not supported in GFOR </dd></dl>

</div>
</div>
<a id="gadf90230a67ea7a0b4697511dd978b9c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadf90230a67ea7a0b4697511dd978b9c7">&#9670;&nbsp;</a></span>matmulNT()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::matmulNT </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Matrix multiply of two arrays. </p>
<p>Performs a matrix multiplication on the two input arrays after performing the operations specified in the options. The operations are done while reading the data from memory. This results in no additional memory being used for temporary buffers.</p>
<dl class="section note"><dt>Note</dt><dd>Sparse support was added to ArrayFire in v3.4.0. This function can be use for Sparse-Dense matrix multiplication. See the notes of the function for usage and restrictions.</dd></dl>
<hr/>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>The array object on the left hand side </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>The array object on the right hand side </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The result of the matrix multiplication of <code>lhs</code>, transpose(<code>rhs</code>)</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function is not supported in GFOR </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="lin_algebra_2cholesky_8cpp-example.htm#a4">lin_algebra/cholesky.cpp</a>, <a class="el" href="machine_learning_2deep_belief_net_8cpp-example.htm#a16">machine_learning/deep_belief_net.cpp</a>, and <a class="el" href="machine_learning_2rbm_8cpp-example.htm#a11">machine_learning/rbm.cpp</a>.</dd>
</dl>
</div>
</div>
<a id="ga6655d7913b35d7e59f7c8560a5368fbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6655d7913b35d7e59f7c8560a5368fbc">&#9670;&nbsp;</a></span>matmulTN()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::matmulTN </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Matrix multiply of two arrays. </p>
<p>Performs a matrix multiplication on the two input arrays after performing the operations specified in the options. The operations are done while reading the data from memory. This results in no additional memory being used for temporary buffers.</p>
<dl class="section note"><dt>Note</dt><dd>Sparse support was added to ArrayFire in v3.4.0. This function can be use for Sparse-Dense matrix multiplication. See the notes of the function for usage and restrictions.</dd></dl>
<hr/>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>The array object on the left hand side </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>The array object on the right hand side </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The result of the matrix multiplication of transpose(<code>lhs</code>), <code>rhs</code> </dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function is not supported in GFOR </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="machine_learning_2deep_belief_net_8cpp-example.htm#a18">machine_learning/deep_belief_net.cpp</a>, <a class="el" href="machine_learning_2logistic_regression_8cpp-example.htm#a11">machine_learning/logistic_regression.cpp</a>, <a class="el" href="machine_learning_2perceptron_8cpp-example.htm#a8">machine_learning/perceptron.cpp</a>, <a class="el" href="machine_learning_2rbm_8cpp-example.htm#a16">machine_learning/rbm.cpp</a>, and <a class="el" href="machine_learning_2softmax_regression_8cpp-example.htm#a12">machine_learning/softmax_regression.cpp</a>.</dd>
</dl>
</div>
</div>
<a id="ga7f3e5a6f282ea2c2c32886c95694bb88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7f3e5a6f282ea2c2c32886c95694bb88">&#9670;&nbsp;</a></span>matmulTT()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::matmulTT </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Matrix multiply of two arrays. </p>
<p>Performs a matrix multiplication on the two input arrays after performing the operations specified in the options. The operations are done while reading the data from memory. This results in no additional memory being used for temporary buffers.</p>
<dl class="section note"><dt>Note</dt><dd>Sparse support was added to ArrayFire in v3.4.0. This function can be use for Sparse-Dense matrix multiplication. See the notes of the function for usage and restrictions.</dd></dl>
<hr/>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>The array object on the left hand side </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>The array object on the right hand side </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The result of the matrix multiplication of transpose(<code>lhs</code>), transpose(<code>rhs</code>)</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function is not supported in GFOR </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="machine_learning_2deep_belief_net_8cpp-example.htm#a21">machine_learning/deep_belief_net.cpp</a>, and <a class="el" href="machine_learning_2neural_network_8cpp-example.htm#a11">machine_learning/neural_network.cpp</a>.</dd>
</dl>
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
