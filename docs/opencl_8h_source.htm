<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>opencl.h (2015-12-30 15:19:41 -0500, (build 7507b61)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('opencl_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">opencl.h (2015-12-30 15:19:41 -0500, (build 7507b61))</div>  </div>
</div><!--header-->
<div class="contents">
<a href="opencl_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*******************************************************</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2014, ArrayFire</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> ********************************************************/</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#if defined(__APPLE__) || defined(__MACOSX)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;OpenCL/cl.h&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;CL/cl.h&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="defines_8h.htm">af/defines.h</a>&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__opencl__mat.htm#gad42de383f405b3e38d6eb669c0cbe2e3">afcl_get_context</a>(cl_context *ctx, <span class="keyword">const</span> <span class="keywordtype">bool</span> retain);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__opencl__mat.htm#gab1701ef4f2b68429eb31c1e21c88d0bc">afcl_get_queue</a>(cl_command_queue *queue, <span class="keyword">const</span> <span class="keywordtype">bool</span> retain);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__opencl__mat.htm#gaf7258055284e65a8647a49c3f3b9feee">afcl_get_device_id</a>(cl_device_id *<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 32</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__opencl__mat.htm#ga600361a20ceac2a65590b67fc0366314">afcl_set_device_id</a>(cl_device_id <span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;}</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="array_8h.htm">af/array.h</a>&gt;</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="dim4_8hpp.htm">af/dim4.hpp</a>&gt;</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="exception_8h.htm">af/exception.h</a>&gt;</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="device_8h.htm">af/device.h</a>&gt;</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="namespaceafcl.htm">   82</a></span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceafcl.htm">afcl</a></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;{</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="group__opencl__mat.htm#ga1984398db67a52977435e653bb842da7">  100</a></span>&#160; <span class="keyword">static</span> <span class="keyword">inline</span> cl_context <a class="code" href="group__opencl__mat.htm#ga1984398db67a52977435e653bb842da7">getContext</a>(<span class="keywordtype">bool</span> retain = <span class="keyword">false</span>)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;     cl_context ctx;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;     <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> err = <a class="code" href="group__opencl__mat.htm#gad42de383f405b3e38d6eb669c0cbe2e3">afcl_get_context</a>(&amp;ctx, retain);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;     <span class="keywordflow">if</span> (err != <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>) <span class="keywordflow">throw</span> <a class="code" href="classaf_1_1exception.htm">af::exception</a>(<span class="stringliteral">&quot;Failed to get OpenCL context from arrayfire&quot;</span>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;     <span class="keywordflow">return</span> ctx;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; }</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="group__opencl__mat.htm#ga4bdd87f7ee76ba2ac18a7e1719508d5d">  116</a></span>&#160; <span class="keyword">static</span> <span class="keyword">inline</span> cl_command_queue <a class="code" href="group__opencl__mat.htm#ga4bdd87f7ee76ba2ac18a7e1719508d5d">getQueue</a>(<span class="keywordtype">bool</span> retain = <span class="keyword">false</span>)</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;     cl_command_queue queue;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;     <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> err = <a class="code" href="group__opencl__mat.htm#gab1701ef4f2b68429eb31c1e21c88d0bc">afcl_get_queue</a>(&amp;queue, retain);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;     <span class="keywordflow">if</span> (err != <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>) <span class="keywordflow">throw</span> <a class="code" href="classaf_1_1exception.htm">af::exception</a>(<span class="stringliteral">&quot;Failed to get OpenCL command queue from arrayfire&quot;</span>);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;     <span class="keywordflow">return</span> queue;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="group__opencl__mat.htm#gae40668cc7d19273f449a1628ac438182">  128</a></span>&#160; <span class="keyword">static</span> <span class="keyword">inline</span> cl_device_id <a class="code" href="group__opencl__mat.htm#gae40668cc7d19273f449a1628ac438182">getDeviceId</a>()</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;     cl_device_id id;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;     <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> err = <a class="code" href="group__opencl__mat.htm#gaf7258055284e65a8647a49c3f3b9feee">afcl_get_device_id</a>(&amp;<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;     <span class="keywordflow">if</span> (err != <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>) <span class="keywordflow">throw</span> <a class="code" href="classaf_1_1exception.htm">af::exception</a>(<span class="stringliteral">&quot;Failed to get OpenCL device ID&quot;</span>);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;     <span class="keywordflow">return</span> id;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 32</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="group__opencl__mat.htm#ga242cc7dc5dcebc9e695e4fc3faebb91e">  143</a></span>&#160; <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__opencl__mat.htm#ga242cc7dc5dcebc9e695e4fc3faebb91e">setDeviceId</a>(cl_device_id <span class="keywordtype">id</span>)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;     <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> err = <a class="code" href="group__opencl__mat.htm#ga600361a20ceac2a65590b67fc0366314">afcl_set_device_id</a>(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;     <span class="keywordflow">if</span> (err != <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>) <span class="keywordflow">throw</span> <a class="code" href="classaf_1_1exception.htm">af::exception</a>(<span class="stringliteral">&quot;Failed to set OpenCL device as active device&quot;</span>);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">  161</a></span>&#160; <span class="keyword">static</span> <span class="keyword">inline</span> <a class="code" href="classaf_1_1array.htm">af::array</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="classaf_1_1dim4.htm">af::dim4</a> idims, cl_mem buf, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af::dtype</a> type, <span class="keywordtype">bool</span> retain=<span class="keyword">false</span>)</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;     <span class="keyword">const</span> <span class="keywordtype">unsigned</span> ndims = (unsigned)idims.<a class="code" href="classaf_1_1dim4.htm#a4fd9beb19aa35a30f19811786e99d426">ndims</a>();</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;     <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *dims = idims.<a class="code" href="classaf_1_1dim4.htm#acfe9236f37131e50c17bfb81654c9efc">get</a>();</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;     cl_context context;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;     cl_int clerr = clGetMemObjectInfo(buf, CL_MEM_CONTEXT, <span class="keyword">sizeof</span>(cl_context), &amp;context, NULL);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;     <span class="keywordflow">if</span> (clerr != CL_SUCCESS) {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;         <span class="keywordflow">throw</span> <a class="code" href="classaf_1_1exception.htm">af::exception</a>(<span class="stringliteral">&quot;Failed to get context from cl_mem object \&quot;buf\&quot; &quot;</span>);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;     }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;     <span class="keywordflow">if</span> (context != <a class="code" href="group__opencl__mat.htm#ga1984398db67a52977435e653bb842da7">getContext</a>()) {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;         <span class="keywordflow">throw</span>(<a class="code" href="classaf_1_1exception.htm">af::exception</a>(<span class="stringliteral">&quot;Context mismatch between input \&quot;buf\&quot; and arrayfire&quot;</span>));</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;     }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;     <span class="keywordflow">if</span> (retain) clerr = clRetainMemObject(buf);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;     <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> out;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;     <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> err = <a class="code" href="group__construct__mat.htm#ga751d919b6bc62e4f78dba3b088d75d18">af_device_array</a>(&amp;out, buf, ndims, dims, type);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;     <span class="keywordflow">if</span> (err != <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> || clerr != CL_SUCCESS) {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;         <span class="keywordflow">if</span> (retain &amp;&amp; clerr == CL_SUCCESS) clReleaseMemObject(buf);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;         <span class="keywordflow">throw</span> <a class="code" href="classaf_1_1exception.htm">af::exception</a>(<span class="stringliteral">&quot;Failed to create device array&quot;</span>);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;     }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;     <span class="keywordflow">return</span> <a class="code" href="group__opencl__mat.htm#ga89507e0349f5d7ee068325b9b24c891b">af::array</a>(out);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="group__opencl__mat.htm#ga032919598890f2ccc6b1835c213416c7">  201</a></span>&#160; <span class="keyword">static</span> <span class="keyword">inline</span> <a class="code" href="classaf_1_1array.htm">af::array</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0,</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                               cl_mem buf, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af::dtype</a> type, <span class="keywordtype">bool</span> retain=<span class="keyword">false</span>)</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;     <span class="keywordflow">return</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a>(<a class="code" href="classaf_1_1dim4.htm">af::dim4</a>(dim0), buf, type, retain);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160; }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="group__opencl__mat.htm#ga752a709190f80c8342e2da6fc405af27">  219</a></span>&#160; <span class="keyword">static</span> <span class="keyword">inline</span> <a class="code" href="classaf_1_1array.htm">af::array</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1,</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                               cl_mem buf, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af::dtype</a> type, <span class="keywordtype">bool</span> retain=<span class="keyword">false</span>)</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160; {</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;     <span class="keywordflow">return</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a>(<a class="code" href="classaf_1_1dim4.htm">af::dim4</a>(dim0, dim1), buf, type, retain);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; }</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div>
<div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="group__opencl__mat.htm#gafad240e885df716a656bd6634db22626">  238</a></span>&#160; <span class="keyword">static</span> <span class="keyword">inline</span> <a class="code" href="classaf_1_1array.htm">af::array</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1,</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                               <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2,</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                               cl_mem buf, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af::dtype</a> type, <span class="keywordtype">bool</span> retain=<span class="keyword">false</span>)</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;     <span class="keywordflow">return</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a>(<a class="code" href="classaf_1_1dim4.htm">af::dim4</a>(dim0, dim1, dim2), buf, type, retain);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="group__opencl__mat.htm#ga89507e0349f5d7ee068325b9b24c891b">  259</a></span>&#160; <span class="keyword">static</span> <span class="keyword">inline</span> <a class="code" href="classaf_1_1array.htm">af::array</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1,</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                               <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim3,</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                               cl_mem buf, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af::dtype</a> type, <span class="keywordtype">bool</span> retain=<span class="keyword">false</span>)</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160; {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;     <span class="keywordflow">return</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a>(<a class="code" href="classaf_1_1dim4.htm">af::dim4</a>(dim0, dim1, dim2, dim3), buf, type, retain);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;}</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceaf.htm">af</a></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;{</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#ac0d2f78e5fed75c93dcbe533c1605dc9">  275</a></span>&#160;<span class="keyword">template</span>&lt;&gt; <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> cl_mem *<a class="code" href="group__device__func__device.htm#ga93c855ccd22d37cf90d32aef5ac75030">array::device</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    cl_mem *mem = <span class="keyword">new</span> cl_mem;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> err = <a class="code" href="group__device__func__mem.htm#ga58fda2d491cd27f31108e699b5aef506">af_get_device_ptr</a>((<span class="keywordtype">void</span> **)mem, <span class="keyword">get</span>());</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keywordflow">if</span> (err != <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>) <span class="keywordflow">throw</span> <a class="code" href="classaf_1_1exception.htm">af::exception</a>(<span class="stringliteral">&quot;Failed to get cl_mem from array object&quot;</span>);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keywordflow">return</span> mem;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;}</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;}</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="classaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdef"><b>Definition:</b> exception.h:19</div></div>
<div class="ttc" id="group__opencl__mat_htm_ga89507e0349f5d7ee068325b9b24c891b"><div class="ttname"><a href="group__opencl__mat.htm#ga89507e0349f5d7ee068325b9b24c891b">afcl::array</a></div><div class="ttdeci">static af::array array(dim_t dim0, dim_t dim1, dim_t dim2, dim_t dim3, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer. </div><div class="ttdef"><b>Definition:</b> opencl.h:259</div></div>
<div class="ttc" id="namespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> algorithm.h:14</div></div>
<div class="ttc" id="group__device__func__mem_htm_ga58fda2d491cd27f31108e699b5aef506"><div class="ttname"><a href="group__device__func__mem.htm#ga58fda2d491cd27f31108e699b5aef506">af_get_device_ptr</a></div><div class="ttdeci">AFAPI af_err af_get_device_ptr(void **ptr, const af_array arr)</div><div class="ttdoc">Get the device pointer and lock the buffer in memory manager. </div></div>
<div class="ttc" id="defines_8h_htm_a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76"><div class="ttname"><a href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a></div><div class="ttdoc">The function returned successfully. </div><div class="ttdef"><b>Definition:</b> defines.h:71</div></div>
<div class="ttc" id="group__opencl__mat_htm_gab1701ef4f2b68429eb31c1e21c88d0bc"><div class="ttname"><a href="group__opencl__mat.htm#gab1701ef4f2b68429eb31c1e21c88d0bc">afcl_get_queue</a></div><div class="ttdeci">AFAPI af_err afcl_get_queue(cl_command_queue *queue, const bool retain)</div><div class="ttdoc">Get a handle to ArrayFire&#39;s OpenCL command queue. </div></div>
<div class="ttc" id="array_8h_htm"><div class="ttname"><a href="array_8h.htm">array.h</a></div></div>
<div class="ttc" id="group__opencl__mat_htm_gaf7258055284e65a8647a49c3f3b9feee"><div class="ttname"><a href="group__opencl__mat.htm#gaf7258055284e65a8647a49c3f3b9feee">afcl_get_device_id</a></div><div class="ttdeci">AFAPI af_err afcl_get_device_id(cl_device_id *id)</div><div class="ttdoc">Get the device ID for ArrayFire&#39;s current active device. </div></div>
<div class="ttc" id="group__opencl__mat_htm_gae40668cc7d19273f449a1628ac438182"><div class="ttname"><a href="group__opencl__mat.htm#gae40668cc7d19273f449a1628ac438182">afcl::getDeviceId</a></div><div class="ttdeci">static cl_device_id getDeviceId()</div><div class="ttdoc">Get the device ID for ArrayFire&#39;s current active device. </div><div class="ttdef"><b>Definition:</b> opencl.h:128</div></div>
<div class="ttc" id="device_8h_htm"><div class="ttname"><a href="device_8h.htm">device.h</a></div></div>
<div class="ttc" id="exception_8h_htm"><div class="ttname"><a href="exception_8h.htm">exception.h</a></div></div>
<div class="ttc" id="classaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container. </div><div class="ttdef"><b>Definition:</b> array.h:27</div></div>
<div class="ttc" id="dim4_8hpp_htm"><div class="ttname"><a href="dim4_8hpp.htm">dim4.hpp</a></div></div>
<div class="ttc" id="group__opencl__mat_htm_gad42de383f405b3e38d6eb669c0cbe2e3"><div class="ttname"><a href="group__opencl__mat.htm#gad42de383f405b3e38d6eb669c0cbe2e3">afcl_get_context</a></div><div class="ttdeci">AFAPI af_err afcl_get_context(cl_context *ctx, const bool retain)</div><div class="ttdoc">Get a handle to ArrayFire&#39;s OpenCL context. </div></div>
<div class="ttc" id="defines_8h_htm_a82b94dc53bbd100a0e8ca9dd356aaf4f"><div class="ttname"><a href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a></div><div class="ttdeci">af_err</div><div class="ttdef"><b>Definition:</b> defines.h:67</div></div>
<div class="ttc" id="defines_8h_htm"><div class="ttname"><a href="defines_8h.htm">defines.h</a></div></div>
<div class="ttc" id="classaf_1_1dim4_htm_acfe9236f37131e50c17bfb81654c9efc"><div class="ttname"><a href="classaf_1_1dim4.htm#acfe9236f37131e50c17bfb81654c9efc">af::dim4::get</a></div><div class="ttdeci">dim_t * get()</div><div class="ttdef"><b>Definition:</b> dim4.hpp:52</div></div>
<div class="ttc" id="defines_8h_htm_a7f026aa801b1fa6b85b0d992b414cccb"><div class="ttname"><a href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a></div><div class="ttdeci">long long dim_t</div><div class="ttdef"><b>Definition:</b> defines.h:50</div></div>
<div class="ttc" id="group__opencl__mat_htm_ga1984398db67a52977435e653bb842da7"><div class="ttname"><a href="group__opencl__mat.htm#ga1984398db67a52977435e653bb842da7">afcl::getContext</a></div><div class="ttdeci">static cl_context getContext(bool retain=false)</div><div class="ttdoc">Get a handle to ArrayFire&#39;s OpenCL context. </div><div class="ttdef"><b>Definition:</b> opencl.h:100</div></div>
<div class="ttc" id="defines_8h_htm_ab23e67549eba2cfbaf0eb5f88f947e48"><div class="ttname"><a href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a></div><div class="ttdeci">#define AFAPI</div><div class="ttdef"><b>Definition:</b> defines.h:31</div></div>
<div class="ttc" id="classaf_1_1dim4_htm_a4fd9beb19aa35a30f19811786e99d426"><div class="ttname"><a href="classaf_1_1dim4.htm#a4fd9beb19aa35a30f19811786e99d426">af::dim4::ndims</a></div><div class="ttdeci">dim_t ndims()</div></div>
<div class="ttc" id="group__opencl__mat_htm_ga242cc7dc5dcebc9e695e4fc3faebb91e"><div class="ttname"><a href="group__opencl__mat.htm#ga242cc7dc5dcebc9e695e4fc3faebb91e">afcl::setDeviceId</a></div><div class="ttdeci">static void setDeviceId(cl_device_id id)</div><div class="ttdoc">Set ArrayFire&#39;s active device based on id of type cl_device_id. </div><div class="ttdef"><b>Definition:</b> opencl.h:143</div></div>
<div class="ttc" id="group__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer. </div><div class="ttdef"><b>Definition:</b> opencl.h:161</div></div>
<div class="ttc" id="group__construct__mat_htm_ga751d919b6bc62e4f78dba3b088d75d18"><div class="ttname"><a href="group__construct__mat.htm#ga751d919b6bc62e4f78dba3b088d75d18">af_device_array</a></div><div class="ttdeci">AFAPI af_err af_device_array(af_array *arr, const void *data, const unsigned ndims, const dim_t *const dims, const af_dtype type)</div><div class="ttdoc">Create array from device memory. </div></div>
<div class="ttc" id="namespaceafcl_htm"><div class="ttname"><a href="namespaceafcl.htm">afcl</a></div><div class="ttdef"><b>Definition:</b> opencl.h:82</div></div>
<div class="ttc" id="defines_8h_htm_a8e45f4aa3dbea6a7aa021dbc50a4a089"><div class="ttname"><a href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a></div><div class="ttdeci">void * af_array</div><div class="ttdef"><b>Definition:</b> defines.h:219</div></div>
<div class="ttc" id="group__opencl__mat_htm_ga600361a20ceac2a65590b67fc0366314"><div class="ttname"><a href="group__opencl__mat.htm#ga600361a20ceac2a65590b67fc0366314">afcl_set_device_id</a></div><div class="ttdeci">AFAPI af_err afcl_set_device_id(cl_device_id id)</div><div class="ttdoc">Set ArrayFire&#39;s active device based on id of type cl_device_id. </div></div>
<div class="ttc" id="classaf_1_1dim4_htm"><div class="ttname"><a href="classaf_1_1dim4.htm">af::dim4</a></div><div class="ttdef"><b>Definition:</b> dim4.hpp:26</div></div>
<div class="ttc" id="group__opencl__mat_htm_ga4bdd87f7ee76ba2ac18a7e1719508d5d"><div class="ttname"><a href="group__opencl__mat.htm#ga4bdd87f7ee76ba2ac18a7e1719508d5d">afcl::getQueue</a></div><div class="ttdeci">static cl_command_queue getQueue(bool retain=false)</div><div class="ttdoc">Get a handle to ArrayFire&#39;s OpenCL command queue. </div><div class="ttdef"><b>Definition:</b> opencl.h:116</div></div>
<div class="ttc" id="defines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a></div><div class="ttdeci">af_dtype</div><div class="ttdef"><b>Definition:</b> defines.h:192</div></div>
<div class="ttc" id="group__device__func__device_htm_ga93c855ccd22d37cf90d32aef5ac75030"><div class="ttname"><a href="group__device__func__device.htm#ga93c855ccd22d37cf90d32aef5ac75030">af::array::device</a></div><div class="ttdeci">T * device() const </div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
