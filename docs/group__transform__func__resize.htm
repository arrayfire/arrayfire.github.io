<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: resize</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__transform__func__resize.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">resize<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__image__mat.htm">Image Processing</a> &raquo; <a class="el" href="group__transform__mat.htm">Image transformations</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga017b9370e3e287693519de5b59fcc8ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__resize.htm#ga017b9370e3e287693519de5b59fcc8ff">resize</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a> method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a>)</td></tr>
<tr class="memdesc:ga017b9370e3e287693519de5b59fcc8ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for resizing an image to specified dimensions.  <a href="group__transform__func__resize.htm#ga017b9370e3e287693519de5b59fcc8ff">More...</a><br /></td></tr>
<tr class="separator:ga017b9370e3e287693519de5b59fcc8ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9587c09bde7721659005d920812f5c2a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__resize.htm#ga9587c09bde7721659005d920812f5c2a">resize</a> (const float scale0, const float scale1, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a> method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a>)</td></tr>
<tr class="memdesc:ga9587c09bde7721659005d920812f5c2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for resizing an image to specified scales.  <a href="group__transform__func__resize.htm#ga9587c09bde7721659005d920812f5c2a">More...</a><br /></td></tr>
<tr class="separator:ga9587c09bde7721659005d920812f5c2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacf6e37bf51cfb7dbeed76b6ce1b18bbf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__resize.htm#gacf6e37bf51cfb7dbeed76b6ce1b18bbf">resize</a> (const float <a class="el" href="group__transform__func__scale.htm#ga60a399365ffc65ab2ffde4052903a4b3">scale</a>, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a> method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a>)</td></tr>
<tr class="memdesc:gacf6e37bf51cfb7dbeed76b6ce1b18bbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for resizing an image to specified scale.  <a href="group__transform__func__resize.htm#gacf6e37bf51cfb7dbeed76b6ce1b18bbf">More...</a><br /></td></tr>
<tr class="separator:gacf6e37bf51cfb7dbeed76b6ce1b18bbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2fbcfb50e2b74acb0a087b17e4e0dd8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__resize.htm#gaa2fbcfb50e2b74acb0a087b17e4e0dd8">af_resize</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method)</td></tr>
<tr class="memdesc:gaa2fbcfb50e2b74acb0a087b17e4e0dd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for resizing an image to specified dimensions.  <a href="group__transform__func__resize.htm#gaa2fbcfb50e2b74acb0a087b17e4e0dd8">More...</a><br /></td></tr>
<tr class="separator:gaa2fbcfb50e2b74acb0a087b17e4e0dd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Resize an input image</p>
<p>Resizing an input image can be done using either <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a>, <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68afb4c4ebeb668df33485e7e52596164a8">AF_INTERP_BILINEAR</a> or <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a2322b97c934f035d7d5fa52917632cf2">AF_INTERP_LOWER</a>, interpolations. Nearest interpolation will pick the nearest value to the location, bilinear interpolation will do a weighted interpolation for calculate the new size and lower interpolation is similar to the nearest, except it will use the floor function to get the lower neighbor.</p>
<p>This function does not differentiate between images and data. As long as the array is defined and the output dimensions are not 0, it will resize any type or size of array.</p>
<div class="fragment"><div class="line"><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> in = <a class="code" href="group__data__func__iota.htm#ga8f7c55a54d1f93e55340f59b61662f29">iota</a>(dim4(5, 3));</div>
<div class="line"><a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(<a class="code" href="group__transform__func__resize.htm#ga017b9370e3e287693519de5b59fcc8ff">resize</a>(2, in, <a class="code" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a>));</div>
<div class="line"><a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(<a class="code" href="group__transform__func__resize.htm#ga017b9370e3e287693519de5b59fcc8ff">resize</a>(2, in, <a class="code" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68afb4c4ebeb668df33485e7e52596164a8">AF_INTERP_BILINEAR</a>));</div>
<div class="line"> </div>
<div class="line"><span class="comment">// in [5 3 1 1]</span></div>
<div class="line"><span class="comment">// 0.0000     5.0000    10.0000</span></div>
<div class="line"><span class="comment">// 1.0000     6.0000    11.0000</span></div>
<div class="line"><span class="comment">// 2.0000     7.0000    12.0000</span></div>
<div class="line"><span class="comment">// 3.0000     8.0000    13.0000</span></div>
<div class="line"><span class="comment">// 4.0000     9.0000    14.0000</span></div>
<div class="line"><span class="comment">//</span></div>
<div class="line"><span class="comment">// resize(2, in, AF_INTERP_NEAREST) [10 6 1 1]</span></div>
<div class="line"><span class="comment">// 0.0000     5.0000     5.0000    10.0000    10.0000    10.0000</span></div>
<div class="line"><span class="comment">// 1.0000     6.0000     6.0000    11.0000    11.0000    11.0000</span></div>
<div class="line"><span class="comment">// 1.0000     6.0000     6.0000    11.0000    11.0000    11.0000</span></div>
<div class="line"><span class="comment">// 2.0000     7.0000     7.0000    12.0000    12.0000    12.0000</span></div>
<div class="line"><span class="comment">// 2.0000     7.0000     7.0000    12.0000    12.0000    12.0000</span></div>
<div class="line"><span class="comment">// 3.0000     8.0000     8.0000    13.0000    13.0000    13.0000</span></div>
<div class="line"><span class="comment">// 3.0000     8.0000     8.0000    13.0000    13.0000    13.0000</span></div>
<div class="line"><span class="comment">// 4.0000     9.0000     9.0000    14.0000    14.0000    14.0000</span></div>
<div class="line"><span class="comment">// 4.0000     9.0000     9.0000    14.0000    14.0000    14.0000</span></div>
<div class="line"><span class="comment">// 4.0000     9.0000     9.0000    14.0000    14.0000    14.0000</span></div>
<div class="line"><span class="comment">//</span></div>
<div class="line"><span class="comment">// resize(2, in, AF_INTERP_BILINEAR) [10 6 1 1]</span></div>
<div class="line"><span class="comment">// 0.0000     2.5000     5.0000     7.5000    10.0000    10.0000</span></div>
<div class="line"><span class="comment">// 0.5000     3.0000     5.5000     8.0000    10.5000    10.5000</span></div>
<div class="line"><span class="comment">// 1.0000     3.5000     6.0000     8.5000    11.0000    11.0000</span></div>
<div class="line"><span class="comment">// 1.5000     4.0000     6.5000     9.0000    11.5000    11.5000</span></div>
<div class="line"><span class="comment">// 2.0000     4.5000     7.0000     9.5000    12.0000    12.0000</span></div>
<div class="line"><span class="comment">// 2.5000     5.0000     7.5000    10.0000    12.5000    12.5000</span></div>
<div class="line"><span class="comment">// 3.0000     5.5000     8.0000    10.5000    13.0000    13.0000</span></div>
<div class="line"><span class="comment">// 3.5000     6.0000     8.5000    11.0000    13.5000    13.5000</span></div>
<div class="line"><span class="comment">// 4.0000     6.5000     9.0000    11.5000    14.0000    14.0000</span></div>
<div class="line"><span class="comment">// 4.0000     6.5000     9.0000    11.5000    14.0000    14.0000</span></div>
</div><!-- fragment --> <h2 class="groupheader">Function Documentation</h2>
<a id="gaa2fbcfb50e2b74acb0a087b17e4e0dd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa2fbcfb50e2b74acb0a087b17e4e0dd8">&#9670;&nbsp;</a></span>af_resize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_resize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>odim0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>odim1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>&#160;</td>
          <td class="paramname"><em>method</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for resizing an image to specified dimensions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the resized image of specified by <code>odim0</code> and <code>odim1</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is input image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">odim0</td><td>is the size for the first output dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">odim1</td><td>is the size for the second output dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation type (Nearest by default)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the color transformation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="ga017b9370e3e287693519de5b59fcc8ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga017b9370e3e287693519de5b59fcc8ff">&#9670;&nbsp;</a></span>resize() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::resize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>odim0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>odim1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a>&#160;</td>
          <td class="paramname"><em>method</em> = <code><a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for resizing an image to specified dimensions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is input image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">odim0</td><td>is the size for the first output dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">odim1</td><td>is the size for the second output dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation type (Nearest by default) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resized image of specified by <code>odim0</code> and <code>odim1</code> </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="image_processing_2binary_thresholding_8cpp-example.htm#a18">image_processing/binary_thresholding.cpp</a>, and <a class="el" href="image_processing_2image_editing_8cpp-example.htm#a11">image_processing/image_editing.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="gacf6e37bf51cfb7dbeed76b6ce1b18bbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacf6e37bf51cfb7dbeed76b6ce1b18bbf">&#9670;&nbsp;</a></span>resize() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::resize </td>
          <td>(</td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a>&#160;</td>
          <td class="paramname"><em>method</em> = <code><a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for resizing an image to specified scale. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">scale</td><td>is scale used for both input dimensions </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is input image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation type (Nearest by default) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the image scaled by the specified by <code>scale</code> </dd></dl>

</div>
</div>
<a id="ga9587c09bde7721659005d920812f5c2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9587c09bde7721659005d920812f5c2a">&#9670;&nbsp;</a></span>resize() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::resize </td>
          <td>(</td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>scale0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>scale1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a>&#160;</td>
          <td class="paramname"><em>method</em> = <code><a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for resizing an image to specified scales. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">scale0</td><td>is scale used for first input dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scale1</td><td>is scale used for second input dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is input image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation type (Nearest by default) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the image scaled by the specified by <code>scale0</code> and <code>scale1</code> </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="adefines_8h_htm_ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf"><div class="ttname"><a href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a></div><div class="ttdeci">@ AF_INTERP_NEAREST</div><div class="ttdoc">Nearest Interpolation.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00243">defines.h:243</a></div></div>
<div class="ttc" id="autil_8h_htm_a6de8e7f9eb3914d1cea66e55e7b791d3"><div class="ttname"><a href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a></div><div class="ttdeci">#define af_print(...)</div><div class="ttdef"><b>Definition:</b> <a href="util_8h_source.htm#l00149">util.h:148</a></div></div>
<div class="ttc" id="adefines_8h_htm_ac0b7c1cfd1fb146314d96f17bbfffa68afb4c4ebeb668df33485e7e52596164a8"><div class="ttname"><a href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68afb4c4ebeb668df33485e7e52596164a8">AF_INTERP_BILINEAR</a></div><div class="ttdeci">@ AF_INTERP_BILINEAR</div><div class="ttdoc">Bilinear Interpolation.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00245">defines.h:245</a></div></div>
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
<div class="ttc" id="agroup__data__func__iota_htm_ga8f7c55a54d1f93e55340f59b61662f29"><div class="ttname"><a href="group__data__func__iota.htm#ga8f7c55a54d1f93e55340f59b61662f29">af::iota</a></div><div class="ttdeci">AFAPI array iota(const dim4 &amp;dims, const dim4 &amp;tile_dims=dim4(1), const dtype ty=f32)</div></div>
<div class="ttc" id="agroup__transform__func__resize_htm_ga017b9370e3e287693519de5b59fcc8ff"><div class="ttname"><a href="group__transform__func__resize.htm#ga017b9370e3e287693519de5b59fcc8ff">af::resize</a></div><div class="ttdeci">AFAPI array resize(const array &amp;in, const dim_t odim0, const dim_t odim1, const interpType method=AF_INTERP_NEAREST)</div><div class="ttdoc">C++ Interface for resizing an image to specified dimensions.</div></div>
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
