<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<title>algorithm.h (2018-11-19 17:22:56 +0530, (build dc38ef13)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('algorithm_8h_source.htm','');});
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">algorithm.h (2018-11-19 17:22:56 +0530, (build dc38ef13))</div>  </div>
</div><!--header-->
<div class="contents">
<a href="algorithm_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*******************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2014, ArrayFire</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * All rights reserved.</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * This file is distributed under 3-clause BSD license.</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * The complete license agreement can be obtained at:</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> ********************************************************/</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="defines_8h.htm">af/defines.h</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="namespaceaf.htm">   14</a></span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceaf.htm">af</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="keyword">class </span><a class="code" href="classaf_1_1array.htm">array</a>;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">sum</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">sum</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">product</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">product</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">min</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b">allTrue</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__any__true.htm#gafe4c8f22bbfa4288696f2a133b1b619e">anyTrue</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__count.htm#ga76b6172262aa0e64bf6979c16a40ea3c">count</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">sum</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">sum</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">product</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">product</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">min</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b">allTrue</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__any__true.htm#gafe4c8f22bbfa4288696f2a133b1b619e">anyTrue</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__count.htm#ga76b6172262aa0e64bf6979c16a40ea3c">count</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">min</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;val, <a class="code" href="classaf_1_1array.htm">array</a> &amp;idx, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;val, <a class="code" href="classaf_1_1array.htm">array</a> &amp;idx, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">min</a>(T *val, <span class="keywordtype">unsigned</span> *idx, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>(T *val, <span class="keywordtype">unsigned</span> *idx, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__scan__func__accum.htm#gae450135c4ae1bdaa4489804a215f3214">accum</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = 0);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;=34</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__scan__func__scan.htm#gabe3e469eb355990345012bbe6393b4c3">scan</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = 0, <a class="code" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6c">binaryOp</a> op = <a class="code" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6ca335c219d88e113349f6ce08e830314a1">AF_BINARY_ADD</a>, <span class="keywordtype">bool</span> inclusive_scan = <span class="keyword">true</span>);</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__scan__func__scanbykey.htm#ga881c15b2d5ae0dea679eb3fd700ad681">scanByKey</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;key, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = 0, <a class="code" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6c">binaryOp</a> op = <a class="code" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6ca335c219d88e113349f6ce08e830314a1">AF_BINARY_ADD</a>, <span class="keywordtype">bool</span> inclusive_scan = <span class="keyword">true</span>);</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__scan__func__where.htm#ga1e677067915477bc4aec1605d80d9b7b">where</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__calc__func__diff1.htm#gab099192b1beeddab1ad14536aba689b2">diff1</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = 0);</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__calc__func__diff2.htm#gad803d1bc99910533a5789c428522aaef">diff2</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = 0);</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">sort</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim = 0, <span class="keyword">const</span> <span class="keywordtype">bool</span> isAscending = <span class="keyword">true</span>);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span>  <a class="code" href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">sort</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;out, <a class="code" href="classaf_1_1array.htm">array</a> &amp;indices, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim = 0,</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                     <span class="keyword">const</span> <span class="keywordtype">bool</span> isAscending = <span class="keyword">true</span>);</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span>  <a class="code" href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">sort</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;out_keys, <a class="code" href="classaf_1_1array.htm">array</a> &amp;out_values, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;keys, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;values,</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                     <span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim = 0, <span class="keyword">const</span> <span class="keywordtype">bool</span> isAscending = <span class="keyword">true</span>);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">setUnique</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">bool</span> is_sorted=<span class="keyword">false</span>);</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__set__func__union.htm#gaa793c080cfa2c5ed7f422479e8e0bfe3">setUnion</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;first, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;second, <span class="keyword">const</span> <span class="keywordtype">bool</span> is_unique=<span class="keyword">false</span>);</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__set__func__intersect.htm#gae4549aee29c563edfb0b4a444fbf9200">setIntersect</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;first, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;second, <span class="keyword">const</span> <span class="keywordtype">bool</span> is_unique=<span class="keyword">false</span>);</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;}</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__sum.htm#gacd4917c2e916870ebdf54afc2f61d533">af_sum</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__sum.htm#ga52461231e2d9995f689b7f23eea0e798">af_sum_nan</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__product.htm#ga2be338d39be30ad22dddf658a4f5676e">af_product</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__product.htm#ga1d25447c16d492767ba7efa7ee72a36e">af_product_nan</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__min.htm#ga2ac4c8d9ba613dbc9bfec0bee7be8eb8">af_min</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__max.htm#ga267f32b8dbb1b508e8738e3748d8dc3f">af_max</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__all__true.htm#ga068708be5177a0aa3788af140bb5ebd6">af_all_true</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__any__true.htm#ga7c275cda2cfc8eb0bd20ea86472ca0d5">af_any_true</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__count.htm#gaf2664c25ee6ca30aa3f5aa77db789f95">af_count</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__sum.htm#gabc009d04df0faf29ba1e381c7badde58">af_sum_all</a>(<span class="keywordtype">double</span> *<a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, <span class="keywordtype">double</span> *<a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__sum.htm#ga65bb08cd2644d5828d72fc42b2eb8abc">af_sum_nan_all</a>(<span class="keywordtype">double</span> *<a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, <span class="keywordtype">double</span> *<a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__product.htm#gad226a6ec77c12fd16cf42e3fe3264e22">af_product_all</a>(<span class="keywordtype">double</span> *<a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, <span class="keywordtype">double</span> *<a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__product.htm#gaca78d54c53a33b419bfdb5c64accbc7b">af_product_nan_all</a>(<span class="keywordtype">double</span> *<a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, <span class="keywordtype">double</span> *<a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__min.htm#gab10198ae7ead1dc10f220d576f118104">af_min_all</a>(<span class="keywordtype">double</span> *<a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, <span class="keywordtype">double</span> *<a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__max.htm#ga5f71ab6056943723149585d2aebade7c">af_max_all</a>(<span class="keywordtype">double</span> *<a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, <span class="keywordtype">double</span> *<a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__all__true.htm#ga9b50d4adffe3050c3d21bbbbb3d2e434">af_all_true_all</a>(<span class="keywordtype">double</span> *<a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, <span class="keywordtype">double</span> *<a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__any__true.htm#ga47d991276bb5bf8cdba8340e8751e536">af_any_true_all</a>(<span class="keywordtype">double</span> *<a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, <span class="keywordtype">double</span> *<a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__count.htm#ga38699c5ce172c15e9850a9eda6050da5">af_count_all</a>(<span class="keywordtype">double</span> *<a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, <span class="keywordtype">double</span> *<a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__min.htm#ga2f65943090e0c2317bd682c25594b901">af_imin</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__max.htm#gaf0e6a523e2e435d5409d5d8cb843d8a2">af_imax</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__min.htm#gae75785af0fdfcbb1f4c34461235f5206">af_imin_all</a>(<span class="keywordtype">double</span> *<a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, <span class="keywordtype">double</span> *<a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>, <span class="keywordtype">unsigned</span> *idx, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__max.htm#gaea009bd51145be2fcc688b2390725401">af_imax_all</a>(<span class="keywordtype">double</span> *<a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, <span class="keywordtype">double</span> *<a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>, <span class="keywordtype">unsigned</span> *idx, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__scan__func__accum.htm#ga50d499e844e0b63e338cb3ea50439629">af_accum</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;=34</span></div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__scan__func__scan.htm#ga1c864e22826f61bec2e9b6c61aa93fce">af_scan</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <a class="code" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6c">af_binary_op</a> op, <span class="keywordtype">bool</span> inclusive_scan);</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__scan__func__scanbykey.htm#gaaae150e0f197782782f45340d137b027">af_scan_by_key</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> key, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <a class="code" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6c">af_binary_op</a> op, <span class="keywordtype">bool</span> inclusive_scan);</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__scan__func__where.htm#gafda59a3d25d35238592dd09907be9d07">af_where</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__calc__func__diff1.htm#gad3be33ce8114f65c188645e958fce171">af_diff1</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__calc__func__diff2.htm#gafc7b2d05e4e85aeb3e8b3239f598f70c">af_diff2</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__sort__func__sort.htm#gac4460d605452515d07ee8432f906aa8e">af_sort</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim, <span class="keyword">const</span> <span class="keywordtype">bool</span> isAscending);</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__sort__func__sort__index.htm#ga55675cd825c320db87398b1010b6ae41">af_sort_index</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *indices, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in,</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                               <span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim, <span class="keyword">const</span> <span class="keywordtype">bool</span> isAscending);</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__sort__func__sort__keys.htm#ga7d4fcaf229ece5fbbe30a638d9a60b8a">af_sort_by_key</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out_keys, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out_values,</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;                                <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> values,</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;                                <span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim, <span class="keyword">const</span> <span class="keywordtype">bool</span> isAscending);</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__set__func__unique.htm#ga6afa1de48cbbc4b2df530c2530087943">af_set_unique</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">bool</span> is_sorted);</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__set__func__union.htm#gaabeead0c0dc360db9398e9703dbb273f">af_set_union</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> first, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> second, <span class="keyword">const</span> <span class="keywordtype">bool</span> is_unique);</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__set__func__intersect.htm#ga985f9332c5f858eec66c717881ef2607">af_set_intersect</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> first, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> second, <span class="keyword">const</span> <span class="keywordtype">bool</span> is_unique);</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;}</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="namespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:14</a></div></div>
<div class="ttc" id="group__scan__func__where_htm_ga1e677067915477bc4aec1605d80d9b7b"><div class="ttname"><a href="group__scan__func__where.htm#ga1e677067915477bc4aec1605d80d9b7b">af::where</a></div><div class="ttdeci">AFAPI array where(const array &amp;in)</div><div class="ttdoc">C++ Interface for finding the locations of non-zero values in an array. </div></div>
<div class="ttc" id="group__reduce__func__min_htm_gae75785af0fdfcbb1f4c34461235f5206"><div class="ttname"><a href="group__reduce__func__min.htm#gae75785af0fdfcbb1f4c34461235f5206">af_imin_all</a></div><div class="ttdeci">AFAPI af_err af_imin_all(double *real, double *imag, unsigned *idx, const af_array in)</div><div class="ttdoc">C Interface for getting minimum value and its location from the entire array. </div></div>
<div class="ttc" id="group__set__func__union_htm_gaabeead0c0dc360db9398e9703dbb273f"><div class="ttname"><a href="group__set__func__union.htm#gaabeead0c0dc360db9398e9703dbb273f">af_set_union</a></div><div class="ttdeci">AFAPI af_err af_set_union(af_array *out, const af_array first, const af_array second, const bool is_unique)</div><div class="ttdoc">C Interface for finding the union of two arrays. </div></div>
<div class="ttc" id="group__reduce__func__count_htm_ga38699c5ce172c15e9850a9eda6050da5"><div class="ttname"><a href="group__reduce__func__count.htm#ga38699c5ce172c15e9850a9eda6050da5">af_count_all</a></div><div class="ttdeci">AFAPI af_err af_count_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for counting total number of non-zero values in an array. </div></div>
<div class="ttc" id="group__reduce__func__sum_htm_ga52461231e2d9995f689b7f23eea0e798"><div class="ttname"><a href="group__reduce__func__sum.htm#ga52461231e2d9995f689b7f23eea0e798">af_sum_nan</a></div><div class="ttdeci">AFAPI af_err af_sum_nan(af_array *out, const af_array in, const int dim, const double nanval)</div><div class="ttdoc">C Interface for sum of elements in an array while replacing nans. </div></div>
<div class="ttc" id="group__reduce__func__any__true_htm_ga47d991276bb5bf8cdba8340e8751e536"><div class="ttname"><a href="group__reduce__func__any__true.htm#ga47d991276bb5bf8cdba8340e8751e536">af_any_true_all</a></div><div class="ttdeci">AFAPI af_err af_any_true_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for checking if any values in an array are true. </div></div>
<div class="ttc" id="group__reduce__func__product_htm_gad226a6ec77c12fd16cf42e3fe3264e22"><div class="ttname"><a href="group__reduce__func__product.htm#gad226a6ec77c12fd16cf42e3fe3264e22">af_product_all</a></div><div class="ttdeci">AFAPI af_err af_product_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for product of all elements in an array. </div></div>
<div class="ttc" id="group__scan__func__where_htm_gafda59a3d25d35238592dd09907be9d07"><div class="ttname"><a href="group__scan__func__where.htm#gafda59a3d25d35238592dd09907be9d07">af_where</a></div><div class="ttdeci">AFAPI af_err af_where(af_array *idx, const af_array in)</div><div class="ttdoc">C Interface for finding the locations of non-zero values in an array. </div></div>
<div class="ttc" id="group__set__func__unique_htm_ga6afa1de48cbbc4b2df530c2530087943"><div class="ttname"><a href="group__set__func__unique.htm#ga6afa1de48cbbc4b2df530c2530087943">af_set_unique</a></div><div class="ttdeci">AFAPI af_err af_set_unique(af_array *out, const af_array in, const bool is_sorted)</div><div class="ttdoc">C Interface for getting unique values. </div></div>
<div class="ttc" id="group__reduce__func__sum_htm_ga964a8e7e78dd6d8f4d20c17edf82dbf5"><div class="ttname"><a href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">af::sum</a></div><div class="ttdeci">AFAPI array sum(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for sum of elements in an array. </div></div>
<div class="ttc" id="group__scan__func__accum_htm_ga50d499e844e0b63e338cb3ea50439629"><div class="ttname"><a href="group__scan__func__accum.htm#ga50d499e844e0b63e338cb3ea50439629">af_accum</a></div><div class="ttdeci">AFAPI af_err af_accum(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for computing the cumulative sum (inclusive) of an array. </div></div>
<div class="ttc" id="group__reduce__func__max_htm_gaea009bd51145be2fcc688b2390725401"><div class="ttname"><a href="group__reduce__func__max.htm#gaea009bd51145be2fcc688b2390725401">af_imax_all</a></div><div class="ttdeci">AFAPI af_err af_imax_all(double *real, double *imag, unsigned *idx, const af_array in)</div><div class="ttdoc">C Interface for getting maximum value and it&amp;#39;s location from the entire array. </div></div>
<div class="ttc" id="group__sort__func__sort__index_htm_ga55675cd825c320db87398b1010b6ae41"><div class="ttname"><a href="group__sort__func__sort__index.htm#ga55675cd825c320db87398b1010b6ae41">af_sort_index</a></div><div class="ttdeci">AFAPI af_err af_sort_index(af_array *out, af_array *indices, const af_array in, const unsigned dim, const bool isAscending)</div><div class="ttdoc">C Interface for sorting an array and getting original indices. </div></div>
<div class="ttc" id="group__reduce__func__all__true_htm_gaf3f22add3a54fb729a969cf8f669fc2b"><div class="ttname"><a href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b">af::allTrue</a></div><div class="ttdeci">AFAPI array allTrue(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for checking all true values in an array. </div></div>
<div class="ttc" id="classaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container. </div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00026">array.h:26</a></div></div>
<div class="ttc" id="group__reduce__func__count_htm_gaf2664c25ee6ca30aa3f5aa77db789f95"><div class="ttname"><a href="group__reduce__func__count.htm#gaf2664c25ee6ca30aa3f5aa77db789f95">af_count</a></div><div class="ttdeci">AFAPI af_err af_count(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for counting non-zero values in an array. </div></div>
<div class="ttc" id="group__reduce__func__max_htm_ga267f32b8dbb1b508e8738e3748d8dc3f"><div class="ttname"><a href="group__reduce__func__max.htm#ga267f32b8dbb1b508e8738e3748d8dc3f">af_max</a></div><div class="ttdeci">AFAPI af_err af_max(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for maximum values in an array. </div></div>
<div class="ttc" id="group__reduce__func__min_htm_gab10198ae7ead1dc10f220d576f118104"><div class="ttname"><a href="group__reduce__func__min.htm#gab10198ae7ead1dc10f220d576f118104">af_min_all</a></div><div class="ttdeci">AFAPI af_err af_min_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for getting minimum value of an array. </div></div>
<div class="ttc" id="group__reduce__func__sum_htm_ga65bb08cd2644d5828d72fc42b2eb8abc"><div class="ttname"><a href="group__reduce__func__sum.htm#ga65bb08cd2644d5828d72fc42b2eb8abc">af_sum_nan_all</a></div><div class="ttdeci">AFAPI af_err af_sum_nan_all(double *real, double *imag, const af_array in, const double nanval)</div><div class="ttdoc">C Interface for sum of all elements in an array while replacing nans. </div></div>
<div class="ttc" id="defines_8h_htm_a82b94dc53bbd100a0e8ca9dd356aaf4f"><div class="ttname"><a href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a></div><div class="ttdeci">af_err</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00063">defines.h:63</a></div></div>
<div class="ttc" id="group__scan__func__scan_htm_gabe3e469eb355990345012bbe6393b4c3"><div class="ttname"><a href="group__scan__func__scan.htm#gabe3e469eb355990345012bbe6393b4c3">af::scan</a></div><div class="ttdeci">AFAPI array scan(const array &amp;in, const int dim=0, binaryOp op=AF_BINARY_ADD, bool inclusive_scan=true)</div><div class="ttdoc">C++ Interface generalized scan of an array. </div></div>
<div class="ttc" id="defines_8h_htm"><div class="ttname"><a href="defines_8h.htm">defines.h</a></div></div>
<div class="ttc" id="group__reduce__func__product_htm_ga2be338d39be30ad22dddf658a4f5676e"><div class="ttname"><a href="group__reduce__func__product.htm#ga2be338d39be30ad22dddf658a4f5676e">af_product</a></div><div class="ttdeci">AFAPI af_err af_product(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for product of elements in an array. </div></div>
<div class="ttc" id="group__reduce__func__min_htm_ga2f65943090e0c2317bd682c25594b901"><div class="ttname"><a href="group__reduce__func__min.htm#ga2f65943090e0c2317bd682c25594b901">af_imin</a></div><div class="ttdeci">AFAPI af_err af_imin(af_array *out, af_array *idx, const af_array in, const int dim)</div><div class="ttdoc">C Interface for getting minimum values and their locations in an array. </div></div>
<div class="ttc" id="group__reduce__func__any__true_htm_ga7c275cda2cfc8eb0bd20ea86472ca0d5"><div class="ttname"><a href="group__reduce__func__any__true.htm#ga7c275cda2cfc8eb0bd20ea86472ca0d5">af_any_true</a></div><div class="ttdeci">AFAPI af_err af_any_true(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for checking any true values in an array. </div></div>
<div class="ttc" id="group__reduce__func__max_htm_ga4459daf5a3b081fb4ee15eb49d8c902a"><div class="ttname"><a href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">af::max</a></div><div class="ttdeci">AFAPI array max(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for maximum values in an array. </div></div>
<div class="ttc" id="group__calc__func__diff2_htm_gafc7b2d05e4e85aeb3e8b3239f598f70c"><div class="ttname"><a href="group__calc__func__diff2.htm#gafc7b2d05e4e85aeb3e8b3239f598f70c">af_diff2</a></div><div class="ttdeci">AFAPI af_err af_diff2(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for calculating second order differences in an array. </div></div>
<div class="ttc" id="group__scan__func__scanbykey_htm_gaaae150e0f197782782f45340d137b027"><div class="ttname"><a href="group__scan__func__scanbykey.htm#gaaae150e0f197782782f45340d137b027">af_scan_by_key</a></div><div class="ttdeci">AFAPI af_err af_scan_by_key(af_array *out, const af_array key, const af_array in, const int dim, af_binary_op op, bool inclusive_scan)</div><div class="ttdoc">C Interface generalized scan by key of an array. </div></div>
<div class="ttc" id="group__arith__func__imag_htm_gade4b0cbdc402bc05d45a7f130b1fa865"><div class="ttname"><a href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">af::imag</a></div><div class="ttdeci">AFAPI array imag(const array &amp;in)</div><div class="ttdoc">C++ Interface for getting imaginary part from complex array. </div></div>
<div class="ttc" id="group__reduce__func__product_htm_gaac132e883d40243c420b4ccfa09ddaa3"><div class="ttname"><a href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">af::product</a></div><div class="ttdeci">AFAPI array product(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for product of elements in an array. </div></div>
<div class="ttc" id="group__set__func__intersect_htm_ga985f9332c5f858eec66c717881ef2607"><div class="ttname"><a href="group__set__func__intersect.htm#ga985f9332c5f858eec66c717881ef2607">af_set_intersect</a></div><div class="ttdeci">AFAPI af_err af_set_intersect(af_array *out, const af_array first, const af_array second, const bool is_unique)</div><div class="ttdoc">C Interface for finding the intersection of two arrays. </div></div>
<div class="ttc" id="group__calc__func__diff1_htm_gad3be33ce8114f65c188645e958fce171"><div class="ttname"><a href="group__calc__func__diff1.htm#gad3be33ce8114f65c188645e958fce171">af_diff1</a></div><div class="ttdeci">AFAPI af_err af_diff1(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for calculating first order differences in an array. </div></div>
<div class="ttc" id="group__reduce__func__min_htm_ga2ac4c8d9ba613dbc9bfec0bee7be8eb8"><div class="ttname"><a href="group__reduce__func__min.htm#ga2ac4c8d9ba613dbc9bfec0bee7be8eb8">af_min</a></div><div class="ttdeci">AFAPI af_err af_min(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for minimum values in an array. </div></div>
<div class="ttc" id="group__arith__func__real_htm_ga09209f0d8ffd557608fef6bade1689c9"><div class="ttname"><a href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">af::real</a></div><div class="ttdeci">AFAPI array real(const array &amp;in)</div><div class="ttdoc">C++ Interface for getting real part from complex array. </div></div>
<div class="ttc" id="group__reduce__func__max_htm_gaf0e6a523e2e435d5409d5d8cb843d8a2"><div class="ttname"><a href="group__reduce__func__max.htm#gaf0e6a523e2e435d5409d5d8cb843d8a2">af_imax</a></div><div class="ttdeci">AFAPI af_err af_imax(af_array *out, af_array *idx, const af_array in, const int dim)</div><div class="ttdoc">C Interface for getting maximum values and their locations in an array. </div></div>
<div class="ttc" id="defines_8h_htm_ab23e67549eba2cfbaf0eb5f88f947e48"><div class="ttname"><a href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a></div><div class="ttdeci">#define AFAPI</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00031">defines.h:31</a></div></div>
<div class="ttc" id="group__set__func__intersect_htm_gae4549aee29c563edfb0b4a444fbf9200"><div class="ttname"><a href="group__set__func__intersect.htm#gae4549aee29c563edfb0b4a444fbf9200">af::setIntersect</a></div><div class="ttdeci">AFAPI array setIntersect(const array &amp;first, const array &amp;second, const bool is_unique=false)</div><div class="ttdoc">C++ Interface for finding the intersection of two arrays. </div></div>
<div class="ttc" id="group__reduce__func__any__true_htm_gafe4c8f22bbfa4288696f2a133b1b619e"><div class="ttname"><a href="group__reduce__func__any__true.htm#gafe4c8f22bbfa4288696f2a133b1b619e">af::anyTrue</a></div><div class="ttdeci">AFAPI array anyTrue(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for checking any true values in an array. </div></div>
<div class="ttc" id="group__set__func__unique_htm_ga73f2f768af96755af50df21e384287c6"><div class="ttname"><a href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">af::setUnique</a></div><div class="ttdeci">AFAPI array setUnique(const array &amp;in, const bool is_sorted=false)</div><div class="ttdoc">C++ Interface for getting unique values. </div></div>
<div class="ttc" id="group__scan__func__accum_htm_gae450135c4ae1bdaa4489804a215f3214"><div class="ttname"><a href="group__scan__func__accum.htm#gae450135c4ae1bdaa4489804a215f3214">af::accum</a></div><div class="ttdeci">AFAPI array accum(const array &amp;in, const int dim=0)</div><div class="ttdoc">C++ Interface for computing the cumulative sum (inclusive) of an array. </div></div>
<div class="ttc" id="defines_8h_htm_a4de0054ea1c296a55a79691c21f19c6c"><div class="ttname"><a href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6c">af_binary_op</a></div><div class="ttdeci">af_binary_op</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00406">defines.h:406</a></div></div>
<div class="ttc" id="defines_8h_htm_a4de0054ea1c296a55a79691c21f19c6ca335c219d88e113349f6ce08e830314a1"><div class="ttname"><a href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6ca335c219d88e113349f6ce08e830314a1">AF_BINARY_ADD</a></div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00407">defines.h:407</a></div></div>
<div class="ttc" id="group__reduce__func__product_htm_ga1d25447c16d492767ba7efa7ee72a36e"><div class="ttname"><a href="group__reduce__func__product.htm#ga1d25447c16d492767ba7efa7ee72a36e">af_product_nan</a></div><div class="ttdeci">AFAPI af_err af_product_nan(af_array *out, const af_array in, const int dim, const double nanval)</div><div class="ttdoc">C Interface for product of elements in an array while replacing nans. </div></div>
<div class="ttc" id="group__scan__func__scanbykey_htm_ga881c15b2d5ae0dea679eb3fd700ad681"><div class="ttname"><a href="group__scan__func__scanbykey.htm#ga881c15b2d5ae0dea679eb3fd700ad681">af::scanByKey</a></div><div class="ttdeci">AFAPI array scanByKey(const array &amp;key, const array &amp;in, const int dim=0, binaryOp op=AF_BINARY_ADD, bool inclusive_scan=true)</div><div class="ttdoc">C++ Interface generalized scan by key of an array. </div></div>
<div class="ttc" id="group__sort__func__sort_htm_gac4460d605452515d07ee8432f906aa8e"><div class="ttname"><a href="group__sort__func__sort.htm#gac4460d605452515d07ee8432f906aa8e">af_sort</a></div><div class="ttdeci">AFAPI af_err af_sort(af_array *out, const af_array in, const unsigned dim, const bool isAscending)</div><div class="ttdoc">C Interface for sorting an array. </div></div>
<div class="ttc" id="group__sort__func__sort__keys_htm_ga7d4fcaf229ece5fbbe30a638d9a60b8a"><div class="ttname"><a href="group__sort__func__sort__keys.htm#ga7d4fcaf229ece5fbbe30a638d9a60b8a">af_sort_by_key</a></div><div class="ttdeci">AFAPI af_err af_sort_by_key(af_array *out_keys, af_array *out_values, const af_array keys, const af_array values, const unsigned dim, const bool isAscending)</div><div class="ttdoc">C Interface for sorting an array based on keys. </div></div>
<div class="ttc" id="defines_8h_htm_a8e45f4aa3dbea6a7aa021dbc50a4a089"><div class="ttname"><a href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a></div><div class="ttdeci">void * af_array</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00222">defines.h:222</a></div></div>
<div class="ttc" id="group__reduce__func__min_htm_ga2b1287d1babb569d28bc6ee1c8e8e1ea"><div class="ttname"><a href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">af::min</a></div><div class="ttdeci">AFAPI array min(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for minimum values in an array. </div></div>
<div class="ttc" id="group__reduce__func__sum_htm_gacd4917c2e916870ebdf54afc2f61d533"><div class="ttname"><a href="group__reduce__func__sum.htm#gacd4917c2e916870ebdf54afc2f61d533">af_sum</a></div><div class="ttdeci">AFAPI af_err af_sum(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for sum of elements in an array. </div></div>
<div class="ttc" id="group__reduce__func__sum_htm_gabc009d04df0faf29ba1e381c7badde58"><div class="ttname"><a href="group__reduce__func__sum.htm#gabc009d04df0faf29ba1e381c7badde58">af_sum_all</a></div><div class="ttdeci">AFAPI af_err af_sum_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for sum of all elements in an array. </div></div>
<div class="ttc" id="group__sort__func__sort_htm_ga8d1a62b3e41bfcdeef810a442869b42c"><div class="ttname"><a href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">af::sort</a></div><div class="ttdeci">AFAPI array sort(const array &amp;in, const unsigned dim=0, const bool isAscending=true)</div><div class="ttdoc">C++ Interface for sorting an array. </div></div>
<div class="ttc" id="group__reduce__func__all__true_htm_ga9b50d4adffe3050c3d21bbbbb3d2e434"><div class="ttname"><a href="group__reduce__func__all__true.htm#ga9b50d4adffe3050c3d21bbbbb3d2e434">af_all_true_all</a></div><div class="ttdeci">AFAPI af_err af_all_true_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for checking if all values in an array are true. </div></div>
<div class="ttc" id="group__scan__func__scan_htm_ga1c864e22826f61bec2e9b6c61aa93fce"><div class="ttname"><a href="group__scan__func__scan.htm#ga1c864e22826f61bec2e9b6c61aa93fce">af_scan</a></div><div class="ttdeci">AFAPI af_err af_scan(af_array *out, const af_array in, const int dim, af_binary_op op, bool inclusive_scan)</div><div class="ttdoc">C Interface generalized scan of an array. </div></div>
<div class="ttc" id="group__reduce__func__product_htm_gaca78d54c53a33b419bfdb5c64accbc7b"><div class="ttname"><a href="group__reduce__func__product.htm#gaca78d54c53a33b419bfdb5c64accbc7b">af_product_nan_all</a></div><div class="ttdeci">AFAPI af_err af_product_nan_all(double *real, double *imag, const af_array in, const double nanval)</div><div class="ttdoc">C Interface for product of all elements in an array while replacing nans. </div></div>
<div class="ttc" id="group__reduce__func__count_htm_ga76b6172262aa0e64bf6979c16a40ea3c"><div class="ttname"><a href="group__reduce__func__count.htm#ga76b6172262aa0e64bf6979c16a40ea3c">af::count</a></div><div class="ttdeci">AFAPI array count(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for counting non-zero values in an array. </div></div>
<div class="ttc" id="group__set__func__union_htm_gaa793c080cfa2c5ed7f422479e8e0bfe3"><div class="ttname"><a href="group__set__func__union.htm#gaa793c080cfa2c5ed7f422479e8e0bfe3">af::setUnion</a></div><div class="ttdeci">AFAPI array setUnion(const array &amp;first, const array &amp;second, const bool is_unique=false)</div><div class="ttdoc">C++ Interface for finding the union of two arrays. </div></div>
<div class="ttc" id="group__calc__func__diff1_htm_gab099192b1beeddab1ad14536aba689b2"><div class="ttname"><a href="group__calc__func__diff1.htm#gab099192b1beeddab1ad14536aba689b2">af::diff1</a></div><div class="ttdeci">AFAPI array diff1(const array &amp;in, const int dim=0)</div><div class="ttdoc">C++ Interface for calculating first order differences in an array. </div></div>
<div class="ttc" id="group__reduce__func__all__true_htm_ga068708be5177a0aa3788af140bb5ebd6"><div class="ttname"><a href="group__reduce__func__all__true.htm#ga068708be5177a0aa3788af140bb5ebd6">af_all_true</a></div><div class="ttdeci">AFAPI af_err af_all_true(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for checking all true values in an array. </div></div>
<div class="ttc" id="group__reduce__func__max_htm_ga5f71ab6056943723149585d2aebade7c"><div class="ttname"><a href="group__reduce__func__max.htm#ga5f71ab6056943723149585d2aebade7c">af_max_all</a></div><div class="ttdeci">AFAPI af_err af_max_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for getting maximum value of an array. </div></div>
<div class="ttc" id="group__calc__func__diff2_htm_gad803d1bc99910533a5789c428522aaef"><div class="ttname"><a href="group__calc__func__diff2.htm#gad803d1bc99910533a5789c428522aaef">af::diff2</a></div><div class="ttdeci">AFAPI array diff2(const array &amp;in, const int dim=0)</div><div class="ttdoc">C++ Interface for calculating second order differences in an array. </div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
