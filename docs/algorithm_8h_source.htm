<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: algorithm.h (2020-10-27 00:11:00 -0400, (build d99887ae)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('algorithm_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">algorithm.h (2020-10-27 00:11:00 -0400, (build d99887ae))</div>  </div>
</div><!--header-->
<div class="contents">
<a href="algorithm_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*******************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2014, ArrayFire</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * All rights reserved.</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * This file is distributed under 3-clause BSD license.</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * The complete license agreement can be obtained at:</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * https://arrayfire.com/licenses/BSD-3-Clause</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> ********************************************************/</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="defines_8h.htm">af/defines.h</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="namespaceaf.htm">   14</a></span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceaf.htm">af</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="keyword">class </span><a class="code" href="classaf_1_1array.htm">array</a>;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">sum</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">sum</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__sum__by__key.htm#ga436bf839bf091339678c77cf0534078b">sumByKey</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;keys_out, <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals_out,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;keys, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals,</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">int</span> dim=-1);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__sum__by__key.htm#ga436bf839bf091339678c77cf0534078b">sumByKey</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;keys_out, <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals_out,</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;keys, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals,</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">product</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">product</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__product__by__key.htm#ga001f04ff52e6fcfd8e8a8534cbd723e6">productByKey</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;keys_out, <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals_out,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;keys, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__product__by__key.htm#ga001f04ff52e6fcfd8e8a8534cbd723e6">productByKey</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;keys_out, <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals_out,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;keys, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals,</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">min</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__min__by__key.htm#ga7c57e49e2d6947cf0ed3475ba0c5693a">minByKey</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;keys_out, <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals_out,</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;keys, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals,</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__max__by__key.htm#gaac1957071462ec10da9a7958fe0f6723">maxByKey</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;keys_out, <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals_out,</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;keys, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 38</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;val, <a class="code" href="classaf_1_1array.htm">array</a> &amp;idx, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;ragged_len, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b">allTrue</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="namespaceaf.htm#a35aa2f544c3762a14762de1451f0f141">allTrueByKey</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;keys_out, <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals_out,</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;keys, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals,</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__any__true.htm#gafe4c8f22bbfa4288696f2a133b1b619e">anyTrue</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__anytrue__by__key.htm#gad14de5a58792e166fac5da3deda5dbb9">anyTrueByKey</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;keys_out, <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals_out,</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;keys, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals,</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__reduce__func__count.htm#ga76b6172262aa0e64bf6979c16a40ea3c">count</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__count__by__key.htm#gad0aef7e7c253d12b376fca59067ee487">countByKey</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;keys_out, <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals_out,</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;keys, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;vals,</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">sum</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">sum</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">product</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">product</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">min</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b">allTrue</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__any__true.htm#gafe4c8f22bbfa4288696f2a133b1b619e">anyTrue</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T <a class="code" href="group__reduce__func__count.htm#ga76b6172262aa0e64bf6979c16a40ea3c">count</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">min</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;val, <a class="code" href="classaf_1_1array.htm">array</a> &amp;idx, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;val, <a class="code" href="classaf_1_1array.htm">array</a> &amp;idx, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = -1);</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">min</a>(T *val, <span class="keywordtype">unsigned</span> *idx, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="keywordtype">void</span> <a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>(T *val, <span class="keywordtype">unsigned</span> *idx, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__scan__func__accum.htm#gae450135c4ae1bdaa4489804a215f3214">accum</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = 0);</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;=34</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__scan__func__scan.htm#gabe3e469eb355990345012bbe6393b4c3">scan</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = 0,</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                     <a class="code" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6c">binaryOp</a> op = <a class="code" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6ca335c219d88e113349f6ce08e830314a1">AF_BINARY_ADD</a>, <span class="keywordtype">bool</span> inclusive_scan = <span class="keyword">true</span>);</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__scan__func__scanbykey.htm#ga881c15b2d5ae0dea679eb3fd700ad681">scanByKey</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;key, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = 0,</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                          <a class="code" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6c">binaryOp</a> op = <a class="code" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6ca335c219d88e113349f6ce08e830314a1">AF_BINARY_ADD</a>, <span class="keywordtype">bool</span> inclusive_scan = <span class="keyword">true</span>);</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__scan__func__where.htm#ga1e677067915477bc4aec1605d80d9b7b">where</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in);</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__calc__func__diff1.htm#gab099192b1beeddab1ad14536aba689b2">diff1</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = 0);</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__calc__func__diff2.htm#gad803d1bc99910533a5789c428522aaef">diff2</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim = 0);</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">sort</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim = 0,</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                     <span class="keyword">const</span> <span class="keywordtype">bool</span> isAscending = <span class="keyword">true</span>);</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span>  <a class="code" href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">sort</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;out, <a class="code" href="classaf_1_1array.htm">array</a> &amp;indices, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim = 0,</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                     <span class="keyword">const</span> <span class="keywordtype">bool</span> isAscending = <span class="keyword">true</span>);</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span>  <a class="code" href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">sort</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;out_keys, <a class="code" href="classaf_1_1array.htm">array</a> &amp;out_values, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;keys,</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                     <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;values, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim = 0,</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                     <span class="keyword">const</span> <span class="keywordtype">bool</span> isAscending = <span class="keyword">true</span>);</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">setUnique</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;in, <span class="keyword">const</span> <span class="keywordtype">bool</span> is_sorted=<span class="keyword">false</span>);</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__set__func__union.htm#gaa793c080cfa2c5ed7f422479e8e0bfe3">setUnion</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;first, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;second,</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">bool</span> is_unique=<span class="keyword">false</span>);</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__set__func__intersect.htm#gae4549aee29c563edfb0b4a444fbf9200">setIntersect</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;first, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;second,</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">bool</span> is_unique=<span class="keyword">false</span>);</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;}</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__sum.htm#gacd4917c2e916870ebdf54afc2f61d533">af_sum</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__sum.htm#ga52461231e2d9995f689b7f23eea0e798">af_sum_nan</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in,</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__sum__by__key.htm#ga2a1fdb7417aa59287db593159c19ed2d">af_sum_by_key</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out,</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;                               <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__sum__by__key.htm#gafa695edde00c43ac638ca7d9961938f4">af_sum_by_key_nan</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out,</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals,</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__product.htm#ga2be338d39be30ad22dddf658a4f5676e">af_product</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__product.htm#ga1d25447c16d492767ba7efa7ee72a36e">af_product_nan</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__product__by__key.htm#ga098382fc8f79446d6e2af1473fac4350">af_product_by_key</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out,</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__product__by__key.htm#gaff3459e70525e5e472591231037351e0">af_product_by_key_nan</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out,</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals,</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;                                       <span class="keyword">const</span> <span class="keywordtype">int</span> dim, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__min.htm#ga2ac4c8d9ba613dbc9bfec0bee7be8eb8">af_min</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__min__by__key.htm#ga24037db6a2a5c117f2ade85b0412f548">af_min_by_key</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out,</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;                               <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals,</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;                               <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__max.htm#ga267f32b8dbb1b508e8738e3748d8dc3f">af_max</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__max__by__key.htm#ga002d03c0ebd674644c8a6831ebb775e2">af_max_by_key</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out,</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;                               <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals,</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;                               <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 38</span></div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__max.htm#ga564bbeca8e4c243355979a6cb5dc4970">af_max_ragged</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *val, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> ragged_len, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__all__true.htm#ga068708be5177a0aa3788af140bb5ebd6">af_all_true</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="algorithm_8h.htm#a65fa5577c81a2c2fcf7406bf48cc014a">af_all_true_by_key</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out,</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals,</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;                                    <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__any__true.htm#ga7c275cda2cfc8eb0bd20ea86472ca0d5">af_any_true</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__anytrue__by__key.htm#ga973fd650f8a57533f675cfd7ad6f0718">af_any_true_by_key</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out,</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals,</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;                                    <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__count.htm#gaf2664c25ee6ca30aa3f5aa77db789f95">af_count</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__count__by__key.htm#ga96b01fd7375b3a3cb065ba860885e723">af_count_by_key</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *keys_out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *vals_out,</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> vals,</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__sum.htm#gabc009d04df0faf29ba1e381c7badde58">af_sum_all</a>(<span class="keywordtype">double</span> *<a class="code" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, <span class="keywordtype">double</span> *<a class="code" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a>, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__sum.htm#ga65bb08cd2644d5828d72fc42b2eb8abc">af_sum_nan_all</a>(<span class="keywordtype">double</span> *real, <span class="keywordtype">double</span> *imag,</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;                                <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__product.htm#gad226a6ec77c12fd16cf42e3fe3264e22">af_product_all</a>(<span class="keywordtype">double</span> *real, <span class="keywordtype">double</span> *imag, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__product.htm#gaca78d54c53a33b419bfdb5c64accbc7b">af_product_nan_all</a>(<span class="keywordtype">double</span> *real, <span class="keywordtype">double</span> *imag,</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">double</span> nanval);</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__min.htm#gab10198ae7ead1dc10f220d576f118104">af_min_all</a>(<span class="keywordtype">double</span> *real, <span class="keywordtype">double</span> *imag, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__max.htm#ga5f71ab6056943723149585d2aebade7c">af_max_all</a>(<span class="keywordtype">double</span> *real, <span class="keywordtype">double</span> *imag, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__all__true.htm#ga9b50d4adffe3050c3d21bbbbb3d2e434">af_all_true_all</a>(<span class="keywordtype">double</span> *real, <span class="keywordtype">double</span> *imag, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__any__true.htm#ga47d991276bb5bf8cdba8340e8751e536">af_any_true_all</a>(<span class="keywordtype">double</span> *real, <span class="keywordtype">double</span> *imag, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__count.htm#ga38699c5ce172c15e9850a9eda6050da5">af_count_all</a>(<span class="keywordtype">double</span> *real, <span class="keywordtype">double</span> *imag, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__min.htm#ga2f65943090e0c2317bd682c25594b901">af_imin</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in,</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__max.htm#gaf0e6a523e2e435d5409d5d8cb843d8a2">af_imax</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in,</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__min.htm#gae75785af0fdfcbb1f4c34461235f5206">af_imin_all</a>(<span class="keywordtype">double</span> *real, <span class="keywordtype">double</span> *imag, <span class="keywordtype">unsigned</span> *idx,</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;                             <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__reduce__func__max.htm#gaea009bd51145be2fcc688b2390725401">af_imax_all</a>(<span class="keywordtype">double</span> *real, <span class="keywordtype">double</span> *imag, <span class="keywordtype">unsigned</span> *idx, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__scan__func__accum.htm#ga50d499e844e0b63e338cb3ea50439629">af_accum</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;=34</span></div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__scan__func__scan.htm#ga1c864e22826f61bec2e9b6c61aa93fce">af_scan</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim,</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;                         <a class="code" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6c">af_binary_op</a> op, <span class="keywordtype">bool</span> inclusive_scan);</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__scan__func__scanbykey.htm#gaaae150e0f197782782f45340d137b027">af_scan_by_key</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> key,</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;                                <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim,</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;                                <a class="code" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6c">af_binary_op</a> op, <span class="keywordtype">bool</span> inclusive_scan);</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__scan__func__where.htm#gafda59a3d25d35238592dd09907be9d07">af_where</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *idx, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__calc__func__diff1.htm#gad3be33ce8114f65c188645e958fce171">af_diff1</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__calc__func__diff2.htm#gafc7b2d05e4e85aeb3e8b3239f598f70c">af_diff2</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__sort__func__sort.htm#gac4460d605452515d07ee8432f906aa8e">af_sort</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim,</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">bool</span> isAscending);</div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__sort__func__sort__index.htm#ga55675cd825c320db87398b1010b6ae41">af_sort_index</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *indices, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in,</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;                               <span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim, <span class="keyword">const</span> <span class="keywordtype">bool</span> isAscending);</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__sort__func__sort__keys.htm#ga7d4fcaf229ece5fbbe30a638d9a60b8a">af_sort_by_key</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out_keys, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out_values,</div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;                                <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> keys, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> values,</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;                                <span class="keyword">const</span> <span class="keywordtype">unsigned</span> dim, <span class="keyword">const</span> <span class="keywordtype">bool</span> isAscending);</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;</div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__set__func__unique.htm#ga6afa1de48cbbc4b2df530c2530087943">af_set_unique</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, <span class="keyword">const</span> <span class="keywordtype">bool</span> is_sorted);</div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;</div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__set__func__union.htm#gaabeead0c0dc360db9398e9703dbb273f">af_set_union</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> first,</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;                              <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> second, <span class="keyword">const</span> <span class="keywordtype">bool</span> is_unique);</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;</div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__set__func__intersect.htm#ga985f9332c5f858eec66c717881ef2607">af_set_intersect</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> first,</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> second, <span class="keyword">const</span> <span class="keywordtype">bool</span> is_unique);</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;}</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="group__reduce__func__anytrue__by__key_htm_gad14de5a58792e166fac5da3deda5dbb9"><div class="ttname"><a href="group__reduce__func__anytrue__by__key.htm#gad14de5a58792e166fac5da3deda5dbb9">af::anyTrueByKey</a></div><div class="ttdeci">AFAPI void anyTrueByKey(array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</div><div class="ttdoc">C++ Interface for checking any true values in an array according to a key. </div></div>
<div class="ttc" id="namespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:14</a></div></div>
<div class="ttc" id="group__scan__func__where_htm_ga1e677067915477bc4aec1605d80d9b7b"><div class="ttname"><a href="group__scan__func__where.htm#ga1e677067915477bc4aec1605d80d9b7b">af::where</a></div><div class="ttdeci">AFAPI array where(const array &amp;in)</div><div class="ttdoc">C++ Interface for finding the locations of non-zero values in an array. </div></div>
<div class="ttc" id="group__reduce__func__min_htm_gae75785af0fdfcbb1f4c34461235f5206"><div class="ttname"><a href="group__reduce__func__min.htm#gae75785af0fdfcbb1f4c34461235f5206">af_imin_all</a></div><div class="ttdeci">AFAPI af_err af_imin_all(double *real, double *imag, unsigned *idx, const af_array in)</div><div class="ttdoc">C Interface for getting minimum value and its location from the entire array. </div></div>
<div class="ttc" id="group__set__func__union_htm_gaabeead0c0dc360db9398e9703dbb273f"><div class="ttname"><a href="group__set__func__union.htm#gaabeead0c0dc360db9398e9703dbb273f">af_set_union</a></div><div class="ttdeci">AFAPI af_err af_set_union(af_array *out, const af_array first, const af_array second, const bool is_unique)</div><div class="ttdoc">C Interface for finding the union of two arrays. </div></div>
<div class="ttc" id="group__reduce__func__count_htm_ga38699c5ce172c15e9850a9eda6050da5"><div class="ttname"><a href="group__reduce__func__count.htm#ga38699c5ce172c15e9850a9eda6050da5">af_count_all</a></div><div class="ttdeci">AFAPI af_err af_count_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for counting total number of non-zero values in an array. </div></div>
<div class="ttc" id="group__reduce__func__sum_htm_ga52461231e2d9995f689b7f23eea0e798"><div class="ttname"><a href="group__reduce__func__sum.htm#ga52461231e2d9995f689b7f23eea0e798">af_sum_nan</a></div><div class="ttdeci">AFAPI af_err af_sum_nan(af_array *out, const af_array in, const int dim, const double nanval)</div><div class="ttdoc">C Interface for sum of elements in an array while replacing nans. </div></div>
<div class="ttc" id="group__reduce__func__any__true_htm_ga47d991276bb5bf8cdba8340e8751e536"><div class="ttname"><a href="group__reduce__func__any__true.htm#ga47d991276bb5bf8cdba8340e8751e536">af_any_true_all</a></div><div class="ttdeci">AFAPI af_err af_any_true_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for checking if any values in an array are true. </div></div>
<div class="ttc" id="group__reduce__func__product_htm_gad226a6ec77c12fd16cf42e3fe3264e22"><div class="ttname"><a href="group__reduce__func__product.htm#gad226a6ec77c12fd16cf42e3fe3264e22">af_product_all</a></div><div class="ttdeci">AFAPI af_err af_product_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for product of all elements in an array. </div></div>
<div class="ttc" id="group__scan__func__where_htm_gafda59a3d25d35238592dd09907be9d07"><div class="ttname"><a href="group__scan__func__where.htm#gafda59a3d25d35238592dd09907be9d07">af_where</a></div><div class="ttdeci">AFAPI af_err af_where(af_array *idx, const af_array in)</div><div class="ttdoc">C Interface for finding the locations of non-zero values in an array. </div></div>
<div class="ttc" id="group__set__func__unique_htm_ga6afa1de48cbbc4b2df530c2530087943"><div class="ttname"><a href="group__set__func__unique.htm#ga6afa1de48cbbc4b2df530c2530087943">af_set_unique</a></div><div class="ttdeci">AFAPI af_err af_set_unique(af_array *out, const af_array in, const bool is_sorted)</div><div class="ttdoc">C Interface for getting unique values. </div></div>
<div class="ttc" id="group__reduce__func__sum_htm_ga964a8e7e78dd6d8f4d20c17edf82dbf5"><div class="ttname"><a href="group__reduce__func__sum.htm#ga964a8e7e78dd6d8f4d20c17edf82dbf5">af::sum</a></div><div class="ttdeci">AFAPI array sum(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for sum of elements in an array. </div></div>
<div class="ttc" id="group__scan__func__accum_htm_ga50d499e844e0b63e338cb3ea50439629"><div class="ttname"><a href="group__scan__func__accum.htm#ga50d499e844e0b63e338cb3ea50439629">af_accum</a></div><div class="ttdeci">AFAPI af_err af_accum(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for computing the cumulative sum (inclusive) of an array. </div></div>
<div class="ttc" id="group__reduce__func__max_htm_gaea009bd51145be2fcc688b2390725401"><div class="ttname"><a href="group__reduce__func__max.htm#gaea009bd51145be2fcc688b2390725401">af_imax_all</a></div><div class="ttdeci">AFAPI af_err af_imax_all(double *real, double *imag, unsigned *idx, const af_array in)</div><div class="ttdoc">C Interface for getting maximum value and it&amp;#39;s location from the entire array. </div></div>
<div class="ttc" id="group__sort__func__sort__index_htm_ga55675cd825c320db87398b1010b6ae41"><div class="ttname"><a href="group__sort__func__sort__index.htm#ga55675cd825c320db87398b1010b6ae41">af_sort_index</a></div><div class="ttdeci">AFAPI af_err af_sort_index(af_array *out, af_array *indices, const af_array in, const unsigned dim, const bool isAscending)</div><div class="ttdoc">C Interface for sorting an array and getting original indices. </div></div>
<div class="ttc" id="group__reduce__func__all__true_htm_gaf3f22add3a54fb729a969cf8f669fc2b"><div class="ttname"><a href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b">af::allTrue</a></div><div class="ttdeci">AFAPI array allTrue(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for checking all true values in an array. </div></div>
<div class="ttc" id="group__reduce__func__count__by__key_htm_gad0aef7e7c253d12b376fca59067ee487"><div class="ttname"><a href="group__reduce__func__count__by__key.htm#gad0aef7e7c253d12b376fca59067ee487">af::countByKey</a></div><div class="ttdeci">AFAPI void countByKey(array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</div><div class="ttdoc">C++ Interface for counting non-zero values in an array according to a key. </div></div>
<div class="ttc" id="group__reduce__func__product__by__key_htm_ga098382fc8f79446d6e2af1473fac4350"><div class="ttname"><a href="group__reduce__func__product__by__key.htm#ga098382fc8f79446d6e2af1473fac4350">af_product_by_key</a></div><div class="ttdeci">AFAPI af_err af_product_by_key(af_array *keys_out, af_array *vals_out, const af_array keys, const af_array vals, const int dim)</div><div class="ttdoc">C Interface for product of elements in an array according to key. </div></div>
<div class="ttc" id="classaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container. </div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00037">array.h:37</a></div></div>
<div class="ttc" id="group__reduce__func__count_htm_gaf2664c25ee6ca30aa3f5aa77db789f95"><div class="ttname"><a href="group__reduce__func__count.htm#gaf2664c25ee6ca30aa3f5aa77db789f95">af_count</a></div><div class="ttdeci">AFAPI af_err af_count(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for counting non-zero values in an array. </div></div>
<div class="ttc" id="group__reduce__func__min__by__key_htm_ga7c57e49e2d6947cf0ed3475ba0c5693a"><div class="ttname"><a href="group__reduce__func__min__by__key.htm#ga7c57e49e2d6947cf0ed3475ba0c5693a">af::minByKey</a></div><div class="ttdeci">AFAPI void minByKey(array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</div><div class="ttdoc">C++ Interface for minimum values in an array according to a key. </div></div>
<div class="ttc" id="group__reduce__func__max_htm_ga267f32b8dbb1b508e8738e3748d8dc3f"><div class="ttname"><a href="group__reduce__func__max.htm#ga267f32b8dbb1b508e8738e3748d8dc3f">af_max</a></div><div class="ttdeci">AFAPI af_err af_max(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for maximum values in an array. </div></div>
<div class="ttc" id="group__reduce__func__count__by__key_htm_ga96b01fd7375b3a3cb065ba860885e723"><div class="ttname"><a href="group__reduce__func__count__by__key.htm#ga96b01fd7375b3a3cb065ba860885e723">af_count_by_key</a></div><div class="ttdeci">AFAPI af_err af_count_by_key(af_array *keys_out, af_array *vals_out, const af_array keys, const af_array vals, const int dim)</div><div class="ttdoc">C Interface for counting non-zero values in an array according to key. </div></div>
<div class="ttc" id="group__reduce__func__min_htm_gab10198ae7ead1dc10f220d576f118104"><div class="ttname"><a href="group__reduce__func__min.htm#gab10198ae7ead1dc10f220d576f118104">af_min_all</a></div><div class="ttdeci">AFAPI af_err af_min_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for getting minimum value of an array. </div></div>
<div class="ttc" id="group__reduce__func__max__by__key_htm_ga002d03c0ebd674644c8a6831ebb775e2"><div class="ttname"><a href="group__reduce__func__max__by__key.htm#ga002d03c0ebd674644c8a6831ebb775e2">af_max_by_key</a></div><div class="ttdeci">AFAPI af_err af_max_by_key(af_array *keys_out, af_array *vals_out, const af_array keys, const af_array vals, const int dim)</div><div class="ttdoc">C Interface for maximum values in an array according to key. </div></div>
<div class="ttc" id="group__reduce__func__sum_htm_ga65bb08cd2644d5828d72fc42b2eb8abc"><div class="ttname"><a href="group__reduce__func__sum.htm#ga65bb08cd2644d5828d72fc42b2eb8abc">af_sum_nan_all</a></div><div class="ttdeci">AFAPI af_err af_sum_nan_all(double *real, double *imag, const af_array in, const double nanval)</div><div class="ttdoc">C Interface for sum of all elements in an array while replacing nans. </div></div>
<div class="ttc" id="defines_8h_htm_a82b94dc53bbd100a0e8ca9dd356aaf4f"><div class="ttname"><a href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a></div><div class="ttdeci">af_err</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00071">defines.h:71</a></div></div>
<div class="ttc" id="group__scan__func__scan_htm_gabe3e469eb355990345012bbe6393b4c3"><div class="ttname"><a href="group__scan__func__scan.htm#gabe3e469eb355990345012bbe6393b4c3">af::scan</a></div><div class="ttdeci">AFAPI array scan(const array &amp;in, const int dim=0, binaryOp op=AF_BINARY_ADD, bool inclusive_scan=true)</div><div class="ttdoc">C++ Interface generalized scan of an array. </div></div>
<div class="ttc" id="group__reduce__func__min__by__key_htm_ga24037db6a2a5c117f2ade85b0412f548"><div class="ttname"><a href="group__reduce__func__min__by__key.htm#ga24037db6a2a5c117f2ade85b0412f548">af_min_by_key</a></div><div class="ttdeci">AFAPI af_err af_min_by_key(af_array *keys_out, af_array *vals_out, const af_array keys, const af_array vals, const int dim)</div><div class="ttdoc">C Interface for minimum values in an array according to key. </div></div>
<div class="ttc" id="defines_8h_htm"><div class="ttname"><a href="defines_8h.htm">defines.h</a></div></div>
<div class="ttc" id="group__reduce__func__product_htm_ga2be338d39be30ad22dddf658a4f5676e"><div class="ttname"><a href="group__reduce__func__product.htm#ga2be338d39be30ad22dddf658a4f5676e">af_product</a></div><div class="ttdeci">AFAPI af_err af_product(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for product of elements in an array. </div></div>
<div class="ttc" id="group__reduce__func__min_htm_ga2f65943090e0c2317bd682c25594b901"><div class="ttname"><a href="group__reduce__func__min.htm#ga2f65943090e0c2317bd682c25594b901">af_imin</a></div><div class="ttdeci">AFAPI af_err af_imin(af_array *out, af_array *idx, const af_array in, const int dim)</div><div class="ttdoc">C Interface for getting minimum values and their locations in an array. </div></div>
<div class="ttc" id="group__reduce__func__any__true_htm_ga7c275cda2cfc8eb0bd20ea86472ca0d5"><div class="ttname"><a href="group__reduce__func__any__true.htm#ga7c275cda2cfc8eb0bd20ea86472ca0d5">af_any_true</a></div><div class="ttdeci">AFAPI af_err af_any_true(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for checking any true values in an array. </div></div>
<div class="ttc" id="group__reduce__func__max_htm_ga4459daf5a3b081fb4ee15eb49d8c902a"><div class="ttname"><a href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">af::max</a></div><div class="ttdeci">AFAPI array max(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for maximum values in an array. </div></div>
<div class="ttc" id="group__calc__func__diff2_htm_gafc7b2d05e4e85aeb3e8b3239f598f70c"><div class="ttname"><a href="group__calc__func__diff2.htm#gafc7b2d05e4e85aeb3e8b3239f598f70c">af_diff2</a></div><div class="ttdeci">AFAPI af_err af_diff2(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for calculating second order differences in an array. </div></div>
<div class="ttc" id="group__scan__func__scanbykey_htm_gaaae150e0f197782782f45340d137b027"><div class="ttname"><a href="group__scan__func__scanbykey.htm#gaaae150e0f197782782f45340d137b027">af_scan_by_key</a></div><div class="ttdeci">AFAPI af_err af_scan_by_key(af_array *out, const af_array key, const af_array in, const int dim, af_binary_op op, bool inclusive_scan)</div><div class="ttdoc">C Interface generalized scan by key of an array. </div></div>
<div class="ttc" id="namespaceaf_htm_a35aa2f544c3762a14762de1451f0f141"><div class="ttname"><a href="namespaceaf.htm#a35aa2f544c3762a14762de1451f0f141">af::allTrueByKey</a></div><div class="ttdeci">AFAPI void allTrueByKey(array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</div><div class="ttdoc">C++ Interface for checking all true values in an array according to a key. </div></div>
<div class="ttc" id="group__arith__func__imag_htm_gade4b0cbdc402bc05d45a7f130b1fa865"><div class="ttname"><a href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">af::imag</a></div><div class="ttdeci">AFAPI array imag(const array &amp;in)</div><div class="ttdoc">C++ Interface for getting imaginary part from complex array. </div></div>
<div class="ttc" id="group__reduce__func__max_htm_ga564bbeca8e4c243355979a6cb5dc4970"><div class="ttname"><a href="group__reduce__func__max.htm#ga564bbeca8e4c243355979a6cb5dc4970">af_max_ragged</a></div><div class="ttdeci">AFAPI af_err af_max_ragged(af_array *val, af_array *idx, const af_array in, const af_array ragged_len, const int dim)</div><div class="ttdoc">C Interface for finding ragged max values in an array Uses an additional input array to determine the...</div></div>
<div class="ttc" id="group__reduce__func__product_htm_gaac132e883d40243c420b4ccfa09ddaa3"><div class="ttname"><a href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">af::product</a></div><div class="ttdeci">AFAPI array product(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for product of elements in an array. </div></div>
<div class="ttc" id="group__set__func__intersect_htm_ga985f9332c5f858eec66c717881ef2607"><div class="ttname"><a href="group__set__func__intersect.htm#ga985f9332c5f858eec66c717881ef2607">af_set_intersect</a></div><div class="ttdeci">AFAPI af_err af_set_intersect(af_array *out, const af_array first, const af_array second, const bool is_unique)</div><div class="ttdoc">C Interface for finding the intersection of two arrays. </div></div>
<div class="ttc" id="group__calc__func__diff1_htm_gad3be33ce8114f65c188645e958fce171"><div class="ttname"><a href="group__calc__func__diff1.htm#gad3be33ce8114f65c188645e958fce171">af_diff1</a></div><div class="ttdeci">AFAPI af_err af_diff1(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for calculating first order differences in an array. </div></div>
<div class="ttc" id="group__reduce__func__min_htm_ga2ac4c8d9ba613dbc9bfec0bee7be8eb8"><div class="ttname"><a href="group__reduce__func__min.htm#ga2ac4c8d9ba613dbc9bfec0bee7be8eb8">af_min</a></div><div class="ttdeci">AFAPI af_err af_min(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for minimum values in an array. </div></div>
<div class="ttc" id="group__reduce__func__sum__by__key_htm_gafa695edde00c43ac638ca7d9961938f4"><div class="ttname"><a href="group__reduce__func__sum__by__key.htm#gafa695edde00c43ac638ca7d9961938f4">af_sum_by_key_nan</a></div><div class="ttdeci">AFAPI af_err af_sum_by_key_nan(af_array *keys_out, af_array *vals_out, const af_array keys, const af_array vals, const int dim, const double nanval)</div><div class="ttdoc">C Interface for sum of elements in an array according to key while replacing nans. </div></div>
<div class="ttc" id="group__arith__func__real_htm_ga09209f0d8ffd557608fef6bade1689c9"><div class="ttname"><a href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">af::real</a></div><div class="ttdeci">AFAPI array real(const array &amp;in)</div><div class="ttdoc">C++ Interface for getting real part from complex array. </div></div>
<div class="ttc" id="group__reduce__func__max_htm_gaf0e6a523e2e435d5409d5d8cb843d8a2"><div class="ttname"><a href="group__reduce__func__max.htm#gaf0e6a523e2e435d5409d5d8cb843d8a2">af_imax</a></div><div class="ttdeci">AFAPI af_err af_imax(af_array *out, af_array *idx, const af_array in, const int dim)</div><div class="ttdoc">C Interface for getting maximum values and their locations in an array. </div></div>
<div class="ttc" id="defines_8h_htm_ab23e67549eba2cfbaf0eb5f88f947e48"><div class="ttname"><a href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a></div><div class="ttdeci">#define AFAPI</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00038">defines.h:38</a></div></div>
<div class="ttc" id="group__reduce__func__anytrue__by__key_htm_ga973fd650f8a57533f675cfd7ad6f0718"><div class="ttname"><a href="group__reduce__func__anytrue__by__key.htm#ga973fd650f8a57533f675cfd7ad6f0718">af_any_true_by_key</a></div><div class="ttdeci">AFAPI af_err af_any_true_by_key(af_array *keys_out, af_array *vals_out, const af_array keys, const af_array vals, const int dim)</div><div class="ttdoc">C Interface for checking any true values in an array according to key. </div></div>
<div class="ttc" id="group__set__func__intersect_htm_gae4549aee29c563edfb0b4a444fbf9200"><div class="ttname"><a href="group__set__func__intersect.htm#gae4549aee29c563edfb0b4a444fbf9200">af::setIntersect</a></div><div class="ttdeci">AFAPI array setIntersect(const array &amp;first, const array &amp;second, const bool is_unique=false)</div><div class="ttdoc">C++ Interface for finding the intersection of two arrays. </div></div>
<div class="ttc" id="group__reduce__func__any__true_htm_gafe4c8f22bbfa4288696f2a133b1b619e"><div class="ttname"><a href="group__reduce__func__any__true.htm#gafe4c8f22bbfa4288696f2a133b1b619e">af::anyTrue</a></div><div class="ttdeci">AFAPI array anyTrue(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for checking any true values in an array. </div></div>
<div class="ttc" id="group__set__func__unique_htm_ga73f2f768af96755af50df21e384287c6"><div class="ttname"><a href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">af::setUnique</a></div><div class="ttdeci">AFAPI array setUnique(const array &amp;in, const bool is_sorted=false)</div><div class="ttdoc">C++ Interface for getting unique values. </div></div>
<div class="ttc" id="group__scan__func__accum_htm_gae450135c4ae1bdaa4489804a215f3214"><div class="ttname"><a href="group__scan__func__accum.htm#gae450135c4ae1bdaa4489804a215f3214">af::accum</a></div><div class="ttdeci">AFAPI array accum(const array &amp;in, const int dim=0)</div><div class="ttdoc">C++ Interface for computing the cumulative sum (inclusive) of an array. </div></div>
<div class="ttc" id="defines_8h_htm_a4de0054ea1c296a55a79691c21f19c6c"><div class="ttname"><a href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6c">af_binary_op</a></div><div class="ttdeci">af_binary_op</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00429">defines.h:429</a></div></div>
<div class="ttc" id="defines_8h_htm_a4de0054ea1c296a55a79691c21f19c6ca335c219d88e113349f6ce08e830314a1"><div class="ttname"><a href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6ca335c219d88e113349f6ce08e830314a1">AF_BINARY_ADD</a></div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00430">defines.h:430</a></div></div>
<div class="ttc" id="group__reduce__func__product_htm_ga1d25447c16d492767ba7efa7ee72a36e"><div class="ttname"><a href="group__reduce__func__product.htm#ga1d25447c16d492767ba7efa7ee72a36e">af_product_nan</a></div><div class="ttdeci">AFAPI af_err af_product_nan(af_array *out, const af_array in, const int dim, const double nanval)</div><div class="ttdoc">C Interface for product of elements in an array while replacing nans. </div></div>
<div class="ttc" id="group__scan__func__scanbykey_htm_ga881c15b2d5ae0dea679eb3fd700ad681"><div class="ttname"><a href="group__scan__func__scanbykey.htm#ga881c15b2d5ae0dea679eb3fd700ad681">af::scanByKey</a></div><div class="ttdeci">AFAPI array scanByKey(const array &amp;key, const array &amp;in, const int dim=0, binaryOp op=AF_BINARY_ADD, bool inclusive_scan=true)</div><div class="ttdoc">C++ Interface generalized scan by key of an array. </div></div>
<div class="ttc" id="group__sort__func__sort_htm_gac4460d605452515d07ee8432f906aa8e"><div class="ttname"><a href="group__sort__func__sort.htm#gac4460d605452515d07ee8432f906aa8e">af_sort</a></div><div class="ttdeci">AFAPI af_err af_sort(af_array *out, const af_array in, const unsigned dim, const bool isAscending)</div><div class="ttdoc">C Interface for sorting an array. </div></div>
<div class="ttc" id="group__reduce__func__product__by__key_htm_ga001f04ff52e6fcfd8e8a8534cbd723e6"><div class="ttname"><a href="group__reduce__func__product__by__key.htm#ga001f04ff52e6fcfd8e8a8534cbd723e6">af::productByKey</a></div><div class="ttdeci">AFAPI void productByKey(array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</div><div class="ttdoc">C++ Interface for product of elements in an array according to a key. </div></div>
<div class="ttc" id="group__reduce__func__product__by__key_htm_gaff3459e70525e5e472591231037351e0"><div class="ttname"><a href="group__reduce__func__product__by__key.htm#gaff3459e70525e5e472591231037351e0">af_product_by_key_nan</a></div><div class="ttdeci">AFAPI af_err af_product_by_key_nan(af_array *keys_out, af_array *vals_out, const af_array keys, const af_array vals, const int dim, const double nanval)</div><div class="ttdoc">C Interface for product of elements in an array according to key while replacing nans. </div></div>
<div class="ttc" id="group__reduce__func__sum__by__key_htm_ga436bf839bf091339678c77cf0534078b"><div class="ttname"><a href="group__reduce__func__sum__by__key.htm#ga436bf839bf091339678c77cf0534078b">af::sumByKey</a></div><div class="ttdeci">AFAPI void sumByKey(array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</div><div class="ttdoc">C++ Interface for sum of elements along given dimension by key. </div></div>
<div class="ttc" id="group__reduce__func__sum__by__key_htm_ga2a1fdb7417aa59287db593159c19ed2d"><div class="ttname"><a href="group__reduce__func__sum__by__key.htm#ga2a1fdb7417aa59287db593159c19ed2d">af_sum_by_key</a></div><div class="ttdeci">AFAPI af_err af_sum_by_key(af_array *keys_out, af_array *vals_out, const af_array keys, const af_array vals, const int dim)</div><div class="ttdoc">C Interface for sum of elements in an array according to key. </div></div>
<div class="ttc" id="group__sort__func__sort__keys_htm_ga7d4fcaf229ece5fbbe30a638d9a60b8a"><div class="ttname"><a href="group__sort__func__sort__keys.htm#ga7d4fcaf229ece5fbbe30a638d9a60b8a">af_sort_by_key</a></div><div class="ttdeci">AFAPI af_err af_sort_by_key(af_array *out_keys, af_array *out_values, const af_array keys, const af_array values, const unsigned dim, const bool isAscending)</div><div class="ttdoc">C Interface for sorting an array based on keys. </div></div>
<div class="ttc" id="defines_8h_htm_a8e45f4aa3dbea6a7aa021dbc50a4a089"><div class="ttname"><a href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a></div><div class="ttdeci">void * af_array</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00240">defines.h:240</a></div></div>
<div class="ttc" id="group__reduce__func__min_htm_ga2b1287d1babb569d28bc6ee1c8e8e1ea"><div class="ttname"><a href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">af::min</a></div><div class="ttdeci">AFAPI array min(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for minimum values in an array. </div></div>
<div class="ttc" id="group__reduce__func__sum_htm_gacd4917c2e916870ebdf54afc2f61d533"><div class="ttname"><a href="group__reduce__func__sum.htm#gacd4917c2e916870ebdf54afc2f61d533">af_sum</a></div><div class="ttdeci">AFAPI af_err af_sum(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for sum of elements in an array. </div></div>
<div class="ttc" id="group__reduce__func__sum_htm_gabc009d04df0faf29ba1e381c7badde58"><div class="ttname"><a href="group__reduce__func__sum.htm#gabc009d04df0faf29ba1e381c7badde58">af_sum_all</a></div><div class="ttdeci">AFAPI af_err af_sum_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for sum of all elements in an array. </div></div>
<div class="ttc" id="group__sort__func__sort_htm_ga8d1a62b3e41bfcdeef810a442869b42c"><div class="ttname"><a href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">af::sort</a></div><div class="ttdeci">AFAPI array sort(const array &amp;in, const unsigned dim=0, const bool isAscending=true)</div><div class="ttdoc">C++ Interface for sorting an array. </div></div>
<div class="ttc" id="algorithm_8h_htm_a65fa5577c81a2c2fcf7406bf48cc014a"><div class="ttname"><a href="algorithm_8h.htm#a65fa5577c81a2c2fcf7406bf48cc014a">af_all_true_by_key</a></div><div class="ttdeci">AFAPI af_err af_all_true_by_key(af_array *keys_out, af_array *vals_out, const af_array keys, const af_array vals, const int dim)</div><div class="ttdoc">C Interface for checking all true values in an array according to key. </div></div>
<div class="ttc" id="group__reduce__func__all__true_htm_ga9b50d4adffe3050c3d21bbbbb3d2e434"><div class="ttname"><a href="group__reduce__func__all__true.htm#ga9b50d4adffe3050c3d21bbbbb3d2e434">af_all_true_all</a></div><div class="ttdeci">AFAPI af_err af_all_true_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for checking if all values in an array are true. </div></div>
<div class="ttc" id="group__scan__func__scan_htm_ga1c864e22826f61bec2e9b6c61aa93fce"><div class="ttname"><a href="group__scan__func__scan.htm#ga1c864e22826f61bec2e9b6c61aa93fce">af_scan</a></div><div class="ttdeci">AFAPI af_err af_scan(af_array *out, const af_array in, const int dim, af_binary_op op, bool inclusive_scan)</div><div class="ttdoc">C Interface generalized scan of an array. </div></div>
<div class="ttc" id="group__reduce__func__product_htm_gaca78d54c53a33b419bfdb5c64accbc7b"><div class="ttname"><a href="group__reduce__func__product.htm#gaca78d54c53a33b419bfdb5c64accbc7b">af_product_nan_all</a></div><div class="ttdeci">AFAPI af_err af_product_nan_all(double *real, double *imag, const af_array in, const double nanval)</div><div class="ttdoc">C Interface for product of all elements in an array while replacing nans. </div></div>
<div class="ttc" id="group__reduce__func__count_htm_ga76b6172262aa0e64bf6979c16a40ea3c"><div class="ttname"><a href="group__reduce__func__count.htm#ga76b6172262aa0e64bf6979c16a40ea3c">af::count</a></div><div class="ttdeci">AFAPI array count(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for counting non-zero values in an array. </div></div>
<div class="ttc" id="group__set__func__union_htm_gaa793c080cfa2c5ed7f422479e8e0bfe3"><div class="ttname"><a href="group__set__func__union.htm#gaa793c080cfa2c5ed7f422479e8e0bfe3">af::setUnion</a></div><div class="ttdeci">AFAPI array setUnion(const array &amp;first, const array &amp;second, const bool is_unique=false)</div><div class="ttdoc">C++ Interface for finding the union of two arrays. </div></div>
<div class="ttc" id="group__calc__func__diff1_htm_gab099192b1beeddab1ad14536aba689b2"><div class="ttname"><a href="group__calc__func__diff1.htm#gab099192b1beeddab1ad14536aba689b2">af::diff1</a></div><div class="ttdeci">AFAPI array diff1(const array &amp;in, const int dim=0)</div><div class="ttdoc">C++ Interface for calculating first order differences in an array. </div></div>
<div class="ttc" id="group__reduce__func__max__by__key_htm_gaac1957071462ec10da9a7958fe0f6723"><div class="ttname"><a href="group__reduce__func__max__by__key.htm#gaac1957071462ec10da9a7958fe0f6723">af::maxByKey</a></div><div class="ttdeci">AFAPI void maxByKey(array &amp;keys_out, array &amp;vals_out, const array &amp;keys, const array &amp;vals, const int dim=-1)</div><div class="ttdoc">C++ Interface for maximum values in an array according to a key. </div></div>
<div class="ttc" id="group__reduce__func__all__true_htm_ga068708be5177a0aa3788af140bb5ebd6"><div class="ttname"><a href="group__reduce__func__all__true.htm#ga068708be5177a0aa3788af140bb5ebd6">af_all_true</a></div><div class="ttdeci">AFAPI af_err af_all_true(af_array *out, const af_array in, const int dim)</div><div class="ttdoc">C Interface for checking all true values in an array. </div></div>
<div class="ttc" id="group__reduce__func__max_htm_ga5f71ab6056943723149585d2aebade7c"><div class="ttname"><a href="group__reduce__func__max.htm#ga5f71ab6056943723149585d2aebade7c">af_max_all</a></div><div class="ttdeci">AFAPI af_err af_max_all(double *real, double *imag, const af_array in)</div><div class="ttdoc">C Interface for getting maximum value of an array. </div></div>
<div class="ttc" id="group__calc__func__diff2_htm_gad803d1bc99910533a5789c428522aaef"><div class="ttname"><a href="group__calc__func__diff2.htm#gad803d1bc99910533a5789c428522aaef">af::diff2</a></div><div class="ttdeci">AFAPI array diff2(const array &amp;in, const int dim=0)</div><div class="ttdoc">C++ Interface for calculating second order differences in an array. </div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
