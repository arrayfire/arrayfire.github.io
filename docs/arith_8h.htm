<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.9.1"/>
<title>arith.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.9.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('arith_8h.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">arith.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<h3 class="version">(2016-02-28 11:46:26 -0500, (build c51f42a))</h3><div class="textblock"><code>#include &lt;<a class="el" href="defines_8h_source.htm">af/defines.h</a>&gt;</code><br />
</div>
<p><a href="arith_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceaf"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm">af</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga23aa8c28a5ffa9368cc92abb143f5eaa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__abs.htm#ga23aa8c28a5ffa9368cc92abb143f5eaa">abs</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga23aa8c28a5ffa9368cc92abb143f5eaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for absolute value.  <a href="group__arith__func__abs.htm#ga23aa8c28a5ffa9368cc92abb143f5eaa">More...</a><br /></td></tr>
<tr class="separator:ga23aa8c28a5ffa9368cc92abb143f5eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa93e6a8ca5f77b3fac1bd66113e640e3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__arg.htm#gaa93e6a8ca5f77b3fac1bd66113e640e3">arg</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gaa93e6a8ca5f77b3fac1bd66113e640e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for arg.  <a href="group__arith__func__arg.htm#gaa93e6a8ca5f77b3fac1bd66113e640e3">More...</a><br /></td></tr>
<tr class="separator:gaa93e6a8ca5f77b3fac1bd66113e640e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5e40945580a507ade9909eb2c0c7918c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sign.htm#ga5e40945580a507ade9909eb2c0c7918c">sign</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga5e40945580a507ade9909eb2c0c7918c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting the sign of input.  <a href="group__arith__func__sign.htm#ga5e40945580a507ade9909eb2c0c7918c">More...</a><br /></td></tr>
<tr class="separator:ga5e40945580a507ade9909eb2c0c7918c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafefce014e11cc4b3c3af64a73b28a76b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__round.htm#gafefce014e11cc4b3c3af64a73b28a76b">round</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gafefce014e11cc4b3c3af64a73b28a76b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for rounding an array of numbers.  <a href="group__arith__func__round.htm#gafefce014e11cc4b3c3af64a73b28a76b">More...</a><br /></td></tr>
<tr class="separator:gafefce014e11cc4b3c3af64a73b28a76b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad534184a4627d32fcdd5c00f2040c33f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__trunc.htm#gad534184a4627d32fcdd5c00f2040c33f">trunc</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gad534184a4627d32fcdd5c00f2040c33f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for truncating an array of numbers.  <a href="group__arith__func__trunc.htm#gad534184a4627d32fcdd5c00f2040c33f">More...</a><br /></td></tr>
<tr class="separator:gad534184a4627d32fcdd5c00f2040c33f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e75b4b34f55a6ce68cfa762eff995a6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__floor.htm#ga3e75b4b34f55a6ce68cfa762eff995a6">floor</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga3e75b4b34f55a6ce68cfa762eff995a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for flooring an array of numbers.  <a href="group__arith__func__floor.htm#ga3e75b4b34f55a6ce68cfa762eff995a6">More...</a><br /></td></tr>
<tr class="separator:ga3e75b4b34f55a6ce68cfa762eff995a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae5acbe2232fa02979af707ac3ff4c130"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ceil.htm#gae5acbe2232fa02979af707ac3ff4c130">ceil</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gae5acbe2232fa02979af707ac3ff4c130"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for ceiling an array of numbers.  <a href="group__arith__func__ceil.htm#gae5acbe2232fa02979af707ac3ff4c130">More...</a><br /></td></tr>
<tr class="separator:gae5acbe2232fa02979af707ac3ff4c130"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac6fdb44f59fbbffdc55c9c4af29e08f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sin.htm#gac6fdb44f59fbbffdc55c9c4af29e08f4">sin</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gac6fdb44f59fbbffdc55c9c4af29e08f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sin.  <a href="group__arith__func__sin.htm#gac6fdb44f59fbbffdc55c9c4af29e08f4">More...</a><br /></td></tr>
<tr class="separator:gac6fdb44f59fbbffdc55c9c4af29e08f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00be564e1f588df68288d2dec8578cb6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cos.htm#ga00be564e1f588df68288d2dec8578cb6">cos</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga00be564e1f588df68288d2dec8578cb6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for cos.  <a href="group__arith__func__cos.htm#ga00be564e1f588df68288d2dec8578cb6">More...</a><br /></td></tr>
<tr class="separator:ga00be564e1f588df68288d2dec8578cb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5444749c3b32afa8097eab85634053ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__tan.htm#ga5444749c3b32afa8097eab85634053ff">tan</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga5444749c3b32afa8097eab85634053ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for tan.  <a href="group__arith__func__tan.htm#ga5444749c3b32afa8097eab85634053ff">More...</a><br /></td></tr>
<tr class="separator:ga5444749c3b32afa8097eab85634053ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe5fd45fc51441775b1b25d9ee2fd915"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__asin.htm#gabe5fd45fc51441775b1b25d9ee2fd915">asin</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gabe5fd45fc51441775b1b25d9ee2fd915"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for arc sin (sin inverse)  <a href="group__arith__func__asin.htm#gabe5fd45fc51441775b1b25d9ee2fd915">More...</a><br /></td></tr>
<tr class="separator:gabe5fd45fc51441775b1b25d9ee2fd915"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac1d7bbca7912df6ed684a34730b48536"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__acos.htm#gac1d7bbca7912df6ed684a34730b48536">acos</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gac1d7bbca7912df6ed684a34730b48536"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for arc cos (cos inverse)  <a href="group__arith__func__acos.htm#gac1d7bbca7912df6ed684a34730b48536">More...</a><br /></td></tr>
<tr class="separator:gac1d7bbca7912df6ed684a34730b48536"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0033a2ac3f2a0cbe5b5ca10c9049fb24"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__atan.htm#ga0033a2ac3f2a0cbe5b5ca10c9049fb24">atan</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga0033a2ac3f2a0cbe5b5ca10c9049fb24"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for arc tan (tan inverse)  <a href="group__arith__func__atan.htm#ga0033a2ac3f2a0cbe5b5ca10c9049fb24">More...</a><br /></td></tr>
<tr class="separator:ga0033a2ac3f2a0cbe5b5ca10c9049fb24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga09209f0d8ffd557608fef6bade1689c9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga09209f0d8ffd557608fef6bade1689c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting real part from complex array.  <a href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">More...</a><br /></td></tr>
<tr class="separator:ga09209f0d8ffd557608fef6bade1689c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gade4b0cbdc402bc05d45a7f130b1fa865"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">imag</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gade4b0cbdc402bc05d45a7f130b1fa865"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting imaginary part from complex array.  <a href="group__arith__func__imag.htm#gade4b0cbdc402bc05d45a7f130b1fa865">More...</a><br /></td></tr>
<tr class="separator:gade4b0cbdc402bc05d45a7f130b1fa865"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga04a788ad4286ad9483b0d53596bc5da6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__conjg.htm#ga04a788ad4286ad9483b0d53596bc5da6">conjg</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga04a788ad4286ad9483b0d53596bc5da6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting the complex conjugate of input array.  <a href="group__arith__func__conjg.htm#ga04a788ad4286ad9483b0d53596bc5da6">More...</a><br /></td></tr>
<tr class="separator:ga04a788ad4286ad9483b0d53596bc5da6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga42ad4a8882b5259db99b1498742fc9b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sinh.htm#ga42ad4a8882b5259db99b1498742fc9b8">sinh</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga42ad4a8882b5259db99b1498742fc9b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sinh.  <a href="group__arith__func__sinh.htm#ga42ad4a8882b5259db99b1498742fc9b8">More...</a><br /></td></tr>
<tr class="separator:ga42ad4a8882b5259db99b1498742fc9b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga84729d7c30446d8d4970b067ee67dd3c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cosh.htm#ga84729d7c30446d8d4970b067ee67dd3c">cosh</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga84729d7c30446d8d4970b067ee67dd3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for cosh.  <a href="group__arith__func__cosh.htm#ga84729d7c30446d8d4970b067ee67dd3c">More...</a><br /></td></tr>
<tr class="separator:ga84729d7c30446d8d4970b067ee67dd3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga269ab0934aa1ae4157b37c52ab555966"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__tanh.htm#ga269ab0934aa1ae4157b37c52ab555966">tanh</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga269ab0934aa1ae4157b37c52ab555966"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for tanh.  <a href="group__arith__func__tanh.htm#ga269ab0934aa1ae4157b37c52ab555966">More...</a><br /></td></tr>
<tr class="separator:ga269ab0934aa1ae4157b37c52ab555966"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadcda001087a4a1c6f1d02c93cd9800b3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__asinh.htm#gadcda001087a4a1c6f1d02c93cd9800b3">asinh</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gadcda001087a4a1c6f1d02c93cd9800b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sinh inverse.  <a href="group__arith__func__asinh.htm#gadcda001087a4a1c6f1d02c93cd9800b3">More...</a><br /></td></tr>
<tr class="separator:gadcda001087a4a1c6f1d02c93cd9800b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa8886e4c5160c00ddfb633fedc5583ad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__acosh.htm#gaa8886e4c5160c00ddfb633fedc5583ad">acosh</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gaa8886e4c5160c00ddfb633fedc5583ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for cosh inverse.  <a href="group__arith__func__acosh.htm#gaa8886e4c5160c00ddfb633fedc5583ad">More...</a><br /></td></tr>
<tr class="separator:gaa8886e4c5160c00ddfb633fedc5583ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d1023c1b62e98d5bb783f16e2467e4b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__atanh.htm#ga9d1023c1b62e98d5bb783f16e2467e4b">atanh</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga9d1023c1b62e98d5bb783f16e2467e4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for tanh inverse.  <a href="group__arith__func__atanh.htm#ga9d1023c1b62e98d5bb783f16e2467e4b">More...</a><br /></td></tr>
<tr class="separator:ga9d1023c1b62e98d5bb783f16e2467e4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac6620c73725d82d0227c064f224b82a4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__root.htm#gac6620c73725d82d0227c064f224b82a4">root</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac6620c73725d82d0227c064f224b82a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for nth root.  <a href="group__arith__func__root.htm#gac6620c73725d82d0227c064f224b82a4">More...</a><br /></td></tr>
<tr class="separator:gac6620c73725d82d0227c064f224b82a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaafd6dcd40d42724311aef9c1963ecba0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__root.htm#gaafd6dcd40d42724311aef9c1963ecba0">root</a> (const array &amp;lhs, const double rhs)</td></tr>
<tr class="memdesc:gaafd6dcd40d42724311aef9c1963ecba0"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for nth root.  <a href="group__arith__func__root.htm#gaafd6dcd40d42724311aef9c1963ecba0">More...</a><br /></td></tr>
<tr class="separator:gaafd6dcd40d42724311aef9c1963ecba0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeba5dfdd7d6ffb448a7901637fdc726b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__root.htm#gaeba5dfdd7d6ffb448a7901637fdc726b">root</a> (const double lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaeba5dfdd7d6ffb448a7901637fdc726b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for nth root.  <a href="group__arith__func__root.htm#gaeba5dfdd7d6ffb448a7901637fdc726b">More...</a><br /></td></tr>
<tr class="separator:gaeba5dfdd7d6ffb448a7901637fdc726b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83c8f1181fc87c30d649f3f1eb26a860"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm#a83c8f1181fc87c30d649f3f1eb26a860">sigmoid</a> (const array &amp;in)</td></tr>
<tr class="memdesc:a83c8f1181fc87c30d649f3f1eb26a860"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for calculating sigmoid function of an array.  <a href="#a83c8f1181fc87c30d649f3f1eb26a860">More...</a><br /></td></tr>
<tr class="separator:a83c8f1181fc87c30d649f3f1eb26a860"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9ddbaf0852fbf988400b9677705b2a00"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__exp.htm#ga9ddbaf0852fbf988400b9677705b2a00">exp</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga9ddbaf0852fbf988400b9677705b2a00"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for exponential of an array.  <a href="group__arith__func__exp.htm#ga9ddbaf0852fbf988400b9677705b2a00">More...</a><br /></td></tr>
<tr class="separator:ga9ddbaf0852fbf988400b9677705b2a00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae085a00e6da69ca27ecc660552ab61f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__expm1.htm#gae085a00e6da69ca27ecc660552ab61f9">expm1</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gae085a00e6da69ca27ecc660552ab61f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for exponential of an array minus 1.  <a href="group__arith__func__expm1.htm#gae085a00e6da69ca27ecc660552ab61f9">More...</a><br /></td></tr>
<tr class="separator:gae085a00e6da69ca27ecc660552ab61f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c72883728c09d5442bb6b6f5a4d5eee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__erf.htm#ga0c72883728c09d5442bb6b6f5a4d5eee">erf</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga0c72883728c09d5442bb6b6f5a4d5eee"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for error function value.  <a href="group__arith__func__erf.htm#ga0c72883728c09d5442bb6b6f5a4d5eee">More...</a><br /></td></tr>
<tr class="separator:ga0c72883728c09d5442bb6b6f5a4d5eee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafff3d3c3174cca218d14a039d13cee35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__erfc.htm#gafff3d3c3174cca218d14a039d13cee35">erfc</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gafff3d3c3174cca218d14a039d13cee35"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for complementary error function value.  <a href="group__arith__func__erfc.htm#gafff3d3c3174cca218d14a039d13cee35">More...</a><br /></td></tr>
<tr class="separator:gafff3d3c3174cca218d14a039d13cee35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf15f1af67e62541e0322f4c94acd0293"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__log.htm#gaf15f1af67e62541e0322f4c94acd0293">log</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gaf15f1af67e62541e0322f4c94acd0293"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for natural logarithm.  <a href="group__arith__func__log.htm#gaf15f1af67e62541e0322f4c94acd0293">More...</a><br /></td></tr>
<tr class="separator:gaf15f1af67e62541e0322f4c94acd0293"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga047f56ac38021fd5bfd6d91ff1efb268"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__log1p.htm#ga047f56ac38021fd5bfd6d91ff1efb268">log1p</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga047f56ac38021fd5bfd6d91ff1efb268"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for natural logarithm of 1 + input.  <a href="group__arith__func__log1p.htm#ga047f56ac38021fd5bfd6d91ff1efb268">More...</a><br /></td></tr>
<tr class="separator:ga047f56ac38021fd5bfd6d91ff1efb268"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae8457a90dd6dc6bbb68c5e9dd28aa936"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__log10.htm#gae8457a90dd6dc6bbb68c5e9dd28aa936">log10</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gae8457a90dd6dc6bbb68c5e9dd28aa936"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for logarithm base 10.  <a href="group__arith__func__log10.htm#gae8457a90dd6dc6bbb68c5e9dd28aa936">More...</a><br /></td></tr>
<tr class="separator:gae8457a90dd6dc6bbb68c5e9dd28aa936"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7018268791fadde166753d079cf70cd3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm#a7018268791fadde166753d079cf70cd3">log2</a> (const array &amp;in)</td></tr>
<tr class="memdesc:a7018268791fadde166753d079cf70cd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for logarithm base 2.  <a href="#a7018268791fadde166753d079cf70cd3">More...</a><br /></td></tr>
<tr class="separator:a7018268791fadde166753d079cf70cd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga25c678d4cd9e0702bbc93e11d7d516a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sqrt.htm#ga25c678d4cd9e0702bbc93e11d7d516a8">sqrt</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga25c678d4cd9e0702bbc93e11d7d516a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for square root of input.  <a href="group__arith__func__sqrt.htm#ga25c678d4cd9e0702bbc93e11d7d516a8">More...</a><br /></td></tr>
<tr class="separator:ga25c678d4cd9e0702bbc93e11d7d516a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga227e3073821573b2337421860bc36792"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cbrt.htm#ga227e3073821573b2337421860bc36792">cbrt</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga227e3073821573b2337421860bc36792"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for cube root of input.  <a href="group__arith__func__cbrt.htm#ga227e3073821573b2337421860bc36792">More...</a><br /></td></tr>
<tr class="separator:ga227e3073821573b2337421860bc36792"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4228bf307e7edaaf7de6c14bcbc6d40e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__factorial.htm#ga4228bf307e7edaaf7de6c14bcbc6d40e">factorial</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga4228bf307e7edaaf7de6c14bcbc6d40e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for factorial of input.  <a href="group__arith__func__factorial.htm#ga4228bf307e7edaaf7de6c14bcbc6d40e">More...</a><br /></td></tr>
<tr class="separator:ga4228bf307e7edaaf7de6c14bcbc6d40e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab1bfbe56b1b2798036e7bcc0111d8f2f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__tgamma.htm#gab1bfbe56b1b2798036e7bcc0111d8f2f">tgamma</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gab1bfbe56b1b2798036e7bcc0111d8f2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for gamma function of input.  <a href="group__arith__func__tgamma.htm#gab1bfbe56b1b2798036e7bcc0111d8f2f">More...</a><br /></td></tr>
<tr class="separator:gab1bfbe56b1b2798036e7bcc0111d8f2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga039cda290c608b0fa3fcbe6f9fa9a968"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__tgamma.htm#ga039cda290c608b0fa3fcbe6f9fa9a968">lgamma</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga039cda290c608b0fa3fcbe6f9fa9a968"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for logarithm of absolute value of gamma function of input.  <a href="group__arith__func__tgamma.htm#ga039cda290c608b0fa3fcbe6f9fa9a968">More...</a><br /></td></tr>
<tr class="separator:ga039cda290c608b0fa3fcbe6f9fa9a968"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2ab8f0f1ceac74e3385c08938b7c0c6a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__iszero.htm#ga2ab8f0f1ceac74e3385c08938b7c0c6a">iszero</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga2ab8f0f1ceac74e3385c08938b7c0c6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for checking if values are zero.  <a href="group__arith__func__iszero.htm#ga2ab8f0f1ceac74e3385c08938b7c0c6a">More...</a><br /></td></tr>
<tr class="separator:ga2ab8f0f1ceac74e3385c08938b7c0c6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2addd7560b8192f272c51304e87e5535"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__isinf.htm#ga2addd7560b8192f272c51304e87e5535">isInf</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga2addd7560b8192f272c51304e87e5535"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for checking if values are Infinities.  <a href="group__arith__func__isinf.htm#ga2addd7560b8192f272c51304e87e5535">More...</a><br /></td></tr>
<tr class="separator:ga2addd7560b8192f272c51304e87e5535"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b90a8cd14248f578e509d69a94aa1b1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__isnan.htm#ga4b90a8cd14248f578e509d69a94aa1b1">isNaN</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga4b90a8cd14248f578e509d69a94aa1b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for checking if values are NaNs.  <a href="group__arith__func__isnan.htm#ga4b90a8cd14248f578e509d69a94aa1b1">More...</a><br /></td></tr>
<tr class="separator:ga4b90a8cd14248f578e509d69a94aa1b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1dfbee755fedd680f4476803ddfe06a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga1dfbee755fedd680f4476803ddfe06a7">af_add</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga1dfbee755fedd680f4476803ddfe06a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for adding arrays.  <a href="group__arith__func__add.htm#ga1dfbee755fedd680f4476803ddfe06a7">More...</a><br /></td></tr>
<tr class="separator:ga1dfbee755fedd680f4476803ddfe06a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga80ff99a2e186c23614ea9f36ffc6f0a4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga80ff99a2e186c23614ea9f36ffc6f0a4">af_sub</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga80ff99a2e186c23614ea9f36ffc6f0a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for subtracting an array from another.  <a href="group__arith__func__sub.htm#ga80ff99a2e186c23614ea9f36ffc6f0a4">More...</a><br /></td></tr>
<tr class="separator:ga80ff99a2e186c23614ea9f36ffc6f0a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f7588b2809ff7551d38b6a0bd583a02"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga5f7588b2809ff7551d38b6a0bd583a02">af_mul</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga5f7588b2809ff7551d38b6a0bd583a02"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for multiplying two arrays.  <a href="group__arith__func__mul.htm#ga5f7588b2809ff7551d38b6a0bd583a02">More...</a><br /></td></tr>
<tr class="separator:ga5f7588b2809ff7551d38b6a0bd583a02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga21f3f97755702692ec8976934e75fde6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga21f3f97755702692ec8976934e75fde6">af_div</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga21f3f97755702692ec8976934e75fde6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for dividing an array by another.  <a href="group__arith__func__div.htm#ga21f3f97755702692ec8976934e75fde6">More...</a><br /></td></tr>
<tr class="separator:ga21f3f97755702692ec8976934e75fde6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7aa04bf23b32bb11c4bab8bdd637103"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arith_8h.htm#ae7aa04bf23b32bb11c4bab8bdd637103">af_lt</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ae7aa04bf23b32bb11c4bab8bdd637103"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking if an array is less than another.  <a href="#ae7aa04bf23b32bb11c4bab8bdd637103">More...</a><br /></td></tr>
<tr class="separator:ae7aa04bf23b32bb11c4bab8bdd637103"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4e65603259515de8939899a163ebaf9e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga4e65603259515de8939899a163ebaf9e">af_gt</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga4e65603259515de8939899a163ebaf9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking if an array is greater than another.  <a href="group__arith__func__gt.htm#ga4e65603259515de8939899a163ebaf9e">More...</a><br /></td></tr>
<tr class="separator:ga4e65603259515de8939899a163ebaf9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad5535ce64dbed46d0773fd494e84e922"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gad5535ce64dbed46d0773fd494e84e922">af_le</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:gad5535ce64dbed46d0773fd494e84e922"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking if an array is less or equal to another.  <a href="group__arith__func__le.htm#gad5535ce64dbed46d0773fd494e84e922">More...</a><br /></td></tr>
<tr class="separator:gad5535ce64dbed46d0773fd494e84e922"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4513f212e0b0a22dcf4653e89c85e3d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga4513f212e0b0a22dcf4653e89c85e3d9">af_ge</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga4513f212e0b0a22dcf4653e89c85e3d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking if an array is greater or equal to another.  <a href="group__arith__func__ge.htm#ga4513f212e0b0a22dcf4653e89c85e3d9">More...</a><br /></td></tr>
<tr class="separator:ga4513f212e0b0a22dcf4653e89c85e3d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga76d2da7716831616bb81effa9e163693"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga76d2da7716831616bb81effa9e163693">af_eq</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga76d2da7716831616bb81effa9e163693"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking if an array is equal to another.  <a href="group__arith__func__eq.htm#ga76d2da7716831616bb81effa9e163693">More...</a><br /></td></tr>
<tr class="separator:ga76d2da7716831616bb81effa9e163693"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4ee8bd06a410f259f1493fb811ce441"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gae4ee8bd06a410f259f1493fb811ce441">af_neq</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:gae4ee8bd06a410f259f1493fb811ce441"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking if an array is not equal to another.  <a href="group__arith__func__neq.htm#gae4ee8bd06a410f259f1493fb811ce441">More...</a><br /></td></tr>
<tr class="separator:gae4ee8bd06a410f259f1493fb811ce441"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabb1373bebcdfb72f62cd1cdaa6e05c89"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gabb1373bebcdfb72f62cd1cdaa6e05c89">af_and</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:gabb1373bebcdfb72f62cd1cdaa6e05c89"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for performing logical and on two arrays.  <a href="group__arith__func__and.htm#gabb1373bebcdfb72f62cd1cdaa6e05c89">More...</a><br /></td></tr>
<tr class="separator:gabb1373bebcdfb72f62cd1cdaa6e05c89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga93943807f322d79e890e03bd757c2b91"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga93943807f322d79e890e03bd757c2b91">af_or</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga93943807f322d79e890e03bd757c2b91"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for performing logical or on two arrays.  <a href="group__arith__func__or.htm#ga93943807f322d79e890e03bd757c2b91">More...</a><br /></td></tr>
<tr class="separator:ga93943807f322d79e890e03bd757c2b91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae43c58913317abc7fa16462e6336c98b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__not.htm#gae43c58913317abc7fa16462e6336c98b">af_not</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gae43c58913317abc7fa16462e6336c98b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for performing logical not on input.  <a href="group__arith__func__not.htm#gae43c58913317abc7fa16462e6336c98b">More...</a><br /></td></tr>
<tr class="separator:gae43c58913317abc7fa16462e6336c98b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga45c0779ade4703708596df11cca98800"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga45c0779ade4703708596df11cca98800">af_bitand</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga45c0779ade4703708596df11cca98800"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for performing bitwise and on two arrays.  <a href="group__arith__func__bitand.htm#ga45c0779ade4703708596df11cca98800">More...</a><br /></td></tr>
<tr class="separator:ga45c0779ade4703708596df11cca98800"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga84c99f77d1d83fd53f949b4d67b5b210"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga84c99f77d1d83fd53f949b4d67b5b210">af_bitor</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga84c99f77d1d83fd53f949b4d67b5b210"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for performing bitwise or on two arrays.  <a href="group__arith__func__bitor.htm#ga84c99f77d1d83fd53f949b4d67b5b210">More...</a><br /></td></tr>
<tr class="separator:ga84c99f77d1d83fd53f949b4d67b5b210"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8188620da6b432998e55fdd1fad22100"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga8188620da6b432998e55fdd1fad22100">af_bitxor</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga8188620da6b432998e55fdd1fad22100"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for performing bitwise xor on two arrays.  <a href="group__arith__func__bitxor.htm#ga8188620da6b432998e55fdd1fad22100">More...</a><br /></td></tr>
<tr class="separator:ga8188620da6b432998e55fdd1fad22100"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3139645aafe6f045a5cab454e9c13137"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga3139645aafe6f045a5cab454e9c13137">af_bitshiftl</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga3139645aafe6f045a5cab454e9c13137"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for left shift on integer arrays.  <a href="group__arith__func__shiftl.htm#ga3139645aafe6f045a5cab454e9c13137">More...</a><br /></td></tr>
<tr class="separator:ga3139645aafe6f045a5cab454e9c13137"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4c06b9977ecf96cdfc83b5dfd1ac4895"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga4c06b9977ecf96cdfc83b5dfd1ac4895">af_bitshiftr</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga4c06b9977ecf96cdfc83b5dfd1ac4895"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for right shift on integer arrays.  <a href="group__arith__func__shiftr.htm#ga4c06b9977ecf96cdfc83b5dfd1ac4895">More...</a><br /></td></tr>
<tr class="separator:ga4c06b9977ecf96cdfc83b5dfd1ac4895"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab0cb307d6f9019ac8cbbbe9b8a4d6b9b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cast.htm#gab0cb307d6f9019ac8cbbbe9b8a4d6b9b">af_cast</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type)</td></tr>
<tr class="memdesc:gab0cb307d6f9019ac8cbbbe9b8a4d6b9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for casting an array from one type to another.  <a href="group__arith__func__cast.htm#gab0cb307d6f9019ac8cbbbe9b8a4d6b9b">More...</a><br /></td></tr>
<tr class="separator:gab0cb307d6f9019ac8cbbbe9b8a4d6b9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b842c2d86df978ff68699aeaafca794"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__min.htm#ga2b842c2d86df978ff68699aeaafca794">af_minof</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga2b842c2d86df978ff68699aeaafca794"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for min of two arrays.  <a href="group__arith__func__min.htm#ga2b842c2d86df978ff68699aeaafca794">More...</a><br /></td></tr>
<tr class="separator:ga2b842c2d86df978ff68699aeaafca794"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0cd47e70cf82b48730a97c59f494b421"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__max.htm#ga0cd47e70cf82b48730a97c59f494b421">af_maxof</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga0cd47e70cf82b48730a97c59f494b421"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for max of two arrays.  <a href="group__arith__func__max.htm#ga0cd47e70cf82b48730a97c59f494b421">More...</a><br /></td></tr>
<tr class="separator:ga0cd47e70cf82b48730a97c59f494b421"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4357bfcc23516a5747fac9e6a0456826"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__rem.htm#ga4357bfcc23516a5747fac9e6a0456826">af_rem</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga4357bfcc23516a5747fac9e6a0456826"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for remainder.  <a href="group__arith__func__rem.htm#ga4357bfcc23516a5747fac9e6a0456826">More...</a><br /></td></tr>
<tr class="separator:ga4357bfcc23516a5747fac9e6a0456826"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01924d1b59d8886e46fabd2dc9b27e0f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga01924d1b59d8886e46fabd2dc9b27e0f">af_mod</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga01924d1b59d8886e46fabd2dc9b27e0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for modulus.  <a href="group__arith__func__mod.htm#ga01924d1b59d8886e46fabd2dc9b27e0f">More...</a><br /></td></tr>
<tr class="separator:ga01924d1b59d8886e46fabd2dc9b27e0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae9670ec823c309ac0f8d53bfbf05886"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__abs.htm#gaae9670ec823c309ac0f8d53bfbf05886">af_abs</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gaae9670ec823c309ac0f8d53bfbf05886"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for absolute value.  <a href="group__arith__func__abs.htm#gaae9670ec823c309ac0f8d53bfbf05886">More...</a><br /></td></tr>
<tr class="separator:gaae9670ec823c309ac0f8d53bfbf05886"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad04de0f7948688378dcd3628628a7424"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__arg.htm#gad04de0f7948688378dcd3628628a7424">af_arg</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gad04de0f7948688378dcd3628628a7424"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for finding the phase.  <a href="group__arith__func__arg.htm#gad04de0f7948688378dcd3628628a7424">More...</a><br /></td></tr>
<tr class="separator:gad04de0f7948688378dcd3628628a7424"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d55dfb9b25e0a1316b70f01d5b44b35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__round.htm#ga2d55dfb9b25e0a1316b70f01d5b44b35">af_sign</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga2d55dfb9b25e0a1316b70f01d5b44b35"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for finding the sign of the input.  <a href="group__arith__func__round.htm#ga2d55dfb9b25e0a1316b70f01d5b44b35">More...</a><br /></td></tr>
<tr class="separator:ga2d55dfb9b25e0a1316b70f01d5b44b35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga40aedaa5100b3330f8f018329901df49"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__round.htm#ga40aedaa5100b3330f8f018329901df49">af_round</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga40aedaa5100b3330f8f018329901df49"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for rounding an array of numbers.  <a href="group__arith__func__round.htm#ga40aedaa5100b3330f8f018329901df49">More...</a><br /></td></tr>
<tr class="separator:ga40aedaa5100b3330f8f018329901df49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad805f3f8ca3eb47d3f60693b5f5574a0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__trunc.htm#gad805f3f8ca3eb47d3f60693b5f5574a0">af_trunc</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gad805f3f8ca3eb47d3f60693b5f5574a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for truncating an array of numbers.  <a href="group__arith__func__trunc.htm#gad805f3f8ca3eb47d3f60693b5f5574a0">More...</a><br /></td></tr>
<tr class="separator:gad805f3f8ca3eb47d3f60693b5f5574a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5e34bac2324b2fa4865ba36848be3af5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__floor.htm#ga5e34bac2324b2fa4865ba36848be3af5">af_floor</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga5e34bac2324b2fa4865ba36848be3af5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for flooring an array of numbers.  <a href="group__arith__func__floor.htm#ga5e34bac2324b2fa4865ba36848be3af5">More...</a><br /></td></tr>
<tr class="separator:ga5e34bac2324b2fa4865ba36848be3af5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaef6fb24da1164b62807aa746cda515a4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ceil.htm#gaef6fb24da1164b62807aa746cda515a4">af_ceil</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gaef6fb24da1164b62807aa746cda515a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for ceiling an array of numbers.  <a href="group__arith__func__ceil.htm#gaef6fb24da1164b62807aa746cda515a4">More...</a><br /></td></tr>
<tr class="separator:gaef6fb24da1164b62807aa746cda515a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4e716c1d12d13628844bfcd567fbfefe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__floor.htm#ga4e716c1d12d13628844bfcd567fbfefe">af_hypot</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga4e716c1d12d13628844bfcd567fbfefe"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting length of hypotenuse of two arrays.  <a href="group__arith__func__floor.htm#ga4e716c1d12d13628844bfcd567fbfefe">More...</a><br /></td></tr>
<tr class="separator:ga4e716c1d12d13628844bfcd567fbfefe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f063e12c1b836098fdc9b65c40d2a76"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sin.htm#ga0f063e12c1b836098fdc9b65c40d2a76">af_sin</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga0f063e12c1b836098fdc9b65c40d2a76"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sin.  <a href="group__arith__func__sin.htm#ga0f063e12c1b836098fdc9b65c40d2a76">More...</a><br /></td></tr>
<tr class="separator:ga0f063e12c1b836098fdc9b65c40d2a76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaebb0ff5e77be24320b326165ed35efbf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cos.htm#gaebb0ff5e77be24320b326165ed35efbf">af_cos</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gaebb0ff5e77be24320b326165ed35efbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for cos.  <a href="group__arith__func__cos.htm#gaebb0ff5e77be24320b326165ed35efbf">More...</a><br /></td></tr>
<tr class="separator:gaebb0ff5e77be24320b326165ed35efbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf9f32b9af0af333892e0a3cb09f68cc9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__tan.htm#gaf9f32b9af0af333892e0a3cb09f68cc9">af_tan</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gaf9f32b9af0af333892e0a3cb09f68cc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for tan.  <a href="group__arith__func__tan.htm#gaf9f32b9af0af333892e0a3cb09f68cc9">More...</a><br /></td></tr>
<tr class="separator:gaf9f32b9af0af333892e0a3cb09f68cc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f3dcb9d9aaafa8bb55cba504f9f587f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__asin.htm#ga2f3dcb9d9aaafa8bb55cba504f9f587f">af_asin</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga2f3dcb9d9aaafa8bb55cba504f9f587f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for arc sin.  <a href="group__arith__func__asin.htm#ga2f3dcb9d9aaafa8bb55cba504f9f587f">More...</a><br /></td></tr>
<tr class="separator:ga2f3dcb9d9aaafa8bb55cba504f9f587f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga23c081137211f01dafd7138f12a3fe97"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__acos.htm#ga23c081137211f01dafd7138f12a3fe97">af_acos</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga23c081137211f01dafd7138f12a3fe97"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for arc cos.  <a href="group__arith__func__acos.htm#ga23c081137211f01dafd7138f12a3fe97">More...</a><br /></td></tr>
<tr class="separator:ga23c081137211f01dafd7138f12a3fe97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga05b56256e8687f4afcba10694b76885c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__atan.htm#ga05b56256e8687f4afcba10694b76885c">af_atan</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga05b56256e8687f4afcba10694b76885c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for arc tan.  <a href="group__arith__func__atan.htm#ga05b56256e8687f4afcba10694b76885c">More...</a><br /></td></tr>
<tr class="separator:ga05b56256e8687f4afcba10694b76885c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafc9e538b00b6b929e6f041e434e13862"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__atan.htm#gafc9e538b00b6b929e6f041e434e13862">af_atan2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:gafc9e538b00b6b929e6f041e434e13862"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for arc tan of two inputs.  <a href="group__arith__func__atan.htm#gafc9e538b00b6b929e6f041e434e13862">More...</a><br /></td></tr>
<tr class="separator:gafc9e538b00b6b929e6f041e434e13862"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabfa0a4e003754bc8a5d7b66d0d91a1c7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#gabfa0a4e003754bc8a5d7b66d0d91a1c7">af_cplx2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:gabfa0a4e003754bc8a5d7b66d0d91a1c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for creating complex array from two input arrays.  <a href="group__arith__func__cplx.htm#gabfa0a4e003754bc8a5d7b66d0d91a1c7">More...</a><br /></td></tr>
<tr class="separator:gabfa0a4e003754bc8a5d7b66d0d91a1c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga57e8010d6228c7c0d087acb88c77765f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#ga57e8010d6228c7c0d087acb88c77765f">af_cplx</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga57e8010d6228c7c0d087acb88c77765f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for creating complex array from real array.  <a href="group__arith__func__cplx.htm#ga57e8010d6228c7c0d087acb88c77765f">More...</a><br /></td></tr>
<tr class="separator:ga57e8010d6228c7c0d087acb88c77765f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0d4a824d46cceb91f323d7760fbbed89"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__real.htm#ga0d4a824d46cceb91f323d7760fbbed89">af_real</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga0d4a824d46cceb91f323d7760fbbed89"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting real part from complex array.  <a href="group__arith__func__real.htm#ga0d4a824d46cceb91f323d7760fbbed89">More...</a><br /></td></tr>
<tr class="separator:ga0d4a824d46cceb91f323d7760fbbed89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4769132c720e522c619097cc8bfe288e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__imag.htm#ga4769132c720e522c619097cc8bfe288e">af_imag</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga4769132c720e522c619097cc8bfe288e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting imaginary part from complex array.  <a href="group__arith__func__imag.htm#ga4769132c720e522c619097cc8bfe288e">More...</a><br /></td></tr>
<tr class="separator:ga4769132c720e522c619097cc8bfe288e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae774e0a535f29ab1267fc248cac6abef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__conjg.htm#gae774e0a535f29ab1267fc248cac6abef">af_conjg</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gae774e0a535f29ab1267fc248cac6abef"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting the complex conjugate of input array.  <a href="group__arith__func__conjg.htm#gae774e0a535f29ab1267fc248cac6abef">More...</a><br /></td></tr>
<tr class="separator:gae774e0a535f29ab1267fc248cac6abef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac5ee06a9436478f6aebf3e85f48fd858"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sinh.htm#gac5ee06a9436478f6aebf3e85f48fd858">af_sinh</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gac5ee06a9436478f6aebf3e85f48fd858"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for sinh.  <a href="group__arith__func__sinh.htm#gac5ee06a9436478f6aebf3e85f48fd858">More...</a><br /></td></tr>
<tr class="separator:gac5ee06a9436478f6aebf3e85f48fd858"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac6ef3dcc492534879af5ecc2ce206f8c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cosh.htm#gac6ef3dcc492534879af5ecc2ce206f8c">af_cosh</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gac6ef3dcc492534879af5ecc2ce206f8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for cosh.  <a href="group__arith__func__cosh.htm#gac6ef3dcc492534879af5ecc2ce206f8c">More...</a><br /></td></tr>
<tr class="separator:gac6ef3dcc492534879af5ecc2ce206f8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga80af29d535768cf4f0381f43637537ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__tanh.htm#ga80af29d535768cf4f0381f43637537ef">af_tanh</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga80af29d535768cf4f0381f43637537ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for tanh.  <a href="group__arith__func__tanh.htm#ga80af29d535768cf4f0381f43637537ef">More...</a><br /></td></tr>
<tr class="separator:ga80af29d535768cf4f0381f43637537ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga58c6e65f858b5663e49ef2dd9d20615d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__asinh.htm#ga58c6e65f858b5663e49ef2dd9d20615d">af_asinh</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga58c6e65f858b5663e49ef2dd9d20615d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for asinh.  <a href="group__arith__func__asinh.htm#ga58c6e65f858b5663e49ef2dd9d20615d">More...</a><br /></td></tr>
<tr class="separator:ga58c6e65f858b5663e49ef2dd9d20615d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafebe073681f1a4269920a42dddf7551c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__acosh.htm#gafebe073681f1a4269920a42dddf7551c">af_acosh</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gafebe073681f1a4269920a42dddf7551c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for acosh.  <a href="group__arith__func__acosh.htm#gafebe073681f1a4269920a42dddf7551c">More...</a><br /></td></tr>
<tr class="separator:gafebe073681f1a4269920a42dddf7551c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4c23b18ca5b3f2ef99520b3fe20b31df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__atanh.htm#ga4c23b18ca5b3f2ef99520b3fe20b31df">af_atanh</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga4c23b18ca5b3f2ef99520b3fe20b31df"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for atanh.  <a href="group__arith__func__atanh.htm#ga4c23b18ca5b3f2ef99520b3fe20b31df">More...</a><br /></td></tr>
<tr class="separator:ga4c23b18ca5b3f2ef99520b3fe20b31df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4c9ab2083576a18ff217d52ac262edd6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__root.htm#ga4c9ab2083576a18ff217d52ac262edd6">af_root</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga4c9ab2083576a18ff217d52ac262edd6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for root.  <a href="group__arith__func__root.htm#ga4c9ab2083576a18ff217d52ac262edd6">More...</a><br /></td></tr>
<tr class="separator:ga4c9ab2083576a18ff217d52ac262edd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f28be1a9c8b176a78c4a47f483e7fc6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__pow.htm#ga0f28be1a9c8b176a78c4a47f483e7fc6">af_pow</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga0f28be1a9c8b176a78c4a47f483e7fc6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for power.  <a href="group__arith__func__pow.htm#ga0f28be1a9c8b176a78c4a47f483e7fc6">More...</a><br /></td></tr>
<tr class="separator:ga0f28be1a9c8b176a78c4a47f483e7fc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81e7392a6ad038d7f8c19381eb87e278"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arith_8h.htm#a81e7392a6ad038d7f8c19381eb87e278">af_pow2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:a81e7392a6ad038d7f8c19381eb87e278"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for power of two.  <a href="#a81e7392a6ad038d7f8c19381eb87e278">More...</a><br /></td></tr>
<tr class="separator:a81e7392a6ad038d7f8c19381eb87e278"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga09dcdefdefeec69384dce5e3786ecd59"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__exp.htm#ga09dcdefdefeec69384dce5e3786ecd59">af_exp</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga09dcdefdefeec69384dce5e3786ecd59"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for exponential of an array.  <a href="group__arith__func__exp.htm#ga09dcdefdefeec69384dce5e3786ecd59">More...</a><br /></td></tr>
<tr class="separator:ga09dcdefdefeec69384dce5e3786ecd59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf4280e3283b65264de75194e0a6d565"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arith_8h.htm#adf4280e3283b65264de75194e0a6d565">af_sigmoid</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:adf4280e3283b65264de75194e0a6d565"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for calculating sigmoid function of an array.  <a href="#adf4280e3283b65264de75194e0a6d565">More...</a><br /></td></tr>
<tr class="separator:adf4280e3283b65264de75194e0a6d565"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga51c38c0d988f7003dcc11642270433d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__expm1.htm#ga51c38c0d988f7003dcc11642270433d1">af_expm1</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga51c38c0d988f7003dcc11642270433d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for exponential of an array minus 1.  <a href="group__arith__func__expm1.htm#ga51c38c0d988f7003dcc11642270433d1">More...</a><br /></td></tr>
<tr class="separator:ga51c38c0d988f7003dcc11642270433d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0fc12cb57f527b06d82d1cbcfc695e1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__erf.htm#gaa0fc12cb57f527b06d82d1cbcfc695e1">af_erf</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gaa0fc12cb57f527b06d82d1cbcfc695e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for error function value.  <a href="group__arith__func__erf.htm#gaa0fc12cb57f527b06d82d1cbcfc695e1">More...</a><br /></td></tr>
<tr class="separator:gaa0fc12cb57f527b06d82d1cbcfc695e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c67664da1ab580be31d78f31a387c51"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__erfc.htm#ga8c67664da1ab580be31d78f31a387c51">af_erfc</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga8c67664da1ab580be31d78f31a387c51"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for complementary error function value.  <a href="group__arith__func__erfc.htm#ga8c67664da1ab580be31d78f31a387c51">More...</a><br /></td></tr>
<tr class="separator:ga8c67664da1ab580be31d78f31a387c51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6c4f9ef490ba42d60399514f5a6d2898"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__log.htm#ga6c4f9ef490ba42d60399514f5a6d2898">af_log</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga6c4f9ef490ba42d60399514f5a6d2898"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for natural logarithm.  <a href="group__arith__func__log.htm#ga6c4f9ef490ba42d60399514f5a6d2898">More...</a><br /></td></tr>
<tr class="separator:ga6c4f9ef490ba42d60399514f5a6d2898"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga21759737e78a5e7ba8853c82bfe16651"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__log1p.htm#ga21759737e78a5e7ba8853c82bfe16651">af_log1p</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga21759737e78a5e7ba8853c82bfe16651"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for logarithm of (in + 1)  <a href="group__arith__func__log1p.htm#ga21759737e78a5e7ba8853c82bfe16651">More...</a><br /></td></tr>
<tr class="separator:ga21759737e78a5e7ba8853c82bfe16651"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga864b77e86146a0ccace962ad1cd03cdf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__log10.htm#ga864b77e86146a0ccace962ad1cd03cdf">af_log10</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga864b77e86146a0ccace962ad1cd03cdf"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for logarithm base 10.  <a href="group__arith__func__log10.htm#ga864b77e86146a0ccace962ad1cd03cdf">More...</a><br /></td></tr>
<tr class="separator:ga864b77e86146a0ccace962ad1cd03cdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50974c64b6ba549d2187b9a63b4ab0cd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arith_8h.htm#a50974c64b6ba549d2187b9a63b4ab0cd">af_log2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:a50974c64b6ba549d2187b9a63b4ab0cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for logarithm base 2.  <a href="#a50974c64b6ba549d2187b9a63b4ab0cd">More...</a><br /></td></tr>
<tr class="separator:a50974c64b6ba549d2187b9a63b4ab0cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc569d3b6cb3a947882c0ae106656a24"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sqrt.htm#gabc569d3b6cb3a947882c0ae106656a24">af_sqrt</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gabc569d3b6cb3a947882c0ae106656a24"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for square root.  <a href="group__arith__func__sqrt.htm#gabc569d3b6cb3a947882c0ae106656a24">More...</a><br /></td></tr>
<tr class="separator:gabc569d3b6cb3a947882c0ae106656a24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga72f50f5c8039ca08b7cb58f01d9814a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cbrt.htm#ga72f50f5c8039ca08b7cb58f01d9814a8">af_cbrt</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga72f50f5c8039ca08b7cb58f01d9814a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for cube root.  <a href="group__arith__func__cbrt.htm#ga72f50f5c8039ca08b7cb58f01d9814a8">More...</a><br /></td></tr>
<tr class="separator:ga72f50f5c8039ca08b7cb58f01d9814a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab08cf9e4b344da8ca244d09338000633"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__factorial.htm#gab08cf9e4b344da8ca244d09338000633">af_factorial</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gab08cf9e4b344da8ca244d09338000633"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for the factorial.  <a href="group__arith__func__factorial.htm#gab08cf9e4b344da8ca244d09338000633">More...</a><br /></td></tr>
<tr class="separator:gab08cf9e4b344da8ca244d09338000633"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga94789bb78e2aae684b8cadcde1c2b434"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__tgamma.htm#ga94789bb78e2aae684b8cadcde1c2b434">af_tgamma</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga94789bb78e2aae684b8cadcde1c2b434"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for the gamma function.  <a href="group__arith__func__tgamma.htm#ga94789bb78e2aae684b8cadcde1c2b434">More...</a><br /></td></tr>
<tr class="separator:ga94789bb78e2aae684b8cadcde1c2b434"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadee8c158b45fd61f20e949abdb6ca4aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lgamma.htm#gadee8c158b45fd61f20e949abdb6ca4aa">af_lgamma</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gadee8c158b45fd61f20e949abdb6ca4aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for the logarithm of absolute values of gamma function.  <a href="group__arith__func__lgamma.htm#gadee8c158b45fd61f20e949abdb6ca4aa">More...</a><br /></td></tr>
<tr class="separator:gadee8c158b45fd61f20e949abdb6ca4aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga559003777ce5148277b07903c351ecea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__iszero.htm#ga559003777ce5148277b07903c351ecea">af_iszero</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga559003777ce5148277b07903c351ecea"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking if values are zero.  <a href="group__arith__func__iszero.htm#ga559003777ce5148277b07903c351ecea">More...</a><br /></td></tr>
<tr class="separator:ga559003777ce5148277b07903c351ecea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga933758a10227f15697ff503339e86823"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__isinf.htm#ga933758a10227f15697ff503339e86823">af_isinf</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga933758a10227f15697ff503339e86823"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking if values are infinities.  <a href="group__arith__func__isinf.htm#ga933758a10227f15697ff503339e86823">More...</a><br /></td></tr>
<tr class="separator:ga933758a10227f15697ff503339e86823"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga40a48fc1cd94ff02f6ddeb7dafd1f87e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__isnan.htm#ga40a48fc1cd94ff02f6ddeb7dafd1f87e">af_isnan</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga40a48fc1cd94ff02f6ddeb7dafd1f87e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for checking if values are NaNs.  <a href="group__arith__func__isnan.htm#ga40a48fc1cd94ff02f6ddeb7dafd1f87e">More...</a><br /></td></tr>
<tr class="separator:ga40a48fc1cd94ff02f6ddeb7dafd1f87e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga9e6b9b53843babef0c73de233a343e3c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__min.htm#ga9e6b9b53843babef0c73de233a343e3c">min</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9e6b9b53843babef0c73de233a343e3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ interface for min of two arrays.  <a href="group__arith__func__min.htm#ga9e6b9b53843babef0c73de233a343e3c">More...</a><br /></td></tr>
<tr class="separator:ga9e6b9b53843babef0c73de233a343e3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6c8042ed7b728f4a9017cb3c562e60c2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__min.htm#ga6c8042ed7b728f4a9017cb3c562e60c2">min</a> (const array &amp;lhs, const double rhs)</td></tr>
<tr class="memdesc:ga6c8042ed7b728f4a9017cb3c562e60c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ interface for min of two arrays.  <a href="group__arith__func__min.htm#ga6c8042ed7b728f4a9017cb3c562e60c2">More...</a><br /></td></tr>
<tr class="separator:ga6c8042ed7b728f4a9017cb3c562e60c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gababc8679293b24b8704cf516cc96a123"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__min.htm#gababc8679293b24b8704cf516cc96a123">min</a> (const double lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gababc8679293b24b8704cf516cc96a123"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ interface for min of two arrays.  <a href="group__arith__func__min.htm#gababc8679293b24b8704cf516cc96a123">More...</a><br /></td></tr>
<tr class="separator:gababc8679293b24b8704cf516cc96a123"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gadfdd4b13dcad4052705f7bede3acbd31"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__max.htm#gadfdd4b13dcad4052705f7bede3acbd31">max</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gadfdd4b13dcad4052705f7bede3acbd31"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for max of two arrays or an array and a scalar.  <a href="group__arith__func__max.htm#gadfdd4b13dcad4052705f7bede3acbd31">More...</a><br /></td></tr>
<tr class="separator:gadfdd4b13dcad4052705f7bede3acbd31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaff75cf84a373d6f6c3157f729ba343cf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__max.htm#gaff75cf84a373d6f6c3157f729ba343cf">max</a> (const array &amp;lhs, const double rhs)</td></tr>
<tr class="memdesc:gaff75cf84a373d6f6c3157f729ba343cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for max of two arrays or an array and a scalar.  <a href="group__arith__func__max.htm#gaff75cf84a373d6f6c3157f729ba343cf">More...</a><br /></td></tr>
<tr class="separator:gaff75cf84a373d6f6c3157f729ba343cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa436cd602cd043bde741840df41b54bf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__max.htm#gaa436cd602cd043bde741840df41b54bf">max</a> (const double lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa436cd602cd043bde741840df41b54bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for max of two arrays or an array and a scalar.  <a href="group__arith__func__max.htm#gaa436cd602cd043bde741840df41b54bf">More...</a><br /></td></tr>
<tr class="separator:gaa436cd602cd043bde741840df41b54bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gac27a555b92e0ce757d5c2afa59ab4617"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__rem.htm#gac27a555b92e0ce757d5c2afa59ab4617">rem</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac27a555b92e0ce757d5c2afa59ab4617"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for remainder when array divides array, scalar divides array or array divides scalar.  <a href="group__arith__func__rem.htm#gac27a555b92e0ce757d5c2afa59ab4617">More...</a><br /></td></tr>
<tr class="separator:gac27a555b92e0ce757d5c2afa59ab4617"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga37186e8deafc8b6906bc34d5f88e8206"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__rem.htm#ga37186e8deafc8b6906bc34d5f88e8206">rem</a> (const array &amp;lhs, const double rhs)</td></tr>
<tr class="memdesc:ga37186e8deafc8b6906bc34d5f88e8206"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for remainder when array divides array, scalar divides array or array divides scalar.  <a href="group__arith__func__rem.htm#ga37186e8deafc8b6906bc34d5f88e8206">More...</a><br /></td></tr>
<tr class="separator:ga37186e8deafc8b6906bc34d5f88e8206"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga12bafa8cfa914ffff64b4663d8741e62"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__rem.htm#ga12bafa8cfa914ffff64b4663d8741e62">rem</a> (const double lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga12bafa8cfa914ffff64b4663d8741e62"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for remainder when array divides array, scalar divides array or array divides scalar.  <a href="group__arith__func__rem.htm#ga12bafa8cfa914ffff64b4663d8741e62">More...</a><br /></td></tr>
<tr class="separator:ga12bafa8cfa914ffff64b4663d8741e62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gaee3c7dcd1147fcf28cc379fb23911a7a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gaee3c7dcd1147fcf28cc379fb23911a7a">mod</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaee3c7dcd1147fcf28cc379fb23911a7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for modulus when dividend and divisor are arrays or one of them is scalar.  <a href="group__arith__func__mod.htm#gaee3c7dcd1147fcf28cc379fb23911a7a">More...</a><br /></td></tr>
<tr class="separator:gaee3c7dcd1147fcf28cc379fb23911a7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f66d50a2bea9c47adf37820e3811646"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga6f66d50a2bea9c47adf37820e3811646">mod</a> (const array &amp;lhs, const double rhs)</td></tr>
<tr class="memdesc:ga6f66d50a2bea9c47adf37820e3811646"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for modulus when dividend and divisor are arrays or one of them is scalar.  <a href="group__arith__func__mod.htm#ga6f66d50a2bea9c47adf37820e3811646">More...</a><br /></td></tr>
<tr class="separator:ga6f66d50a2bea9c47adf37820e3811646"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacb221ae62ca12b7d8d3c3a417832ca14"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gacb221ae62ca12b7d8d3c3a417832ca14">mod</a> (const double lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gacb221ae62ca12b7d8d3c3a417832ca14"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for modulus when dividend and divisor are arrays or one of them is scalar.  <a href="group__arith__func__mod.htm#gacb221ae62ca12b7d8d3c3a417832ca14">More...</a><br /></td></tr>
<tr class="separator:gacb221ae62ca12b7d8d3c3a417832ca14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga64b537a8205c867f03c86124a65570a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__hypot.htm#ga64b537a8205c867f03c86124a65570a7">hypot</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga64b537a8205c867f03c86124a65570a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting length of hypotenuse of two inputs.  <a href="group__arith__func__hypot.htm#ga64b537a8205c867f03c86124a65570a7">More...</a><br /></td></tr>
<tr class="separator:ga64b537a8205c867f03c86124a65570a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga12a98f0f960ba4589ff4d09dc2b16bcf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__hypot.htm#ga12a98f0f960ba4589ff4d09dc2b16bcf">hypot</a> (const array &amp;lhs, const double rhs)</td></tr>
<tr class="memdesc:ga12a98f0f960ba4589ff4d09dc2b16bcf"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting length of hypotenuse of two inputs.  <a href="group__arith__func__hypot.htm#ga12a98f0f960ba4589ff4d09dc2b16bcf">More...</a><br /></td></tr>
<tr class="separator:ga12a98f0f960ba4589ff4d09dc2b16bcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2d1716cc4dac55371b6cc13ffb2de8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__hypot.htm#gaa2d1716cc4dac55371b6cc13ffb2de8e">hypot</a> (const double lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa2d1716cc4dac55371b6cc13ffb2de8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting length of hypotenuse of two inputs.  <a href="group__arith__func__hypot.htm#gaa2d1716cc4dac55371b6cc13ffb2de8e">More...</a><br /></td></tr>
<tr class="separator:gaa2d1716cc4dac55371b6cc13ffb2de8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gacb73cfb704e7e4d49c1e8c46ff601b58"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__atan.htm#gacb73cfb704e7e4d49c1e8c46ff601b58">atan2</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gacb73cfb704e7e4d49c1e8c46ff601b58"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for arc tan of two arrays.  <a href="group__arith__func__atan.htm#gacb73cfb704e7e4d49c1e8c46ff601b58">More...</a><br /></td></tr>
<tr class="separator:gacb73cfb704e7e4d49c1e8c46ff601b58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadcd1651d1f8e404f9bf2cdf5e2cc44b7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__atan.htm#gadcd1651d1f8e404f9bf2cdf5e2cc44b7">atan2</a> (const array &amp;lhs, const double rhs)</td></tr>
<tr class="memdesc:gadcd1651d1f8e404f9bf2cdf5e2cc44b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for arc tan of two arrays.  <a href="group__arith__func__atan.htm#gadcd1651d1f8e404f9bf2cdf5e2cc44b7">More...</a><br /></td></tr>
<tr class="separator:gadcd1651d1f8e404f9bf2cdf5e2cc44b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae7eba966a5e58b41582683c617cec76a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__atan.htm#gae7eba966a5e58b41582683c617cec76a">atan2</a> (const double lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae7eba966a5e58b41582683c617cec76a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for arc tan of two arrays.  <a href="group__arith__func__atan.htm#gae7eba966a5e58b41582683c617cec76a">More...</a><br /></td></tr>
<tr class="separator:gae7eba966a5e58b41582683c617cec76a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gae13e5ea3c59fb78f17ce00e2ab5c0047"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#gae13e5ea3c59fb78f17ce00e2ab5c0047">complex</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae13e5ea3c59fb78f17ce00e2ab5c0047"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for creating complex array from two inputs.  <a href="group__arith__func__cplx.htm#gae13e5ea3c59fb78f17ce00e2ab5c0047">More...</a><br /></td></tr>
<tr class="separator:gae13e5ea3c59fb78f17ce00e2ab5c0047"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9060df86f9a0717010d51357ac93bb86"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#ga9060df86f9a0717010d51357ac93bb86">complex</a> (const array &amp;lhs, const double rhs)</td></tr>
<tr class="memdesc:ga9060df86f9a0717010d51357ac93bb86"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for creating complex array from two inputs.  <a href="group__arith__func__cplx.htm#ga9060df86f9a0717010d51357ac93bb86">More...</a><br /></td></tr>
<tr class="separator:ga9060df86f9a0717010d51357ac93bb86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc14323e4e5728955d6809f9071f2ba1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#gabc14323e4e5728955d6809f9071f2ba1">complex</a> (const double lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gabc14323e4e5728955d6809f9071f2ba1"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for creating complex array from two inputs.  <a href="group__arith__func__cplx.htm#gabc14323e4e5728955d6809f9071f2ba1">More...</a><br /></td></tr>
<tr class="separator:gabc14323e4e5728955d6809f9071f2ba1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac69d45e56deddd6c0f2edb1d77f0cb63"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#gac69d45e56deddd6c0f2edb1d77f0cb63">complex</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gac69d45e56deddd6c0f2edb1d77f0cb63"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for creating complex array from real array.  <a href="group__arith__func__cplx.htm#gac69d45e56deddd6c0f2edb1d77f0cb63">More...</a><br /></td></tr>
<tr class="separator:gac69d45e56deddd6c0f2edb1d77f0cb63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga299da8cda1458a6cb7adba9718ec613d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__pow.htm#ga299da8cda1458a6cb7adba9718ec613d">pow</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga299da8cda1458a6cb7adba9718ec613d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for power.  <a href="group__arith__func__pow.htm#ga299da8cda1458a6cb7adba9718ec613d">More...</a><br /></td></tr>
<tr class="separator:ga299da8cda1458a6cb7adba9718ec613d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5b7864ccb9cdc64dd3a207abf68aa104"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__pow.htm#ga5b7864ccb9cdc64dd3a207abf68aa104">pow</a> (const array &amp;lhs, const double rhs)</td></tr>
<tr class="memdesc:ga5b7864ccb9cdc64dd3a207abf68aa104"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for power.  <a href="group__arith__func__pow.htm#ga5b7864ccb9cdc64dd3a207abf68aa104">More...</a><br /></td></tr>
<tr class="separator:ga5b7864ccb9cdc64dd3a207abf68aa104"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4a4f179d47bedb5c811dcddbbce198d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__pow.htm#ga4a4f179d47bedb5c811dcddbbce198d2">pow</a> (const double lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4a4f179d47bedb5c811dcddbbce198d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for power.  <a href="group__arith__func__pow.htm#ga4a4f179d47bedb5c811dcddbbce198d2">More...</a><br /></td></tr>
<tr class="separator:ga4a4f179d47bedb5c811dcddbbce198d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b71fc494e03f9c8abaebe191a7c4846"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__pow.htm#ga4b71fc494e03f9c8abaebe191a7c4846">pow2</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga4b71fc494e03f9c8abaebe191a7c4846"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for power of 2.  <a href="group__arith__func__pow.htm#ga4b71fc494e03f9c8abaebe191a7c4846">More...</a><br /></td></tr>
<tr class="separator:ga4b71fc494e03f9c8abaebe191a7c4846"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a50974c64b6ba549d2187b9a63b4ab0cd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_log2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for logarithm base 2. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the base 2 logarithm of <code>in</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is input </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
<a class="anchor" id="ae7aa04bf23b32bb11c4bab8bdd637103"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_lt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>batch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for checking if an array is less than another. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain result of <code>lhs</code> &lt; <code>rhs</code>. out is of type b8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>first input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>second input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">batch</td><td>specifies if operations need to be performed in batch mode </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
<a class="anchor" id="a81e7392a6ad038d7f8c19381eb87e278"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_pow2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for power of two. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the values of 2 to the power <code>in</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is exponent </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
<a class="anchor" id="adf4280e3283b65264de75194e0a6d565"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_sigmoid </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for calculating sigmoid function of an array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the sigmoid of <code>in</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is input </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
