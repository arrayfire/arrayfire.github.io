<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>Configuring ArrayFire Environment</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('configuring_environment.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">Configuring ArrayFire Environment </div>  </div>
</div><!--header-->
<div class="contents">
<div class="toc"><h3>Table of Contents</h3>
<ul><li class="level1"><a href="#environment_variables">Environment Variables</a><ul><li class="level2"><a href="#af_path">AF_PATH </a></li>
<li class="level2"><a href="#af_cuda_default_device">AF_CUDA_DEFAULT_DEVICE </a></li>
<li class="level2"><a href="#af_opencl_default_device">AF_OPENCL_DEFAULT_DEVICE </a></li>
<li class="level2"><a href="#af_disable_graphics">AF_DISABLE_GRAPHICS </a></li>
<li class="level2"><a href="#af_print_errors">AF_PRINT_ERRORS </a></li>
</ul>
</li>
</ul>
</div>
<div class="textblock"><p>This page lists environment and runtime configurations that will help enhance your experience with ArrayFire.</p>
<h1><a class="anchor" id="environment_variables"></a>
Environment Variables</h1>
<p>The following are useful environment variable that can be used with ArrayFire.</p>
<h2><a class="anchor" id="af_path"></a>
AF_PATH </h2>
<p>This is the path with ArrayFire gets installed, ie. the includes and libs are present in this directory. You can use this variable to add include paths and libraries to your projects.</p>
<h2><a class="anchor" id="af_cuda_default_device"></a>
AF_CUDA_DEFAULT_DEVICE </h2>
<p>Use this variable to set the default CUDA device. Valid values for this variable are the device identifiers shown when <a class="el" href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a> is run.</p>
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;AF_CUDA_DEFAULT_DEVICE=1 ./myprogram_cuda</div>
</div><!-- fragment --><p>Note: <a class="el" href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7" title="Sets the current device. ">af::setDevice</a> call in the source code will take precedence over this variable.</p>
<h2><a class="anchor" id="af_opencl_default_device"></a>
AF_OPENCL_DEFAULT_DEVICE </h2>
<p>Use this variable to set the default OpenCL device. Valid values for this variable are the device identifiers shown when <a class="el" href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a> is run.</p>
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;AF_OPENCL_DEFAULT_DEVICE=1 ./myprogram_opencl</div>
</div><!-- fragment --><p>Note: <a class="el" href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7" title="Sets the current device. ">af::setDevice</a> call in the source code will take precedence over this variable.</p>
<h2><a class="anchor" id="af_disable_graphics"></a>
AF_DISABLE_GRAPHICS </h2>
<p>Setting this variable will disable window creation when graphics functions are being called. Simply setting this variable will disable functionality, any value will suffice. Disabling window creation will disable all other graphics calls at runtime as well.</p>
<p>This is a useful enviornment variable when running code on servers and systems without displays. When graphics calls are run on such machines, they will print warning about window creation failing. To suppress those calls, set this variable.</p>
<h2><a class="anchor" id="af_print_errors"></a>
AF_PRINT_ERRORS </h2>
<p>When AF_PRINT_ERRORS is set to 1, the exceptions thrown are more verbose and detailed. This helps in locating the exact failure.</p>
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;AF_PRINT_ERRORS=1 ./myprogram_opencl</div>
</div><!-- fragment --> </div></div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
