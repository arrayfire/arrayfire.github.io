<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: CUDA specific functions</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__cuda__mat.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">CUDA specific functions<div class="ingroups"><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__external.htm">Interface Functions</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Accessing ArrayFire's stream, and native device id with other CUDA code.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga8323b850f80afe9878b099f647b0a7e5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cuda__mat.htm#ga8323b850f80afe9878b099f647b0a7e5">afcu_get_stream</a> (cudaStream_t *stream, int id)</td></tr>
<tr class="memdesc:ga8323b850f80afe9878b099f647b0a7e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">This file contain functions that apply only to the CUDA backend.  <a href="#ga8323b850f80afe9878b099f647b0a7e5">More...</a><br /></td></tr>
<tr class="separator:ga8323b850f80afe9878b099f647b0a7e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf38af1cbbf4be710cc8cbd95d20b24c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cuda__mat.htm#gaf38af1cbbf4be710cc8cbd95d20b24c4">afcu_get_native_id</a> (int *nativeid, int id)</td></tr>
<tr class="memdesc:gaf38af1cbbf4be710cc8cbd95d20b24c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the native device id of the CUDA device with <code>id</code> in ArrayFire context.  <a href="#gaf38af1cbbf4be710cc8cbd95d20b24c4">More...</a><br /></td></tr>
<tr class="separator:gaf38af1cbbf4be710cc8cbd95d20b24c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga966f4c6880e90ce91d9599c90c0db378"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cuda__mat.htm#ga966f4c6880e90ce91d9599c90c0db378">afcu_set_native_id</a> (int nativeid)</td></tr>
<tr class="memdesc:ga966f4c6880e90ce91d9599c90c0db378"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the CUDA device with given native id as the active device for ArrayFire.  <a href="#ga966f4c6880e90ce91d9599c90c0db378">More...</a><br /></td></tr>
<tr class="separator:ga966f4c6880e90ce91d9599c90c0db378"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac23ea38f0bff77a0e12555f27f47aa4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cuda__mat.htm#gac23ea38f0bff77a0e12555f27f47aa4f">afcu_cublasSetMathMode</a> (cublasMath_t mode)</td></tr>
<tr class="memdesc:gac23ea38f0bff77a0e12555f27f47aa4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the cuBLAS math mode for the internal handle.  <a href="#gac23ea38f0bff77a0e12555f27f47aa4f">More...</a><br /></td></tr>
<tr class="separator:gac23ea38f0bff77a0e12555f27f47aa4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaec1dc4c2aa935dc61889f23248c8450d"><td class="memItemLeft" align="right" valign="top">static cudaStream_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cuda__mat.htm#gaec1dc4c2aa935dc61889f23248c8450d">getStream</a> (int id)</td></tr>
<tr class="memdesc:gaec1dc4c2aa935dc61889f23248c8450d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the stream for the CUDA device with <code>id</code> in ArrayFire context.  <a href="group__cuda__mat.htm#gaec1dc4c2aa935dc61889f23248c8450d">More...</a><br /></td></tr>
<tr class="separator:gaec1dc4c2aa935dc61889f23248c8450d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga59b163ea391ea856a25693e2567b0ce5"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cuda__mat.htm#ga59b163ea391ea856a25693e2567b0ce5">getNativeId</a> (int id)</td></tr>
<tr class="memdesc:ga59b163ea391ea856a25693e2567b0ce5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the native device id of the CUDA device with <code>id</code> in ArrayFire context.  <a href="group__cuda__mat.htm#ga59b163ea391ea856a25693e2567b0ce5">More...</a><br /></td></tr>
<tr class="separator:ga59b163ea391ea856a25693e2567b0ce5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6178cfc0ae2dbc311e9462d67d0f6c32"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cuda__mat.htm#ga6178cfc0ae2dbc311e9462d67d0f6c32">setNativeId</a> (int nativeId)</td></tr>
<tr class="memdesc:ga6178cfc0ae2dbc311e9462d67d0f6c32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the CUDA device with given native id as the active device for ArrayFire.  <a href="group__cuda__mat.htm#ga6178cfc0ae2dbc311e9462d67d0f6c32">More...</a><br /></td></tr>
<tr class="separator:ga6178cfc0ae2dbc311e9462d67d0f6c32"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Accessing ArrayFire's stream, and native device id with other CUDA code. </p>
<p>If your software is using ArrayFire's CUDA backend, you can also write custom kernels and do custom memory operations using native CUDA commands. The functions contained in the <code>afcu</code> namespace provide methods to get the stream and native device id that ArrayFire is using. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="gac23ea38f0bff77a0e12555f27f47aa4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac23ea38f0bff77a0e12555f27f47aa4f">&#9670;&nbsp;</a></span>afcu_cublasSetMathMode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> afcu_cublasSetMathMode </td>
          <td>(</td>
          <td class="paramtype">cublasMath_t&#160;</td>
          <td class="paramname"><em>mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the cuBLAS math mode for the internal handle. </p>
<p>See the cuBLAS documentation for additional details</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>The cublasMath_t type to set </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> error code </dd></dl>

</div>
</div>
<a id="gaf38af1cbbf4be710cc8cbd95d20b24c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf38af1cbbf4be710cc8cbd95d20b24c4">&#9670;&nbsp;</a></span>afcu_get_native_id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> afcu_get_native_id </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>nativeid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the native device id of the CUDA device with <code>id</code> in ArrayFire context. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">nativeid</td><td>native device id of the CUDA device with <code>id</code> in ArrayFire context </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ArrayFire device id </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> error code </dd></dl>

</div>
</div>
<a id="ga8323b850f80afe9878b099f647b0a7e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8323b850f80afe9878b099f647b0a7e5">&#9670;&nbsp;</a></span>afcu_get_stream()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> afcu_get_stream </td>
          <td>(</td>
          <td class="paramtype">cudaStream_t *&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This file contain functions that apply only to the CUDA backend. </p>
<p>It will include cuda headers when it is built with NVCC. Otherwise the you can define the AF_DEFINE_CUDA_TYPES before including this file and it will define the cuda types used in this header. Get the stream for the CUDA device with <code>id</code> in ArrayFire context</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">stream</td><td>CUDA Stream of device with <code>id</code> in ArrayFire context </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ArrayFire device id </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> error code </dd></dl>

</div>
</div>
<a id="ga966f4c6880e90ce91d9599c90c0db378"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga966f4c6880e90ce91d9599c90c0db378">&#9670;&nbsp;</a></span>afcu_set_native_id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> afcu_set_native_id </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nativeid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the CUDA device with given native id as the active device for ArrayFire. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">nativeid</td><td>native device id of the CUDA device </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> error code </dd></dl>

</div>
</div>
<a id="ga59b163ea391ea856a25693e2567b0ce5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga59b163ea391ea856a25693e2567b0ce5">&#9670;&nbsp;</a></span>getNativeId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int afcu::getNativeId </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the native device id of the CUDA device with <code>id</code> in ArrayFire context. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ArrayFire device id </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>cuda native id of device </dd></dl>

<p class="definition">Definition at line <a class="el" href="cuda_8h_source.htm#l00129">129</a> of file <a class="el" href="cuda_8h_source.htm">cuda.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordtype">int</span> retVal;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> err = <a class="code" href="group__cuda__mat.htm#gaf38af1cbbf4be710cc8cbd95d20b24c4">afcu_get_native_id</a>(&amp;retVal, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">if</span> (err!=<a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classaf_1_1exception.htm">af::exception</a>(<span class="stringliteral">&quot;Failed to get CUDA device native id from ArrayFire&quot;</span>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">return</span> retVal;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div><div class="ttc" id="classaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class. </div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00021">exception.h:21</a></div></div>
<div class="ttc" id="defines_8h_htm_a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76"><div class="ttname"><a href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a></div><div class="ttdoc">The function returned successfully. </div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00075">defines.h:75</a></div></div>
<div class="ttc" id="group__cuda__mat_htm_gaf38af1cbbf4be710cc8cbd95d20b24c4"><div class="ttname"><a href="group__cuda__mat.htm#gaf38af1cbbf4be710cc8cbd95d20b24c4">afcu_get_native_id</a></div><div class="ttdeci">AFAPI af_err afcu_get_native_id(int *nativeid, int id)</div><div class="ttdoc">Get the native device id of the CUDA device with id in ArrayFire context. </div></div>
<div class="ttc" id="defines_8h_htm_a82b94dc53bbd100a0e8ca9dd356aaf4f"><div class="ttname"><a href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a></div><div class="ttdeci">af_err</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00071">defines.h:71</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="gaec1dc4c2aa935dc61889f23248c8450d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaec1dc4c2aa935dc61889f23248c8450d">&#9670;&nbsp;</a></span>getStream()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static cudaStream_t afcu::getStream </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the stream for the CUDA device with <code>id</code> in ArrayFire context. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ArrayFire device id </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>cuda stream used by CUDA device </dd></dl>

<p class="definition">Definition at line <a class="el" href="cuda_8h_source.htm#l00110">110</a> of file <a class="el" href="cuda_8h_source.htm">cuda.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;{</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    cudaStream_t retVal;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> err = <a class="code" href="group__cuda__mat.htm#ga8323b850f80afe9878b099f647b0a7e5">afcu_get_stream</a>(&amp;retVal, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">if</span> (err!=<a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classaf_1_1exception.htm">af::exception</a>(<span class="stringliteral">&quot;Failed to get CUDA stream from ArrayFire&quot;</span>);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> retVal;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div><div class="ttc" id="classaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class. </div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00021">exception.h:21</a></div></div>
<div class="ttc" id="defines_8h_htm_a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76"><div class="ttname"><a href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a></div><div class="ttdoc">The function returned successfully. </div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00075">defines.h:75</a></div></div>
<div class="ttc" id="group__cuda__mat_htm_ga8323b850f80afe9878b099f647b0a7e5"><div class="ttname"><a href="group__cuda__mat.htm#ga8323b850f80afe9878b099f647b0a7e5">afcu_get_stream</a></div><div class="ttdeci">AFAPI af_err afcu_get_stream(cudaStream_t *stream, int id)</div><div class="ttdoc">This file contain functions that apply only to the CUDA backend. </div></div>
<div class="ttc" id="defines_8h_htm_a82b94dc53bbd100a0e8ca9dd356aaf4f"><div class="ttname"><a href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a></div><div class="ttdeci">af_err</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00071">defines.h:71</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ga6178cfc0ae2dbc311e9462d67d0f6c32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6178cfc0ae2dbc311e9462d67d0f6c32">&#9670;&nbsp;</a></span>setNativeId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void afcu::setNativeId </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nativeId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the CUDA device with given native id as the active device for ArrayFire. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">nativeId</td><td>native device id of the CUDA device </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="cuda_8h_source.htm#l00147">147</a> of file <a class="el" href="cuda_8h_source.htm">cuda.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;{</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> err = <a class="code" href="group__cuda__mat.htm#ga966f4c6880e90ce91d9599c90c0db378">afcu_set_native_id</a>(nativeId);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">if</span> (err!=<a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classaf_1_1exception.htm">af::exception</a>(<span class="stringliteral">&quot;Failed to change active CUDA device to the device with given native id&quot;</span>);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div><div class="ttc" id="classaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class. </div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00021">exception.h:21</a></div></div>
<div class="ttc" id="defines_8h_htm_a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76"><div class="ttname"><a href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a></div><div class="ttdoc">The function returned successfully. </div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00075">defines.h:75</a></div></div>
<div class="ttc" id="defines_8h_htm_a82b94dc53bbd100a0e8ca9dd356aaf4f"><div class="ttname"><a href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a></div><div class="ttdeci">af_err</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00071">defines.h:71</a></div></div>
<div class="ttc" id="group__cuda__mat_htm_ga966f4c6880e90ce91d9599c90c0db378"><div class="ttname"><a href="group__cuda__mat.htm#ga966f4c6880e90ce91d9599c90c0db378">afcu_set_native_id</a></div><div class="ttdeci">AFAPI af_err afcu_set_native_id(int nativeid)</div><div class="ttdoc">Set the CUDA device with given native id as the active device for ArrayFire. </div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
