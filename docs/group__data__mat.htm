<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: Functions to create arrays.</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__data__mat.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#groups">Modules</a>  </div>
  <div class="headertitle">
<div class="title">Functions to create arrays.<div class="ingroups"><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__array__mat.htm">Functions to create and modify Arrays</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>constant, random, range, etc.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:group__random__mat"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__random__mat.htm">Random Number Generation</a></td></tr>
<tr class="memdesc:group__random__mat"><td class="mdescLeft">&#160;</td><td class="mdescRight">Random Number Generation Functions. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__data__func__constant"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__func__constant.htm">constant</a></td></tr>
<tr class="memdesc:group__data__func__constant"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a array from a scalar input value. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__data__func__diag"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__func__diag.htm">diag</a></td></tr>
<tr class="memdesc:group__data__func__diag"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extract diagonal from a matrix when <code>extract</code> is set to true. Create a diagonal matrix from input array when <code>extract</code> is set to false. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__data__func__identity"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__func__identity.htm">identity</a></td></tr>
<tr class="memdesc:group__data__func__identity"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an identity array with diagonal values 1. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__data__func__iota"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__func__iota.htm">iota</a></td></tr>
<tr class="memdesc:group__data__func__iota"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an sequence [0, dims.elements() - 1] and modify to specified dimensions dims and then tile it according to tile_dims. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__data__func__lower"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__func__lower.htm">lower</a></td></tr>
<tr class="memdesc:group__data__func__lower"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a lower triangular matrix from input array. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__data__func__pad"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__func__pad.htm">pad</a></td></tr>
<tr class="memdesc:group__data__func__pad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pad an array. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__data__func__range"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__func__range.htm">range</a></td></tr>
<tr class="memdesc:group__data__func__range"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an array with [0, n] values along the seq_dim which is tiled across other dimensions. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__data__func__upper"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__func__upper.htm">upper</a></td></tr>
<tr class="memdesc:group__data__func__upper"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a upper triangular matrix from input array. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga121545fb637db409a523862cdb8ffe39"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a> (<a class="el" href="classaf_1_1array.htm">array</a> &amp;a)</td></tr>
<tr class="memdesc:ga121545fb637db409a523862cdb8ffe39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate an expression (nonblocking).  <a href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">More...</a><br /></td></tr>
<tr class="separator:ga121545fb637db409a523862cdb8ffe39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeade064317ff4e40e66180718a34f9da"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gaeade064317ff4e40e66180718a34f9da">eval</a> (int num, <a class="el" href="classaf_1_1array.htm">array</a> **arrays)</td></tr>
<tr class="memdesc:gaeade064317ff4e40e66180718a34f9da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate multiple arrays simultaneously.  <a href="group__data__mat.htm#gaeade064317ff4e40e66180718a34f9da">More...</a><br /></td></tr>
<tr class="separator:gaeade064317ff4e40e66180718a34f9da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a17a89fab2c26be8e911c4628c4c54c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga6a17a89fab2c26be8e911c4628c4c54c">eval</a> (<a class="el" href="classaf_1_1array.htm">array</a> &amp;a, <a class="el" href="classaf_1_1array.htm">array</a> &amp;b)</td></tr>
<tr class="separator:ga6a17a89fab2c26be8e911c4628c4c54c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga932cc56a65acbe91ff2cea42e2f43bb6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga932cc56a65acbe91ff2cea42e2f43bb6">eval</a> (<a class="el" href="classaf_1_1array.htm">array</a> &amp;a, <a class="el" href="classaf_1_1array.htm">array</a> &amp;b, <a class="el" href="classaf_1_1array.htm">array</a> &amp;c)</td></tr>
<tr class="separator:ga932cc56a65acbe91ff2cea42e2f43bb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8d75de296c6378ef17825a3776db93e4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga8d75de296c6378ef17825a3776db93e4">eval</a> (<a class="el" href="classaf_1_1array.htm">array</a> &amp;a, <a class="el" href="classaf_1_1array.htm">array</a> &amp;b, <a class="el" href="classaf_1_1array.htm">array</a> &amp;c, <a class="el" href="classaf_1_1array.htm">array</a> &amp;d)</td></tr>
<tr class="separator:ga8d75de296c6378ef17825a3776db93e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2cfee88b0b16efb2e4c3fe5a01187ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gad2cfee88b0b16efb2e4c3fe5a01187ac">eval</a> (<a class="el" href="classaf_1_1array.htm">array</a> &amp;a, <a class="el" href="classaf_1_1array.htm">array</a> &amp;b, <a class="el" href="classaf_1_1array.htm">array</a> &amp;c, <a class="el" href="classaf_1_1array.htm">array</a> &amp;d, <a class="el" href="classaf_1_1array.htm">array</a> &amp;e)</td></tr>
<tr class="separator:gad2cfee88b0b16efb2e4c3fe5a01187ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0b49360b87556fcc3d256c864e72e50b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga0b49360b87556fcc3d256c864e72e50b">eval</a> (<a class="el" href="classaf_1_1array.htm">array</a> &amp;a, <a class="el" href="classaf_1_1array.htm">array</a> &amp;b, <a class="el" href="classaf_1_1array.htm">array</a> &amp;c, <a class="el" href="classaf_1_1array.htm">array</a> &amp;d, <a class="el" href="classaf_1_1array.htm">array</a> &amp;e, <a class="el" href="classaf_1_1array.htm">array</a> &amp;f)</td></tr>
<tr class="separator:ga0b49360b87556fcc3d256c864e72e50b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga45f52ad29c9ac39d7fa2efd8f2470a22"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga45f52ad29c9ac39d7fa2efd8f2470a22">eval</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;a)</td></tr>
<tr class="memdesc:ga45f52ad29c9ac39d7fa2efd8f2470a22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate an expression (nonblocking).  <a href="group__data__mat.htm#ga45f52ad29c9ac39d7fa2efd8f2470a22">More...</a><br /></td></tr>
<tr class="separator:ga45f52ad29c9ac39d7fa2efd8f2470a22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2016101f197ce325858f706405dbb399"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga2016101f197ce325858f706405dbb399">eval</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;a, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;b)</td></tr>
<tr class="separator:ga2016101f197ce325858f706405dbb399"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab9545550ae34532581c47d2f8a616569"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gab9545550ae34532581c47d2f8a616569">eval</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;a, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;b, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;c)</td></tr>
<tr class="separator:gab9545550ae34532581c47d2f8a616569"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0ab6d6c52ec85bd70ee1223448958261"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga0ab6d6c52ec85bd70ee1223448958261">eval</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;a, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;b, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;c, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;d)</td></tr>
<tr class="separator:ga0ab6d6c52ec85bd70ee1223448958261"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaddec0e716ad2d696f01b3359e2207e7d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gaddec0e716ad2d696f01b3359e2207e7d">eval</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;a, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;b, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;c, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;d, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;e)</td></tr>
<tr class="separator:gaddec0e716ad2d696f01b3359e2207e7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed1d77332fa65805b2a6bf1cee8a857c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gaed1d77332fa65805b2a6bf1cee8a857c">eval</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;a, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;b, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;c, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;d, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;e, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;f)</td></tr>
<tr class="separator:gaed1d77332fa65805b2a6bf1cee8a857c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11dba1a052f2fe004665237d9670e1f5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga11dba1a052f2fe004665237d9670e1f5">setManualEvalFlag</a> (bool flag)</td></tr>
<tr class="memdesc:ga11dba1a052f2fe004665237d9670e1f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Turn the manual eval flag on or off.  <a href="group__data__mat.htm#ga11dba1a052f2fe004665237d9670e1f5">More...</a><br /></td></tr>
<tr class="separator:ga11dba1a052f2fe004665237d9670e1f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c2f8602994b437164ee5783cedabfa9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga0c2f8602994b437164ee5783cedabfa9">getManualEvalFlag</a> ()</td></tr>
<tr class="memdesc:ga0c2f8602994b437164ee5783cedabfa9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the manual eval flag.  <a href="group__data__mat.htm#ga0c2f8602994b437164ee5783cedabfa9">More...</a><br /></td></tr>
<tr class="separator:ga0c2f8602994b437164ee5783cedabfa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>constant, random, range, etc. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga121545fb637db409a523862cdb8ffe39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga121545fb637db409a523862cdb8ffe39">&#9670;&nbsp;</a></span>eval() <span class="overload">[1/13]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a>&amp; af::eval </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Evaluate an expression (nonblocking). </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="financial_2black_scholes_options_8cpp-example.htm#a7">financial/black_scholes_options.cpp</a>, <a class="el" href="graphics_2fractal_8cpp-example.htm#a9">graphics/fractal.cpp</a>, and <a class="el" href="pde_2swe_8cpp-example.htm#a18">pde/swe.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01354">1354</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;{</div>
</div><!-- fragment -->
</div>
</div>
<a id="ga6a17a89fab2c26be8e911c4628c4c54c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6a17a89fab2c26be8e911c4628c4c54c">&#9670;&nbsp;</a></span>eval() <span class="overload">[2/13]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void af::eval </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01363">1363</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;    {</div>
<div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c};</div>
<div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#gaed1d77332fa65805b2a6bf1cee8a857c">eval</a>(3, arrays);</div>
<div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;<span class="preprocessor">#else</span></div>
</div><!-- fragment -->
</div>
</div>
<a id="ga932cc56a65acbe91ff2cea42e2f43bb6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga932cc56a65acbe91ff2cea42e2f43bb6">&#9670;&nbsp;</a></span>eval() <span class="overload">[3/13]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void af::eval </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01373">1373</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;    {</div>
<div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d};</div>
<div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#gaed1d77332fa65805b2a6bf1cee8a857c">eval</a>(4, arrays);</div>
<div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;<span class="preprocessor">#else</span></div>
</div><!-- fragment -->
</div>
</div>
<a id="ga8d75de296c6378ef17825a3776db93e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8d75de296c6378ef17825a3776db93e4">&#9670;&nbsp;</a></span>eval() <span class="overload">[4/13]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void af::eval </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>d</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01383">1383</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;    {</div>
<div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d, &amp;e};</div>
<div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#gaed1d77332fa65805b2a6bf1cee8a857c">eval</a>(5, arrays);</div>
<div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;<span class="preprocessor">#else</span></div>
</div><!-- fragment -->
</div>
</div>
<a id="gad2cfee88b0b16efb2e4c3fe5a01187ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad2cfee88b0b16efb2e4c3fe5a01187ac">&#9670;&nbsp;</a></span>eval() <span class="overload">[5/13]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void af::eval </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>e</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01394">1394</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;    {</div>
<div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d, &amp;e, &amp;f};</div>
<div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#gaed1d77332fa65805b2a6bf1cee8a857c">eval</a>(6, arrays);</div>
<div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;<span class="preprocessor">#else</span></div>
</div><!-- fragment -->
</div>
</div>
<a id="ga0b49360b87556fcc3d256c864e72e50b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0b49360b87556fcc3d256c864e72e50b">&#9670;&nbsp;</a></span>eval() <span class="overload">[6/13]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void af::eval </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>e</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>f</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01404">1404</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;                                             { a.eval(); <span class="keywordflow">return</span> a; }</div>
<div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160; </div>
<div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;<span class="preprocessor">#if AF_COMPILER_CXX_VARIADIC_TEMPLATES</span></div>
</div><!-- fragment -->
</div>
</div>
<a id="ga45f52ad29c9ac39d7fa2efd8f2470a22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga45f52ad29c9ac39d7fa2efd8f2470a22">&#9670;&nbsp;</a></span>eval() <span class="overload">[7/13]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classaf_1_1array.htm">array</a>&amp; af::eval </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Evaluate an expression (nonblocking). </p>

<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01417">1417</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;{</div>
</div><!-- fragment -->
</div>
</div>
<a id="ga2016101f197ce325858f706405dbb399"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2016101f197ce325858f706405dbb399">&#9670;&nbsp;</a></span>eval() <span class="overload">[8/13]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void af::eval </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01428">1428</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;    {</div>
<div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;        <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c};</div>
<div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#gaed1d77332fa65805b2a6bf1cee8a857c">eval</a>(3, <span class="keyword">const_cast&lt;</span><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;    }</div>
<div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160; </div>
</div><!-- fragment -->
</div>
</div>
<a id="gab9545550ae34532581c47d2f8a616569"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab9545550ae34532581c47d2f8a616569">&#9670;&nbsp;</a></span>eval() <span class="overload">[9/13]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void af::eval </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01434">1434</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;    {</div>
<div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;        <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d};</div>
<div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#gaed1d77332fa65805b2a6bf1cee8a857c">eval</a>(4, <span class="keyword">const_cast&lt;</span><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="ga0ab6d6c52ec85bd70ee1223448958261"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0ab6d6c52ec85bd70ee1223448958261">&#9670;&nbsp;</a></span>eval() <span class="overload">[10/13]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void af::eval </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>d</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01440">1440</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;    {</div>
<div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;        <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d, &amp;e};</div>
<div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#gaed1d77332fa65805b2a6bf1cee8a857c">eval</a>(5, <span class="keyword">const_cast&lt;</span><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="gaddec0e716ad2d696f01b3359e2207e7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaddec0e716ad2d696f01b3359e2207e7d">&#9670;&nbsp;</a></span>eval() <span class="overload">[11/13]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void af::eval </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>e</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01447">1447</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;    {</div>
<div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;        <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d, &amp;e, &amp;f};</div>
<div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#gaed1d77332fa65805b2a6bf1cee8a857c">eval</a>(6, <span class="keyword">const_cast&lt;</span><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="gaed1d77332fa65805b2a6bf1cee8a857c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaed1d77332fa65805b2a6bf1cee8a857c">&#9670;&nbsp;</a></span>eval() <span class="overload">[12/13]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void af::eval </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>e</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>f</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01454">1454</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>
<div class="fragment"><div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;           {</div>
</div><!-- fragment -->
</div>
</div>
<a id="gaeade064317ff4e40e66180718a34f9da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaeade064317ff4e40e66180718a34f9da">&#9670;&nbsp;</a></span>eval() <span class="overload">[13/13]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void af::eval </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> **&#160;</td>
          <td class="paramname"><em>arrays</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Evaluate multiple arrays simultaneously. </p>

</div>
</div>
<a id="ga0c2f8602994b437164ee5783cedabfa9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0c2f8602994b437164ee5783cedabfa9">&#9670;&nbsp;</a></span>getManualEvalFlag()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> bool af::getManualEvalFlag </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the manual eval flag. </p>

</div>
</div>
<a id="ga11dba1a052f2fe004665237d9670e1f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga11dba1a052f2fe004665237d9670e1f5">&#9670;&nbsp;</a></span>setManualEvalFlag()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void af::setManualEvalFlag </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Turn the manual eval flag on or off. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="agroup__data__mat_htm_gaed1d77332fa65805b2a6bf1cee8a857c"><div class="ttname"><a href="group__data__mat.htm#gaed1d77332fa65805b2a6bf1cee8a857c">af::eval</a></div><div class="ttdeci">void eval(const array &amp;a, const array &amp;b, const array &amp;c, const array &amp;d, const array &amp;e, const array &amp;f)</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l01454">array.h:1454</a></div></div>
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
