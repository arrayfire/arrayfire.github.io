<!-- HTML header for doxygen 1.9.3-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.3"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: unified/basic.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
  <!--<td id="projectalign">
   <div id="projectname">ArrayFire<span id="projectnumber">&#160;3.8.1</span>
   </div>
   <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>-->
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.3 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('unified_2basic_8cpp-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle"><div class="title">unified/basic.cpp</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/*******************************************************</span></div>
<div class="line"><span class="comment"> * Copyright (c) 2015, ArrayFire</span></div>
<div class="line"><span class="comment"> * All rights reserved.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><span class="comment"> ********************************************************/</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="arrayfire_8h.htm">arrayfire.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;cstdio&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span><a class="code hl_namespace" href="namespaceaf.htm">af</a>;</div>
<div class="line"> </div>
<div class="line">std::vector&lt;float&gt; input(100);</div>
<div class="line"> </div>
<div class="line"><span class="comment">// Generate a random number between 0 and 1</span></div>
<div class="line"><span class="comment">// return a uniform number in [0,1].</span></div>
<div class="line"><span class="keywordtype">double</span> unifRand() { <span class="keywordflow">return</span> rand() / double(RAND_MAX); }</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> testBackend() {</div>
<div class="line">    <a id="a0" name="a0"></a><a class="code hl_function" href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a>();</div>
<div class="line"> </div>
<div class="line">    <a id="_a1" name="_a1"></a><a class="code hl_class" href="classaf_1_1dim4.htm">af::dim4</a> dims(10, 10, 1, 1);</div>
<div class="line"> </div>
<div class="line">    <a id="_a2" name="_a2"></a><a class="code hl_class" href="classaf_1_1array.htm">af::array</a> A(dims, &amp;input.front());</div>
<div class="line">    <a id="a3" name="a3"></a><a class="code hl_define" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A);</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> B = <a id="a4" name="a4"></a><a class="code hl_function" href="group__data__func__constant.htm#ga3c58da8ca31ae6c871379aeb587b8b0d">af::constant</a>(0.5, dims, <a id="a5" name="a5"></a><a class="code hl_enumvalue" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line">    <a class="code hl_define" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(B);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">int</span> main(<span class="keywordtype">int</span>, <span class="keywordtype">char</span>**) {</div>
<div class="line">    std::generate(input.begin(), input.end(), unifRand);</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">try</span> {</div>
<div class="line">        printf(<span class="stringliteral">&quot;Trying CPU Backend\n&quot;</span>);</div>
<div class="line">        <a id="a6" name="a6"></a><a class="code hl_function" href="group__unified__func__setbackend.htm#ga7e0fad1f134b0421811ee3a4ce47e987">af::setBackend</a>(<a id="a7" name="a7"></a><a class="code hl_enumvalue" href="defines_8h.htm#ae7db039065fb80471a750bde2f652acaa90425eebc4bc0d74ae2e88f97afd521a">AF_BACKEND_CPU</a>);</div>
<div class="line">        testBackend();</div>
<div class="line">    } <span class="keywordflow">catch</span> (<a id="_a8" name="_a8"></a><a class="code hl_class" href="classaf_1_1exception.htm">af::exception</a>&amp; e) {</div>
<div class="line">        printf(<span class="stringliteral">&quot;Caught exception when trying CPU backend\n&quot;</span>);</div>
<div class="line">        fprintf(stderr, <span class="stringliteral">&quot;%s\n&quot;</span>, e.<a id="a9" name="a9"></a><a class="code hl_function" href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">what</a>());</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">try</span> {</div>
<div class="line">        printf(<span class="stringliteral">&quot;Trying CUDA Backend\n&quot;</span>);</div>
<div class="line">        <a class="code hl_function" href="group__unified__func__setbackend.htm#ga7e0fad1f134b0421811ee3a4ce47e987">af::setBackend</a>(<a id="a10" name="a10"></a><a class="code hl_enumvalue" href="defines_8h.htm#ae7db039065fb80471a750bde2f652acaa8c611d6f808d8ad5fb1af0254b539dab">AF_BACKEND_CUDA</a>);</div>
<div class="line">        testBackend();</div>
<div class="line">    } <span class="keywordflow">catch</span> (<a class="code hl_class" href="classaf_1_1exception.htm">af::exception</a>&amp; e) {</div>
<div class="line">        printf(<span class="stringliteral">&quot;Caught exception when trying CUDA backend\n&quot;</span>);</div>
<div class="line">        fprintf(stderr, <span class="stringliteral">&quot;%s\n&quot;</span>, e.<a class="code hl_function" href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">what</a>());</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">try</span> {</div>
<div class="line">        printf(<span class="stringliteral">&quot;Trying OpenCL Backend\n&quot;</span>);</div>
<div class="line">        <a class="code hl_function" href="group__unified__func__setbackend.htm#ga7e0fad1f134b0421811ee3a4ce47e987">af::setBackend</a>(<a id="a11" name="a11"></a><a class="code hl_enumvalue" href="defines_8h.htm#ae7db039065fb80471a750bde2f652acaa8f390693493fcc247c65baa70140c2b7">AF_BACKEND_OPENCL</a>);</div>
<div class="line">        testBackend();</div>
<div class="line">    } <span class="keywordflow">catch</span> (<a class="code hl_class" href="classaf_1_1exception.htm">af::exception</a>&amp; e) {</div>
<div class="line">        printf(<span class="stringliteral">&quot;Caught exception when trying OpenCL backend\n&quot;</span>);</div>
<div class="line">        fprintf(stderr, <span class="stringliteral">&quot;%s\n&quot;</span>, e.<a class="code hl_function" href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">what</a>());</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
<div class="ttc" id="aarrayfire_8h_htm"><div class="ttname"><a href="arrayfire_8h.htm">arrayfire.h</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00037">array.h:37</a></div></div>
<div class="ttc" id="aclassaf_1_1dim4_htm"><div class="ttname"><a href="classaf_1_1dim4.htm">af::dim4</a></div><div class="ttdoc">Generic object that represents size and shape.</div><div class="ttdef"><b>Definition:</b> <a href="dim4_8hpp_source.htm#l00025">dim4.hpp:26</a></div></div>
<div class="ttc" id="aclassaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00021">exception.h:22</a></div></div>
<div class="ttc" id="aclassaf_1_1exception_htm_aa884ff67408851f00e50cf971a4dfd05"><div class="ttname"><a href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">af::exception::what</a></div><div class="ttdeci">virtual const char * what() const</div><div class="ttdoc">Returns an error message for the exception in a string format.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00046">exception.h:46</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div><div class="ttdeci">@ f32</div><div class="ttdoc">32-bit floating point values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00211">defines.h:211</a></div></div>
<div class="ttc" id="adefines_8h_htm_ae7db039065fb80471a750bde2f652acaa8c611d6f808d8ad5fb1af0254b539dab"><div class="ttname"><a href="defines_8h.htm#ae7db039065fb80471a750bde2f652acaa8c611d6f808d8ad5fb1af0254b539dab">AF_BACKEND_CUDA</a></div><div class="ttdeci">@ AF_BACKEND_CUDA</div><div class="ttdoc">CUDA Compute Backend.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00416">defines.h:416</a></div></div>
<div class="ttc" id="adefines_8h_htm_ae7db039065fb80471a750bde2f652acaa8f390693493fcc247c65baa70140c2b7"><div class="ttname"><a href="defines_8h.htm#ae7db039065fb80471a750bde2f652acaa8f390693493fcc247c65baa70140c2b7">AF_BACKEND_OPENCL</a></div><div class="ttdeci">@ AF_BACKEND_OPENCL</div><div class="ttdoc">OpenCL Compute Backend.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00418">defines.h:417</a></div></div>
<div class="ttc" id="adefines_8h_htm_ae7db039065fb80471a750bde2f652acaa90425eebc4bc0d74ae2e88f97afd521a"><div class="ttname"><a href="defines_8h.htm#ae7db039065fb80471a750bde2f652acaa90425eebc4bc0d74ae2e88f97afd521a">AF_BACKEND_CPU</a></div><div class="ttdeci">@ AF_BACKEND_CPU</div><div class="ttdoc">CPU a.k.a sequential algorithms.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00415">defines.h:415</a></div></div>
<div class="ttc" id="agroup__data__func__constant_htm_ga3c58da8ca31ae6c871379aeb587b8b0d"><div class="ttname"><a href="group__data__func__constant.htm#ga3c58da8ca31ae6c871379aeb587b8b0d">af::constant</a></div><div class="ttdeci">array constant(T val, const dim4 &amp;dims, const dtype ty=(af_dtype) dtype_traits&lt; T &gt;::ctype)</div></div>
<div class="ttc" id="agroup__device__func__info_htm_ga1360e706b046b1c5b299bd6e689a0276"><div class="ttname"><a href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a></div><div class="ttdeci">AFAPI void info()</div></div>
<div class="ttc" id="agroup__unified__func__setbackend_htm_ga7e0fad1f134b0421811ee3a4ce47e987"><div class="ttname"><a href="group__unified__func__setbackend.htm#ga7e0fad1f134b0421811ee3a4ce47e987">af::setBackend</a></div><div class="ttdeci">AFAPI void setBackend(const Backend bknd)</div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:15</a></div></div>
<div class="ttc" id="autil_8h_htm_a6de8e7f9eb3914d1cea66e55e7b791d3"><div class="ttname"><a href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a></div><div class="ttdeci">#define af_print(...)</div><div class="ttdef"><b>Definition:</b> <a href="util_8h_source.htm#l00148">util.h:148</a></div></div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Thu Feb 24 2022 14:12:32 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.3 </li>
    </ul>
</div>
</body>
</html>
