<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: freeV2</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__device__func__free.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">freeV2<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__array__mat.htm">Functions to create and modify Arrays</a> &raquo; <a class="el" href="group__device__mat.htm">Managing devices in ArrayFire</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Returns memory to ArrayFire's memory manager.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gab013c750b4b42af693e73f699a317bb7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__free.htm#gab013c750b4b42af693e73f699a317bb7">free</a> (const void *ptr)</td></tr>
<tr class="memdesc:gab013c750b4b42af693e73f699a317bb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns memory to ArrayFire's memory manager.   <a href="group__device__func__free.htm#gab013c750b4b42af693e73f699a317bb7">More...</a><br /></td></tr>
<tr class="separator:gab013c750b4b42af693e73f699a317bb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc2eee7c38b4c0321a13106ea4237879"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__free.htm#gadc2eee7c38b4c0321a13106ea4237879">freeV2</a> (const void *ptr)</td></tr>
<tr class="separator:gadc2eee7c38b4c0321a13106ea4237879"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga487df85b8baf088bee45357ab5c6741b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__free.htm#ga487df85b8baf088bee45357ab5c6741b">af_free_device</a> (void *ptr)</td></tr>
<tr class="memdesc:ga487df85b8baf088bee45357ab5c6741b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns memory to ArrayFire's memory manager.  <a href="group__device__func__free.htm#ga487df85b8baf088bee45357ab5c6741b">More...</a><br /></td></tr>
<tr class="separator:ga487df85b8baf088bee45357ab5c6741b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc0a469d9f5d885e73ee645a6dbf19f5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__free.htm#gadc0a469d9f5d885e73ee645a6dbf19f5">af_free_device_v2</a> (void *ptr)</td></tr>
<tr class="memdesc:gadc0a469d9f5d885e73ee645a6dbf19f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns memory to ArrayFire's memory manager.  <a href="group__device__func__free.htm#gadc0a469d9f5d885e73ee645a6dbf19f5">More...</a><br /></td></tr>
<tr class="separator:gadc0a469d9f5d885e73ee645a6dbf19f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Returns memory to ArrayFire's memory manager. </p>
<p >The memory will return to the memory pool.</p>
<p >Releases control of the memory allocated by <a class="el" href="group__device__func__alloc.htm#ga0cb0857d16623f2cd1fdace44a6595ba" title="Allocates memory using ArrayFire&#39;s memory manager.">af::allocV2</a> functions to ArrayFire's memory manager. ArrayFire may reuse the memory for subsequent operations. This memory should not be used by the client after this point.</p>
<hr  />
 <h2 class="groupheader">Function Documentation</h2>
<a id="ga487df85b8baf088bee45357ab5c6741b" name="ga487df85b8baf088bee45357ab5c6741b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga487df85b8baf088bee45357ab5c6741b">&#9670;&#160;</a></span>af_free_device()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_free_device </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns memory to ArrayFire's memory manager. </p>
<p >This function will free a device pointer even if it has been previously locked.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ptr</td><td>The pointer allocated by af_alloc_device to be freed</td></tr>
  </table>
  </dd>
</dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000021">Deprecated:</a></b></dt><dd>Use af_free_device_v2 instead. The new function handles the new behavior of the af_alloc_device_v2 function.</dd></dl>

</div>
</div>
<a id="gadc0a469d9f5d885e73ee645a6dbf19f5" name="gadc0a469d9f5d885e73ee645a6dbf19f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadc0a469d9f5d885e73ee645a6dbf19f5">&#9670;&#160;</a></span>af_free_device_v2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_free_device_v2 </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns memory to ArrayFire's memory manager. </p>
<p >This function will free a device pointer even if it has been previously locked.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ptr</td><td>The pointer allocated by af_alloc_device_v2 to be freed </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>this function will not work for pointers allocated using the af_alloc_device function for all backends </dd></dl>

</div>
</div>
<a id="gab013c750b4b42af693e73f699a317bb7" name="gab013c750b4b42af693e73f699a317bb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab013c750b4b42af693e73f699a317bb7">&#9670;&#160;</a></span>free()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void free </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns memory to ArrayFire's memory manager.  </p>
<p >The memory will return to the memory pool.</p>
<p >Releases control of the memory allocated by <a class="el" href="group__device__func__alloc.htm#ga0cb0857d16623f2cd1fdace44a6595ba" title="Allocates memory using ArrayFire&#39;s memory manager.">af::allocV2</a> functions to ArrayFire's memory manager. ArrayFire may reuse the memory for subsequent operations. This memory should not be used by the client after this point.</p>
<hr  />
  <dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ptr</td><td>the memory allocated by the <a class="el" href="group__device__func__alloc.htm#ga714a6da5680ea41fbcb0769c24fe514b" title="Allocates memory using ArrayFire&#39;s memory manager.">af::alloc</a> function that will be freed</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>This function will free a device pointer even if it has been previously locked. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000024">Deprecated:</a></b></dt><dd>Use <a class="el" href="group__device__func__free.htm#gadc2eee7c38b4c0321a13106ea4237879">af::freeV2</a> instead. af_alloc_device_v2 returns a cl_mem object instead of the cl::Buffer object for the OpenCL backend. Otherwise the functionallity is identical </dd></dl>

</div>
</div>
<a id="gadc2eee7c38b4c0321a13106ea4237879" name="gadc2eee7c38b4c0321a13106ea4237879"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadc2eee7c38b4c0321a13106ea4237879">&#9670;&#160;</a></span>freeV2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void freeV2 </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Returns memory to ArrayFire's memory manager. </p>
<p >The memory will return to the memory pool.</p>
<p >Releases control of the memory allocated by <a class="el" href="group__device__func__alloc.htm#ga0cb0857d16623f2cd1fdace44a6595ba" title="Allocates memory using ArrayFire&#39;s memory manager.">af::allocV2</a> functions to ArrayFire's memory manager. ArrayFire may reuse the memory for subsequent operations. This memory should not be used by the client after this point.</p>
<hr  />
  <dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ptr</td><td>The pointer returned by <a class="el" href="group__device__func__alloc.htm#ga0cb0857d16623f2cd1fdace44a6595ba" title="Allocates memory using ArrayFire&#39;s memory manager.">af::allocV2</a></td></tr>
  </table>
  </dd>
</dl>
<p>This function will free a device pointer even if it has been previously locked. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Mon Sep 25 2023 12:35:29 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
