<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: Native Memory Interface</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__native__memory__interface.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Native Memory Interface<div class="ingroups"><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__memory__manager.htm">Memory Management</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Native alloc, native free, get device id, etc.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga9a0880977a8c0dc7c38bae75de24ee4a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__native__memory__interface.htm#ga9a0880977a8c0dc7c38bae75de24ee4a">af_memory_manager_get_active_device_id</a> (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, int *id)</td></tr>
<tr class="memdesc:ga9a0880977a8c0dc7c38bae75de24ee4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the id of the currently-active device.  <a href="group__native__memory__interface.htm#ga9a0880977a8c0dc7c38bae75de24ee4a">More...</a><br /></td></tr>
<tr class="separator:ga9a0880977a8c0dc7c38bae75de24ee4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga60767f7f2cb1be102164440a10e28649"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__native__memory__interface.htm#ga60767f7f2cb1be102164440a10e28649">af_memory_manager_native_alloc</a> (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, void **ptr, size_t size)</td></tr>
<tr class="memdesc:ga60767f7f2cb1be102164440a10e28649"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates memory with a native memory function for the active backend.  <a href="group__native__memory__interface.htm#ga60767f7f2cb1be102164440a10e28649">More...</a><br /></td></tr>
<tr class="separator:ga60767f7f2cb1be102164440a10e28649"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab0eb541711cd74886dc53529cbe1dc5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__native__memory__interface.htm#gaab0eb541711cd74886dc53529cbe1dc5">af_memory_manager_native_free</a> (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, void *ptr)</td></tr>
<tr class="memdesc:gaab0eb541711cd74886dc53529cbe1dc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Frees a pointer with a native memory function for the active backend.  <a href="group__native__memory__interface.htm#gaab0eb541711cd74886dc53529cbe1dc5">More...</a><br /></td></tr>
<tr class="separator:gaab0eb541711cd74886dc53529cbe1dc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75c912c6d1d3fe5a7fb0a5eb936df4e1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__native__memory__interface.htm#ga75c912c6d1d3fe5a7fb0a5eb936df4e1">af_memory_manager_get_max_memory_size</a> (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, size_t *size, int id)</td></tr>
<tr class="memdesc:ga75c912c6d1d3fe5a7fb0a5eb936df4e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the maximum memory size for a managed device.  <a href="group__native__memory__interface.htm#ga75c912c6d1d3fe5a7fb0a5eb936df4e1">More...</a><br /></td></tr>
<tr class="separator:ga75c912c6d1d3fe5a7fb0a5eb936df4e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7f23dd5171b6e1e1fa6f2aa897b7226b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__native__memory__interface.htm#ga7f23dd5171b6e1e1fa6f2aa897b7226b">af_memory_manager_get_memory_pressure_threshold</a> (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, float *value)</td></tr>
<tr class="memdesc:ga7f23dd5171b6e1e1fa6f2aa897b7226b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the memory pressure threshold for a memory manager.  <a href="group__native__memory__interface.htm#ga7f23dd5171b6e1e1fa6f2aa897b7226b">More...</a><br /></td></tr>
<tr class="separator:ga7f23dd5171b6e1e1fa6f2aa897b7226b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaebe2d62445c64975efa29273b76b810c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__native__memory__interface.htm#gaebe2d62445c64975efa29273b76b810c">af_memory_manager_set_memory_pressure_threshold</a> (<a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle, float value)</td></tr>
<tr class="memdesc:gaebe2d62445c64975efa29273b76b810c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the memory pressure threshold for a memory manager.  <a href="group__native__memory__interface.htm#gaebe2d62445c64975efa29273b76b810c">More...</a><br /></td></tr>
<tr class="separator:gaebe2d62445c64975efa29273b76b810c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Native alloc, native free, get device id, etc. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga9a0880977a8c0dc7c38bae75de24ee4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9a0880977a8c0dc7c38bae75de24ee4a">&#9670;&nbsp;</a></span>af_memory_manager_get_active_device_id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_memory_manager_get_active_device_id </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a>&#160;</td>
          <td class="paramname"><em>handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the id of the currently-active device. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>the <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">id</td><td>the id of the active device</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

</div>
</div>
<a id="ga75c912c6d1d3fe5a7fb0a5eb936df4e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga75c912c6d1d3fe5a7fb0a5eb936df4e1">&#9670;&nbsp;</a></span>af_memory_manager_get_max_memory_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_memory_manager_get_max_memory_size </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a>&#160;</td>
          <td class="paramname"><em>handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t *&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the maximum memory size for a managed device. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>the <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">size</td><td>the max memory size for the device </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>the device id</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

</div>
</div>
<a id="ga7f23dd5171b6e1e1fa6f2aa897b7226b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7f23dd5171b6e1e1fa6f2aa897b7226b">&#9670;&nbsp;</a></span>af_memory_manager_get_memory_pressure_threshold()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_memory_manager_get_memory_pressure_threshold </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a>&#160;</td>
          <td class="paramname"><em>handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the memory pressure threshold for a memory manager. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>the <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">value</td><td>the memory pressure threshold</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

</div>
</div>
<a id="ga60767f7f2cb1be102164440a10e28649"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga60767f7f2cb1be102164440a10e28649">&#9670;&nbsp;</a></span>af_memory_manager_native_alloc()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_memory_manager_native_alloc </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a>&#160;</td>
          <td class="paramname"><em>handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocates memory with a native memory function for the active backend. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>the <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ptr</td><td>the pointer to the allocated buffer (for the CUDA and CPU backends). For the OpenCL backend, this is a pointer to a cl_mem, which can be cast accordingly </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>the size of the pointer allocation</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

</div>
</div>
<a id="gaab0eb541711cd74886dc53529cbe1dc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaab0eb541711cd74886dc53529cbe1dc5">&#9670;&nbsp;</a></span>af_memory_manager_native_free()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_memory_manager_native_free </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a>&#160;</td>
          <td class="paramname"><em>handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Frees a pointer with a native memory function for the active backend. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>the <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ptr</td><td>the pointer to free</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

</div>
</div>
<a id="gaebe2d62445c64975efa29273b76b810c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaebe2d62445c64975efa29273b76b810c">&#9670;&nbsp;</a></span>af_memory_manager_set_memory_pressure_threshold()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_memory_manager_set_memory_pressure_threshold </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a>&#160;</td>
          <td class="paramname"><em>handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the memory pressure threshold for a memory manager. </p>
<p>The memory pressure threshold determines when the JIT tree evaluates based on how much memory usage there is. If the value returned by <a class="el" href="group__memory__manager__api.htm#ga60100bedcca313bd199a2515f258858a">af_memory_manager_get_memory_pressure_fn</a> exceeds the memory pressure threshold, the JIT will evaluate a subtree if generated kernels are valid.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>the <a class="el" href="group__memory__manager__api.htm#ga093dce1fb6172abb9a360b2fb5fe6fd2">af_memory_manager</a> handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>the new threshold value</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>AF_SUCCESS </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
