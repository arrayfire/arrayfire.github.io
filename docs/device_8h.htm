<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: device.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('device_8h.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">device.h File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="defines_8h_source.htm">af/defines.h</a>&gt;</code><br />
</div>
<p><a href="device_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceaf"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm">af</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga3e22b6ff6e0940bb31577bea2863ca27"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__info.htm#ga3e22b6ff6e0940bb31577bea2863ca27">info</a> ()</td></tr>
<tr class="separator:ga3e22b6ff6e0940bb31577bea2863ca27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac959f891fcff4d2525e9dbb270235500"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__info__string.htm#gac959f891fcff4d2525e9dbb270235500">infoString</a> (const bool verbose=false)</td></tr>
<tr class="separator:gac959f891fcff4d2525e9dbb270235500"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad73a199c39ee55fa8a295ef3bca46774"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__prop.htm#gad73a199c39ee55fa8a295ef3bca46774">deviceInfo</a> (char *d_name, char *d_platform, char *d_toolkit, char *d_compute)</td></tr>
<tr class="separator:gad73a199c39ee55fa8a295ef3bca46774"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf3331f90484be3a50b5863882252991d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__count.htm#gaf3331f90484be3a50b5863882252991d">getDeviceCount</a> ()</td></tr>
<tr class="memdesc:gaf3331f90484be3a50b5863882252991d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of devices.  <a href="group__device__func__count.htm#gaf3331f90484be3a50b5863882252991d">More...</a><br /></td></tr>
<tr class="separator:gaf3331f90484be3a50b5863882252991d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a0f9a1ed58f64d8e3184e582abcd9e4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__get.htm#ga2a0f9a1ed58f64d8e3184e582abcd9e4">getDevice</a> ()</td></tr>
<tr class="memdesc:ga2a0f9a1ed58f64d8e3184e582abcd9e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current device ID.  <a href="group__device__func__get.htm#ga2a0f9a1ed58f64d8e3184e582abcd9e4">More...</a><br /></td></tr>
<tr class="separator:ga2a0f9a1ed58f64d8e3184e582abcd9e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga96c00636f1a3b786889f12c6c680bc2c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__dbl.htm#ga96c00636f1a3b786889f12c6c680bc2c">isDoubleAvailable</a> (const int device)</td></tr>
<tr class="memdesc:ga96c00636f1a3b786889f12c6c680bc2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries the current device for double precision floating point support.  <a href="group__device__func__dbl.htm#ga96c00636f1a3b786889f12c6c680bc2c">More...</a><br /></td></tr>
<tr class="separator:ga96c00636f1a3b786889f12c6c680bc2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa1bbff916666265d4a7d16e1452e2db4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__half.htm#gaa1bbff916666265d4a7d16e1452e2db4">isHalfAvailable</a> (const int device)</td></tr>
<tr class="memdesc:gaa1bbff916666265d4a7d16e1452e2db4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries the current device for half precision floating point support.  <a href="group__device__func__half.htm#gaa1bbff916666265d4a7d16e1452e2db4">More...</a><br /></td></tr>
<tr class="separator:gaa1bbff916666265d4a7d16e1452e2db4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad7c36828c21e7efc06a067bbc47d8d3b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__set.htm#gad7c36828c21e7efc06a067bbc47d8d3b">setDevice</a> (const int device)</td></tr>
<tr class="memdesc:gad7c36828c21e7efc06a067bbc47d8d3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current device.  <a href="group__device__func__set.htm#gad7c36828c21e7efc06a067bbc47d8d3b">More...</a><br /></td></tr>
<tr class="separator:gad7c36828c21e7efc06a067bbc47d8d3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4e9c28bad482dc590cac930515f14bfb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__sync.htm#ga4e9c28bad482dc590cac930515f14bfb">sync</a> (const int device=-1)</td></tr>
<tr class="memdesc:ga4e9c28bad482dc590cac930515f14bfb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Blocks until the <code>device</code> is finished processing.  <a href="group__device__func__sync.htm#ga4e9c28bad482dc590cac930515f14bfb">More...</a><br /></td></tr>
<tr class="separator:ga4e9c28bad482dc590cac930515f14bfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab013c750b4b42af693e73f699a317bb7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__free.htm#gab013c750b4b42af693e73f699a317bb7">free</a> (const void *ptr)</td></tr>
<tr class="memdesc:gab013c750b4b42af693e73f699a317bb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns memory to ArrayFire's memory manager.   <a href="group__device__func__free.htm#gab013c750b4b42af693e73f699a317bb7">More...</a><br /></td></tr>
<tr class="separator:gab013c750b4b42af693e73f699a317bb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc2eee7c38b4c0321a13106ea4237879"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__free.htm#gadc2eee7c38b4c0321a13106ea4237879">freeV2</a> (const void *ptr)</td></tr>
<tr class="separator:gadc2eee7c38b4c0321a13106ea4237879"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d59036286cce87f60c76444813222e2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__free__pinned.htm#ga5d59036286cce87f60c76444813222e2">freePinned</a> (const void *ptr)</td></tr>
<tr class="memdesc:ga5d59036286cce87f60c76444813222e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free pinned memory allocated by ArrayFire's memory manager.   <a href="group__device__func__free__pinned.htm#ga5d59036286cce87f60c76444813222e2">More...</a><br /></td></tr>
<tr class="separator:ga5d59036286cce87f60c76444813222e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0638e5ea6142e47290e6703095d045d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__alloc__host.htm#gaa0638e5ea6142e47290e6703095d045d">allocHost</a> (const size_t elements, const dtype type)</td></tr>
<tr class="memdesc:gaa0638e5ea6142e47290e6703095d045d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate memory on host.  <a href="group__device__func__alloc__host.htm#gaa0638e5ea6142e47290e6703095d045d">More...</a><br /></td></tr>
<tr class="separator:gaa0638e5ea6142e47290e6703095d045d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga19fd5dd17e953726380c3cee9a78a573"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga19fd5dd17e953726380c3cee9a78a573"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__device__func__alloc__host.htm#ga19fd5dd17e953726380c3cee9a78a573">allocHost</a> (const size_t elements)</td></tr>
<tr class="memdesc:ga19fd5dd17e953726380c3cee9a78a573"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate memory on host.  <a href="group__device__func__alloc__host.htm#ga19fd5dd17e953726380c3cee9a78a573">More...</a><br /></td></tr>
<tr class="separator:ga19fd5dd17e953726380c3cee9a78a573"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5eca016a830211c6b0b6dcddf57d8236"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__free__host.htm#ga5eca016a830211c6b0b6dcddf57d8236">freeHost</a> (const void *ptr)</td></tr>
<tr class="memdesc:ga5eca016a830211c6b0b6dcddf57d8236"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free memory allocated internally by ArrayFire.  <a href="group__device__func__free__host.htm#ga5eca016a830211c6b0b6dcddf57d8236">More...</a><br /></td></tr>
<tr class="separator:ga5eca016a830211c6b0b6dcddf57d8236"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0007f92737ed60d5286af34fd8652b0d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#ga0007f92737ed60d5286af34fd8652b0d">setMemStepSize</a> (const size_t size)</td></tr>
<tr class="memdesc:ga0007f92737ed60d5286af34fd8652b0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the resolution of memory chunks.  <a href="group__device__func__mem.htm#ga0007f92737ed60d5286af34fd8652b0d">More...</a><br /></td></tr>
<tr class="separator:ga0007f92737ed60d5286af34fd8652b0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa1c5fab925db5bc7f7fbcd2d656bf601"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#gaa1c5fab925db5bc7f7fbcd2d656bf601">getMemStepSize</a> ()</td></tr>
<tr class="memdesc:gaa1c5fab925db5bc7f7fbcd2d656bf601"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the resolution of memory chunks.  <a href="group__device__func__mem.htm#gaa1c5fab925db5bc7f7fbcd2d656bf601">More...</a><br /></td></tr>
<tr class="separator:gaa1c5fab925db5bc7f7fbcd2d656bf601"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga55e3054334c0fbc23676bc93a2bec066"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__info.htm#ga55e3054334c0fbc23676bc93a2bec066">af_info</a> ()</td></tr>
<tr class="separator:ga55e3054334c0fbc23676bc93a2bec066"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacbdf7b79d778344d30deb77c06ac7367"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__info.htm#gacbdf7b79d778344d30deb77c06ac7367">af_init</a> ()</td></tr>
<tr class="separator:gacbdf7b79d778344d30deb77c06ac7367"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc0f17e14982d390284347d4dc82b461"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__info__string.htm#gacc0f17e14982d390284347d4dc82b461">af_info_string</a> (char **str, const bool verbose)</td></tr>
<tr class="memdesc:gacc0f17e14982d390284347d4dc82b461"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the output of <a class="el" href="group__device__func__info.htm#ga55e3054334c0fbc23676bc93a2bec066">af_info()</a> as a string.  <a href="group__device__func__info__string.htm#gacc0f17e14982d390284347d4dc82b461">More...</a><br /></td></tr>
<tr class="separator:gacc0f17e14982d390284347d4dc82b461"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9ad045fab0fc6e4260a4d13881a1a5d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__prop.htm#ga9ad045fab0fc6e4260a4d13881a1a5d9">af_device_info</a> (char *d_name, char *d_platform, char *d_toolkit, char *d_compute)</td></tr>
<tr class="memdesc:ga9ad045fab0fc6e4260a4d13881a1a5d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the information about device and platform as strings.   <a href="group__device__func__prop.htm#ga9ad045fab0fc6e4260a4d13881a1a5d9">More...</a><br /></td></tr>
<tr class="separator:ga9ad045fab0fc6e4260a4d13881a1a5d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f163c809fb48e4cba530c6505f6e7b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__count.htm#ga0f163c809fb48e4cba530c6505f6e7b6">af_get_device_count</a> (int *num_of_devices)</td></tr>
<tr class="separator:ga0f163c809fb48e4cba530c6505f6e7b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga71b5811b21be7a6d5e7fc0087ddf91c1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__dbl.htm#ga71b5811b21be7a6d5e7fc0087ddf91c1">af_get_dbl_support</a> (bool *available, const int device)</td></tr>
<tr class="separator:ga71b5811b21be7a6d5e7fc0087ddf91c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga83c2191dc82b2aba1d5f025abb769c3f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__half.htm#ga83c2191dc82b2aba1d5f025abb769c3f">af_get_half_support</a> (bool *available, const int device)</td></tr>
<tr class="separator:ga83c2191dc82b2aba1d5f025abb769c3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga19d551b544bf78de828d9524e6432ded"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__set.htm#ga19d551b544bf78de828d9524e6432ded">af_set_device</a> (const int device)</td></tr>
<tr class="separator:ga19d551b544bf78de828d9524e6432ded"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga54120b126cfcb1b0b3ee25e0fc66b8a4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__set.htm#ga54120b126cfcb1b0b3ee25e0fc66b8a4">af_get_device</a> (int *device)</td></tr>
<tr class="separator:ga54120b126cfcb1b0b3ee25e0fc66b8a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9dbc7f1e99d70170ad567c480b6ddbde"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__sync.htm#ga9dbc7f1e99d70170ad567c480b6ddbde">af_sync</a> (const int device)</td></tr>
<tr class="separator:ga9dbc7f1e99d70170ad567c480b6ddbde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga230872718cdd26f96547aedbc71a4ab1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__alloc.htm#ga230872718cdd26f96547aedbc71a4ab1">af_alloc_device</a> (void **ptr, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> bytes)</td></tr>
<tr class="memdesc:ga230872718cdd26f96547aedbc71a4ab1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates memory using ArrayFire's memory manager.  <a href="group__device__func__alloc.htm#ga230872718cdd26f96547aedbc71a4ab1">More...</a><br /></td></tr>
<tr class="separator:ga230872718cdd26f96547aedbc71a4ab1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga487df85b8baf088bee45357ab5c6741b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__free.htm#ga487df85b8baf088bee45357ab5c6741b">af_free_device</a> (void *ptr)</td></tr>
<tr class="memdesc:ga487df85b8baf088bee45357ab5c6741b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns memory to ArrayFire's memory manager.  <a href="group__device__func__free.htm#ga487df85b8baf088bee45357ab5c6741b">More...</a><br /></td></tr>
<tr class="separator:ga487df85b8baf088bee45357ab5c6741b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa8868199b29eae4bac42cc22ff5891a9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__alloc.htm#gaa8868199b29eae4bac42cc22ff5891a9">af_alloc_device_v2</a> (void **ptr, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> bytes)</td></tr>
<tr class="memdesc:gaa8868199b29eae4bac42cc22ff5891a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates memory using ArrayFire's memory manager.  <a href="group__device__func__alloc.htm#gaa8868199b29eae4bac42cc22ff5891a9">More...</a><br /></td></tr>
<tr class="separator:gaa8868199b29eae4bac42cc22ff5891a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc0a469d9f5d885e73ee645a6dbf19f5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__free.htm#gadc0a469d9f5d885e73ee645a6dbf19f5">af_free_device_v2</a> (void *ptr)</td></tr>
<tr class="memdesc:gadc0a469d9f5d885e73ee645a6dbf19f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns memory to ArrayFire's memory manager.  <a href="group__device__func__free.htm#gadc0a469d9f5d885e73ee645a6dbf19f5">More...</a><br /></td></tr>
<tr class="separator:gadc0a469d9f5d885e73ee645a6dbf19f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f8fd76dc179e7bd877e268a5579b215"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__pinned.htm#ga0f8fd76dc179e7bd877e268a5579b215">af_alloc_pinned</a> (void **ptr, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> bytes)</td></tr>
<tr class="separator:ga0f8fd76dc179e7bd877e268a5579b215"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga92ed71f45aa719b9be792afbab7415f2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__free__pinned.htm#ga92ed71f45aa719b9be792afbab7415f2">af_free_pinned</a> (void *ptr)</td></tr>
<tr class="separator:ga92ed71f45aa719b9be792afbab7415f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3218dbf32dc51436d9557cc73cda6579"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__alloc__host.htm#ga3218dbf32dc51436d9557cc73cda6579">af_alloc_host</a> (void **ptr, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> bytes)</td></tr>
<tr class="separator:ga3218dbf32dc51436d9557cc73cda6579"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3f1149a837a7ebbe8002d5d2244e3370"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__free__host.htm#ga3f1149a837a7ebbe8002d5d2244e3370">af_free_host</a> (void *ptr)</td></tr>
<tr class="separator:ga3f1149a837a7ebbe8002d5d2244e3370"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaad4fc77f872217e7337cb53bfb623cf5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gaad4fc77f872217e7337cb53bfb623cf5">af_device_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, void *data, const unsigned ndims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const dims, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type)</td></tr>
<tr class="memdesc:gaad4fc77f872217e7337cb53bfb623cf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create array from device memory.  <a href="group__c__api__mat.htm#gaad4fc77f872217e7337cb53bfb623cf5">More...</a><br /></td></tr>
<tr class="separator:gaad4fc77f872217e7337cb53bfb623cf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae633760aed4638f8a5ea333e0774ac84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#gae633760aed4638f8a5ea333e0774ac84">af_device_mem_info</a> (size_t *alloc_bytes, size_t *alloc_buffers, size_t *lock_bytes, size_t *lock_buffers)</td></tr>
<tr class="memdesc:gae633760aed4638f8a5ea333e0774ac84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get memory information from the memory manager.  <a href="group__device__func__mem.htm#gae633760aed4638f8a5ea333e0774ac84">More...</a><br /></td></tr>
<tr class="separator:gae633760aed4638f8a5ea333e0774ac84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7c928031579de47fe21594fd745e9188"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#ga7c928031579de47fe21594fd745e9188">af_print_mem_info</a> (const char *msg, const int device_id)</td></tr>
<tr class="memdesc:ga7c928031579de47fe21594fd745e9188"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints buffer details from the ArrayFire Device Manager.  <a href="group__device__func__mem.htm#ga7c928031579de47fe21594fd745e9188">More...</a><br /></td></tr>
<tr class="separator:ga7c928031579de47fe21594fd745e9188"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga182a33d34b3288c5cf5b88cd02468c56"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#ga182a33d34b3288c5cf5b88cd02468c56">af_device_gc</a> ()</td></tr>
<tr class="memdesc:ga182a33d34b3288c5cf5b88cd02468c56"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call the garbage collection routine.  <a href="group__device__func__mem.htm#ga182a33d34b3288c5cf5b88cd02468c56">More...</a><br /></td></tr>
<tr class="separator:ga182a33d34b3288c5cf5b88cd02468c56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3be9c5ea9ee828868f5d906333a11499"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#ga3be9c5ea9ee828868f5d906333a11499">af_set_mem_step_size</a> (const size_t step_bytes)</td></tr>
<tr class="memdesc:ga3be9c5ea9ee828868f5d906333a11499"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the minimum memory chunk size.  <a href="group__device__func__mem.htm#ga3be9c5ea9ee828868f5d906333a11499">More...</a><br /></td></tr>
<tr class="separator:ga3be9c5ea9ee828868f5d906333a11499"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4c04df1ae248a6a8aa0a28263323872a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#ga4c04df1ae248a6a8aa0a28263323872a">af_get_mem_step_size</a> (size_t *step_bytes)</td></tr>
<tr class="memdesc:ga4c04df1ae248a6a8aa0a28263323872a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the minimum memory chunk size.  <a href="group__device__func__mem.htm#ga4c04df1ae248a6a8aa0a28263323872a">More...</a><br /></td></tr>
<tr class="separator:ga4c04df1ae248a6a8aa0a28263323872a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac2ad5089cbca1a6cca8d87d42279c6a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#gac2ad5089cbca1a6cca8d87d42279c6a8">af_lock_device_ptr</a> (const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gac2ad5089cbca1a6cca8d87d42279c6a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Lock the device buffer in the memory manager.  <a href="group__device__func__mem.htm#gac2ad5089cbca1a6cca8d87d42279c6a8">More...</a><br /></td></tr>
<tr class="separator:gac2ad5089cbca1a6cca8d87d42279c6a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga39817b0ba24db34f00c20cc3a20df6d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#ga39817b0ba24db34f00c20cc3a20df6d4">af_unlock_device_ptr</a> (const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga39817b0ba24db34f00c20cc3a20df6d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unlock device buffer in the memory manager.  <a href="group__device__func__mem.htm#ga39817b0ba24db34f00c20cc3a20df6d4">More...</a><br /></td></tr>
<tr class="separator:ga39817b0ba24db34f00c20cc3a20df6d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga825e21412e9c8e3609c759f8106fd384"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#ga825e21412e9c8e3609c759f8106fd384">af_lock_array</a> (const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga825e21412e9c8e3609c759f8106fd384"><td class="mdescLeft">&#160;</td><td class="mdescRight">Lock the device buffer in the memory manager.  <a href="group__device__func__mem.htm#ga825e21412e9c8e3609c759f8106fd384">More...</a><br /></td></tr>
<tr class="separator:ga825e21412e9c8e3609c759f8106fd384"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga07151f8b3d69c1afe3cbd860fd98c36f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#ga07151f8b3d69c1afe3cbd860fd98c36f">af_unlock_array</a> (const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga07151f8b3d69c1afe3cbd860fd98c36f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unlock device buffer in the memory manager.  <a href="group__device__func__mem.htm#ga07151f8b3d69c1afe3cbd860fd98c36f">More...</a><br /></td></tr>
<tr class="separator:ga07151f8b3d69c1afe3cbd860fd98c36f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab99cb6a3744802742c98714fc88fb991"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#gab99cb6a3744802742c98714fc88fb991">af_is_locked_array</a> (bool *res, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gab99cb6a3744802742c98714fc88fb991"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query if the array has been locked by the user.  <a href="group__device__func__mem.htm#gab99cb6a3744802742c98714fc88fb991">More...</a><br /></td></tr>
<tr class="separator:gab99cb6a3744802742c98714fc88fb991"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga58fda2d491cd27f31108e699b5aef506"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#ga58fda2d491cd27f31108e699b5aef506">af_get_device_ptr</a> (void **ptr, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga58fda2d491cd27f31108e699b5aef506"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the device pointer and lock the buffer in memory manager.  <a href="group__device__func__mem.htm#ga58fda2d491cd27f31108e699b5aef506">More...</a><br /></td></tr>
<tr class="separator:ga58fda2d491cd27f31108e699b5aef506"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga880be5cb0035d4f173d074ad06bce6a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#ga880be5cb0035d4f173d074ad06bce6a7">af_set_kernel_cache_directory</a> (const char *path, int override_env)</td></tr>
<tr class="memdesc:ga880be5cb0035d4f173d074ad06bce6a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the path where the kernels generated at runtime will be cached.  <a href="group__device__func__mem.htm#ga880be5cb0035d4f173d074ad06bce6a7">More...</a><br /></td></tr>
<tr class="separator:ga880be5cb0035d4f173d074ad06bce6a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0cca43230149189dcc46cceb5dba5588"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#ga0cca43230149189dcc46cceb5dba5588">af_get_kernel_cache_directory</a> (size_t *length, char *path)</td></tr>
<tr class="memdesc:ga0cca43230149189dcc46cceb5dba5588"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the path where the kernels generated at runtime will be cached.  <a href="group__device__func__mem.htm#ga0cca43230149189dcc46cceb5dba5588">More...</a><br /></td></tr>
<tr class="separator:ga0cca43230149189dcc46cceb5dba5588"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga714a6da5680ea41fbcb0769c24fe514b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__alloc.htm#ga714a6da5680ea41fbcb0769c24fe514b">alloc</a> (const size_t elements, const dtype type)</td></tr>
<tr class="memdesc:ga714a6da5680ea41fbcb0769c24fe514b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates memory using ArrayFire's memory manager.  <a href="group__device__func__alloc.htm#ga714a6da5680ea41fbcb0769c24fe514b">More...</a><br /></td></tr>
<tr class="separator:ga714a6da5680ea41fbcb0769c24fe514b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0cb0857d16623f2cd1fdace44a6595ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__alloc.htm#ga0cb0857d16623f2cd1fdace44a6595ba">allocV2</a> (const size_t bytes)</td></tr>
<tr class="memdesc:ga0cb0857d16623f2cd1fdace44a6595ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates memory using ArrayFire's memory manager.  <a href="group__device__func__alloc.htm#ga0cb0857d16623f2cd1fdace44a6595ba">More...</a><br /></td></tr>
<tr class="separator:ga0cb0857d16623f2cd1fdace44a6595ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4a234b3dbe6cf6f9c6603a0f0c132b79"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga4a234b3dbe6cf6f9c6603a0f0c132b79"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__device__func__alloc.htm#ga4a234b3dbe6cf6f9c6603a0f0c132b79">alloc</a> (const size_t elements)</td></tr>
<tr class="memdesc:ga4a234b3dbe6cf6f9c6603a0f0c132b79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates memory using ArrayFire's memory manager.  <a href="group__device__func__alloc.htm#ga4a234b3dbe6cf6f9c6603a0f0c132b79">More...</a><br /></td></tr>
<tr class="separator:ga4a234b3dbe6cf6f9c6603a0f0c132b79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga4f91c8be1d824505603ace1ad21632bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__pinned.htm#ga4f91c8be1d824505603ace1ad21632bb">pinned</a> (const size_t elements, const dtype type)</td></tr>
<tr class="separator:ga4f91c8be1d824505603ace1ad21632bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c08b181e719bb20f679593551157e62"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga8c08b181e719bb20f679593551157e62"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__device__func__pinned.htm#ga8c08b181e719bb20f679593551157e62">pinned</a> (const size_t elements)</td></tr>
<tr class="memdesc:ga8c08b181e719bb20f679593551157e62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate pinned memory using ArrayFire's memory manager.   <a href="group__device__func__pinned.htm#ga8c08b181e719bb20f679593551157e62">More...</a><br /></td></tr>
<tr class="separator:ga8c08b181e719bb20f679593551157e62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gab67ced8207d177d239ffbf41d333cb0a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#gab67ced8207d177d239ffbf41d333cb0a">deviceMemInfo</a> (size_t *alloc_bytes, size_t *alloc_buffers, size_t *lock_bytes, size_t *lock_buffers)</td></tr>
<tr class="memdesc:gab67ced8207d177d239ffbf41d333cb0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets information about the memory manager.  <a href="group__device__func__mem.htm#gab67ced8207d177d239ffbf41d333cb0a">More...</a><br /></td></tr>
<tr class="separator:gab67ced8207d177d239ffbf41d333cb0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga634fae04c76013ff79dac7b71c7ca6ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#ga634fae04c76013ff79dac7b71c7ca6ef">printMemInfo</a> (const char *msg=NULL, const int device_id=-1)</td></tr>
<tr class="memdesc:ga634fae04c76013ff79dac7b71c7ca6ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints buffer details from the ArrayFire Device Manager.  <a href="group__device__func__mem.htm#ga634fae04c76013ff79dac7b71c7ca6ef">More...</a><br /></td></tr>
<tr class="separator:ga634fae04c76013ff79dac7b71c7ca6ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacb3dd5a4e98ef2e2ae5b0f382845ed5d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__device__func__mem.htm#gacb3dd5a4e98ef2e2ae5b0f382845ed5d">deviceGC</a> ()</td></tr>
<tr class="memdesc:gacb3dd5a4e98ef2e2ae5b0f382845ed5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call the garbage collection function in the memory manager.  <a href="group__device__func__mem.htm#gacb3dd5a4e98ef2e2ae5b0f382845ed5d">More...</a><br /></td></tr>
<tr class="separator:gacb3dd5a4e98ef2e2ae5b0f382845ed5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="navelem"><a class="el" href="device_8h.htm">device.h</a></li>
        <li class="footer">Generated on Wed Aug 30 2023 15:41:55 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
