<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: lookup</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__index__func__lookup.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">lookup<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__array__mat.htm">Functions to create and modify Arrays</a> &raquo;  &#124; <a class="el" href="group__index__mat.htm">Assignment &amp; Indexing operation on arrays</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Lookup values of an array by indexing with another array.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gac7bb6cefab347540526b1ac2584d006e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__index__func__lookup.htm#gac7bb6cefab347540526b1ac2584d006e">lookup</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;idx, const int dim=-1)</td></tr>
<tr class="memdesc:gac7bb6cefab347540526b1ac2584d006e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Lookup the values of an input array by indexing with another array.  <a href="group__index__func__lookup.htm#gac7bb6cefab347540526b1ac2584d006e">More...</a><br /></td></tr>
<tr class="separator:gac7bb6cefab347540526b1ac2584d006e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9a26c7c19369c2265fd95170c5a1e52"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__index__func__lookup.htm#gac9a26c7c19369c2265fd95170c5a1e52">af_lookup</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> indices, const unsigned dim)</td></tr>
<tr class="memdesc:gac9a26c7c19369c2265fd95170c5a1e52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Lookup the values of an input array by indexing with another array.  <a href="#gac9a26c7c19369c2265fd95170c5a1e52">More...</a><br /></td></tr>
<tr class="separator:gac9a26c7c19369c2265fd95170c5a1e52"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Lookup values of an array by indexing with another array. </p>
<p>Will return an array with the values in the <code>in</code> array from the locations specified in the <code>idx</code> array. The resulting array contains values corresponding to each of the provided indices. Locations of the input data are assumed to be in the range [0, n). Indexing outside of this range will result in mirrored wrap-around behavior.</p>
<p>A simple example of one-dimension indexing can be seen in the following example.</p>
<div class="fragment"><div class="line"></div><div class="line">    <span class="comment">// input array</span></div><div class="line">    <span class="keywordtype">float</span> in_[5] = {10, 20, 30, 40, 50};</div><div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> in(5, in_);</div><div class="line"></div><div class="line">    <span class="comment">// indices to lookup</span></div><div class="line">    <span class="keywordtype">int</span> idx_[3] = {1, 3, 2};</div><div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> idx(3, idx_);</div><div class="line"></div><div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> indexed = <a class="code" href="group__index__func__lookup.htm#gac7bb6cefab347540526b1ac2584d006e">af::lookup</a>(in, idx);</div><div class="line">    <span class="comment">// indexed == { 20, 40, 30 };</span></div><div class="line"></div></div><!-- fragment --><p> Index locations can also be out of bounds.</p>
<div class="fragment"><div class="line"></div><div class="line">    <span class="comment">// input array</span></div><div class="line">    <span class="keywordtype">float</span> in_[5] = {10, 20, 30, 40, 50};</div><div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> in(5, in_);</div><div class="line"></div><div class="line">    <span class="comment">// indexing past end of array</span></div><div class="line">    <span class="keywordtype">int</span> idx_outofbounds_p_[8] = {4, 5, 6, 7, 8, 9, 10, 11};</div><div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> idx_outofbounds_p(8, idx_outofbounds_p_);</div><div class="line"></div><div class="line">    <span class="comment">// and indexing before beginning of array</span></div><div class="line">    <span class="keywordtype">int</span> idx_outofbounds_n_[8] = {0, -1, -2, -3, -4, -5, -6, -7};</div><div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> idx_outofbounds_n(8, idx_outofbounds_n_);</div><div class="line"></div><div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> indexed_out_of_bounds_pos = <a class="code" href="group__index__func__lookup.htm#gac7bb6cefab347540526b1ac2584d006e">af::lookup</a>(in, idx_outofbounds_p);</div><div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> indexed_out_of_bounds_neg = <a class="code" href="group__index__func__lookup.htm#gac7bb6cefab347540526b1ac2584d006e">af::lookup</a>(in, idx_outofbounds_n);</div><div class="line">    <span class="comment">// indexed_out_of_bounds_pos == { 50, 50, 40, 30, 20, 10, 50, 40 }</span></div><div class="line">    <span class="comment">// indexed_out_of_bounds_neg == { 10, 10, 20, 30, 40, 50, 10, 20 }</span></div><div class="line"></div></div><!-- fragment --><p> The axis along which to query the indices can also be specified. The resulting array will be of the same size as the input, except for the queried dimension which will match the number of elements in the index array.</p>
<div class="fragment"><div class="line"></div><div class="line">    <span class="comment">// constant input data</span></div><div class="line">    <span class="keywordtype">float</span> input_vals[9] = {10, 20, 30, 11, 21, 31, 12, 22, 32};</div><div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> input(3, 3, input_vals);</div><div class="line">    <span class="comment">// {{10 11 12},</span></div><div class="line">    <span class="comment">//  {20 21 22},</span></div><div class="line">    <span class="comment">//  {30 31 32}},</span></div><div class="line"></div><div class="line">    <span class="comment">// indices to lookup</span></div><div class="line">    <span class="keywordtype">int</span> idx_[6] = {0, 0, 1, 1, 2, 2};</div><div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> idx(6, idx_);</div><div class="line"></div><div class="line">    <span class="comment">// will look up all indices along specified dimension</span></div><div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> indexed = <a class="code" href="group__index__func__lookup.htm#gac7bb6cefab347540526b1ac2584d006e">af::lookup</a>(input, idx);  <span class="comment">//(dim = 0)</span></div><div class="line">    <span class="comment">// indexed == { 10, 11, 12,</span></div><div class="line">    <span class="comment">//              10, 11, 12,</span></div><div class="line">    <span class="comment">//              20, 21, 22,</span></div><div class="line">    <span class="comment">//              20, 21, 22,</span></div><div class="line">    <span class="comment">//              30, 31, 32,</span></div><div class="line">    <span class="comment">//              30, 31, 32 };</span></div><div class="line"></div><div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> indexed_dim1 = <a class="code" href="group__index__func__lookup.htm#gac7bb6cefab347540526b1ac2584d006e">af::lookup</a>(input, idx, 1);</div><div class="line">    <span class="comment">// indexed_dim1 == { 10, 10, 11, 11, 12, 12,</span></div><div class="line">    <span class="comment">//                   20, 20, 21, 21, 22, 22,</span></div><div class="line">    <span class="comment">//                   30, 30, 31, 31, 32, 32 };</span></div><div class="line"></div></div><!-- fragment --><hr/>
<h2 class="groupheader">Function Documentation</h2>
<a id="gac9a26c7c19369c2265fd95170c5a1e52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac9a26c7c19369c2265fd95170c5a1e52">&#9670;&nbsp;</a></span>af_lookup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_lookup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>dim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Lookup the values of an input array by indexing with another array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>output array containing values of <code>in</code> at locations specified by <code>indices</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array that will be queried </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">indices</td><td>are the lookup indices </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>specifies the dimension for indexing </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gac7bb6cefab347540526b1ac2584d006e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac7bb6cefab347540526b1ac2584d006e">&#9670;&nbsp;</a></span>lookup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::lookup </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>dim</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Lookup the values of an input array by indexing with another array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array that will be queried </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>are the lookup indices </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>specifies the dimension for indexing </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array containing values of <code>in</code> at locations specified by <code>index</code> </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="machine_learning_2bagging_8cpp-example.htm#a13">machine_learning/bagging.cpp</a>, and <a class="el" href="machine_learning_2naive_bayes_8cpp-example.htm#a5">machine_learning/naive_bayes.cpp</a>.</dd>
</dl>
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
