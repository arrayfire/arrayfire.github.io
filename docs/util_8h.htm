<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<title>util.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('util_8h.htm','');});
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">util.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<h3 class="version">(2018-05-22 12:00:01 -0400, (build fd64c39))</h3><div class="textblock"><code>#include &lt;<a class="el" href="defines_8h_source.htm">af/defines.h</a>&gt;</code><br />
</div>
<p><a href="util_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceaf"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm">af</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a28227d4423016a0887c5460ac74a5c30"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="util_8h.htm#a28227d4423016a0887c5460ac74a5c30">AF_PRINT1</a>(exp)&#160;&#160;&#160;<a class="el" href="group__print__func__print.htm#ga66791369fe71d867943da676a15afe3a">af::print</a>(#exp, exp);</td></tr>
<tr class="separator:a28227d4423016a0887c5460ac74a5c30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95b1025954cc586886b61549339124f3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="util_8h.htm#a95b1025954cc586886b61549339124f3">AF_PRINT2</a>(exp,  precision)&#160;&#160;&#160;<a class="el" href="group__print__func__print.htm#ga66791369fe71d867943da676a15afe3a">af::print</a>(#exp, exp, precision);</td></tr>
<tr class="separator:a95b1025954cc586886b61549339124f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67e58c7ab5c5cf7bc6e55fab9b4211bc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="util_8h.htm#a67e58c7ab5c5cf7bc6e55fab9b4211bc">GET_PRINT_MACRO</a>(_1,  _2,  NAME, ...)&#160;&#160;&#160;NAME</td></tr>
<tr class="separator:a67e58c7ab5c5cf7bc6e55fab9b4211bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6de8e7f9eb3914d1cea66e55e7b791d3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(...)&#160;&#160;&#160;<a class="el" href="util_8h.htm#a67e58c7ab5c5cf7bc6e55fab9b4211bc">GET_PRINT_MACRO</a>(__VA_ARGS__, <a class="el" href="util_8h.htm#a95b1025954cc586886b61549339124f3">AF_PRINT2</a>, <a class="el" href="util_8h.htm#a28227d4423016a0887c5460ac74a5c30">AF_PRINT1</a>)(__VA_ARGS__)</td></tr>
<tr class="separator:a6de8e7f9eb3914d1cea66e55e7b791d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga66791369fe71d867943da676a15afe3a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__print__func__print.htm#ga66791369fe71d867943da676a15afe3a">print</a> (const char *exp, const array &amp;arr)</td></tr>
<tr class="separator:ga66791369fe71d867943da676a15afe3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ee270beb74a90dbae9497e7f740c8b7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__print__func__print.htm#ga7ee270beb74a90dbae9497e7f740c8b7">print</a> (const char *exp, const array &amp;arr, const int precision)</td></tr>
<tr class="separator:ga7ee270beb74a90dbae9497e7f740c8b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf0d3dfb49f4f2aaac7a46222817ed48f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stream__func__save.htm#gaf0d3dfb49f4f2aaac7a46222817ed48f">saveArray</a> (const char *key, const array &amp;arr, const char *filename, const bool append=false)</td></tr>
<tr class="separator:gaf0d3dfb49f4f2aaac7a46222817ed48f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf78aa8f367fbd6f408e90f0851e0557a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stream__func__read.htm#gaf78aa8f367fbd6f408e90f0851e0557a">readArray</a> (const char *filename, const unsigned index)</td></tr>
<tr class="separator:gaf78aa8f367fbd6f408e90f0851e0557a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga47670590753282be28e85892f59e37ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stream__func__read.htm#ga47670590753282be28e85892f59e37ce">readArray</a> (const char *filename, const char *key)</td></tr>
<tr class="separator:ga47670590753282be28e85892f59e37ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga276257d24b4be407b51f5be18c99faf7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stream__func__read.htm#ga276257d24b4be407b51f5be18c99faf7">readArrayCheck</a> (const char *filename, const char *key)</td></tr>
<tr class="memdesc:ga276257d24b4be407b51f5be18c99faf7"><td class="mdescLeft">&#160;</td><td class="mdescRight">When reading by key, it may be a good idea to run this function first to check for the key and then call the readArray using the index.  <a href="group__stream__func__read.htm#ga276257d24b4be407b51f5be18c99faf7">More...</a><br /></td></tr>
<tr class="separator:ga276257d24b4be407b51f5be18c99faf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac268e4935efa88b80d1be6ccaa6a9093"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__print__func__tostring.htm#gac268e4935efa88b80d1be6ccaa6a9093">toString</a> (char **output, const char *exp, const array &amp;arr, const int precision=4, const bool transpose=true)</td></tr>
<tr class="separator:gac268e4935efa88b80d1be6ccaa6a9093"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae254d14d45f9fd3b284df6a36c01edf1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__print__func__tostring.htm#gae254d14d45f9fd3b284df6a36c01edf1">toString</a> (const char *exp, const array &amp;arr, const int precision=4, const bool transpose=true)</td></tr>
<tr class="separator:gae254d14d45f9fd3b284df6a36c01edf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af84ed5a10b4a532920fe0d94630d4df5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm#af84ed5a10b4a532920fe0d94630d4df5">exampleFunction</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#abcc1459f43f27934145c81ff13345798">af_someenum_t</a> param)</td></tr>
<tr class="separator:af84ed5a10b4a532920fe0d94630d4df5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee762e36f152a4ee58d3d14619b009d3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm#aee762e36f152a4ee58d3d14619b009d3">getSizeOf</a> (<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af::dtype</a> type)</td></tr>
<tr class="memdesc:aee762e36f152a4ee58d3d14619b009d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the size of the type represented by an af_dtype enum.  <a href="namespaceaf.htm#aee762e36f152a4ee58d3d14619b009d3">More...</a><br /></td></tr>
<tr class="separator:aee762e36f152a4ee58d3d14619b009d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4121ca35d8a6c610f870098ab477575b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__print__func__print.htm#ga4121ca35d8a6c610f870098ab477575b">af_print_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="separator:ga4121ca35d8a6c610f870098ab477575b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7c747e87c6a03f37cfdb2ddfdbd6ac38"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__print__func__print.htm#ga7c747e87c6a03f37cfdb2ddfdbd6ac38">af_print_array_gen</a> (const char *exp, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr, const int precision)</td></tr>
<tr class="separator:ga7c747e87c6a03f37cfdb2ddfdbd6ac38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3cb2f467e3f00b619cb2b4c727f1200b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stream__func__save.htm#ga3cb2f467e3f00b619cb2b4c727f1200b">af_save_array</a> (int *index, const char *key, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr, const char *filename, const bool append)</td></tr>
<tr class="separator:ga3cb2f467e3f00b619cb2b4c727f1200b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab01a9d75d67f2ecfccac53b02c900930"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stream__func__read.htm#gab01a9d75d67f2ecfccac53b02c900930">af_read_array_index</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const char *filename, const unsigned index)</td></tr>
<tr class="separator:gab01a9d75d67f2ecfccac53b02c900930"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e0331b300f0b94ea9cc53606cf38278"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stream__func__read.htm#ga8e0331b300f0b94ea9cc53606cf38278">af_read_array_key</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const char *filename, const char *key)</td></tr>
<tr class="separator:ga8e0331b300f0b94ea9cc53606cf38278"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga31522b71beee2b1c06d49b5aa65a5c6f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stream__func__read.htm#ga31522b71beee2b1c06d49b5aa65a5c6f">af_read_array_key_check</a> (int *index, const char *filename, const char *key)</td></tr>
<tr class="memdesc:ga31522b71beee2b1c06d49b5aa65a5c6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">When reading by key, it may be a good idea to run this function first to check for the key and then call the readArray using the index.  <a href="group__stream__func__read.htm#ga31522b71beee2b1c06d49b5aa65a5c6f">More...</a><br /></td></tr>
<tr class="separator:ga31522b71beee2b1c06d49b5aa65a5c6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01f32ef2420b5d4592c6e4b4964b863b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__print__func__tostring.htm#ga01f32ef2420b5d4592c6e4b4964b863b">af_array_to_string</a> (char **output, const char *exp, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr, const int precision, const bool transpose)</td></tr>
<tr class="separator:ga01f32ef2420b5d4592c6e4b4964b863b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d636905a73db8674f56d1469b13a4f7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="util_8h.htm#a4d636905a73db8674f56d1469b13a4f7">af_example_function</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#abcc1459f43f27934145c81ff13345798">af_someenum_t</a> param)</td></tr>
<tr class="separator:a4d636905a73db8674f56d1469b13a4f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e4a7714e3376c9bd8dfa61652eb4e28"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="util_8h.htm#a4e4a7714e3376c9bd8dfa61652eb4e28">af_get_version</a> (int *major, int *minor, int *patch)</td></tr>
<tr class="memdesc:a4e4a7714e3376c9bd8dfa61652eb4e28"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the version information of the library.  <a href="#a4e4a7714e3376c9bd8dfa61652eb4e28">More...</a><br /></td></tr>
<tr class="separator:a4e4a7714e3376c9bd8dfa61652eb4e28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a547633192d5c0b58a0f424daa63da93e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="util_8h.htm#a547633192d5c0b58a0f424daa63da93e">af_get_revision</a> ()</td></tr>
<tr class="memdesc:a547633192d5c0b58a0f424daa63da93e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the revision (commit) information of the library.  <a href="#a547633192d5c0b58a0f424daa63da93e">More...</a><br /></td></tr>
<tr class="separator:a547633192d5c0b58a0f424daa63da93e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b72cffd10a92a7a2ee7f52dadda5216"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="util_8h.htm#a8b72cffd10a92a7a2ee7f52dadda5216">af_get_size_of</a> (size_t *size, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type)</td></tr>
<tr class="memdesc:a8b72cffd10a92a7a2ee7f52dadda5216"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the size of the type represented by an af_dtype enum.  <a href="#a8b72cffd10a92a7a2ee7f52dadda5216">More...</a><br /></td></tr>
<tr class="separator:a8b72cffd10a92a7a2ee7f52dadda5216"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a6de8e7f9eb3914d1cea66e55e7b791d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6de8e7f9eb3914d1cea66e55e7b791d3">&#9670;&nbsp;</a></span>af_print</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define af_print</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em></td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="util_8h.htm#a67e58c7ab5c5cf7bc6e55fab9b4211bc">GET_PRINT_MACRO</a>(__VA_ARGS__, <a class="el" href="util_8h.htm#a95b1025954cc586886b61549339124f3">AF_PRINT2</a>, <a class="el" href="util_8h.htm#a28227d4423016a0887c5460ac74a5c30">AF_PRINT1</a>)(__VA_ARGS__)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="benchmarks_2cg_8cpp-example.htm#a17">benchmarks/cg.cpp</a>, <a class="el" href="computer_vision_2fast_8cpp-example.htm#a16">computer_vision/fast.cpp</a>, <a class="el" href="computer_vision_2harris_8cpp-example.htm#a18">computer_vision/harris.cpp</a>, <a class="el" href="computer_vision_2susan_8cpp-example.htm#a16">computer_vision/susan.cpp</a>, <a class="el" href="financial_2heston_model_8cpp-example.htm#a13">financial/heston_model.cpp</a>, <a class="el" href="getting_started_2integer_8cpp-example.htm#a4">getting_started/integer.cpp</a>, <a class="el" href="getting_started_2rainfall_8cpp-example.htm#a7">getting_started/rainfall.cpp</a>, <a class="el" href="helloworld_2helloworld_8cpp-example.htm#a5">helloworld/helloworld.cpp</a>, <a class="el" href="lin_algebra_2cholesky_8cpp-example.htm#a6">lin_algebra/cholesky.cpp</a>, <a class="el" href="lin_algebra_2lu_8cpp-example.htm#a4">lin_algebra/lu.cpp</a>, <a class="el" href="lin_algebra_2qr_8cpp-example.htm#a4">lin_algebra/qr.cpp</a>, <a class="el" href="lin_algebra_2svd_8cpp-example.htm#a8">lin_algebra/svd.cpp</a>, <a class="el" href="machine_learning_2kmeans_8cpp-example.htm#a15">machine_learning/kmeans.cpp</a>, and <a class="el" href="unified_2basic_8cpp-example.htm#a3">unified/basic.cpp</a>.</dd>
</dl>
<p class="definition">Definition at line <a class="el" href="util_8h_source.htm#l00148">148</a> of file <a class="el" href="util_8h_source.htm">util.h</a>.</p>

</div>
</div>
<a id="a28227d4423016a0887c5460ac74a5c30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28227d4423016a0887c5460ac74a5c30">&#9670;&nbsp;</a></span>AF_PRINT1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define AF_PRINT1</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">exp</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__print__func__print.htm#ga66791369fe71d867943da676a15afe3a">af::print</a>(#exp, exp);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="util_8h_source.htm#l00143">143</a> of file <a class="el" href="util_8h_source.htm">util.h</a>.</p>

</div>
</div>
<a id="a95b1025954cc586886b61549339124f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95b1025954cc586886b61549339124f3">&#9670;&nbsp;</a></span>AF_PRINT2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define AF_PRINT2</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">exp, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">precision&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="group__print__func__print.htm#ga66791369fe71d867943da676a15afe3a">af::print</a>(#exp, exp, precision);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="util_8h_source.htm#l00144">144</a> of file <a class="el" href="util_8h_source.htm">util.h</a>.</p>

</div>
</div>
<a id="a67e58c7ab5c5cf7bc6e55fab9b4211bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67e58c7ab5c5cf7bc6e55fab9b4211bc">&#9670;&nbsp;</a></span>GET_PRINT_MACRO</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GET_PRINT_MACRO</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">_1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">_2, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">NAME, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;NAME</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="util_8h_source.htm#l00146">146</a> of file <a class="el" href="util_8h_source.htm">util.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a4d636905a73db8674f56d1469b13a4f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d636905a73db8674f56d1469b13a4f7">&#9670;&nbsp;</a></span>af_example_function()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_example_function </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#abcc1459f43f27934145c81ff13345798">af_someenum_t</a>&#160;</td>
          <td class="paramname"><em>param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a547633192d5c0b58a0f424daa63da93e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a547633192d5c0b58a0f424daa63da93e">&#9670;&nbsp;</a></span>af_get_revision()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> const char* af_get_revision </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the revision (commit) information of the library. </p>
<p>This returns a constant string from compile time and should not be freed by the user. </p>

</div>
</div>
<a id="a8b72cffd10a92a7a2ee7f52dadda5216"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b72cffd10a92a7a2ee7f52dadda5216">&#9670;&nbsp;</a></span>af_get_size_of()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_get_size_of </td>
          <td>(</td>
          <td class="paramtype">size_t *&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the size of the type represented by an af_dtype enum. </p>

</div>
</div>
<a id="a4e4a7714e3376c9bd8dfa61652eb4e28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e4a7714e3376c9bd8dfa61652eb4e28">&#9670;&nbsp;</a></span>af_get_version()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_get_version </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>major</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>minor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>patch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the version information of the library. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
