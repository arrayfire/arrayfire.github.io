<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: bitxor</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__arith__func__bitxor.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">bitxor<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__mathfunc__mat.htm">Mathematical functions</a> &raquo; <a class="el" href="group__logic__mat.htm">Logical operations</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Evaluate the bitwise XOR of two arrays.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga8188620da6b432998e55fdd1fad22100"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga8188620da6b432998e55fdd1fad22100">af_bitxor</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga8188620da6b432998e55fdd1fad22100"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface to evaluate the bitwise XOR of two arrays.  <br /></td></tr>
<tr class="separator:ga8188620da6b432998e55fdd1fad22100"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga97b6fcf0e5dbe6603668f7f72c2a7977"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga97b6fcf0e5dbe6603668f7f72c2a7977">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga97b6fcf0e5dbe6603668f7f72c2a7977"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <br /></td></tr>
<tr class="separator:ga97b6fcf0e5dbe6603668f7f72c2a7977"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab3eb61d3ed55b46f3b596a11127540c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gab3eb61d3ed55b46f3b596a11127540c4">operator^</a> (const bool &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gab3eb61d3ed55b46f3b596a11127540c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gab3eb61d3ed55b46f3b596a11127540c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga32310fc2ac0665526e064aaaf55409f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga32310fc2ac0665526e064aaaf55409f4">operator^</a> (const int &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga32310fc2ac0665526e064aaaf55409f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga32310fc2ac0665526e064aaaf55409f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d36603b7fb5b9e44cd0e52ed6259393"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga1d36603b7fb5b9e44cd0e52ed6259393">operator^</a> (const unsigned &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga1d36603b7fb5b9e44cd0e52ed6259393"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga1d36603b7fb5b9e44cd0e52ed6259393"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb354e15049cd21c9df3a5e20c113e5a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gadb354e15049cd21c9df3a5e20c113e5a">operator^</a> (const char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gadb354e15049cd21c9df3a5e20c113e5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gadb354e15049cd21c9df3a5e20c113e5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab1d843fa897e572a59db765ad99ec639"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gab1d843fa897e572a59db765ad99ec639">operator^</a> (const unsigned char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gab1d843fa897e572a59db765ad99ec639"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gab1d843fa897e572a59db765ad99ec639"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8dd512e7a0979d84b071a790360d7cde"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga8dd512e7a0979d84b071a790360d7cde">operator^</a> (const long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga8dd512e7a0979d84b071a790360d7cde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga8dd512e7a0979d84b071a790360d7cde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga753726d24eb4f0fe05b0d1eb949bf8d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga753726d24eb4f0fe05b0d1eb949bf8d0">operator^</a> (const unsigned long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga753726d24eb4f0fe05b0d1eb949bf8d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga753726d24eb4f0fe05b0d1eb949bf8d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga23d31a536551a9a37a0ed7d0bbbd540f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga23d31a536551a9a37a0ed7d0bbbd540f">operator^</a> (const long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga23d31a536551a9a37a0ed7d0bbbd540f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga23d31a536551a9a37a0ed7d0bbbd540f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf473e164788f9ae19bffaab0457d0d71"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gaf473e164788f9ae19bffaab0457d0d71">operator^</a> (const unsigned long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaf473e164788f9ae19bffaab0457d0d71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gaf473e164788f9ae19bffaab0457d0d71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11d14ef9c7d610edcc4839c0ced1dcaa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga11d14ef9c7d610edcc4839c0ced1dcaa">operator^</a> (const double &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga11d14ef9c7d610edcc4839c0ced1dcaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga11d14ef9c7d610edcc4839c0ced1dcaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga35080f1160a3d75e83cac0e9652a09b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga35080f1160a3d75e83cac0e9652a09b4">operator^</a> (const float &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga35080f1160a3d75e83cac0e9652a09b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga35080f1160a3d75e83cac0e9652a09b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga74323e9a1ae51b266361fb2f54c3216c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga74323e9a1ae51b266361fb2f54c3216c">operator^</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga74323e9a1ae51b266361fb2f54c3216c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga74323e9a1ae51b266361fb2f54c3216c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4172e6620b0423ade58236ce875843cf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga4172e6620b0423ade58236ce875843cf">operator^</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga4172e6620b0423ade58236ce875843cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga4172e6620b0423ade58236ce875843cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac7283a665873e3aedb3d44562a5778ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gac7283a665873e3aedb3d44562a5778ca">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gac7283a665873e3aedb3d44562a5778ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gac7283a665873e3aedb3d44562a5778ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe63020dc8738121481faa5857b16cb3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gafe63020dc8738121481faa5857b16cb3">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gafe63020dc8738121481faa5857b16cb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gafe63020dc8738121481faa5857b16cb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga259f2585b4b580ccb1d8dda60e27416b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga259f2585b4b580ccb1d8dda60e27416b">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga259f2585b4b580ccb1d8dda60e27416b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga259f2585b4b580ccb1d8dda60e27416b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab98eef689e30bf92274f9518c1c8ac02"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gab98eef689e30bf92274f9518c1c8ac02">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:gab98eef689e30bf92274f9518c1c8ac02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gab98eef689e30bf92274f9518c1c8ac02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8df0717e770c281de891f4c9a6321e87"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga8df0717e770c281de891f4c9a6321e87">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga8df0717e770c281de891f4c9a6321e87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga8df0717e770c281de891f4c9a6321e87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga371a9461c874715c7b8c43d5b17fdb13"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga371a9461c874715c7b8c43d5b17fdb13">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga371a9461c874715c7b8c43d5b17fdb13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga371a9461c874715c7b8c43d5b17fdb13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11d2a1b594d12cc618cff4a2564d814f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga11d2a1b594d12cc618cff4a2564d814f">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga11d2a1b594d12cc618cff4a2564d814f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga11d2a1b594d12cc618cff4a2564d814f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a775332255d2f22b3d99267fb344c09"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga6a775332255d2f22b3d99267fb344c09">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga6a775332255d2f22b3d99267fb344c09"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga6a775332255d2f22b3d99267fb344c09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4617ae1a7c5f1d451565df087313d44f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga4617ae1a7c5f1d451565df087313d44f">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga4617ae1a7c5f1d451565df087313d44f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga4617ae1a7c5f1d451565df087313d44f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00ece1d2d6d20e5217b4222e495fa5bf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga00ece1d2d6d20e5217b4222e495fa5bf">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga00ece1d2d6d20e5217b4222e495fa5bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga00ece1d2d6d20e5217b4222e495fa5bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga41fabec890eed78bcb477114c61a76ec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga41fabec890eed78bcb477114c61a76ec">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga41fabec890eed78bcb477114c61a76ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga41fabec890eed78bcb477114c61a76ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf397c833f75be66190ff681f271f47d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gaf397c833f75be66190ff681f271f47d0">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaf397c833f75be66190ff681f271f47d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gaf397c833f75be66190ff681f271f47d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac22e69aa8bbeb28aae6322f1ee391b83"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gac22e69aa8bbeb28aae6322f1ee391b83">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;rhs)</td></tr>
<tr class="separator:gac22e69aa8bbeb28aae6322f1ee391b83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadf142b17019e2deb14b7066733cf0cd3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gadf142b17019e2deb14b7066733cf0cd3">operator^</a> (const short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gadf142b17019e2deb14b7066733cf0cd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gadf142b17019e2deb14b7066733cf0cd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga35256817252b5b367af30b66a0cdd22d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga35256817252b5b367af30b66a0cdd22d">operator^</a> (const unsigned short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga35256817252b5b367af30b66a0cdd22d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga35256817252b5b367af30b66a0cdd22d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga171b2d0c155f8bc5af9bab3c6c7111e5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga171b2d0c155f8bc5af9bab3c6c7111e5">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga171b2d0c155f8bc5af9bab3c6c7111e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga171b2d0c155f8bc5af9bab3c6c7111e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c073f9808484513001a9a0a4b6ce9cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga9c073f9808484513001a9a0a4b6ce9cc">operator^</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga9c073f9808484513001a9a0a4b6ce9cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Evaluate the bitwise XOR of two arrays. </p>
<dl class="section note"><dt>Note</dt><dd>This function supports integer only.   </dd></dl>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga8188620da6b432998e55fdd1fad22100" name="ga8188620da6b432998e55fdd1fad22100"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8188620da6b432998e55fdd1fad22100">&#9670;&#160;</a></span>af_bitxor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_bitxor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>batch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface to evaluate the bitwise XOR of two arrays. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>result of <code>lhs</code> ^ <code>rhs</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>first input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>second input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">batch</td><td>specifies if operations need to be performed in batch mode </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
<a id="ga97b6fcf0e5dbe6603668f7f72c2a7977" name="ga97b6fcf0e5dbe6603668f7f72c2a7977"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga97b6fcf0e5dbe6603668f7f72c2a7977">&#9670;&#160;</a></span>operator^() <span class="overload">[1/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code> </dd></dl>

</div>
</div>
<a id="gac7283a665873e3aedb3d44562a5778ca" name="gac7283a665873e3aedb3d44562a5778ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac7283a665873e3aedb3d44562a5778ca">&#9670;&#160;</a></span>operator^() <span class="overload">[2/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gac22e69aa8bbeb28aae6322f1ee391b83" name="gac22e69aa8bbeb28aae6322f1ee391b83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac22e69aa8bbeb28aae6322f1ee391b83">&#9670;&#160;</a></span>operator^() <span class="overload">[3/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaf397c833f75be66190ff681f271f47d0" name="gaf397c833f75be66190ff681f271f47d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf397c833f75be66190ff681f271f47d0">&#9670;&#160;</a></span>operator^() <span class="overload">[4/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gab98eef689e30bf92274f9518c1c8ac02" name="gab98eef689e30bf92274f9518c1c8ac02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab98eef689e30bf92274f9518c1c8ac02">&#9670;&#160;</a></span>operator^() <span class="overload">[5/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga00ece1d2d6d20e5217b4222e495fa5bf" name="ga00ece1d2d6d20e5217b4222e495fa5bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga00ece1d2d6d20e5217b4222e495fa5bf">&#9670;&#160;</a></span>operator^() <span class="overload">[6/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga41fabec890eed78bcb477114c61a76ec" name="ga41fabec890eed78bcb477114c61a76ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga41fabec890eed78bcb477114c61a76ec">&#9670;&#160;</a></span>operator^() <span class="overload">[7/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gafe63020dc8738121481faa5857b16cb3" name="gafe63020dc8738121481faa5857b16cb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafe63020dc8738121481faa5857b16cb3">&#9670;&#160;</a></span>operator^() <span class="overload">[8/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga371a9461c874715c7b8c43d5b17fdb13" name="ga371a9461c874715c7b8c43d5b17fdb13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga371a9461c874715c7b8c43d5b17fdb13">&#9670;&#160;</a></span>operator^() <span class="overload">[9/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga6a775332255d2f22b3d99267fb344c09" name="ga6a775332255d2f22b3d99267fb344c09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6a775332255d2f22b3d99267fb344c09">&#9670;&#160;</a></span>operator^() <span class="overload">[10/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga171b2d0c155f8bc5af9bab3c6c7111e5" name="ga171b2d0c155f8bc5af9bab3c6c7111e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga171b2d0c155f8bc5af9bab3c6c7111e5">&#9670;&#160;</a></span>operator^() <span class="overload">[11/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga259f2585b4b580ccb1d8dda60e27416b" name="ga259f2585b4b580ccb1d8dda60e27416b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga259f2585b4b580ccb1d8dda60e27416b">&#9670;&#160;</a></span>operator^() <span class="overload">[12/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga8df0717e770c281de891f4c9a6321e87" name="ga8df0717e770c281de891f4c9a6321e87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8df0717e770c281de891f4c9a6321e87">&#9670;&#160;</a></span>operator^() <span class="overload">[13/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga11d2a1b594d12cc618cff4a2564d814f" name="ga11d2a1b594d12cc618cff4a2564d814f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga11d2a1b594d12cc618cff4a2564d814f">&#9670;&#160;</a></span>operator^() <span class="overload">[14/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga4617ae1a7c5f1d451565df087313d44f" name="ga4617ae1a7c5f1d451565df087313d44f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4617ae1a7c5f1d451565df087313d44f">&#9670;&#160;</a></span>operator^() <span class="overload">[15/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga9c073f9808484513001a9a0a4b6ce9cc" name="ga9c073f9808484513001a9a0a4b6ce9cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9c073f9808484513001a9a0a4b6ce9cc">&#9670;&#160;</a></span>operator^() <span class="overload">[16/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gab3eb61d3ed55b46f3b596a11127540c4" name="gab3eb61d3ed55b46f3b596a11127540c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab3eb61d3ed55b46f3b596a11127540c4">&#9670;&#160;</a></span>operator^() <span class="overload">[17/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga4172e6620b0423ade58236ce875843cf" name="ga4172e6620b0423ade58236ce875843cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4172e6620b0423ade58236ce875843cf">&#9670;&#160;</a></span>operator^() <span class="overload">[18/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga74323e9a1ae51b266361fb2f54c3216c" name="ga74323e9a1ae51b266361fb2f54c3216c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga74323e9a1ae51b266361fb2f54c3216c">&#9670;&#160;</a></span>operator^() <span class="overload">[19/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gadb354e15049cd21c9df3a5e20c113e5a" name="gadb354e15049cd21c9df3a5e20c113e5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadb354e15049cd21c9df3a5e20c113e5a">&#9670;&#160;</a></span>operator^() <span class="overload">[20/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga11d14ef9c7d610edcc4839c0ced1dcaa" name="ga11d14ef9c7d610edcc4839c0ced1dcaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga11d14ef9c7d610edcc4839c0ced1dcaa">&#9670;&#160;</a></span>operator^() <span class="overload">[21/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga35080f1160a3d75e83cac0e9652a09b4" name="ga35080f1160a3d75e83cac0e9652a09b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga35080f1160a3d75e83cac0e9652a09b4">&#9670;&#160;</a></span>operator^() <span class="overload">[22/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga32310fc2ac0665526e064aaaf55409f4" name="ga32310fc2ac0665526e064aaaf55409f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga32310fc2ac0665526e064aaaf55409f4">&#9670;&#160;</a></span>operator^() <span class="overload">[23/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga8dd512e7a0979d84b071a790360d7cde" name="ga8dd512e7a0979d84b071a790360d7cde"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8dd512e7a0979d84b071a790360d7cde">&#9670;&#160;</a></span>operator^() <span class="overload">[24/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga23d31a536551a9a37a0ed7d0bbbd540f" name="ga23d31a536551a9a37a0ed7d0bbbd540f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga23d31a536551a9a37a0ed7d0bbbd540f">&#9670;&#160;</a></span>operator^() <span class="overload">[25/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gadf142b17019e2deb14b7066733cf0cd3" name="gadf142b17019e2deb14b7066733cf0cd3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadf142b17019e2deb14b7066733cf0cd3">&#9670;&#160;</a></span>operator^() <span class="overload">[26/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga1d36603b7fb5b9e44cd0e52ed6259393" name="ga1d36603b7fb5b9e44cd0e52ed6259393"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d36603b7fb5b9e44cd0e52ed6259393">&#9670;&#160;</a></span>operator^() <span class="overload">[27/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gab1d843fa897e572a59db765ad99ec639" name="gab1d843fa897e572a59db765ad99ec639"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab1d843fa897e572a59db765ad99ec639">&#9670;&#160;</a></span>operator^() <span class="overload">[28/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga753726d24eb4f0fe05b0d1eb949bf8d0" name="ga753726d24eb4f0fe05b0d1eb949bf8d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga753726d24eb4f0fe05b0d1eb949bf8d0">&#9670;&#160;</a></span>operator^() <span class="overload">[29/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaf473e164788f9ae19bffaab0457d0d71" name="gaf473e164788f9ae19bffaab0457d0d71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf473e164788f9ae19bffaab0457d0d71">&#9670;&#160;</a></span>operator^() <span class="overload">[30/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga35256817252b5b367af30b66a0cdd22d" name="ga35256817252b5b367af30b66a0cdd22d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga35256817252b5b367af30b66a0cdd22d">&#9670;&#160;</a></span>operator^() <span class="overload">[31/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator^ </td>
          <td>(</td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an bitwise XOR operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a bitwise OR operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Tue Feb 14 2023 10:39:42 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.6 </li>
    </ul>
</div>
</body>
</html>
