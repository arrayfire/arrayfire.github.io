<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>moments</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__image__func__moments.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">moments<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">Complete List of ArrayFire Functions</a><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__image__mat.htm">Image Processing</a> &raquo;  &#124; <a class="el" href="group__moments__mat.htm">Image moments</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>The <a class="el" href="group__image__func__moments.htm#gad47cec0ccc29f245d9f565bddb4c3ad9">moments()</a> function allows for finding different properties of image regions.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gad47cec0ccc29f245d9f565bddb4c3ad9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__moments.htm#gad47cec0ccc29f245d9f565bddb4c3ad9">moments</a> (double *out, const array &amp;in, const momentType moment=<a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0a438c36c62e4d61011c3d2de0a20be0a7">AF_MOMENT_FIRST_ORDER</a>)</td></tr>
<tr class="memdesc:gad47cec0ccc29f245d9f565bddb4c3ad9"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for calculating an image moment.  <a href="group__image__func__moments.htm#gad47cec0ccc29f245d9f565bddb4c3ad9">More...</a><br /></td></tr>
<tr class="separator:gad47cec0ccc29f245d9f565bddb4c3ad9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae505b21ea70109a95c8ba6a5568a5d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__moments.htm#gaae505b21ea70109a95c8ba6a5568a5d6">moments</a> (const array &amp;in, const momentType moment=<a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0a438c36c62e4d61011c3d2de0a20be0a7">AF_MOMENT_FIRST_ORDER</a>)</td></tr>
<tr class="memdesc:gaae505b21ea70109a95c8ba6a5568a5d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for calculating image moments.  <a href="group__image__func__moments.htm#gaae505b21ea70109a95c8ba6a5568a5d6">More...</a><br /></td></tr>
<tr class="separator:gaae505b21ea70109a95c8ba6a5568a5d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga28bab821ee673f9a93882e486e8cd47d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__moments.htm#ga28bab821ee673f9a93882e486e8cd47d">af_moments</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0">af_moment_type</a> moment)</td></tr>
<tr class="memdesc:ga28bab821ee673f9a93882e486e8cd47d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for finding image moments.  <a href="#ga28bab821ee673f9a93882e486e8cd47d">More...</a><br /></td></tr>
<tr class="separator:ga28bab821ee673f9a93882e486e8cd47d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d0b4c037b137989f95131787882d9b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__moments.htm#ga3d0b4c037b137989f95131787882d9b4">af_moments_all</a> (double *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0">af_moment_type</a> moment)</td></tr>
<tr class="memdesc:ga3d0b4c037b137989f95131787882d9b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for calculating image moment(s) of a single image.  <a href="#ga3d0b4c037b137989f95131787882d9b4">More...</a><br /></td></tr>
<tr class="separator:ga3d0b4c037b137989f95131787882d9b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>The <a class="el" href="group__image__func__moments.htm#gad47cec0ccc29f245d9f565bddb4c3ad9">moments()</a> function allows for finding different properties of image regions. </p>
<p>Currently, ArrayFire calculates all first order moments. The moments are defined within the <a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0">af_moment_type</a> enum.</p>
<p>As the enum details, each moment can be returned individually or all first-order moments can be calculated at once. This can be done as follows: </p><div class="fragment"><div class="line"><a class="code" href="classaf_1_1array.htm">af::array</a> <a class="code" href="group__image__func__moments.htm#gad47cec0ccc29f245d9f565bddb4c3ad9">moments</a> = <a class="code" href="group__image__func__moments.htm#gad47cec0ccc29f245d9f565bddb4c3ad9">af::moments</a>(input_image, <a class="code" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0a438c36c62e4d61011c3d2de0a20be0a7">AF_MOMENT_FIRST_ORDER</a>);</div></div><!-- fragment --><p>Here is an example of how the shorthand versions might be used to find the area(or gray level sum) and center of mass of an image: </p><div class="fragment"><div class="line"><span class="keywordtype">double</span> m00, m01, m10;</div><div class="line"><a class="code" href="group__image__func__moments.htm#gad47cec0ccc29f245d9f565bddb4c3ad9">af::moments</a>(&amp;m00, input_image, <a class="code" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0aa6d97da74140533e2a8473c4a031b86a">AF_MOMENT_M00</a>);</div><div class="line"><a class="code" href="group__image__func__moments.htm#gad47cec0ccc29f245d9f565bddb4c3ad9">af::moments</a>(&amp;m01, input_image, <a class="code" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0a22227965df122f4357bc62b11c43f833">AF_MOMENT_M01</a>);</div><div class="line"><a class="code" href="group__image__func__moments.htm#gad47cec0ccc29f245d9f565bddb4c3ad9">af::moments</a>(&amp;m10, input_image, <a class="code" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0a1b1764a8da4b144a24a732d536e196aa">AF_MOMENT_M10</a>);</div><div class="line"></div><div class="line"><span class="keywordtype">double</span> area = m00;</div><div class="line"><span class="keywordtype">double</span> x_center = m10 / m00;</div><div class="line"><span class="keywordtype">double</span> y_center = m01 / m00;</div></div><!-- fragment --> <h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga28bab821ee673f9a93882e486e8cd47d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_moments </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0">af_moment_type</a>&#160;</td>
          <td class="paramname"><em>moment</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for finding image moments. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>is an array containing the calculated moments </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is an array of image(s) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">moment</td><td>is moment(s) to calculate </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>ref AF_SUCCESS if the moment calculation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a class="anchor" id="ga3d0b4c037b137989f95131787882d9b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_moments_all </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0">af_moment_type</a>&#160;</td>
          <td class="paramname"><em>moment</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for calculating image moment(s) of a single image. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>is a pointer to a pre-allocated array where the calculated moment(s) will be placed. User is responsible for ensuring enough space to hold all requested moments </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">moment</td><td>is moment(s) to calculate </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>ref AF_SUCCESS if the moment calculation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a class="anchor" id="gad47cec0ccc29f245d9f565bddb4c3ad9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void af::moments </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0">momentType</a>&#160;</td>
          <td class="paramname"><em>moment</em> = <code><a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0a438c36c62e4d61011c3d2de0a20be0a7">AF_MOMENT_FIRST_ORDER</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for calculating an image moment. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>is a pointer to a pre-allocated array where the calculated moment(s) will be placed. User is responsible for ensuring enough space to hold all requested moments </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">moment</td><td>is moment(s) to calculate </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaae505b21ea70109a95c8ba6a5568a5d6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::moments </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0">momentType</a>&#160;</td>
          <td class="paramname"><em>moment</em> = <code><a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0a438c36c62e4d61011c3d2de0a20be0a7">AF_MOMENT_FIRST_ORDER</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for calculating image moments. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>contains the input image(s) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">moment</td><td>is moment(s) to calculate </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>array containing the requested moment of each image </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
