<!-- HTML header for doxygen 1.9.3-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.3"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: approx1</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
  <!--<td id="projectalign">
   <div id="projectname">ArrayFire<span id="projectnumber">&#160;3.8.1</span>
   </div>
   <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>-->
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.3 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__signal__func__approx1.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">approx1<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__signal__mat.htm">Signal Processing</a> &raquo; <a class="el" href="group__approx__mat.htm">Interpolation and approximation</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Interpolation across a single dimension.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga76c2a517922af297d0d74bfe8a988d20"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#ga76c2a517922af297d0d74bfe8a988d20">approx1</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;pos, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a> method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a>, const float off_grid=0.0f)</td></tr>
<tr class="memdesc:ga76c2a517922af297d0d74bfe8a988d20"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for data interpolation on one-dimensional signals.  <a href="group__signal__func__approx1.htm#ga76c2a517922af297d0d74bfe8a988d20">More...</a><br /></td></tr>
<tr class="separator:ga76c2a517922af297d0d74bfe8a988d20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf8c2e28b335f758fc2db816d35d9b1ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#gaf8c2e28b335f758fc2db816d35d9b1ce">approx1</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;pos, const int interp_dim, const double idx_start, const double idx_step, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a> method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a>, const float off_grid=0.0f)</td></tr>
<tr class="memdesc:gaf8c2e28b335f758fc2db816d35d9b1ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for data interpolation on one-dimensional signals.  <a href="group__signal__func__approx1.htm#gaf8c2e28b335f758fc2db816d35d9b1ce">More...</a><br /></td></tr>
<tr class="separator:gaf8c2e28b335f758fc2db816d35d9b1ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga10c8bfceea06e7d5dfffecb893b0ccbd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#ga10c8bfceea06e7d5dfffecb893b0ccbd">af_approx1</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:ga10c8bfceea06e7d5dfffecb893b0ccbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for signals interpolation on one dimensional signals.  <a href="group__signal__func__approx1.htm#ga10c8bfceea06e7d5dfffecb893b0ccbd">More...</a><br /></td></tr>
<tr class="separator:ga10c8bfceea06e7d5dfffecb893b0ccbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga24be84d2725a52cbee03eeed2a8d78d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#ga24be84d2725a52cbee03eeed2a8d78d4">af_approx1_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:ga24be84d2725a52cbee03eeed2a8d78d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for the version of <a class="el" href="group__signal__func__approx1.htm#ga10c8bfceea06e7d5dfffecb893b0ccbd">af_approx1</a> that accepts a preallocated output array.  <a href="group__signal__func__approx1.htm#ga24be84d2725a52cbee03eeed2a8d78d4">More...</a><br /></td></tr>
<tr class="separator:ga24be84d2725a52cbee03eeed2a8d78d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga888bded6f0349efd16cc15b4d7687d3c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#ga888bded6f0349efd16cc15b4d7687d3c">af_approx1_uniform</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos, const int interp_dim, const double idx_start, const double idx_step, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:ga888bded6f0349efd16cc15b4d7687d3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for signals interpolation on one dimensional signals along specified dimension.  <a href="group__signal__func__approx1.htm#ga888bded6f0349efd16cc15b4d7687d3c">More...</a><br /></td></tr>
<tr class="separator:ga888bded6f0349efd16cc15b4d7687d3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac3a09153cadef70a5f0f5d414c682857"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#gac3a09153cadef70a5f0f5d414c682857">af_approx1_uniform_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos, const int interp_dim, const double idx_start, const double idx_step, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:gac3a09153cadef70a5f0f5d414c682857"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for the version of <a class="el" href="group__signal__func__approx1.htm#ga888bded6f0349efd16cc15b4d7687d3c">af_approx1_uniform</a> that accepts a preallocated output array.  <a href="group__signal__func__approx1.htm#gac3a09153cadef70a5f0f5d414c682857">More...</a><br /></td></tr>
<tr class="separator:gac3a09153cadef70a5f0f5d414c682857"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Interpolation across a single dimension. </p>
<p >Performs interpolation on data along a single dimension.</p>
<p >Interpolation is the process of computing for unknown values within a continuous range described by a discrete set of known values. These known values (<code>in</code>) correspond to a uniformly-spaced range of indices determined by start and step values, whose defaults are 0.0 and 1.0, respectively.</p>
<p >The positions array (<code>pos</code>) contains the interpolating points (indices whose values we want to find) along a given dimension. Values of <b>known indices</b> will be looked up in the input array, while values of <b>unknown indices</b> will be found via interpolation. Indices outside of the index range are not extrapolated. Instead, those values are set <code>off_grid</code>, whose default value is 0.0.</p>
<p >The following image illustrates a simple example (known values represented by blue dots, unknown values represented by red dots):</p>
<div class="image">
<img src="approx1_default_idx.png" alt=""/>
<div class="caption">
approx1() using idx_start=0.0, idx_step=1.0</div></div>
<p >Several interpolation methods are supported by approx1:</p>
<ul>
<li>Nearest neighbor interpolation - <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a></li>
<li>Linear interpolation (default) - <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a>, <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a401a7ec701983db1287cb51828cc9d2c">AF_INTERP_LINEAR_COSINE</a></li>
<li>Cubic interpolation - <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a148e6fceb975f667a21e3a8b39ac43ff">AF_INTERP_CUBIC</a>, <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a972a3dab2ab9bf78548e4c89cffb0e96">AF_INTERP_CUBIC_SPLINE</a></li>
<li>Lower interpolation - <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a2322b97c934f035d7d5fa52917632cf2">AF_INTERP_LOWER</a></li>
</ul>
<p >Unless specified, linear interpolation is performed by default. Refer to <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> for more information about ArrayFire's interpolation types. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga10c8bfceea06e7d5dfffecb893b0ccbd" name="ga10c8bfceea06e7d5dfffecb893b0ccbd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga10c8bfceea06e7d5dfffecb893b0ccbd">&#9670;&nbsp;</a></span>af_approx1()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_approx1 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>off_grid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for signals interpolation on one dimensional signals. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>is the interpolated array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the multidimensional input array. Values assumed to lie uniformly spaced indices in the range of <code>[0, n)</code>, where <code>n</code> is the number of elements in the array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>positions of the interpolation points along the first dimension. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation method to be used. The following types (defined in enum <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>) are supported: nearest neighbor, linear, and cubic. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">off_grid</td><td>is the default value for any indices outside the valid range of indices.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the interpolation operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="ga888bded6f0349efd16cc15b4d7687d3c" name="ga888bded6f0349efd16cc15b4d7687d3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga888bded6f0349efd16cc15b4d7687d3c">&#9670;&nbsp;</a></span>af_approx1_uniform()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_approx1_uniform </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>interp_dim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_step</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>off_grid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for signals interpolation on one dimensional signals along specified dimension. </p>
<p ><a class="el" href="group__signal__func__approx1.htm#ga888bded6f0349efd16cc15b4d7687d3c" title="C Interface for signals interpolation on one dimensional signals along specified dimension.">af_approx1_uniform()</a> accepts the dimension to perform the interpolation along the input. It also accepts start and step values which define the uniform range of corresponding indices.</p>
<p >The following image illustrates what the range of indices corresponding to the input values look like if <code>idx_start</code> and <code>idx_step</code> are set to an arbitrary value of 10,</p>
<div class="image">
<img src="approx1_arbitrary_idx.png" alt=""/>
<div class="caption">
approx1() using idx_start=10.0, idx_step=10.0</div></div>
<p >The blue dots represent indices whose values are known. The red dots represent indices whose values are unknown.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>the interpolated array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the multidimensional input array. Values lie on uniformly spaced indices determined by <code>idx_start</code> and <code>idx_step</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>positions of the interpolation points along <code>interp_dim</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">interp_dim</td><td>is the dimension to perform interpolation across. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_start</td><td>is the first index value along <code>interp_dim</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_step</td><td>is the uniform spacing value between subsequent indices along <code>interp_dim</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation method to be used. The following types (defined in enum <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>) are supported: nearest neighbor, linear, and cubic. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">off_grid</td><td>is the default value for any indices outside the valid range of indices.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the interpolation operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="gac3a09153cadef70a5f0f5d414c682857" name="gac3a09153cadef70a5f0f5d414c682857"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac3a09153cadef70a5f0f5d414c682857">&#9670;&nbsp;</a></span>af_approx1_uniform_v2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_approx1_uniform_v2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>interp_dim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_step</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>off_grid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for the version of <a class="el" href="group__signal__func__approx1.htm#ga888bded6f0349efd16cc15b4d7687d3c">af_approx1_uniform</a> that accepts a preallocated output array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">out</td><td>the interpolated array (can be preallocated). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the multidimensional input array. Values lie on uniformly spaced indices determined by <code>idx_start</code> and <code>idx_step</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>positions of the interpolation points along <code>interp_dim</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">interp_dim</td><td>is the dimension to perform interpolation across. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_start</td><td>is the first index value along <code>interp_dim</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_step</td><td>is the uniform spacing value between subsequent indices along <code>interp_dim</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation method to be used. The following types (defined in enum <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>) are supported: nearest neighbor, linear, and cubic. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">off_grid</td><td>is the default value for any indices outside the valid range of indices.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the interpolation operation is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>out</code> can either be a null or existing <code>af_array</code> object. If it is a sub-array of an existing <code>af_array</code>, only the corresponding portion of the <code>af_array</code> will be overwritten </dd>
<dd>
Passing an <code>af_array</code> to <code>out</code> that has not been initialized will cause undefined behavior. </dd></dl>

</div>
</div>
<a id="ga24be84d2725a52cbee03eeed2a8d78d4" name="ga24be84d2725a52cbee03eeed2a8d78d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga24be84d2725a52cbee03eeed2a8d78d4">&#9670;&nbsp;</a></span>af_approx1_v2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_approx1_v2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>off_grid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for the version of <a class="el" href="group__signal__func__approx1.htm#ga10c8bfceea06e7d5dfffecb893b0ccbd">af_approx1</a> that accepts a preallocated output array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">out</td><td>is the interpolated array (can be preallocated). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the multidimensional input array. Values assumed to lie uniformly spaced indices in the range of <code>[0, n)</code>, where <code>n</code> is the number of elements in the array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>positions of the interpolation points along the first dimension. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation method to be used. The following types (defined in enum <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>) are supported: nearest neighbor, linear, and cubic. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">off_grid</td><td>is the default value for any indices outside the valid range of indices.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the interpolation operation is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>out</code> can either be a null or existing <code>af_array</code> object. If it is a sub-array of an existing <code>af_array</code>, only the corresponding portion of the <code>af_array</code> will be overwritten </dd>
<dd>
Passing an <code>af_array</code> that has not been initialized to <code>out</code> will cause undefined behavior. </dd></dl>

</div>
</div>
<a id="gaf8c2e28b335f758fc2db816d35d9b1ce" name="gaf8c2e28b335f758fc2db816d35d9b1ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf8c2e28b335f758fc2db816d35d9b1ce">&#9670;&nbsp;</a></span>approx1() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::approx1 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>interp_dim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_step</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a>&#160;</td>
          <td class="paramname"><em>method</em> = <code><a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>off_grid</em> = <code>0.0f</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for data interpolation on one-dimensional signals. </p>
<p >The following version of <a class="el" href="group__signal__func__approx1.htm#ga76c2a517922af297d0d74bfe8a988d20" title="C++ Interface for data interpolation on one-dimensional signals.">approx1()</a> accepts the dimension to perform the interpolation along the input. It also accepts start and step values which define the uniform range of corresponding indices.</p>
<p >The following image illustrates what the range of indices corresponding to the input values look like if <code>idx_start</code> and <code>idx_step</code> are set to an arbitrary value of 10,</p>
<div class="image">
<img src="approx1_arbitrary_idx.png" alt=""/>
<div class="caption">
approx1() using idx_start=10.0, idx_step=10.0</div></div>
<p >The blue dots represent indices whose values are known. The red dots represent indices whose values are unknown.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the multidimensional input array. Values lie on uniformly spaced indices determined by <code>idx_start</code> and <code>idx_step</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>positions of the interpolation points along <code>interp_dim</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">interp_dim</td><td>is the dimension to perform interpolation across. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_start</td><td>is the first index value along <code>interp_dim</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_step</td><td>is the uniform spacing value between subsequent indices along <code>interp_dim</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation method to be used. The following types (defined in enum <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>) are supported: nearest neighbor, linear, and cubic. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">off_grid</td><td>is the default value for any indices outside the valid range of indices. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the interpolated array.</dd></dl>
<p>The code sample below demonstrates usage:</p>
<div class="fragment"><div class="line"> </div>
<div class="line">    <span class="keywordtype">float</span> input_vals[9] = {10.0f, 20.0f, 30.0f, 40.0f, 50.0f,</div>
<div class="line">                           60.0f, 70.0f, 80.0f, 90.0f};</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> in(dim4(3, 3), input_vals);</div>
<div class="line">    <span class="comment">// [3 3 1 1]</span></div>
<div class="line">    <span class="comment">//     10.0000    40.0000    70.0000</span></div>
<div class="line">    <span class="comment">//     20.0000    50.0000    80.0000</span></div>
<div class="line">    <span class="comment">//     30.0000    60.0000    90.0000</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Array of positions to be found along the interpolation</span></div>
<div class="line">    <span class="comment">// dimension, `interp_dim`.</span></div>
<div class="line">    <span class="keywordtype">float</span> pv[5] = {0.0f, 0.5, 1.0f, 1.5f, 2.0f};</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> pos(dim4(5, 1), pv);</div>
<div class="line">    <span class="comment">// [5 1 1 1]</span></div>
<div class="line">    <span class="comment">//     0.0000</span></div>
<div class="line">    <span class="comment">//     0.5000</span></div>
<div class="line">    <span class="comment">//     1.0000</span></div>
<div class="line">    <span class="comment">//     1.5000</span></div>
<div class="line">    <span class="comment">//     2.0000</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Define range of indices with which the input values will</span></div>
<div class="line">    <span class="comment">// correspond along the interpolation dimension.</span></div>
<div class="line">    <span class="keyword">const</span> <span class="keywordtype">double</span> idx_start = 0.0;</div>
<div class="line">    <span class="keyword">const</span> <span class="keywordtype">double</span> idx_step  = 1.0;</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Perform interpolation across dimension 0.</span></div>
<div class="line">    <span class="keywordtype">int</span> interp_dim         = 0;</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> col_major_interp = <a class="code hl_function" href="group__signal__func__approx1.htm#ga76c2a517922af297d0d74bfe8a988d20">approx1</a>(in, pos, interp_dim, idx_start, idx_step);</div>
<div class="line">    <span class="comment">// [5 3 1 1]</span></div>
<div class="line">    <span class="comment">//     10.0000    40.0000    70.0000</span></div>
<div class="line">    <span class="comment">//     15.0000    45.0000    75.0000</span></div>
<div class="line">    <span class="comment">//     20.0000    50.0000    80.0000</span></div>
<div class="line">    <span class="comment">//     25.0000    55.0000    85.0000</span></div>
<div class="line">    <span class="comment">//     30.0000    60.0000    90.0000</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Perform interpolation across dimension 1.</span></div>
<div class="line">    interp_dim = 1;</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> row_major_interp =</div>
<div class="line">        <a class="code hl_function" href="group__signal__func__approx1.htm#ga76c2a517922af297d0d74bfe8a988d20">approx1</a>(in, <a class="code hl_function" href="group__blas__func__transpose.htm#ga63a8e47707874b9d2ba9b9af0b159591">transpose</a>(pos), interp_dim, idx_start, idx_step);</div>
<div class="line">    <span class="comment">// [3 5 1 1]</span></div>
<div class="line">    <span class="comment">//     10.0000    25.0000    40.0000    55.0000    70.0000</span></div>
<div class="line">    <span class="comment">//     20.0000    35.0000    50.0000    65.0000    80.0000</span></div>
<div class="line">    <span class="comment">//     30.0000    45.0000    60.0000    75.0000    90.0000</span></div>
<div class="line"> </div>
<div class="ttc" id="agroup__blas__func__transpose_htm_ga63a8e47707874b9d2ba9b9af0b159591"><div class="ttname"><a href="group__blas__func__transpose.htm#ga63a8e47707874b9d2ba9b9af0b159591">af::transpose</a></div><div class="ttdeci">AFAPI array transpose(const array &amp;in, const bool conjugate=false)</div><div class="ttdoc">Transposes a matrix.</div></div>
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
<div class="ttc" id="agroup__signal__func__approx1_htm_ga76c2a517922af297d0d74bfe8a988d20"><div class="ttname"><a href="group__signal__func__approx1.htm#ga76c2a517922af297d0d74bfe8a988d20">af::approx1</a></div><div class="ttdeci">AFAPI array approx1(const array &amp;in, const array &amp;pos, const interpType method=AF_INTERP_LINEAR, const float off_grid=0.0f)</div><div class="ttdoc">C++ Interface for data interpolation on one-dimensional signals.</div></div>
</div><!-- fragment --> 
</div>
</div>
<a id="ga76c2a517922af297d0d74bfe8a988d20" name="ga76c2a517922af297d0d74bfe8a988d20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga76c2a517922af297d0d74bfe8a988d20">&#9670;&nbsp;</a></span>approx1() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::approx1 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a>&#160;</td>
          <td class="paramname"><em>method</em> = <code><a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>off_grid</em> = <code>0.0f</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for data interpolation on one-dimensional signals. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the multidimensional input array. Values assumed to lie uniformly spaced indices in the range of <code>[0, n)</code>, where <code>n</code> is the number of elements in the array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>positions of the interpolation points along the first dimension. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation method to be used. The following types (defined in enum <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>) are supported: nearest neighbor, linear, and cubic. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">off_grid</td><td>is the default value for any indices outside the valid range of indices. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the interpolated array.</dd></dl>
<p>The code sample below demonstrates <a class="el" href="group__signal__func__approx1.htm#ga76c2a517922af297d0d74bfe8a988d20" title="C++ Interface for data interpolation on one-dimensional signals.">approx1()</a>'s usage:</p>
<div class="fragment"><div class="line"> </div>
<div class="line">    <span class="comment">// Input data array.</span></div>
<div class="line">    <span class="keywordtype">float</span> input_vals[3] = {10.0f, 20.0f, 30.0f};</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> in(dim4(3, 1), input_vals);</div>
<div class="line">    <span class="comment">// [3 1 1 1]</span></div>
<div class="line">    <span class="comment">//     10.0000</span></div>
<div class="line">    <span class="comment">//     20.0000</span></div>
<div class="line">    <span class="comment">//     30.0000</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Array of positions to be found along the first dimension.</span></div>
<div class="line">    <span class="keywordtype">float</span> pv[5] = {0.0f, 0.5, 1.0f, 1.5, 2.0f};</div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> pos(dim4(5, 1), pv);</div>
<div class="line">    <span class="comment">// [5 1 1 1]</span></div>
<div class="line">    <span class="comment">//     0.0000</span></div>
<div class="line">    <span class="comment">//     0.5000</span></div>
<div class="line">    <span class="comment">//     1.0000</span></div>
<div class="line">    <span class="comment">//     1.5000</span></div>
<div class="line">    <span class="comment">//     2.0000</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Perform interpolation across dimension 0.</span></div>
<div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> interp = <a class="code hl_function" href="group__signal__func__approx1.htm#ga76c2a517922af297d0d74bfe8a988d20">approx1</a>(in, pos);</div>
<div class="line">    <span class="comment">// [5 1 1 1]</span></div>
<div class="line">    <span class="comment">//     10.0000</span></div>
<div class="line">    <span class="comment">//     15.0000</span></div>
<div class="line">    <span class="comment">//     20.0000</span></div>
<div class="line">    <span class="comment">//     25.0000</span></div>
<div class="line">    <span class="comment">//     30.0000</span></div>
<div class="line"> </div>
</div><!-- fragment --> 
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Thu Feb 24 2022 14:12:33 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.3 </li>
    </ul>
</div>
</body>
</html>
