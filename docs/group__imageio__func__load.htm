<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: loadImage</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__imageio__func__load.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">loadImage<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__io__mat.htm">Input and Output functions</a> &raquo; <a class="el" href="group__imageio__mat.htm">Reading and writing images</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Load an image from disk to an array.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gab8613b6ec9fda1269f7f766939b4344b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__load.htm#gab8613b6ec9fda1269f7f766939b4344b">loadimage</a> (const char *filename, const bool is_color=false)</td></tr>
<tr class="separator:gab8613b6ec9fda1269f7f766939b4344b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5a57870c43a81ec21fcdb7a11bef20d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__load.htm#ga5a57870c43a81ec21fcdb7a11bef20d4">loadImage</a> (const char *filename, const bool is_color=false)</td></tr>
<tr class="memdesc:ga5a57870c43a81ec21fcdb7a11bef20d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for loading an image.  <br /></td></tr>
<tr class="separator:ga5a57870c43a81ec21fcdb7a11bef20d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a0bf2412867519de8dcd3aa63d27a16"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__load.htm#ga6a0bf2412867519de8dcd3aa63d27a16">loadImageNative</a> (const char *filename)</td></tr>
<tr class="memdesc:ga6a0bf2412867519de8dcd3aa63d27a16"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for loading an image as its original type.  <br /></td></tr>
<tr class="separator:ga6a0bf2412867519de8dcd3aa63d27a16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c505bba21cd2d5aa277ad1e6f0ffb5f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__load.htm#ga9c505bba21cd2d5aa277ad1e6f0ffb5f">af_load_image</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const char *filename, const bool isColor)</td></tr>
<tr class="memdesc:ga9c505bba21cd2d5aa277ad1e6f0ffb5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for loading an image.  <br /></td></tr>
<tr class="separator:ga9c505bba21cd2d5aa277ad1e6f0ffb5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf8ccff53540bcc78ab814864f3c74ded"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__load.htm#gaf8ccff53540bcc78ab814864f3c74ded">af_load_image_native</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const char *filename)</td></tr>
<tr class="memdesc:gaf8ccff53540bcc78ab814864f3c74ded"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for loading an image as is original type.  <br /></td></tr>
<tr class="separator:gaf8ccff53540bcc78ab814864f3c74ded"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Load an image from disk to an array. </p>
<p>Supported formats include JPG, PNG, PPM and other formats supported by freeimage </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga9c505bba21cd2d5aa277ad1e6f0ffb5f" name="ga9c505bba21cd2d5aa277ad1e6f0ffb5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9c505bba21cd2d5aa277ad1e6f0ffb5f">&#9670;&#160;</a></span>af_load_image()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_load_image </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>isColor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for loading an image. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>is name of file to be loaded </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isColor</td><td>boolean denoting if the image should be loaded as 1 channel or 3 channel </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the color transformation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="gaf8ccff53540bcc78ab814864f3c74ded" name="gaf8ccff53540bcc78ab814864f3c74ded"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf8ccff53540bcc78ab814864f3c74ded">&#9670;&#160;</a></span>af_load_image_native()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_load_image_native </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for loading an image as is original type. </p>
<p>This load image function allows you to load images as u8, u16 or f32 depending on the type of input image as shown by the table below.</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Bits per Color (Gray/RGB/RGBA Bits Per Pixel)   </th><th class="markdownTableHeadNone">Array Type   </th><th class="markdownTableHeadNone">Range    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">8 ( 8/24/32 BPP)   </td><td class="markdownTableBodyNone">u8   </td><td class="markdownTableBodyNone">0 - 255    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">16 (16/48/64 BPP)   </td><td class="markdownTableBodyNone">u16   </td><td class="markdownTableBodyNone">0 - 65535    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">32 (32/96/128 BPP)   </td><td class="markdownTableBodyNone">f32   </td><td class="markdownTableBodyNone">0 - 1   </td></tr>
</table>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>contains them image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>is name of file to be loaded </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if successful </dd></dl>

</div>
</div>
<a id="gab8613b6ec9fda1269f7f766939b4344b" name="gab8613b6ec9fda1269f7f766939b4344b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab8613b6ec9fda1269f7f766939b4344b">&#9670;&#160;</a></span>loadimage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> loadimage </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>is_color</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>C++ Interface for loading an image.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>is name of file to be loaded </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_color</td><td>boolean denoting if the image should be loaded as 1 channel or 3 channel </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>image loaded as <a class="el" href="classaf_1_1array.htm">af::array()</a>   </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000004">Deprecated:</a></b></dt><dd>Use <a class="el" href="group__imageio__func__load.htm#ga5a57870c43a81ec21fcdb7a11bef20d4">loadImage</a> instead </dd></dl>

</div>
</div>
<a id="ga5a57870c43a81ec21fcdb7a11bef20d4" name="ga5a57870c43a81ec21fcdb7a11bef20d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5a57870c43a81ec21fcdb7a11bef20d4">&#9670;&#160;</a></span>loadImage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> loadImage </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>is_color</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for loading an image. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>is name of file to be loaded </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_color</td><td>boolean denoting if the image should be loaded as 1 channel or 3 channel </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>image loaded as <a class="el" href="classaf_1_1array.htm">af::array()</a> </dd></dl>

</div>
</div>
<a id="ga6a0bf2412867519de8dcd3aa63d27a16" name="ga6a0bf2412867519de8dcd3aa63d27a16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6a0bf2412867519de8dcd3aa63d27a16">&#9670;&#160;</a></span>loadImageNative()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> loadImageNative </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for loading an image as its original type. </p>
<p>This load image function allows you to load images as u8, u16 or f32 depending on the type of input image as shown by the table below.</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Bits per Color (Gray/RGB/RGBA Bits Per Pixel)   </th><th class="markdownTableHeadNone">Array Type   </th><th class="markdownTableHeadNone">Range    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">8 ( 8/24/32 BPP)   </td><td class="markdownTableBodyNone">u8   </td><td class="markdownTableBodyNone">0 - 255    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">16 (16/48/64 BPP)   </td><td class="markdownTableBodyNone">u16   </td><td class="markdownTableBodyNone">0 - 65535    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">32 (32/96/128 BPP)   </td><td class="markdownTableBodyNone">f32   </td><td class="markdownTableBodyNone">0 - 1   </td></tr>
</table>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>is name of file to be loaded </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>image loaded as <a class="el" href="classaf_1_1array.htm">af::array()</a> </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Tue Feb 14 2023 10:39:42 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.6 </li>
    </ul>
</div>
</body>
</html>
