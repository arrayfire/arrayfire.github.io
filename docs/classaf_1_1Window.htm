<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: Window Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classaf_1_1Window.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">Window Class Reference<div class="ingroups"><a class="el" href="group__graphics__func.htm">Graphics</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classaf_1_1Window.htm" title="Window object to render af::arrays.">Window</a> object to render af::arrays.  
 <a href="classaf_1_1Window.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="graphics_8h_source.htm">graphics.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ga004cf7aac21e18b5b5675f1b635c3734"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga004cf7aac21e18b5b5675f1b635c3734">Window</a> ()</td></tr>
<tr class="memdesc:ga004cf7aac21e18b5b5675f1b635c3734"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a window object with default width and height with title set to "ArrayFire".  <a href="group__gfx__func__window.htm#ga004cf7aac21e18b5b5675f1b635c3734">More...</a><br /></td></tr>
<tr class="separator:ga004cf7aac21e18b5b5675f1b635c3734"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada96f4fe8740ad0bf79388378f217c1f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#gada96f4fe8740ad0bf79388378f217c1f">Window</a> (const char *const title)</td></tr>
<tr class="memdesc:gada96f4fe8740ad0bf79388378f217c1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a window object with default width and height using the title provided by the user.  <a href="group__gfx__func__window.htm#gada96f4fe8740ad0bf79388378f217c1f">More...</a><br /></td></tr>
<tr class="separator:gada96f4fe8740ad0bf79388378f217c1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01089293d764f6706f9873c5f5221a8a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga01089293d764f6706f9873c5f5221a8a">Window</a> (const int width, const int height, const char *const title=&quot;ArrayFire&quot;)</td></tr>
<tr class="memdesc:ga01089293d764f6706f9873c5f5221a8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a window object using the parameters provided by the user.  <a href="group__gfx__func__window.htm#ga01089293d764f6706f9873c5f5221a8a">More...</a><br /></td></tr>
<tr class="separator:ga01089293d764f6706f9873c5f5221a8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5730679e2a1b3400d35493a41eb8ba92"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga5730679e2a1b3400d35493a41eb8ba92">Window</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wnd)</td></tr>
<tr class="memdesc:ga5730679e2a1b3400d35493a41eb8ba92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a window object with default width and height with title set to "ArrayFire".  <a href="group__gfx__func__window.htm#ga5730679e2a1b3400d35493a41eb8ba92">More...</a><br /></td></tr>
<tr class="separator:ga5730679e2a1b3400d35493a41eb8ba92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga254ab61160c1cd5eaa46cc0475bb7a06"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga254ab61160c1cd5eaa46cc0475bb7a06">~Window</a> ()</td></tr>
<tr class="memdesc:ga254ab61160c1cd5eaa46cc0475bb7a06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the window handle.  <a href="group__gfx__func__window.htm#ga254ab61160c1cd5eaa46cc0475bb7a06">More...</a><br /></td></tr>
<tr class="separator:ga254ab61160c1cd5eaa46cc0475bb7a06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0d2481ae9d5600854146e6661280c249"><td class="memItemLeft" align="right" valign="top"><a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga0d2481ae9d5600854146e6661280c249">get</a> () const</td></tr>
<tr class="separator:ga0d2481ae9d5600854146e6661280c249"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga91f824616f7dcac3265fff01a55990a9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga91f824616f7dcac3265fff01a55990a9">setPos</a> (const unsigned x, const unsigned y)</td></tr>
<tr class="memdesc:ga91f824616f7dcac3265fff01a55990a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the start position where the window will appear.  <a href="group__gfx__func__window.htm#ga91f824616f7dcac3265fff01a55990a9">More...</a><br /></td></tr>
<tr class="separator:ga91f824616f7dcac3265fff01a55990a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5982bd1cc411e471606311939b3c2721"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga5982bd1cc411e471606311939b3c2721">setTitle</a> (const char *const title)</td></tr>
<tr class="memdesc:ga5982bd1cc411e471606311939b3c2721"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the window title.  <a href="group__gfx__func__window.htm#ga5982bd1cc411e471606311939b3c2721">More...</a><br /></td></tr>
<tr class="separator:ga5982bd1cc411e471606311939b3c2721"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2958ea98540a67f41f2b0c34dc9067bd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga2958ea98540a67f41f2b0c34dc9067bd">setSize</a> (const unsigned w, const unsigned h)</td></tr>
<tr class="memdesc:ga2958ea98540a67f41f2b0c34dc9067bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the window size.  <a href="group__gfx__func__window.htm#ga2958ea98540a67f41f2b0c34dc9067bd">More...</a><br /></td></tr>
<tr class="separator:ga2958ea98540a67f41f2b0c34dc9067bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacbfc8c0729f789aacefaa78f6421ab14"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#gacbfc8c0729f789aacefaa78f6421ab14">setColorMap</a> (const <a class="el" href="defines_8h.htm#a553ceda8a1d8946efac3b08e642574ae">ColorMap</a> cmap)</td></tr>
<tr class="memdesc:gacbfc8c0729f789aacefaa78f6421ab14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the colormap to be used for subsequent rendering calls.  <a href="group__gfx__func__window.htm#gacbfc8c0729f789aacefaa78f6421ab14">More...</a><br /></td></tr>
<tr class="separator:gacbfc8c0729f789aacefaa78f6421ab14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed174450be6db4dfa5ef65b7baccbe57"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gaed174450be6db4dfa5ef65b7baccbe57">image</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const char *title=NULL)</td></tr>
<tr class="memdesc:gaed174450be6db4dfa5ef65b7baccbe57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input array as an image to the window.  <a href="group__gfx__func__draw.htm#gaed174450be6db4dfa5ef65b7baccbe57">More...</a><br /></td></tr>
<tr class="separator:gaed174450be6db4dfa5ef65b7baccbe57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e04ec129034e9fe769f3e6b14cd087f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga8e04ec129034e9fe769f3e6b14cd087f">plot3</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const char *title=NULL)</td></tr>
<tr class="memdesc:ga8e04ec129034e9fe769f3e6b14cd087f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input array as an 3d line plot to the window.  <a href="group__gfx__func__draw.htm#ga8e04ec129034e9fe769f3e6b14cd087f">More...</a><br /></td></tr>
<tr class="separator:ga8e04ec129034e9fe769f3e6b14cd087f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed2e96201d07c5f90e430632de5e26f1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gaed2e96201d07c5f90e430632de5e26f1">plot</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const char *const title=NULL)</td></tr>
<tr class="memdesc:gaed2e96201d07c5f90e430632de5e26f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 2D or 3D plot to the window.  <a href="group__gfx__func__draw.htm#gaed2e96201d07c5f90e430632de5e26f1">More...</a><br /></td></tr>
<tr class="separator:gaed2e96201d07c5f90e430632de5e26f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ce8ee73bdd3f4eec7efb0ae099e68b8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga1ce8ee73bdd3f4eec7efb0ae099e68b8">plot</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;X, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;Y, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;Z, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga1ce8ee73bdd3f4eec7efb0ae099e68b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 3D plot to the window.  <a href="group__gfx__func__draw.htm#ga1ce8ee73bdd3f4eec7efb0ae099e68b8">More...</a><br /></td></tr>
<tr class="separator:ga1ce8ee73bdd3f4eec7efb0ae099e68b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e01736df3d805a5488c609e2573818b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga8e01736df3d805a5488c609e2573818b">plot</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;X, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;Y, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga8e01736df3d805a5488c609e2573818b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 2D plot to the window.  <a href="group__gfx__func__draw.htm#ga8e01736df3d805a5488c609e2573818b">More...</a><br /></td></tr>
<tr class="separator:ga8e01736df3d805a5488c609e2573818b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf95ec84f9788b42fd443c9523792e4a4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gaf95ec84f9788b42fd443c9523792e4a4">scatter</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af::markerType</a> marker=<a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02bae2f4782ee6ad84f167153787eb5ce1bc">AF_MARKER_POINT</a>, const char *const title=NULL)</td></tr>
<tr class="memdesc:gaf95ec84f9788b42fd443c9523792e4a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 2D or 3D scatter-plot to the window.  <a href="group__gfx__func__draw.htm#gaf95ec84f9788b42fd443c9523792e4a4">More...</a><br /></td></tr>
<tr class="separator:gaf95ec84f9788b42fd443c9523792e4a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabfc0b01364885bdf3ce39c6205dc0287"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gabfc0b01364885bdf3ce39c6205dc0287">scatter</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;X, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;Y, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;Z, const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af::markerType</a> marker=<a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02bae2f4782ee6ad84f167153787eb5ce1bc">AF_MARKER_POINT</a>, const char *const title=NULL)</td></tr>
<tr class="memdesc:gabfc0b01364885bdf3ce39c6205dc0287"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 3D scatter-plot to the window.  <a href="group__gfx__func__draw.htm#gabfc0b01364885bdf3ce39c6205dc0287">More...</a><br /></td></tr>
<tr class="separator:gabfc0b01364885bdf3ce39c6205dc0287"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga73406db589e5090c051baae0af175df9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga73406db589e5090c051baae0af175df9">scatter</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;X, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;Y, const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af::markerType</a> marker=<a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02bae2f4782ee6ad84f167153787eb5ce1bc">AF_MARKER_POINT</a>, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga73406db589e5090c051baae0af175df9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 2D scatter-plot to the window.  <a href="group__gfx__func__draw.htm#ga73406db589e5090c051baae0af175df9">More...</a><br /></td></tr>
<tr class="separator:ga73406db589e5090c051baae0af175df9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3bbfbe1b60741a259d2146b3ab50ace3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga3bbfbe1b60741a259d2146b3ab50ace3">scatter3</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;P, const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af::markerType</a> marker=<a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02bae2f4782ee6ad84f167153787eb5ce1bc">AF_MARKER_POINT</a>, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga3bbfbe1b60741a259d2146b3ab50ace3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 3D scatter-plot to the window.  <a href="group__gfx__func__draw.htm#ga3bbfbe1b60741a259d2146b3ab50ace3">More...</a><br /></td></tr>
<tr class="separator:ga3bbfbe1b60741a259d2146b3ab50ace3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd7d94aa8f5fd37fee0662a4906a38d7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gafd7d94aa8f5fd37fee0662a4906a38d7">hist</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;X, const double minval, const double maxval, const char *const title=NULL)</td></tr>
<tr class="memdesc:gafd7d94aa8f5fd37fee0662a4906a38d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input array as a histogram to the window.  <a href="group__gfx__func__draw.htm#gafd7d94aa8f5fd37fee0662a4906a38d7">More...</a><br /></td></tr>
<tr class="separator:gafd7d94aa8f5fd37fee0662a4906a38d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1cdb8c3205d70d8feaddd8c30245393f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga1cdb8c3205d70d8feaddd8c30245393f">surface</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;S, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga1cdb8c3205d70d8feaddd8c30245393f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 3D surface plot to the window.  <a href="group__gfx__func__draw.htm#ga1cdb8c3205d70d8feaddd8c30245393f">More...</a><br /></td></tr>
<tr class="separator:ga1cdb8c3205d70d8feaddd8c30245393f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d09aa253b391ce82104352b743bb18c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga2d09aa253b391ce82104352b743bb18c">surface</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;xVals, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;yVals, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;S, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga2d09aa253b391ce82104352b743bb18c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 3D surface plot to the window.  <a href="group__gfx__func__draw.htm#ga2d09aa253b391ce82104352b743bb18c">More...</a><br /></td></tr>
<tr class="separator:ga2d09aa253b391ce82104352b743bb18c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d3904749d501e6ee607566dc3e1ecc8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga6d3904749d501e6ee607566dc3e1ecc8">vectorField</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;points, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;directions, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga6d3904749d501e6ee607566dc3e1ecc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 2D or 3D vector field plot to the window.  <a href="group__gfx__func__draw.htm#ga6d3904749d501e6ee607566dc3e1ecc8">More...</a><br /></td></tr>
<tr class="separator:ga6d3904749d501e6ee607566dc3e1ecc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga429ca1fb5b9caa6648b869d2f3686b8f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga429ca1fb5b9caa6648b869d2f3686b8f">vectorField</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;xPoints, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;yPoints, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;zPoints, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;xDirs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;yDirs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;zDirs, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga429ca1fb5b9caa6648b869d2f3686b8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 3D vector field plot to the window.  <a href="group__gfx__func__draw.htm#ga429ca1fb5b9caa6648b869d2f3686b8f">More...</a><br /></td></tr>
<tr class="separator:ga429ca1fb5b9caa6648b869d2f3686b8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2e113b2f1aef7426adc19dab2660133"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gaa2e113b2f1aef7426adc19dab2660133">vectorField</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;xPoints, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;yPoints, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;xDirs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;yDirs, const char *const title=NULL)</td></tr>
<tr class="memdesc:gaa2e113b2f1aef7426adc19dab2660133"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 2D vector field plot to the window.  <a href="group__gfx__func__draw.htm#gaa2e113b2f1aef7426adc19dab2660133">More...</a><br /></td></tr>
<tr class="separator:gaa2e113b2f1aef7426adc19dab2660133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1277bb007f5f2845eac09ead91ad36d2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga1277bb007f5f2845eac09ead91ad36d2">setAxesLimits</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;x, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;y, const bool exact=false)</td></tr>
<tr class="memdesc:ga1277bb007f5f2845eac09ead91ad36d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup the axes limits for a 2D histogram/plot/vector field.  <a href="group__gfx__func__window.htm#ga1277bb007f5f2845eac09ead91ad36d2">More...</a><br /></td></tr>
<tr class="separator:ga1277bb007f5f2845eac09ead91ad36d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc18fa771f03e10feeede73cf007706e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#gabc18fa771f03e10feeede73cf007706e">setAxesLimits</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;x, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;y, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;z, const bool exact=false)</td></tr>
<tr class="memdesc:gabc18fa771f03e10feeede73cf007706e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup the axes limits for a histogram/plot/surface/vector field.  <a href="group__gfx__func__window.htm#gabc18fa771f03e10feeede73cf007706e">More...</a><br /></td></tr>
<tr class="separator:gabc18fa771f03e10feeede73cf007706e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga554b0a23b70b411582c526db0cc2ebef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga554b0a23b70b411582c526db0cc2ebef">setAxesLimits</a> (const float xmin, const float xmax, const float ymin, const float ymax, const bool exact=false)</td></tr>
<tr class="memdesc:ga554b0a23b70b411582c526db0cc2ebef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup the axes limits for a histogram/plot/surface/vector field.  <a href="group__gfx__func__window.htm#ga554b0a23b70b411582c526db0cc2ebef">More...</a><br /></td></tr>
<tr class="separator:ga554b0a23b70b411582c526db0cc2ebef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0bb71025fa53918509cef04796e0d3c5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga0bb71025fa53918509cef04796e0d3c5">setAxesLimits</a> (const float xmin, const float xmax, const float ymin, const float ymax, const float zmin, const float zmax, const bool exact=false)</td></tr>
<tr class="memdesc:ga0bb71025fa53918509cef04796e0d3c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup the axes limits for a histogram/plot/surface/vector field.  <a href="group__gfx__func__window.htm#ga0bb71025fa53918509cef04796e0d3c5">More...</a><br /></td></tr>
<tr class="separator:ga0bb71025fa53918509cef04796e0d3c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafed13c75a1462e5b7cbf3a78033efd44"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#gafed13c75a1462e5b7cbf3a78033efd44">setAxesTitles</a> (const char *const xtitle=&quot;X-Axis&quot;, const char *const ytitle=&quot;Y-Axis&quot;, const char *const ztitle=NULL)</td></tr>
<tr class="memdesc:gafed13c75a1462e5b7cbf3a78033efd44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup the axes titles for a plot/surface/vector field.  <a href="group__gfx__func__window.htm#gafed13c75a1462e5b7cbf3a78033efd44">More...</a><br /></td></tr>
<tr class="separator:gafed13c75a1462e5b7cbf3a78033efd44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1af3692f3906c7e12f1abe49c2582a78"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga1af3692f3906c7e12f1abe49c2582a78">setAxesLabelFormat</a> (const char *const xformat=&quot;4.1%f&quot;, const char *const yformat=&quot;4.1%f&quot;, const char *const zformat=NULL)</td></tr>
<tr class="memdesc:ga1af3692f3906c7e12f1abe49c2582a78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup the axes label formats for charts.  <a href="group__gfx__func__window.htm#ga1af3692f3906c7e12f1abe49c2582a78">More...</a><br /></td></tr>
<tr class="separator:ga1af3692f3906c7e12f1abe49c2582a78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaecba84f1690934bbc397e8ac7e141268"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#gaecba84f1690934bbc397e8ac7e141268">grid</a> (const int rows, const int cols)</td></tr>
<tr class="memdesc:gaecba84f1690934bbc397e8ac7e141268"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup grid layout for multiview mode in a window.  <a href="group__gfx__func__window.htm#gaecba84f1690934bbc397e8ac7e141268">More...</a><br /></td></tr>
<tr class="separator:gaecba84f1690934bbc397e8ac7e141268"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b148f40a95444d5669406b918ad2f52"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga4b148f40a95444d5669406b918ad2f52">show</a> ()</td></tr>
<tr class="memdesc:ga4b148f40a95444d5669406b918ad2f52"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function swaps the background buffer to current view and polls for any key strokes while the window was in focus.  <a href="group__gfx__func__window.htm#ga4b148f40a95444d5669406b918ad2f52">More...</a><br /></td></tr>
<tr class="separator:ga4b148f40a95444d5669406b918ad2f52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga46143fd6de3be9ab9951f140d3ae8c2f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga46143fd6de3be9ab9951f140d3ae8c2f">close</a> ()</td></tr>
<tr class="memdesc:ga46143fd6de3be9ab9951f140d3ae8c2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if window is marked for close.  <a href="group__gfx__func__window.htm#ga46143fd6de3be9ab9951f140d3ae8c2f">More...</a><br /></td></tr>
<tr class="separator:ga46143fd6de3be9ab9951f140d3ae8c2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9ff8d74c894cf172a03900f61887524d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__window.htm#ga9ff8d74c894cf172a03900f61887524d">setVisibility</a> (const bool isVisible)</td></tr>
<tr class="memdesc:ga9ff8d74c894cf172a03900f61887524d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hide/Show the window.  <a href="group__gfx__func__window.htm#ga9ff8d74c894cf172a03900f61887524d">More...</a><br /></td></tr>
<tr class="separator:ga9ff8d74c894cf172a03900f61887524d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd5d73da3fbe5e17d4087741e27db1f5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1Window.htm">Window</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1Window.htm#abd5d73da3fbe5e17d4087741e27db1f5">operator()</a> (const int r, const int c)</td></tr>
<tr class="memdesc:abd5d73da3fbe5e17d4087741e27db1f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is used to keep track of which cell in the grid mode is being currently rendered.  <a href="classaf_1_1Window.htm#abd5d73da3fbe5e17d4087741e27db1f5">More...</a><br /></td></tr>
<tr class="separator:abd5d73da3fbe5e17d4087741e27db1f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classaf_1_1Window.htm" title="Window object to render af::arrays.">Window</a> object to render af::arrays. </p>
<p>Windows are not CopyConstructible or CopyAssignable. </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="computer_vision_2fast_8cpp-example.htm#_a13">computer_vision/fast.cpp</a>, <a class="el" href="computer_vision_2harris_8cpp-example.htm#_a0">computer_vision/harris.cpp</a>, <a class="el" href="computer_vision_2matching_8cpp-example.htm#_a10">computer_vision/matching.cpp</a>, <a class="el" href="computer_vision_2susan_8cpp-example.htm#_a13">computer_vision/susan.cpp</a>, <a class="el" href="graphics_2conway_8cpp-example.htm#_a1">graphics/conway.cpp</a>, <a class="el" href="graphics_2conway_pretty_8cpp-example.htm#_a1">graphics/conway_pretty.cpp</a>, <a class="el" href="graphics_2field_8cpp-example.htm#_a1">graphics/field.cpp</a>, <a class="el" href="graphics_2fractal_8cpp-example.htm#_a13">graphics/fractal.cpp</a>, <a class="el" href="graphics_2gravity_sim_8cpp-example.htm#_a20">graphics/gravity_sim.cpp</a>, <a class="el" href="graphics_2histogram_8cpp-example.htm#_a1">graphics/histogram.cpp</a>, <a class="el" href="graphics_2plot2d_8cpp-example.htm#_a1">graphics/plot2d.cpp</a>, <a class="el" href="graphics_2plot3_8cpp-example.htm#_a1">graphics/plot3.cpp</a>, <a class="el" href="graphics_2surface_8cpp-example.htm#_a1">graphics/surface.cpp</a>, <a class="el" href="image_processing_2adaptive_thresholding_8cpp-example.htm#_a16">image_processing/adaptive_thresholding.cpp</a>, <a class="el" href="image_processing_2binary_thresholding_8cpp-example.htm#_a21">image_processing/binary_thresholding.cpp</a>, <a class="el" href="image_processing_2brain_segmentation_8cpp-example.htm#_a14">image_processing/brain_segmentation.cpp</a>, <a class="el" href="image_processing_2confidence_connected_components_8cpp-example.htm#_a4">image_processing/confidence_connected_components.cpp</a>, <a class="el" href="image_processing_2deconvolution_8cpp-example.htm#_a5">image_processing/deconvolution.cpp</a>, <a class="el" href="image_processing_2edge_8cpp-example.htm#_a12">image_processing/edge.cpp</a>, <a class="el" href="image_processing_2filters_8cpp-example.htm#_a33">image_processing/filters.cpp</a>, <a class="el" href="image_processing_2gradient_diffusion_8cpp-example.htm#_a9">image_processing/gradient_diffusion.cpp</a>, <a class="el" href="image_processing_2image_demo_8cpp-example.htm#_a2">image_processing/image_demo.cpp</a>, <a class="el" href="image_processing_2image_editing_8cpp-example.htm#_a23">image_processing/image_editing.cpp</a>, <a class="el" href="image_processing_2morphing_8cpp-example.htm#_a12">image_processing/morphing.cpp</a>, <a class="el" href="image_processing_2optical_flow_8cpp-example.htm#_a5">image_processing/optical_flow.cpp</a>, <a class="el" href="image_processing_2pyramids_8cpp-example.htm#_a7">image_processing/pyramids.cpp</a>, <a class="el" href="machine_learning_2geneticalgorithm_8cpp-example.htm#_a15">machine_learning/geneticalgorithm.cpp</a>, <a class="el" href="machine_learning_2kmeans_8cpp-example.htm#_a15">machine_learning/kmeans.cpp</a>, and <a class="el" href="pde_2swe_8cpp-example.htm#_a0">pde/swe.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="graphics_8h_source.htm#l00037">37</a> of file <a class="el" href="graphics_8h_source.htm">graphics.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="abd5d73da3fbe5e17d4087741e27db1f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd5d73da3fbe5e17d4087741e27db1f5">&#9670;&nbsp;</a></span>operator()()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1Window.htm">Window</a>&amp; operator() </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>r</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This function is used to keep track of which cell in the grid mode is being currently rendered. </p>
<p>When a user does Window(0,0), we internally store the cell coordinates and return a reference to the very object that called upon this function. This reference can be used later to issue draw calls using rendering functions.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">r</td><td>is row identifier where current object has to be rendered </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">c</td><td>is column identifier where current object has to be rendered</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a reference to the object pointed by this to enable cascading this call with rendering functions. </dd></dl>

<p class="definition">Definition at line <a class="el" href="graphics_8h_source.htm#l00559">559</a> of file <a class="el" href="graphics_8h_source.htm">graphics.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                                                            {</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            _r = r; _c = c;</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="graphics_8h_source.htm">graphics.h (2020-02-12 15:19:32 -0500, (build fbea2aeb6))</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
