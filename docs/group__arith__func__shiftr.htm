<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: bitshiftr</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__arith__func__shiftr.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">bitshiftr<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__mathfunc__mat.htm">Mathematical functions</a> &raquo; <a class="el" href="group__arith__mat.htm">Arithmetic operations</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Shift the bits of integer arrays right.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga4c06b9977ecf96cdfc83b5dfd1ac4895"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga4c06b9977ecf96cdfc83b5dfd1ac4895">af_bitshiftr</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga4c06b9977ecf96cdfc83b5dfd1ac4895"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface to shift the bits of integer arrays right.  <br /></td></tr>
<tr class="separator:ga4c06b9977ecf96cdfc83b5dfd1ac4895"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad130d9b296937446da493f7f7f659178"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gad130d9b296937446da493f7f7f659178">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gad130d9b296937446da493f7f7f659178"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <br /></td></tr>
<tr class="separator:gad130d9b296937446da493f7f7f659178"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga68f103536d4b74debf634d94caebd903"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga68f103536d4b74debf634d94caebd903">operator&gt;&gt;</a> (const bool &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga68f103536d4b74debf634d94caebd903"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga68f103536d4b74debf634d94caebd903"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafcc5fcaa33f4cd9afe30fa9bce081227"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gafcc5fcaa33f4cd9afe30fa9bce081227">operator&gt;&gt;</a> (const int &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gafcc5fcaa33f4cd9afe30fa9bce081227"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gafcc5fcaa33f4cd9afe30fa9bce081227"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6279b94b795c9865aba061c27284fa5d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga6279b94b795c9865aba061c27284fa5d">operator&gt;&gt;</a> (const unsigned &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga6279b94b795c9865aba061c27284fa5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga6279b94b795c9865aba061c27284fa5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab558843d5e02e957c190af461bd8285f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gab558843d5e02e957c190af461bd8285f">operator&gt;&gt;</a> (const char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gab558843d5e02e957c190af461bd8285f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gab558843d5e02e957c190af461bd8285f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadd6871254a67a8a9d6134ca9cc5d26ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gadd6871254a67a8a9d6134ca9cc5d26ca">operator&gt;&gt;</a> (const unsigned char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gadd6871254a67a8a9d6134ca9cc5d26ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gadd6871254a67a8a9d6134ca9cc5d26ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga872d3eec13f4e33b7e9ac83043fcba80"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga872d3eec13f4e33b7e9ac83043fcba80">operator&gt;&gt;</a> (const long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga872d3eec13f4e33b7e9ac83043fcba80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga872d3eec13f4e33b7e9ac83043fcba80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5342ebb77f96853012e7ce62f158524a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga5342ebb77f96853012e7ce62f158524a">operator&gt;&gt;</a> (const unsigned long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga5342ebb77f96853012e7ce62f158524a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga5342ebb77f96853012e7ce62f158524a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7747e83389d79236bcae6a9aa085b816"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga7747e83389d79236bcae6a9aa085b816">operator&gt;&gt;</a> (const long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga7747e83389d79236bcae6a9aa085b816"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga7747e83389d79236bcae6a9aa085b816"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac33519bf30ca44e4428d41e8770bacf6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gac33519bf30ca44e4428d41e8770bacf6">operator&gt;&gt;</a> (const unsigned long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gac33519bf30ca44e4428d41e8770bacf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gac33519bf30ca44e4428d41e8770bacf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd3eb5502888fa9da503df7d8ad85f93"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gafd3eb5502888fa9da503df7d8ad85f93">operator&gt;&gt;</a> (const double &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gafd3eb5502888fa9da503df7d8ad85f93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gafd3eb5502888fa9da503df7d8ad85f93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga91840e37c2d5a71ec7d7612ac29bfb4b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga91840e37c2d5a71ec7d7612ac29bfb4b">operator&gt;&gt;</a> (const float &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga91840e37c2d5a71ec7d7612ac29bfb4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga91840e37c2d5a71ec7d7612ac29bfb4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga891695eec916a0f240d2e5f6823279a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga891695eec916a0f240d2e5f6823279a2">operator&gt;&gt;</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga891695eec916a0f240d2e5f6823279a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga891695eec916a0f240d2e5f6823279a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab83151425032d20dd5b1cd71368a3700"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gab83151425032d20dd5b1cd71368a3700">operator&gt;&gt;</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gab83151425032d20dd5b1cd71368a3700"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gab83151425032d20dd5b1cd71368a3700"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab78e73b2b769b5f2df86861e8aa49d1a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gab78e73b2b769b5f2df86861e8aa49d1a">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gab78e73b2b769b5f2df86861e8aa49d1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gab78e73b2b769b5f2df86861e8aa49d1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga395bea130ffa5ecffd78c2ef966afa18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga395bea130ffa5ecffd78c2ef966afa18">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga395bea130ffa5ecffd78c2ef966afa18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga395bea130ffa5ecffd78c2ef966afa18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa7a3e0403c8ede7420cf386bdff72e84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gaa7a3e0403c8ede7420cf386bdff72e84">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gaa7a3e0403c8ede7420cf386bdff72e84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gaa7a3e0403c8ede7420cf386bdff72e84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ab483e40abdd8cc2d2534fd93cd1e67"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga7ab483e40abdd8cc2d2534fd93cd1e67">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga7ab483e40abdd8cc2d2534fd93cd1e67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga7ab483e40abdd8cc2d2534fd93cd1e67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0cc34e39d43d0dd6e6d471343767e774"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga0cc34e39d43d0dd6e6d471343767e774">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga0cc34e39d43d0dd6e6d471343767e774"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga0cc34e39d43d0dd6e6d471343767e774"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2c8507f4f920ea778bbb01cdc74ea165"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga2c8507f4f920ea778bbb01cdc74ea165">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga2c8507f4f920ea778bbb01cdc74ea165"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga2c8507f4f920ea778bbb01cdc74ea165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f0df8a3f17c801777f67e5413e84b20"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga9f0df8a3f17c801777f67e5413e84b20">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga9f0df8a3f17c801777f67e5413e84b20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga9f0df8a3f17c801777f67e5413e84b20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga56cbf6c8943fbe065a0c1a493259176c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga56cbf6c8943fbe065a0c1a493259176c">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga56cbf6c8943fbe065a0c1a493259176c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga56cbf6c8943fbe065a0c1a493259176c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2eb72297b66d4ad0a16dbe196d5f8f4a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga2eb72297b66d4ad0a16dbe196d5f8f4a">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga2eb72297b66d4ad0a16dbe196d5f8f4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga2eb72297b66d4ad0a16dbe196d5f8f4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf6bc74243092c1c03eba8820e4e4919e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gaf6bc74243092c1c03eba8820e4e4919e">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:gaf6bc74243092c1c03eba8820e4e4919e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gaf6bc74243092c1c03eba8820e4e4919e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb8d3de265286ba5ba75834ba5a4e9a5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gadb8d3de265286ba5ba75834ba5a4e9a5">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gadb8d3de265286ba5ba75834ba5a4e9a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gadb8d3de265286ba5ba75834ba5a4e9a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga58f0fa022d6bf3c621f2982c480dbfca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga58f0fa022d6bf3c621f2982c480dbfca">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga58f0fa022d6bf3c621f2982c480dbfca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga58f0fa022d6bf3c621f2982c480dbfca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa90474e2828f9906f37dc7d91c9ed228"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gaa90474e2828f9906f37dc7d91c9ed228">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;rhs)</td></tr>
<tr class="separator:gaa90474e2828f9906f37dc7d91c9ed228"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga83405fd3664217f64ac944f12e14a11b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga83405fd3664217f64ac944f12e14a11b">operator&gt;&gt;</a> (const short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga83405fd3664217f64ac944f12e14a11b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga83405fd3664217f64ac944f12e14a11b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4814f3258b9462be476e0e60893d2048"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga4814f3258b9462be476e0e60893d2048">operator&gt;&gt;</a> (const unsigned short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga4814f3258b9462be476e0e60893d2048"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga4814f3258b9462be476e0e60893d2048"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac8ca4033985aad13a10775d271c334f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gac8ca4033985aad13a10775d271c334f8">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:gac8ca4033985aad13a10775d271c334f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gac8ca4033985aad13a10775d271c334f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf75c6f71b1e07ab034e52009c49e4c52"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gaf75c6f71b1e07ab034e52009c49e4c52">operator&gt;&gt;</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gaf75c6f71b1e07ab034e52009c49e4c52"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Shift the bits of integer arrays right. </p>
<dl class="section note"><dt>Note</dt><dd>This function supports integer only.   </dd></dl>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga4c06b9977ecf96cdfc83b5dfd1ac4895" name="ga4c06b9977ecf96cdfc83b5dfd1ac4895"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4c06b9977ecf96cdfc83b5dfd1ac4895">&#9670;&#160;</a></span>af_bitshiftr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_bitshiftr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>batch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface to shift the bits of integer arrays right. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>result of the right shift </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>values to shift </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>n bits to shift </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">batch</td><td>specifies if operations need to be performed in batch mode </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
<a id="gad130d9b296937446da493f7f7f659178" name="gad130d9b296937446da493f7f7f659178"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad130d9b296937446da493f7f7f659178">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[1/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code> </dd></dl>

</div>
</div>
<a id="gab78e73b2b769b5f2df86861e8aa49d1a" name="gab78e73b2b769b5f2df86861e8aa49d1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab78e73b2b769b5f2df86861e8aa49d1a">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[2/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaa90474e2828f9906f37dc7d91c9ed228" name="gaa90474e2828f9906f37dc7d91c9ed228"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa90474e2828f9906f37dc7d91c9ed228">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[3/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga58f0fa022d6bf3c621f2982c480dbfca" name="ga58f0fa022d6bf3c621f2982c480dbfca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga58f0fa022d6bf3c621f2982c480dbfca">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[4/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga7ab483e40abdd8cc2d2534fd93cd1e67" name="ga7ab483e40abdd8cc2d2534fd93cd1e67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7ab483e40abdd8cc2d2534fd93cd1e67">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[5/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaf6bc74243092c1c03eba8820e4e4919e" name="gaf6bc74243092c1c03eba8820e4e4919e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf6bc74243092c1c03eba8820e4e4919e">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[6/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gadb8d3de265286ba5ba75834ba5a4e9a5" name="gadb8d3de265286ba5ba75834ba5a4e9a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadb8d3de265286ba5ba75834ba5a4e9a5">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[7/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga395bea130ffa5ecffd78c2ef966afa18" name="ga395bea130ffa5ecffd78c2ef966afa18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga395bea130ffa5ecffd78c2ef966afa18">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[8/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga2c8507f4f920ea778bbb01cdc74ea165" name="ga2c8507f4f920ea778bbb01cdc74ea165"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2c8507f4f920ea778bbb01cdc74ea165">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[9/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga56cbf6c8943fbe065a0c1a493259176c" name="ga56cbf6c8943fbe065a0c1a493259176c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga56cbf6c8943fbe065a0c1a493259176c">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[10/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gac8ca4033985aad13a10775d271c334f8" name="gac8ca4033985aad13a10775d271c334f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac8ca4033985aad13a10775d271c334f8">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[11/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaa7a3e0403c8ede7420cf386bdff72e84" name="gaa7a3e0403c8ede7420cf386bdff72e84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa7a3e0403c8ede7420cf386bdff72e84">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[12/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga0cc34e39d43d0dd6e6d471343767e774" name="ga0cc34e39d43d0dd6e6d471343767e774"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0cc34e39d43d0dd6e6d471343767e774">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[13/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga9f0df8a3f17c801777f67e5413e84b20" name="ga9f0df8a3f17c801777f67e5413e84b20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9f0df8a3f17c801777f67e5413e84b20">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[14/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga2eb72297b66d4ad0a16dbe196d5f8f4a" name="ga2eb72297b66d4ad0a16dbe196d5f8f4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2eb72297b66d4ad0a16dbe196d5f8f4a">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[15/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaf75c6f71b1e07ab034e52009c49e4c52" name="gaf75c6f71b1e07ab034e52009c49e4c52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf75c6f71b1e07ab034e52009c49e4c52">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[16/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga68f103536d4b74debf634d94caebd903" name="ga68f103536d4b74debf634d94caebd903"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga68f103536d4b74debf634d94caebd903">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[17/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gab83151425032d20dd5b1cd71368a3700" name="gab83151425032d20dd5b1cd71368a3700"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab83151425032d20dd5b1cd71368a3700">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[18/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga891695eec916a0f240d2e5f6823279a2" name="ga891695eec916a0f240d2e5f6823279a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga891695eec916a0f240d2e5f6823279a2">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[19/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gab558843d5e02e957c190af461bd8285f" name="gab558843d5e02e957c190af461bd8285f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab558843d5e02e957c190af461bd8285f">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[20/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gafd3eb5502888fa9da503df7d8ad85f93" name="gafd3eb5502888fa9da503df7d8ad85f93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafd3eb5502888fa9da503df7d8ad85f93">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[21/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga91840e37c2d5a71ec7d7612ac29bfb4b" name="ga91840e37c2d5a71ec7d7612ac29bfb4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga91840e37c2d5a71ec7d7612ac29bfb4b">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[22/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gafcc5fcaa33f4cd9afe30fa9bce081227" name="gafcc5fcaa33f4cd9afe30fa9bce081227"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafcc5fcaa33f4cd9afe30fa9bce081227">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[23/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga872d3eec13f4e33b7e9ac83043fcba80" name="ga872d3eec13f4e33b7e9ac83043fcba80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga872d3eec13f4e33b7e9ac83043fcba80">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[24/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga7747e83389d79236bcae6a9aa085b816" name="ga7747e83389d79236bcae6a9aa085b816"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7747e83389d79236bcae6a9aa085b816">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[25/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga83405fd3664217f64ac944f12e14a11b" name="ga83405fd3664217f64ac944f12e14a11b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga83405fd3664217f64ac944f12e14a11b">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[26/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga6279b94b795c9865aba061c27284fa5d" name="ga6279b94b795c9865aba061c27284fa5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6279b94b795c9865aba061c27284fa5d">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[27/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gadd6871254a67a8a9d6134ca9cc5d26ca" name="gadd6871254a67a8a9d6134ca9cc5d26ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadd6871254a67a8a9d6134ca9cc5d26ca">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[28/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga5342ebb77f96853012e7ce62f158524a" name="ga5342ebb77f96853012e7ce62f158524a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5342ebb77f96853012e7ce62f158524a">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[29/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gac33519bf30ca44e4428d41e8770bacf6" name="gac33519bf30ca44e4428d41e8770bacf6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac33519bf30ca44e4428d41e8770bacf6">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[30/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga4814f3258b9462be476e0e60893d2048" name="ga4814f3258b9462be476e0e60893d2048"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4814f3258b9462be476e0e60893d2048">&#9670;&#160;</a></span>operator&gt;&gt;() <span class="overload">[31/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an right shift operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array with a right shift operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Tue Feb 14 2023 10:39:42 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.6 </li>
    </ul>
</div>
</body>
</html>
