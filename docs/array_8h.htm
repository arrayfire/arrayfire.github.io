<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: array.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('array_8h.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a>  </div>
  <div class="headertitle"><div class="title">array.h File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;af/compilers.h&gt;</code><br />
<code>#include &lt;<a class="el" href="defines_8h_source.htm">af/defines.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="device_8h_source.htm">af/device.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="dim4_8hpp_source.htm">af/dim4.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="exception_8h_source.htm">af/exception.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="index_8h_source.htm">af/index.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="seq_8h_source.htm">af/seq.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="util_8h_source.htm">af/util.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="traits_8hpp_source.htm">af/traits.hpp</a>&gt;</code><br />
</div>
<p><a href="array_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1array.htm">array</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A multi dimensional data container.  <a href="classaf_1_1array.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Intermediate data class.  <a href="classaf_1_1array_1_1array__proxy.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceaf"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm">af</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="define-members" name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a96147e5f8a7b6037405defdd7e190dd8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(OP)</td></tr>
<tr class="separator:a96147e5f8a7b6037405defdd7e190dd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96147e5f8a7b6037405defdd7e190dd8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(OP)</td></tr>
<tr class="separator:a96147e5f8a7b6037405defdd7e190dd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3024a14587b6373c2e2a3fe65f2b8b12"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="array_8h.htm#a3024a14587b6373c2e2a3fe65f2b8b12">ASSIGN_</a>(OP2)</td></tr>
<tr class="separator:a3024a14587b6373c2e2a3fe65f2b8b12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96147e5f8a7b6037405defdd7e190dd8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(OP)</td></tr>
<tr class="separator:a96147e5f8a7b6037405defdd7e190dd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c8e67e88a0a2815d1253276803deef4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="array_8h.htm#a2c8e67e88a0a2815d1253276803deef4">BIN_OP_</a>(OP)</td></tr>
<tr class="separator:a2c8e67e88a0a2815d1253276803deef4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d8256045dabd15534382126773e729d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(OP)</td></tr>
<tr class="separator:a6d8256045dabd15534382126773e729d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga918dd1bfad5bcfdc8b3338a2b3c54d07"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga918dd1bfad5bcfdc8b3338a2b3c54d07">operator+</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga918dd1bfad5bcfdc8b3338a2b3c54d07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga918dd1bfad5bcfdc8b3338a2b3c54d07">More...</a><br /></td></tr>
<tr class="separator:ga918dd1bfad5bcfdc8b3338a2b3c54d07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ef554e3106f1341927510d064486978"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga4ef554e3106f1341927510d064486978">operator+</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4ef554e3106f1341927510d064486978"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga4ef554e3106f1341927510d064486978">More...</a><br /></td></tr>
<tr class="separator:ga4ef554e3106f1341927510d064486978"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga16e7d61b2dd96634bca838223c6a5b1d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga16e7d61b2dd96634bca838223c6a5b1d">operator+</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga16e7d61b2dd96634bca838223c6a5b1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga16e7d61b2dd96634bca838223c6a5b1d">More...</a><br /></td></tr>
<tr class="separator:ga16e7d61b2dd96634bca838223c6a5b1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac43d865f183331949951ca922f74f0bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gac43d865f183331949951ca922f74f0bb">operator+</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac43d865f183331949951ca922f74f0bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#gac43d865f183331949951ca922f74f0bb">More...</a><br /></td></tr>
<tr class="separator:gac43d865f183331949951ca922f74f0bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf61afba9e7d3e2a751c5fc8d1f147fc9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gaf61afba9e7d3e2a751c5fc8d1f147fc9">operator+</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf61afba9e7d3e2a751c5fc8d1f147fc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#gaf61afba9e7d3e2a751c5fc8d1f147fc9">More...</a><br /></td></tr>
<tr class="separator:gaf61afba9e7d3e2a751c5fc8d1f147fc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6c04e78bfc3d8ce06a01c397ce3bba4d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga6c04e78bfc3d8ce06a01c397ce3bba4d">operator+</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6c04e78bfc3d8ce06a01c397ce3bba4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga6c04e78bfc3d8ce06a01c397ce3bba4d">More...</a><br /></td></tr>
<tr class="separator:ga6c04e78bfc3d8ce06a01c397ce3bba4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea510a20f5953dcc6d73f7ccd9a8ef26"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gaea510a20f5953dcc6d73f7ccd9a8ef26">operator+</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaea510a20f5953dcc6d73f7ccd9a8ef26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#gaea510a20f5953dcc6d73f7ccd9a8ef26">More...</a><br /></td></tr>
<tr class="separator:gaea510a20f5953dcc6d73f7ccd9a8ef26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga704cbd47ea184532710c160be1ca32d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga704cbd47ea184532710c160be1ca32d6">operator+</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga704cbd47ea184532710c160be1ca32d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga704cbd47ea184532710c160be1ca32d6">More...</a><br /></td></tr>
<tr class="separator:ga704cbd47ea184532710c160be1ca32d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5e31e354d31be58af68065a55fdc47c9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga5e31e354d31be58af68065a55fdc47c9">operator+</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5e31e354d31be58af68065a55fdc47c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga5e31e354d31be58af68065a55fdc47c9">More...</a><br /></td></tr>
<tr class="separator:ga5e31e354d31be58af68065a55fdc47c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaee1bf845c9c3cb938b34010442e3f76"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gaaee1bf845c9c3cb938b34010442e3f76">operator+</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaaee1bf845c9c3cb938b34010442e3f76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#gaaee1bf845c9c3cb938b34010442e3f76">More...</a><br /></td></tr>
<tr class="separator:gaaee1bf845c9c3cb938b34010442e3f76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a0b880f9891da4bc5c4a126a4443253"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga6a0b880f9891da4bc5c4a126a4443253">operator+</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6a0b880f9891da4bc5c4a126a4443253"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga6a0b880f9891da4bc5c4a126a4443253">More...</a><br /></td></tr>
<tr class="separator:ga6a0b880f9891da4bc5c4a126a4443253"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga13c0420414660e280845460a827f104c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga13c0420414660e280845460a827f104c">operator+</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga13c0420414660e280845460a827f104c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga13c0420414660e280845460a827f104c">More...</a><br /></td></tr>
<tr class="separator:ga13c0420414660e280845460a827f104c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f370203092da730c52fb7d183385f32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga2f370203092da730c52fb7d183385f32">operator+</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2f370203092da730c52fb7d183385f32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga2f370203092da730c52fb7d183385f32">More...</a><br /></td></tr>
<tr class="separator:ga2f370203092da730c52fb7d183385f32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaec6769e590ee9faf5013aeeb2542da10"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gaec6769e590ee9faf5013aeeb2542da10">operator+</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaec6769e590ee9faf5013aeeb2542da10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#gaec6769e590ee9faf5013aeeb2542da10">More...</a><br /></td></tr>
<tr class="separator:gaec6769e590ee9faf5013aeeb2542da10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga777e8d2bb37a16d7d07ba0fb231324c7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga777e8d2bb37a16d7d07ba0fb231324c7">operator+</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga777e8d2bb37a16d7d07ba0fb231324c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga777e8d2bb37a16d7d07ba0fb231324c7">More...</a><br /></td></tr>
<tr class="separator:ga777e8d2bb37a16d7d07ba0fb231324c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b183c910389bee0ef962be8fccfe4d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga9b183c910389bee0ef962be8fccfe4d8">operator+</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga9b183c910389bee0ef962be8fccfe4d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga9b183c910389bee0ef962be8fccfe4d8">More...</a><br /></td></tr>
<tr class="separator:ga9b183c910389bee0ef962be8fccfe4d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7719b59a4a0fb668c75d61c4fe2bee5a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga7719b59a4a0fb668c75d61c4fe2bee5a">operator+</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga7719b59a4a0fb668c75d61c4fe2bee5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga7719b59a4a0fb668c75d61c4fe2bee5a">More...</a><br /></td></tr>
<tr class="separator:ga7719b59a4a0fb668c75d61c4fe2bee5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67ba2d3c7b7e82f32f2970a77906710c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga67ba2d3c7b7e82f32f2970a77906710c">operator+</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga67ba2d3c7b7e82f32f2970a77906710c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga67ba2d3c7b7e82f32f2970a77906710c">More...</a><br /></td></tr>
<tr class="separator:ga67ba2d3c7b7e82f32f2970a77906710c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaace723b2ec3ea1152c10d2d5a8af7a18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gaace723b2ec3ea1152c10d2d5a8af7a18">operator+</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:gaace723b2ec3ea1152c10d2d5a8af7a18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#gaace723b2ec3ea1152c10d2d5a8af7a18">More...</a><br /></td></tr>
<tr class="separator:gaace723b2ec3ea1152c10d2d5a8af7a18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga32d61b7c113ac576d06cbf0320465bfd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga32d61b7c113ac576d06cbf0320465bfd">operator+</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga32d61b7c113ac576d06cbf0320465bfd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga32d61b7c113ac576d06cbf0320465bfd">More...</a><br /></td></tr>
<tr class="separator:ga32d61b7c113ac576d06cbf0320465bfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab94aeca146295c5561439ad9c5e1d5c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gab94aeca146295c5561439ad9c5e1d5c3">operator+</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:gab94aeca146295c5561439ad9c5e1d5c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#gab94aeca146295c5561439ad9c5e1d5c3">More...</a><br /></td></tr>
<tr class="separator:gab94aeca146295c5561439ad9c5e1d5c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga45d11a1abc78a9ecbacb866a1c390a7c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga45d11a1abc78a9ecbacb866a1c390a7c">operator+</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga45d11a1abc78a9ecbacb866a1c390a7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga45d11a1abc78a9ecbacb866a1c390a7c">More...</a><br /></td></tr>
<tr class="separator:ga45d11a1abc78a9ecbacb866a1c390a7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabeeeeb9d29d667019d7dd43c5580747c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gabeeeeb9d29d667019d7dd43c5580747c">operator+</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gabeeeeb9d29d667019d7dd43c5580747c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#gabeeeeb9d29d667019d7dd43c5580747c">More...</a><br /></td></tr>
<tr class="separator:gabeeeeb9d29d667019d7dd43c5580747c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5cb37831bc2d611ab2cf44f73cde6d91"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga5cb37831bc2d611ab2cf44f73cde6d91">operator+</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga5cb37831bc2d611ab2cf44f73cde6d91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga5cb37831bc2d611ab2cf44f73cde6d91">More...</a><br /></td></tr>
<tr class="separator:ga5cb37831bc2d611ab2cf44f73cde6d91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf5fff47dfe785b7b00b9c569efe740d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gaf5fff47dfe785b7b00b9c569efe740d9">operator+</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gaf5fff47dfe785b7b00b9c569efe740d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#gaf5fff47dfe785b7b00b9c569efe740d9">More...</a><br /></td></tr>
<tr class="separator:gaf5fff47dfe785b7b00b9c569efe740d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa43f69d1991897393b5f7f61374b2db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gaaa43f69d1991897393b5f7f61374b2db">operator+</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gaaa43f69d1991897393b5f7f61374b2db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#gaaa43f69d1991897393b5f7f61374b2db">More...</a><br /></td></tr>
<tr class="separator:gaaa43f69d1991897393b5f7f61374b2db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacf3f9cf109c39e00da2974ad34a419a9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gacf3f9cf109c39e00da2974ad34a419a9">operator+</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gacf3f9cf109c39e00da2974ad34a419a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga256d973767c56a8f3f64e56e785a28c1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga256d973767c56a8f3f64e56e785a28c1">operator+</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga256d973767c56a8f3f64e56e785a28c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga256d973767c56a8f3f64e56e785a28c1">More...</a><br /></td></tr>
<tr class="separator:ga256d973767c56a8f3f64e56e785a28c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb35c8e5b03f4cc84f5aaf099c99fe26"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gadb35c8e5b03f4cc84f5aaf099c99fe26">operator+</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gadb35c8e5b03f4cc84f5aaf099c99fe26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#gadb35c8e5b03f4cc84f5aaf099c99fe26">More...</a><br /></td></tr>
<tr class="separator:gadb35c8e5b03f4cc84f5aaf099c99fe26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga76c232349043133cb15140df8bcde636"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga76c232349043133cb15140df8bcde636">operator+</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga76c232349043133cb15140df8bcde636"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.   <a href="group__arith__func__add.htm#ga76c232349043133cb15140df8bcde636">More...</a><br /></td></tr>
<tr class="separator:ga76c232349043133cb15140df8bcde636"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaff03d1473446909c2c43391aeceefcc4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gaff03d1473446909c2c43391aeceefcc4">operator+</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gaff03d1473446909c2c43391aeceefcc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga4faecd4f2d07671aeefaa9d6d5d90d3f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga4faecd4f2d07671aeefaa9d6d5d90d3f">operator-</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4faecd4f2d07671aeefaa9d6d5d90d3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga4faecd4f2d07671aeefaa9d6d5d90d3f">More...</a><br /></td></tr>
<tr class="separator:ga4faecd4f2d07671aeefaa9d6d5d90d3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9835b1289128a5b12e37c0c56a232060"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga9835b1289128a5b12e37c0c56a232060">operator-</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9835b1289128a5b12e37c0c56a232060"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga9835b1289128a5b12e37c0c56a232060">More...</a><br /></td></tr>
<tr class="separator:ga9835b1289128a5b12e37c0c56a232060"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac6a11e1e58a7597cd1b4b1108db025ec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gac6a11e1e58a7597cd1b4b1108db025ec">operator-</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac6a11e1e58a7597cd1b4b1108db025ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#gac6a11e1e58a7597cd1b4b1108db025ec">More...</a><br /></td></tr>
<tr class="separator:gac6a11e1e58a7597cd1b4b1108db025ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad84975138edf312c00e859939a32a60c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gad84975138edf312c00e859939a32a60c">operator-</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad84975138edf312c00e859939a32a60c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#gad84975138edf312c00e859939a32a60c">More...</a><br /></td></tr>
<tr class="separator:gad84975138edf312c00e859939a32a60c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab544b2e14e9b0402f6e42b9bf2438acc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gab544b2e14e9b0402f6e42b9bf2438acc">operator-</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab544b2e14e9b0402f6e42b9bf2438acc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#gab544b2e14e9b0402f6e42b9bf2438acc">More...</a><br /></td></tr>
<tr class="separator:gab544b2e14e9b0402f6e42b9bf2438acc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c557aff48312c37b62c9a4234d5cb0d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga8c557aff48312c37b62c9a4234d5cb0d">operator-</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8c557aff48312c37b62c9a4234d5cb0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga8c557aff48312c37b62c9a4234d5cb0d">More...</a><br /></td></tr>
<tr class="separator:ga8c557aff48312c37b62c9a4234d5cb0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6448a1872c20e26c693194f9c092c3c1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga6448a1872c20e26c693194f9c092c3c1">operator-</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6448a1872c20e26c693194f9c092c3c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga6448a1872c20e26c693194f9c092c3c1">More...</a><br /></td></tr>
<tr class="separator:ga6448a1872c20e26c693194f9c092c3c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad9e69afb1b6ef5e71b33b7fbcbdf1330"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gad9e69afb1b6ef5e71b33b7fbcbdf1330">operator-</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad9e69afb1b6ef5e71b33b7fbcbdf1330"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#gad9e69afb1b6ef5e71b33b7fbcbdf1330">More...</a><br /></td></tr>
<tr class="separator:gad9e69afb1b6ef5e71b33b7fbcbdf1330"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga787e799774ce604b10d20dcac596bb5f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga787e799774ce604b10d20dcac596bb5f">operator-</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga787e799774ce604b10d20dcac596bb5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga787e799774ce604b10d20dcac596bb5f">More...</a><br /></td></tr>
<tr class="separator:ga787e799774ce604b10d20dcac596bb5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0e6631a64fcf62f0c52cde0e13f60428"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga0e6631a64fcf62f0c52cde0e13f60428">operator-</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0e6631a64fcf62f0c52cde0e13f60428"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga0e6631a64fcf62f0c52cde0e13f60428">More...</a><br /></td></tr>
<tr class="separator:ga0e6631a64fcf62f0c52cde0e13f60428"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4216859e701eb731e1512d70d25d7ef1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga4216859e701eb731e1512d70d25d7ef1">operator-</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4216859e701eb731e1512d70d25d7ef1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga4216859e701eb731e1512d70d25d7ef1">More...</a><br /></td></tr>
<tr class="separator:ga4216859e701eb731e1512d70d25d7ef1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeb05b2a93e4d8eb069e4e5f666b485fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gaeb05b2a93e4d8eb069e4e5f666b485fd">operator-</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaeb05b2a93e4d8eb069e4e5f666b485fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#gaeb05b2a93e4d8eb069e4e5f666b485fd">More...</a><br /></td></tr>
<tr class="separator:gaeb05b2a93e4d8eb069e4e5f666b485fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9bb1d13b317289dab357e73afc4f4fb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gae9bb1d13b317289dab357e73afc4f4fb">operator-</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae9bb1d13b317289dab357e73afc4f4fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#gae9bb1d13b317289dab357e73afc4f4fb">More...</a><br /></td></tr>
<tr class="separator:gae9bb1d13b317289dab357e73afc4f4fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf051829f848b76a5b80908c41b67b076"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gaf051829f848b76a5b80908c41b67b076">operator-</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf051829f848b76a5b80908c41b67b076"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#gaf051829f848b76a5b80908c41b67b076">More...</a><br /></td></tr>
<tr class="separator:gaf051829f848b76a5b80908c41b67b076"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b95e08cea8e1c0381fe81c24cdc6aa1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga2b95e08cea8e1c0381fe81c24cdc6aa1">operator-</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga2b95e08cea8e1c0381fe81c24cdc6aa1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga2b95e08cea8e1c0381fe81c24cdc6aa1">More...</a><br /></td></tr>
<tr class="separator:ga2b95e08cea8e1c0381fe81c24cdc6aa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga68e274c6c0430a580e748204f09094cd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga68e274c6c0430a580e748204f09094cd">operator-</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga68e274c6c0430a580e748204f09094cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga68e274c6c0430a580e748204f09094cd">More...</a><br /></td></tr>
<tr class="separator:ga68e274c6c0430a580e748204f09094cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6073e70f61124322588f05bc46643fed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga6073e70f61124322588f05bc46643fed">operator-</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga6073e70f61124322588f05bc46643fed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga6073e70f61124322588f05bc46643fed">More...</a><br /></td></tr>
<tr class="separator:ga6073e70f61124322588f05bc46643fed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9cf4553b34cdbb3176f1f51a1fc988e8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga9cf4553b34cdbb3176f1f51a1fc988e8">operator-</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga9cf4553b34cdbb3176f1f51a1fc988e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga9cf4553b34cdbb3176f1f51a1fc988e8">More...</a><br /></td></tr>
<tr class="separator:ga9cf4553b34cdbb3176f1f51a1fc988e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga761a1b8fc2a0f8f6f89846618eea72b7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga761a1b8fc2a0f8f6f89846618eea72b7">operator-</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga761a1b8fc2a0f8f6f89846618eea72b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga761a1b8fc2a0f8f6f89846618eea72b7">More...</a><br /></td></tr>
<tr class="separator:ga761a1b8fc2a0f8f6f89846618eea72b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f2875deebf646134736b70d3af51d98"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga1f2875deebf646134736b70d3af51d98">operator-</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga1f2875deebf646134736b70d3af51d98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga1f2875deebf646134736b70d3af51d98">More...</a><br /></td></tr>
<tr class="separator:ga1f2875deebf646134736b70d3af51d98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5be00fcf698a3f38d75810f25f85421b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga5be00fcf698a3f38d75810f25f85421b">operator-</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga5be00fcf698a3f38d75810f25f85421b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga5be00fcf698a3f38d75810f25f85421b">More...</a><br /></td></tr>
<tr class="separator:ga5be00fcf698a3f38d75810f25f85421b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaae1dd361598d06e9f78dd96eb264b72"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gaaae1dd361598d06e9f78dd96eb264b72">operator-</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:gaaae1dd361598d06e9f78dd96eb264b72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#gaaae1dd361598d06e9f78dd96eb264b72">More...</a><br /></td></tr>
<tr class="separator:gaaae1dd361598d06e9f78dd96eb264b72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf3fe7874bde2e8c8c6280559af6bab61"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gaf3fe7874bde2e8c8c6280559af6bab61">operator-</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gaf3fe7874bde2e8c8c6280559af6bab61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#gaf3fe7874bde2e8c8c6280559af6bab61">More...</a><br /></td></tr>
<tr class="separator:gaf3fe7874bde2e8c8c6280559af6bab61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf029c32567fbd9556896c865341d7561"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gaf029c32567fbd9556896c865341d7561">operator-</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:gaf029c32567fbd9556896c865341d7561"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#gaf029c32567fbd9556896c865341d7561">More...</a><br /></td></tr>
<tr class="separator:gaf029c32567fbd9556896c865341d7561"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga43e598427aeb0e9f2f7de5a61797abc2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga43e598427aeb0e9f2f7de5a61797abc2">operator-</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga43e598427aeb0e9f2f7de5a61797abc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga43e598427aeb0e9f2f7de5a61797abc2">More...</a><br /></td></tr>
<tr class="separator:ga43e598427aeb0e9f2f7de5a61797abc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d19cac56b4653f554564eace7b1ad8d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga6d19cac56b4653f554564eace7b1ad8d">operator-</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga6d19cac56b4653f554564eace7b1ad8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga6d19cac56b4653f554564eace7b1ad8d">More...</a><br /></td></tr>
<tr class="separator:ga6d19cac56b4653f554564eace7b1ad8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga192af477f22c8eaa1ae38b4135fedba2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga192af477f22c8eaa1ae38b4135fedba2">operator-</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga192af477f22c8eaa1ae38b4135fedba2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae3511ffe8feeb3011ab027fd39f933ab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gae3511ffe8feeb3011ab027fd39f933ab">operator-</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae3511ffe8feeb3011ab027fd39f933ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#gae3511ffe8feeb3011ab027fd39f933ab">More...</a><br /></td></tr>
<tr class="separator:gae3511ffe8feeb3011ab027fd39f933ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8f787a117994d8e3b51440350530f3e2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga8f787a117994d8e3b51440350530f3e2">operator-</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8f787a117994d8e3b51440350530f3e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga8f787a117994d8e3b51440350530f3e2">More...</a><br /></td></tr>
<tr class="separator:ga8f787a117994d8e3b51440350530f3e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5467af3b6562f75aaf821b1e60f22f4c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga5467af3b6562f75aaf821b1e60f22f4c">operator-</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga5467af3b6562f75aaf821b1e60f22f4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.   <a href="group__arith__func__sub.htm#ga5467af3b6562f75aaf821b1e60f22f4c">More...</a><br /></td></tr>
<tr class="separator:ga5467af3b6562f75aaf821b1e60f22f4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad3247960c06b434d106eeb128929ae2e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gad3247960c06b434d106eeb128929ae2e">operator-</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gad3247960c06b434d106eeb128929ae2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga90c245863eb9dec4930c8b0c5cb400aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga90c245863eb9dec4930c8b0c5cb400aa">operator*</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga90c245863eb9dec4930c8b0c5cb400aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga90c245863eb9dec4930c8b0c5cb400aa">More...</a><br /></td></tr>
<tr class="separator:ga90c245863eb9dec4930c8b0c5cb400aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac7a1654e00181341aac3a25ffb3689f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gaac7a1654e00181341aac3a25ffb3689f">operator*</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaac7a1654e00181341aac3a25ffb3689f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#gaac7a1654e00181341aac3a25ffb3689f">More...</a><br /></td></tr>
<tr class="separator:gaac7a1654e00181341aac3a25ffb3689f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab8d243b0d851a1e59fa253bce62daf92"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gab8d243b0d851a1e59fa253bce62daf92">operator*</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab8d243b0d851a1e59fa253bce62daf92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#gab8d243b0d851a1e59fa253bce62daf92">More...</a><br /></td></tr>
<tr class="separator:gab8d243b0d851a1e59fa253bce62daf92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d7b284fb3dee8bbc24753128015106b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga5d7b284fb3dee8bbc24753128015106b">operator*</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5d7b284fb3dee8bbc24753128015106b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga5d7b284fb3dee8bbc24753128015106b">More...</a><br /></td></tr>
<tr class="separator:ga5d7b284fb3dee8bbc24753128015106b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga93058240610343bb4e1db0e08b6e40ac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga93058240610343bb4e1db0e08b6e40ac">operator*</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga93058240610343bb4e1db0e08b6e40ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga93058240610343bb4e1db0e08b6e40ac">More...</a><br /></td></tr>
<tr class="separator:ga93058240610343bb4e1db0e08b6e40ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7da5272a3d6037debcd6ff0e4360c028"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga7da5272a3d6037debcd6ff0e4360c028">operator*</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7da5272a3d6037debcd6ff0e4360c028"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga7da5272a3d6037debcd6ff0e4360c028">More...</a><br /></td></tr>
<tr class="separator:ga7da5272a3d6037debcd6ff0e4360c028"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8797658c5673f262c6600b7008f2f347"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga8797658c5673f262c6600b7008f2f347">operator*</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8797658c5673f262c6600b7008f2f347"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga8797658c5673f262c6600b7008f2f347">More...</a><br /></td></tr>
<tr class="separator:ga8797658c5673f262c6600b7008f2f347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafc5e5b970def587606bc8de0308ee47a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gafc5e5b970def587606bc8de0308ee47a">operator*</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gafc5e5b970def587606bc8de0308ee47a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#gafc5e5b970def587606bc8de0308ee47a">More...</a><br /></td></tr>
<tr class="separator:gafc5e5b970def587606bc8de0308ee47a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae0a6264b28bdeeed7edbdd220e74d6d7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gae0a6264b28bdeeed7edbdd220e74d6d7">operator*</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae0a6264b28bdeeed7edbdd220e74d6d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#gae0a6264b28bdeeed7edbdd220e74d6d7">More...</a><br /></td></tr>
<tr class="separator:gae0a6264b28bdeeed7edbdd220e74d6d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga051be2573d48f7bf0bb306fc63ce3b19"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga051be2573d48f7bf0bb306fc63ce3b19">operator*</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga051be2573d48f7bf0bb306fc63ce3b19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga051be2573d48f7bf0bb306fc63ce3b19">More...</a><br /></td></tr>
<tr class="separator:ga051be2573d48f7bf0bb306fc63ce3b19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5641dc5a9d13cb3641fe7609e898eec6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga5641dc5a9d13cb3641fe7609e898eec6">operator*</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5641dc5a9d13cb3641fe7609e898eec6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga5641dc5a9d13cb3641fe7609e898eec6">More...</a><br /></td></tr>
<tr class="separator:ga5641dc5a9d13cb3641fe7609e898eec6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1249b8c4c07d51c127155412f25c6f12"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga1249b8c4c07d51c127155412f25c6f12">operator*</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1249b8c4c07d51c127155412f25c6f12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga1249b8c4c07d51c127155412f25c6f12">More...</a><br /></td></tr>
<tr class="separator:ga1249b8c4c07d51c127155412f25c6f12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4aaaced148b8c9ba4839cf2ba7a7d75c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga4aaaced148b8c9ba4839cf2ba7a7d75c">operator*</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4aaaced148b8c9ba4839cf2ba7a7d75c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga4aaaced148b8c9ba4839cf2ba7a7d75c">More...</a><br /></td></tr>
<tr class="separator:ga4aaaced148b8c9ba4839cf2ba7a7d75c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac7f61ec410c7a3183db5ee7ccb4ce690"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gac7f61ec410c7a3183db5ee7ccb4ce690">operator*</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac7f61ec410c7a3183db5ee7ccb4ce690"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#gac7f61ec410c7a3183db5ee7ccb4ce690">More...</a><br /></td></tr>
<tr class="separator:gac7f61ec410c7a3183db5ee7ccb4ce690"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba3e044bc82f432a69275fd26e74a834"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gaba3e044bc82f432a69275fd26e74a834">operator*</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gaba3e044bc82f432a69275fd26e74a834"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#gaba3e044bc82f432a69275fd26e74a834">More...</a><br /></td></tr>
<tr class="separator:gaba3e044bc82f432a69275fd26e74a834"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc88ea10d3d1fb29c2c3b8d29736c808"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gabc88ea10d3d1fb29c2c3b8d29736c808">operator*</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gabc88ea10d3d1fb29c2c3b8d29736c808"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#gabc88ea10d3d1fb29c2c3b8d29736c808">More...</a><br /></td></tr>
<tr class="separator:gabc88ea10d3d1fb29c2c3b8d29736c808"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8610b04b3541b807f8268737e396c1db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga8610b04b3541b807f8268737e396c1db">operator*</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga8610b04b3541b807f8268737e396c1db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga8610b04b3541b807f8268737e396c1db">More...</a><br /></td></tr>
<tr class="separator:ga8610b04b3541b807f8268737e396c1db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga97f49d4213f7cdc984d07e815d7cedd2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga97f49d4213f7cdc984d07e815d7cedd2">operator*</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga97f49d4213f7cdc984d07e815d7cedd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga97f49d4213f7cdc984d07e815d7cedd2">More...</a><br /></td></tr>
<tr class="separator:ga97f49d4213f7cdc984d07e815d7cedd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f68bc574b1da82ec869fff588d860fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga1f68bc574b1da82ec869fff588d860fe">operator*</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga1f68bc574b1da82ec869fff588d860fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga1f68bc574b1da82ec869fff588d860fe">More...</a><br /></td></tr>
<tr class="separator:ga1f68bc574b1da82ec869fff588d860fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga38504acedd1944e5179f3c90f7b5b174"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga38504acedd1944e5179f3c90f7b5b174">operator*</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga38504acedd1944e5179f3c90f7b5b174"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga38504acedd1944e5179f3c90f7b5b174">More...</a><br /></td></tr>
<tr class="separator:ga38504acedd1944e5179f3c90f7b5b174"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f57e9ac04ed269ba5f32e8319dd9f5f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga0f57e9ac04ed269ba5f32e8319dd9f5f">operator*</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga0f57e9ac04ed269ba5f32e8319dd9f5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga0f57e9ac04ed269ba5f32e8319dd9f5f">More...</a><br /></td></tr>
<tr class="separator:ga0f57e9ac04ed269ba5f32e8319dd9f5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb52ece3e88e3fc597d34d06f42977e2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gadb52ece3e88e3fc597d34d06f42977e2">operator*</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:gadb52ece3e88e3fc597d34d06f42977e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#gadb52ece3e88e3fc597d34d06f42977e2">More...</a><br /></td></tr>
<tr class="separator:gadb52ece3e88e3fc597d34d06f42977e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae55ccde9fa4dba7dc0f3e53ff9d95961"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gae55ccde9fa4dba7dc0f3e53ff9d95961">operator*</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gae55ccde9fa4dba7dc0f3e53ff9d95961"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#gae55ccde9fa4dba7dc0f3e53ff9d95961">More...</a><br /></td></tr>
<tr class="separator:gae55ccde9fa4dba7dc0f3e53ff9d95961"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab7729525bd9e03ea6c795520d883b719"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gab7729525bd9e03ea6c795520d883b719">operator*</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:gab7729525bd9e03ea6c795520d883b719"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#gab7729525bd9e03ea6c795520d883b719">More...</a><br /></td></tr>
<tr class="separator:gab7729525bd9e03ea6c795520d883b719"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b6489b2b7aa2f1c798e6dba42f1e283"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga4b6489b2b7aa2f1c798e6dba42f1e283">operator*</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga4b6489b2b7aa2f1c798e6dba42f1e283"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga4b6489b2b7aa2f1c798e6dba42f1e283">More...</a><br /></td></tr>
<tr class="separator:ga4b6489b2b7aa2f1c798e6dba42f1e283"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaee4fe51e0d5bf012b0b275d9a0925133"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gaee4fe51e0d5bf012b0b275d9a0925133">operator*</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gaee4fe51e0d5bf012b0b275d9a0925133"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#gaee4fe51e0d5bf012b0b275d9a0925133">More...</a><br /></td></tr>
<tr class="separator:gaee4fe51e0d5bf012b0b275d9a0925133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga591ac9049e96d529c9cbb26781eade95"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga591ac9049e96d529c9cbb26781eade95">operator*</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga591ac9049e96d529c9cbb26781eade95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga74f2658ff8a3780fa4e99089a23f47bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga74f2658ff8a3780fa4e99089a23f47bc">operator*</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga74f2658ff8a3780fa4e99089a23f47bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga74f2658ff8a3780fa4e99089a23f47bc">More...</a><br /></td></tr>
<tr class="separator:ga74f2658ff8a3780fa4e99089a23f47bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga747a75695ef5a017c10f6f90f6c258d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga747a75695ef5a017c10f6f90f6c258d8">operator*</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga747a75695ef5a017c10f6f90f6c258d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga747a75695ef5a017c10f6f90f6c258d8">More...</a><br /></td></tr>
<tr class="separator:ga747a75695ef5a017c10f6f90f6c258d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga32d5a9dd384214e5e53d3a574ba97c76"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga32d5a9dd384214e5e53d3a574ba97c76">operator*</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga32d5a9dd384214e5e53d3a574ba97c76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.   <a href="group__arith__func__mul.htm#ga32d5a9dd384214e5e53d3a574ba97c76">More...</a><br /></td></tr>
<tr class="separator:ga32d5a9dd384214e5e53d3a574ba97c76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c8bdba20fe1ac44b9837833f5326ca7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga8c8bdba20fe1ac44b9837833f5326ca7">operator*</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga8c8bdba20fe1ac44b9837833f5326ca7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gac7a9219fcd1bbba9c0434517597d31f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gac7a9219fcd1bbba9c0434517597d31f9">operator/</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac7a9219fcd1bbba9c0434517597d31f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#gac7a9219fcd1bbba9c0434517597d31f9">More...</a><br /></td></tr>
<tr class="separator:gac7a9219fcd1bbba9c0434517597d31f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga88549b63504e5a03ac9a952746cbaadd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga88549b63504e5a03ac9a952746cbaadd">operator/</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga88549b63504e5a03ac9a952746cbaadd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga88549b63504e5a03ac9a952746cbaadd">More...</a><br /></td></tr>
<tr class="separator:ga88549b63504e5a03ac9a952746cbaadd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11ede17c49eb79aa4949de2725583a9a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga11ede17c49eb79aa4949de2725583a9a">operator/</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga11ede17c49eb79aa4949de2725583a9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga11ede17c49eb79aa4949de2725583a9a">More...</a><br /></td></tr>
<tr class="separator:ga11ede17c49eb79aa4949de2725583a9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2521511e74c4a3473c46eb1ac785dc3a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga2521511e74c4a3473c46eb1ac785dc3a">operator/</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2521511e74c4a3473c46eb1ac785dc3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga2521511e74c4a3473c46eb1ac785dc3a">More...</a><br /></td></tr>
<tr class="separator:ga2521511e74c4a3473c46eb1ac785dc3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8dfc1ecd97920c6e5ee9f15f3f0e45f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga8dfc1ecd97920c6e5ee9f15f3f0e45f1">operator/</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8dfc1ecd97920c6e5ee9f15f3f0e45f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga8dfc1ecd97920c6e5ee9f15f3f0e45f1">More...</a><br /></td></tr>
<tr class="separator:ga8dfc1ecd97920c6e5ee9f15f3f0e45f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad7ff040825dcd81d626759dd0ca9461f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gad7ff040825dcd81d626759dd0ca9461f">operator/</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad7ff040825dcd81d626759dd0ca9461f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gad7ff040825dcd81d626759dd0ca9461f">More...</a><br /></td></tr>
<tr class="separator:gad7ff040825dcd81d626759dd0ca9461f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3bbf8b911c33a9f807fe87ae8aa85076"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga3bbf8b911c33a9f807fe87ae8aa85076">operator/</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga3bbf8b911c33a9f807fe87ae8aa85076"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga3bbf8b911c33a9f807fe87ae8aa85076">More...</a><br /></td></tr>
<tr class="separator:ga3bbf8b911c33a9f807fe87ae8aa85076"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga13eb6566125c03361397c7034a5c3a3b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga13eb6566125c03361397c7034a5c3a3b">operator/</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga13eb6566125c03361397c7034a5c3a3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga13eb6566125c03361397c7034a5c3a3b">More...</a><br /></td></tr>
<tr class="separator:ga13eb6566125c03361397c7034a5c3a3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga43a09070fb51fcbf7477bdc2964e7816"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga43a09070fb51fcbf7477bdc2964e7816">operator/</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga43a09070fb51fcbf7477bdc2964e7816"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga43a09070fb51fcbf7477bdc2964e7816">More...</a><br /></td></tr>
<tr class="separator:ga43a09070fb51fcbf7477bdc2964e7816"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa15d1ff741a42685c44249d3d5309ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaaa15d1ff741a42685c44249d3d5309ea">operator/</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaaa15d1ff741a42685c44249d3d5309ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gaaa15d1ff741a42685c44249d3d5309ea">More...</a><br /></td></tr>
<tr class="separator:gaaa15d1ff741a42685c44249d3d5309ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8192587f54a219759ca533e4ab75c464"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga8192587f54a219759ca533e4ab75c464">operator/</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8192587f54a219759ca533e4ab75c464"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga8192587f54a219759ca533e4ab75c464">More...</a><br /></td></tr>
<tr class="separator:ga8192587f54a219759ca533e4ab75c464"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f0f8e472ba7acd544c6cf4860b08064"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga6f0f8e472ba7acd544c6cf4860b08064">operator/</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6f0f8e472ba7acd544c6cf4860b08064"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga6f0f8e472ba7acd544c6cf4860b08064">More...</a><br /></td></tr>
<tr class="separator:ga6f0f8e472ba7acd544c6cf4860b08064"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5eb9bce7a9a472d7389206f083a512bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga5eb9bce7a9a472d7389206f083a512bb">operator/</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5eb9bce7a9a472d7389206f083a512bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga5eb9bce7a9a472d7389206f083a512bb">More...</a><br /></td></tr>
<tr class="separator:ga5eb9bce7a9a472d7389206f083a512bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8ecd3e3b8d80fdecd9112ca8643222b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga8ecd3e3b8d80fdecd9112ca8643222b6">operator/</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8ecd3e3b8d80fdecd9112ca8643222b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga8ecd3e3b8d80fdecd9112ca8643222b6">More...</a><br /></td></tr>
<tr class="separator:ga8ecd3e3b8d80fdecd9112ca8643222b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab4859157798bfdd81b857aa0557c9d32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gab4859157798bfdd81b857aa0557c9d32">operator/</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gab4859157798bfdd81b857aa0557c9d32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gab4859157798bfdd81b857aa0557c9d32">More...</a><br /></td></tr>
<tr class="separator:gab4859157798bfdd81b857aa0557c9d32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ed6293b46357914802f25244b014567"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga1ed6293b46357914802f25244b014567">operator/</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga1ed6293b46357914802f25244b014567"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga1ed6293b46357914802f25244b014567">More...</a><br /></td></tr>
<tr class="separator:ga1ed6293b46357914802f25244b014567"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaffd94b99847ae639f27d172db6b12323"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaffd94b99847ae639f27d172db6b12323">operator/</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gaffd94b99847ae639f27d172db6b12323"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gaffd94b99847ae639f27d172db6b12323">More...</a><br /></td></tr>
<tr class="separator:gaffd94b99847ae639f27d172db6b12323"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf6c762f308633eab3a159d45be19bc8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaf6c762f308633eab3a159d45be19bc8a">operator/</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:gaf6c762f308633eab3a159d45be19bc8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gaf6c762f308633eab3a159d45be19bc8a">More...</a><br /></td></tr>
<tr class="separator:gaf6c762f308633eab3a159d45be19bc8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad13f72d4bd5930670943df280d236db7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gad13f72d4bd5930670943df280d236db7">operator/</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:gad13f72d4bd5930670943df280d236db7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gad13f72d4bd5930670943df280d236db7">More...</a><br /></td></tr>
<tr class="separator:gad13f72d4bd5930670943df280d236db7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6445d5b69ed9fd523d840588d6f2b710"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga6445d5b69ed9fd523d840588d6f2b710">operator/</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga6445d5b69ed9fd523d840588d6f2b710"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga6445d5b69ed9fd523d840588d6f2b710">More...</a><br /></td></tr>
<tr class="separator:ga6445d5b69ed9fd523d840588d6f2b710"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae5ad2f1264bc67e3059fe6c52b7c9fb3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gae5ad2f1264bc67e3059fe6c52b7c9fb3">operator/</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:gae5ad2f1264bc67e3059fe6c52b7c9fb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gae5ad2f1264bc67e3059fe6c52b7c9fb3">More...</a><br /></td></tr>
<tr class="separator:gae5ad2f1264bc67e3059fe6c52b7c9fb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa4f3f4eca02c1b60df99d814a944ee74"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaa4f3f4eca02c1b60df99d814a944ee74">operator/</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:gaa4f3f4eca02c1b60df99d814a944ee74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gaa4f3f4eca02c1b60df99d814a944ee74">More...</a><br /></td></tr>
<tr class="separator:gaa4f3f4eca02c1b60df99d814a944ee74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc4587a45147f264416395dce6a1e7cd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gacc4587a45147f264416395dce6a1e7cd">operator/</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gacc4587a45147f264416395dce6a1e7cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gacc4587a45147f264416395dce6a1e7cd">More...</a><br /></td></tr>
<tr class="separator:gacc4587a45147f264416395dce6a1e7cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2806dcf22803b5b48428b0722f8332fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga2806dcf22803b5b48428b0722f8332fc">operator/</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga2806dcf22803b5b48428b0722f8332fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga2806dcf22803b5b48428b0722f8332fc">More...</a><br /></td></tr>
<tr class="separator:ga2806dcf22803b5b48428b0722f8332fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf83133a2448c09e9badaf3f0d6bf70bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaf83133a2448c09e9badaf3f0d6bf70bc">operator/</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gaf83133a2448c09e9badaf3f0d6bf70bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gaf83133a2448c09e9badaf3f0d6bf70bc">More...</a><br /></td></tr>
<tr class="separator:gaf83133a2448c09e9badaf3f0d6bf70bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3df79e8bfe8bc183beeb0e9788c3f657"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga3df79e8bfe8bc183beeb0e9788c3f657">operator/</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga3df79e8bfe8bc183beeb0e9788c3f657"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga3df79e8bfe8bc183beeb0e9788c3f657">More...</a><br /></td></tr>
<tr class="separator:ga3df79e8bfe8bc183beeb0e9788c3f657"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67e05f1b3d6fa5601ad8531218dd3087"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga67e05f1b3d6fa5601ad8531218dd3087">operator/</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga67e05f1b3d6fa5601ad8531218dd3087"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae6547556f9d0ff3e5e7cde6b6525ff2f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gae6547556f9d0ff3e5e7cde6b6525ff2f">operator/</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae6547556f9d0ff3e5e7cde6b6525ff2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#gae6547556f9d0ff3e5e7cde6b6525ff2f">More...</a><br /></td></tr>
<tr class="separator:gae6547556f9d0ff3e5e7cde6b6525ff2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga04bd4faedee476392a2c968071d12cfa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga04bd4faedee476392a2c968071d12cfa">operator/</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga04bd4faedee476392a2c968071d12cfa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga04bd4faedee476392a2c968071d12cfa">More...</a><br /></td></tr>
<tr class="separator:ga04bd4faedee476392a2c968071d12cfa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f245e59c31cabb009d18da6a1a62631"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga9f245e59c31cabb009d18da6a1a62631">operator/</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga9f245e59c31cabb009d18da6a1a62631"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.   <a href="group__arith__func__div.htm#ga9f245e59c31cabb009d18da6a1a62631">More...</a><br /></td></tr>
<tr class="separator:ga9f245e59c31cabb009d18da6a1a62631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae3b8cb05fbad3680b14eeea657eca42e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gae3b8cb05fbad3680b14eeea657eca42e">operator/</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gae3b8cb05fbad3680b14eeea657eca42e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gaa06c948dd656312c23268d11ad8773e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaa06c948dd656312c23268d11ad8773e9">operator==</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa06c948dd656312c23268d11ad8773e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gaa06c948dd656312c23268d11ad8773e9">More...</a><br /></td></tr>
<tr class="separator:gaa06c948dd656312c23268d11ad8773e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa45c66739a3539627f5e61cd0a5921f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaa45c66739a3539627f5e61cd0a5921f9">operator==</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa45c66739a3539627f5e61cd0a5921f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gaa45c66739a3539627f5e61cd0a5921f9">More...</a><br /></td></tr>
<tr class="separator:gaa45c66739a3539627f5e61cd0a5921f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga63a7b53ce6700b22e00c68bee164484f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga63a7b53ce6700b22e00c68bee164484f">operator==</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga63a7b53ce6700b22e00c68bee164484f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga63a7b53ce6700b22e00c68bee164484f">More...</a><br /></td></tr>
<tr class="separator:ga63a7b53ce6700b22e00c68bee164484f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab9be88f20659e084fdd46a4885c67096"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gab9be88f20659e084fdd46a4885c67096">operator==</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab9be88f20659e084fdd46a4885c67096"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gab9be88f20659e084fdd46a4885c67096">More...</a><br /></td></tr>
<tr class="separator:gab9be88f20659e084fdd46a4885c67096"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga492b1a27f9c5d7652e66cb28afc17c1d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga492b1a27f9c5d7652e66cb28afc17c1d">operator==</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga492b1a27f9c5d7652e66cb28afc17c1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga492b1a27f9c5d7652e66cb28afc17c1d">More...</a><br /></td></tr>
<tr class="separator:ga492b1a27f9c5d7652e66cb28afc17c1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a4b28f93498089c339b2a9207ed8edf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga3a4b28f93498089c339b2a9207ed8edf">operator==</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga3a4b28f93498089c339b2a9207ed8edf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga3a4b28f93498089c339b2a9207ed8edf">More...</a><br /></td></tr>
<tr class="separator:ga3a4b28f93498089c339b2a9207ed8edf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga847be211f66a170690a090e99080965b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga847be211f66a170690a090e99080965b">operator==</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga847be211f66a170690a090e99080965b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga847be211f66a170690a090e99080965b">More...</a><br /></td></tr>
<tr class="separator:ga847be211f66a170690a090e99080965b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0ab2385db6ddd4193c2a95b8695f3f72"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga0ab2385db6ddd4193c2a95b8695f3f72">operator==</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0ab2385db6ddd4193c2a95b8695f3f72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga0ab2385db6ddd4193c2a95b8695f3f72">More...</a><br /></td></tr>
<tr class="separator:ga0ab2385db6ddd4193c2a95b8695f3f72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f005066f72173f5ec5985556499adf8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga9f005066f72173f5ec5985556499adf8">operator==</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9f005066f72173f5ec5985556499adf8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga9f005066f72173f5ec5985556499adf8">More...</a><br /></td></tr>
<tr class="separator:ga9f005066f72173f5ec5985556499adf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4f18a25458554583c90d3bdd496fffd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gae4f18a25458554583c90d3bdd496fffd">operator==</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae4f18a25458554583c90d3bdd496fffd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gae4f18a25458554583c90d3bdd496fffd">More...</a><br /></td></tr>
<tr class="separator:gae4f18a25458554583c90d3bdd496fffd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae75f8d37e2c2d150849b8ad7b98973de"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gae75f8d37e2c2d150849b8ad7b98973de">operator==</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae75f8d37e2c2d150849b8ad7b98973de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gae75f8d37e2c2d150849b8ad7b98973de">More...</a><br /></td></tr>
<tr class="separator:gae75f8d37e2c2d150849b8ad7b98973de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7d30e99ec171958086e1b58b97253fad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga7d30e99ec171958086e1b58b97253fad">operator==</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7d30e99ec171958086e1b58b97253fad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga7d30e99ec171958086e1b58b97253fad">More...</a><br /></td></tr>
<tr class="separator:ga7d30e99ec171958086e1b58b97253fad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e1265565b6d49b4b1a455cc206dd56d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga8e1265565b6d49b4b1a455cc206dd56d">operator==</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8e1265565b6d49b4b1a455cc206dd56d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga8e1265565b6d49b4b1a455cc206dd56d">More...</a><br /></td></tr>
<tr class="separator:ga8e1265565b6d49b4b1a455cc206dd56d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0993c0211a8a82e13f683a286ed4623c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga0993c0211a8a82e13f683a286ed4623c">operator==</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0993c0211a8a82e13f683a286ed4623c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga0993c0211a8a82e13f683a286ed4623c">More...</a><br /></td></tr>
<tr class="separator:ga0993c0211a8a82e13f683a286ed4623c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacfb12c26e75c23e3f8528206f8a24159"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gacfb12c26e75c23e3f8528206f8a24159">operator==</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gacfb12c26e75c23e3f8528206f8a24159"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gacfb12c26e75c23e3f8528206f8a24159">More...</a><br /></td></tr>
<tr class="separator:gacfb12c26e75c23e3f8528206f8a24159"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3dce3d1bddf17a9e0663bff05263d3d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga3dce3d1bddf17a9e0663bff05263d3d0">operator==</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga3dce3d1bddf17a9e0663bff05263d3d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga3dce3d1bddf17a9e0663bff05263d3d0">More...</a><br /></td></tr>
<tr class="separator:ga3dce3d1bddf17a9e0663bff05263d3d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae25a8580de8bbfb27c16b33cd5c49f12"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gae25a8580de8bbfb27c16b33cd5c49f12">operator==</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gae25a8580de8bbfb27c16b33cd5c49f12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gae25a8580de8bbfb27c16b33cd5c49f12">More...</a><br /></td></tr>
<tr class="separator:gae25a8580de8bbfb27c16b33cd5c49f12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f885d83af417538cc0b2bebf629ec07"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga6f885d83af417538cc0b2bebf629ec07">operator==</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga6f885d83af417538cc0b2bebf629ec07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga6f885d83af417538cc0b2bebf629ec07">More...</a><br /></td></tr>
<tr class="separator:ga6f885d83af417538cc0b2bebf629ec07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc11fea0c5dddb0580a7363c33cce890"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gadc11fea0c5dddb0580a7363c33cce890">operator==</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:gadc11fea0c5dddb0580a7363c33cce890"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gadc11fea0c5dddb0580a7363c33cce890">More...</a><br /></td></tr>
<tr class="separator:gadc11fea0c5dddb0580a7363c33cce890"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4c825855225f60b39212165d55cfa0ad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga4c825855225f60b39212165d55cfa0ad">operator==</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga4c825855225f60b39212165d55cfa0ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga4c825855225f60b39212165d55cfa0ad">More...</a><br /></td></tr>
<tr class="separator:ga4c825855225f60b39212165d55cfa0ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7526dde0264b6954901520361eaa4242"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga7526dde0264b6954901520361eaa4242">operator==</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga7526dde0264b6954901520361eaa4242"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga7526dde0264b6954901520361eaa4242">More...</a><br /></td></tr>
<tr class="separator:ga7526dde0264b6954901520361eaa4242"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d9885754d1efd4b34e9e9701d17b31a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga6d9885754d1efd4b34e9e9701d17b31a">operator==</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga6d9885754d1efd4b34e9e9701d17b31a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga6d9885754d1efd4b34e9e9701d17b31a">More...</a><br /></td></tr>
<tr class="separator:ga6d9885754d1efd4b34e9e9701d17b31a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaef618dc7e563e466eb95b76f068b3395"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaef618dc7e563e466eb95b76f068b3395">operator==</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gaef618dc7e563e466eb95b76f068b3395"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gaef618dc7e563e466eb95b76f068b3395">More...</a><br /></td></tr>
<tr class="separator:gaef618dc7e563e466eb95b76f068b3395"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae32a1a87c88e059210dddd946e348265"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gae32a1a87c88e059210dddd946e348265">operator==</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:gae32a1a87c88e059210dddd946e348265"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gae32a1a87c88e059210dddd946e348265">More...</a><br /></td></tr>
<tr class="separator:gae32a1a87c88e059210dddd946e348265"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga021b01c18cffba56d93eb4283a4356bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga021b01c18cffba56d93eb4283a4356bb">operator==</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga021b01c18cffba56d93eb4283a4356bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga021b01c18cffba56d93eb4283a4356bb">More...</a><br /></td></tr>
<tr class="separator:ga021b01c18cffba56d93eb4283a4356bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67716abd9142ed601fb3cff785a906e3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga67716abd9142ed601fb3cff785a906e3">operator==</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga67716abd9142ed601fb3cff785a906e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga67716abd9142ed601fb3cff785a906e3">More...</a><br /></td></tr>
<tr class="separator:ga67716abd9142ed601fb3cff785a906e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8bb0c5a16fce6f092f645204887daaca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga8bb0c5a16fce6f092f645204887daaca">operator==</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga8bb0c5a16fce6f092f645204887daaca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5b34f0e0b55d0f26b97f366545522086"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga5b34f0e0b55d0f26b97f366545522086">operator==</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5b34f0e0b55d0f26b97f366545522086"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga5b34f0e0b55d0f26b97f366545522086">More...</a><br /></td></tr>
<tr class="separator:ga5b34f0e0b55d0f26b97f366545522086"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaffff6d5cb2a350c76eac90fea6dc5954"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaffff6d5cb2a350c76eac90fea6dc5954">operator==</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaffff6d5cb2a350c76eac90fea6dc5954"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gaffff6d5cb2a350c76eac90fea6dc5954">More...</a><br /></td></tr>
<tr class="separator:gaffff6d5cb2a350c76eac90fea6dc5954"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga975ced74a170856849ed8fbf2e2cbf7e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga975ced74a170856849ed8fbf2e2cbf7e">operator==</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga975ced74a170856849ed8fbf2e2cbf7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga975ced74a170856849ed8fbf2e2cbf7e">More...</a><br /></td></tr>
<tr class="separator:ga975ced74a170856849ed8fbf2e2cbf7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e351a068a1df168dd3ffcdf7abcccbf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga3e351a068a1df168dd3ffcdf7abcccbf">operator==</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga3e351a068a1df168dd3ffcdf7abcccbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga800463531c9a4d8f81d0e729383ce520"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga800463531c9a4d8f81d0e729383ce520">operator!=</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga800463531c9a4d8f81d0e729383ce520"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga800463531c9a4d8f81d0e729383ce520">More...</a><br /></td></tr>
<tr class="separator:ga800463531c9a4d8f81d0e729383ce520"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad84723aa153f67ee4a385a966e5ae255"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gad84723aa153f67ee4a385a966e5ae255">operator!=</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad84723aa153f67ee4a385a966e5ae255"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gad84723aa153f67ee4a385a966e5ae255">More...</a><br /></td></tr>
<tr class="separator:gad84723aa153f67ee4a385a966e5ae255"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc689edd5a6ea078750e771fd7084be1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gadc689edd5a6ea078750e771fd7084be1">operator!=</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gadc689edd5a6ea078750e771fd7084be1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gadc689edd5a6ea078750e771fd7084be1">More...</a><br /></td></tr>
<tr class="separator:gadc689edd5a6ea078750e771fd7084be1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac1e4238dd07e0f1b269822ce65ae306f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gac1e4238dd07e0f1b269822ce65ae306f">operator!=</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac1e4238dd07e0f1b269822ce65ae306f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gac1e4238dd07e0f1b269822ce65ae306f">More...</a><br /></td></tr>
<tr class="separator:gac1e4238dd07e0f1b269822ce65ae306f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac47cbf6387f153f59f2b4d299de26b53"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gac47cbf6387f153f59f2b4d299de26b53">operator!=</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac47cbf6387f153f59f2b4d299de26b53"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gac47cbf6387f153f59f2b4d299de26b53">More...</a><br /></td></tr>
<tr class="separator:gac47cbf6387f153f59f2b4d299de26b53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab2fc3cea73accb2a8892df75e1b496d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gab2fc3cea73accb2a8892df75e1b496d4">operator!=</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab2fc3cea73accb2a8892df75e1b496d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gab2fc3cea73accb2a8892df75e1b496d4">More...</a><br /></td></tr>
<tr class="separator:gab2fc3cea73accb2a8892df75e1b496d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe1227023c50f8df272a1880d00d9054"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gabe1227023c50f8df272a1880d00d9054">operator!=</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gabe1227023c50f8df272a1880d00d9054"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gabe1227023c50f8df272a1880d00d9054">More...</a><br /></td></tr>
<tr class="separator:gabe1227023c50f8df272a1880d00d9054"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b300aed924275729974003489756591"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga4b300aed924275729974003489756591">operator!=</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4b300aed924275729974003489756591"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga4b300aed924275729974003489756591">More...</a><br /></td></tr>
<tr class="separator:ga4b300aed924275729974003489756591"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa03ae66d7dccf6c1db1bf0b9cb7e678b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gaa03ae66d7dccf6c1db1bf0b9cb7e678b">operator!=</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa03ae66d7dccf6c1db1bf0b9cb7e678b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gaa03ae66d7dccf6c1db1bf0b9cb7e678b">More...</a><br /></td></tr>
<tr class="separator:gaa03ae66d7dccf6c1db1bf0b9cb7e678b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga53474985f25e750de2bcecd3e65c94de"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga53474985f25e750de2bcecd3e65c94de">operator!=</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga53474985f25e750de2bcecd3e65c94de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga53474985f25e750de2bcecd3e65c94de">More...</a><br /></td></tr>
<tr class="separator:ga53474985f25e750de2bcecd3e65c94de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4084c56b10fb2b3863308a752cfcfa3e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga4084c56b10fb2b3863308a752cfcfa3e">operator!=</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4084c56b10fb2b3863308a752cfcfa3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga4084c56b10fb2b3863308a752cfcfa3e">More...</a><br /></td></tr>
<tr class="separator:ga4084c56b10fb2b3863308a752cfcfa3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3841f402d6229f19e7dc625efad6e14f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga3841f402d6229f19e7dc625efad6e14f">operator!=</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga3841f402d6229f19e7dc625efad6e14f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga3841f402d6229f19e7dc625efad6e14f">More...</a><br /></td></tr>
<tr class="separator:ga3841f402d6229f19e7dc625efad6e14f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34e57ec1821f5fd6bd2e8eee05060376"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga34e57ec1821f5fd6bd2e8eee05060376">operator!=</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga34e57ec1821f5fd6bd2e8eee05060376"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga34e57ec1821f5fd6bd2e8eee05060376">More...</a><br /></td></tr>
<tr class="separator:ga34e57ec1821f5fd6bd2e8eee05060376"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b75d1b8327cb6aaeff8d8c80bca51a4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga9b75d1b8327cb6aaeff8d8c80bca51a4">operator!=</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9b75d1b8327cb6aaeff8d8c80bca51a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga9b75d1b8327cb6aaeff8d8c80bca51a4">More...</a><br /></td></tr>
<tr class="separator:ga9b75d1b8327cb6aaeff8d8c80bca51a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga746a0da26fba71ef9f4315f74dcbc054"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga746a0da26fba71ef9f4315f74dcbc054">operator!=</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga746a0da26fba71ef9f4315f74dcbc054"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga746a0da26fba71ef9f4315f74dcbc054">More...</a><br /></td></tr>
<tr class="separator:ga746a0da26fba71ef9f4315f74dcbc054"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga36f195044e8f58ea5fc3d9170497f610"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga36f195044e8f58ea5fc3d9170497f610">operator!=</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga36f195044e8f58ea5fc3d9170497f610"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga36f195044e8f58ea5fc3d9170497f610">More...</a><br /></td></tr>
<tr class="separator:ga36f195044e8f58ea5fc3d9170497f610"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac86f1f671a502e4941619712c02b6aee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gac86f1f671a502e4941619712c02b6aee">operator!=</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gac86f1f671a502e4941619712c02b6aee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gac86f1f671a502e4941619712c02b6aee">More...</a><br /></td></tr>
<tr class="separator:gac86f1f671a502e4941619712c02b6aee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeb795025ad80552e94248c36fbfade65"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gaeb795025ad80552e94248c36fbfade65">operator!=</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:gaeb795025ad80552e94248c36fbfade65"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gaeb795025ad80552e94248c36fbfade65">More...</a><br /></td></tr>
<tr class="separator:gaeb795025ad80552e94248c36fbfade65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae53b3e46b3702449d6021b3e7d26f35d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gae53b3e46b3702449d6021b3e7d26f35d">operator!=</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:gae53b3e46b3702449d6021b3e7d26f35d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gae53b3e46b3702449d6021b3e7d26f35d">More...</a><br /></td></tr>
<tr class="separator:gae53b3e46b3702449d6021b3e7d26f35d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac1bc83bb0dd35214f84a104be299ebd5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gac1bc83bb0dd35214f84a104be299ebd5">operator!=</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gac1bc83bb0dd35214f84a104be299ebd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gac1bc83bb0dd35214f84a104be299ebd5">More...</a><br /></td></tr>
<tr class="separator:gac1bc83bb0dd35214f84a104be299ebd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7c10433683449d616c34aa0870671320"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga7c10433683449d616c34aa0870671320">operator!=</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga7c10433683449d616c34aa0870671320"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga7c10433683449d616c34aa0870671320">More...</a><br /></td></tr>
<tr class="separator:ga7c10433683449d616c34aa0870671320"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad8073ab0e098591dea7e9f99039075a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gad8073ab0e098591dea7e9f99039075a8">operator!=</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:gad8073ab0e098591dea7e9f99039075a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gad8073ab0e098591dea7e9f99039075a8">More...</a><br /></td></tr>
<tr class="separator:gad8073ab0e098591dea7e9f99039075a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0bb90f15fd609a4ad875f4255c3ee9bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga0bb90f15fd609a4ad875f4255c3ee9bb">operator!=</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga0bb90f15fd609a4ad875f4255c3ee9bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga0bb90f15fd609a4ad875f4255c3ee9bb">More...</a><br /></td></tr>
<tr class="separator:ga0bb90f15fd609a4ad875f4255c3ee9bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae70db7a307a503d0d3419ad3d6aedbe6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gae70db7a307a503d0d3419ad3d6aedbe6">operator!=</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:gae70db7a307a503d0d3419ad3d6aedbe6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gae70db7a307a503d0d3419ad3d6aedbe6">More...</a><br /></td></tr>
<tr class="separator:gae70db7a307a503d0d3419ad3d6aedbe6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf4a6126ec8a3a788a29e06fba43c1649"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gaf4a6126ec8a3a788a29e06fba43c1649">operator!=</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gaf4a6126ec8a3a788a29e06fba43c1649"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#gaf4a6126ec8a3a788a29e06fba43c1649">More...</a><br /></td></tr>
<tr class="separator:gaf4a6126ec8a3a788a29e06fba43c1649"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga978a5b73f3409e57161ffc4835fc9096"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga978a5b73f3409e57161ffc4835fc9096">operator!=</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga978a5b73f3409e57161ffc4835fc9096"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga978a5b73f3409e57161ffc4835fc9096">More...</a><br /></td></tr>
<tr class="separator:ga978a5b73f3409e57161ffc4835fc9096"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga117a3599644133025879092ede8133d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga117a3599644133025879092ede8133d5">operator!=</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga117a3599644133025879092ede8133d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga84c9fec763dab117f008109351e0ca1e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga84c9fec763dab117f008109351e0ca1e">operator!=</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga84c9fec763dab117f008109351e0ca1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga84c9fec763dab117f008109351e0ca1e">More...</a><br /></td></tr>
<tr class="separator:ga84c9fec763dab117f008109351e0ca1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga09fb5c97e6ca9af9b5abd623b278be3e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga09fb5c97e6ca9af9b5abd623b278be3e">operator!=</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga09fb5c97e6ca9af9b5abd623b278be3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga09fb5c97e6ca9af9b5abd623b278be3e">More...</a><br /></td></tr>
<tr class="separator:ga09fb5c97e6ca9af9b5abd623b278be3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga90c5e9488ec50c0caa22f2690e2a7c0f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga90c5e9488ec50c0caa22f2690e2a7c0f">operator!=</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga90c5e9488ec50c0caa22f2690e2a7c0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.   <a href="group__arith__func__neq.htm#ga90c5e9488ec50c0caa22f2690e2a7c0f">More...</a><br /></td></tr>
<tr class="separator:ga90c5e9488ec50c0caa22f2690e2a7c0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2c5c02bb4f3cdd16ab61417ef048b01d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga2c5c02bb4f3cdd16ab61417ef048b01d">operator!=</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga2c5c02bb4f3cdd16ab61417ef048b01d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga4138eee00096c120e17e4aa8c1f01404"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga4138eee00096c120e17e4aa8c1f01404">operator&lt;</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4138eee00096c120e17e4aa8c1f01404"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga4138eee00096c120e17e4aa8c1f01404">More...</a><br /></td></tr>
<tr class="separator:ga4138eee00096c120e17e4aa8c1f01404"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9cd7bedc62d32e2971cfdaf7d03665be"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga9cd7bedc62d32e2971cfdaf7d03665be">operator&lt;</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9cd7bedc62d32e2971cfdaf7d03665be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga9cd7bedc62d32e2971cfdaf7d03665be">More...</a><br /></td></tr>
<tr class="separator:ga9cd7bedc62d32e2971cfdaf7d03665be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga458a24c3a3e2d6c3078c1ce6676dc711"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga458a24c3a3e2d6c3078c1ce6676dc711">operator&lt;</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga458a24c3a3e2d6c3078c1ce6676dc711"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga458a24c3a3e2d6c3078c1ce6676dc711">More...</a><br /></td></tr>
<tr class="separator:ga458a24c3a3e2d6c3078c1ce6676dc711"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac905d52014880458d7aea322ec8ba361"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gac905d52014880458d7aea322ec8ba361">operator&lt;</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac905d52014880458d7aea322ec8ba361"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gac905d52014880458d7aea322ec8ba361">More...</a><br /></td></tr>
<tr class="separator:gac905d52014880458d7aea322ec8ba361"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab0e97fa05139cfe357f728c92f4946b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gab0e97fa05139cfe357f728c92f4946b8">operator&lt;</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab0e97fa05139cfe357f728c92f4946b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gab0e97fa05139cfe357f728c92f4946b8">More...</a><br /></td></tr>
<tr class="separator:gab0e97fa05139cfe357f728c92f4946b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga021d9de22461f9af8addd1c66d6c2f2e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga021d9de22461f9af8addd1c66d6c2f2e">operator&lt;</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga021d9de22461f9af8addd1c66d6c2f2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga021d9de22461f9af8addd1c66d6c2f2e">More...</a><br /></td></tr>
<tr class="separator:ga021d9de22461f9af8addd1c66d6c2f2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5618e69e001c55a1f9c8f90426787508"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga5618e69e001c55a1f9c8f90426787508">operator&lt;</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5618e69e001c55a1f9c8f90426787508"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga5618e69e001c55a1f9c8f90426787508">More...</a><br /></td></tr>
<tr class="separator:ga5618e69e001c55a1f9c8f90426787508"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab4c1fb1f9757c63602b170e2946e9343"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gab4c1fb1f9757c63602b170e2946e9343">operator&lt;</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab4c1fb1f9757c63602b170e2946e9343"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gab4c1fb1f9757c63602b170e2946e9343">More...</a><br /></td></tr>
<tr class="separator:gab4c1fb1f9757c63602b170e2946e9343"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa786113f71cf98be1f3a62b7d0563b87"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gaa786113f71cf98be1f3a62b7d0563b87">operator&lt;</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa786113f71cf98be1f3a62b7d0563b87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gaa786113f71cf98be1f3a62b7d0563b87">More...</a><br /></td></tr>
<tr class="separator:gaa786113f71cf98be1f3a62b7d0563b87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae84f551a2389e8cd62b4201d660df1b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gae84f551a2389e8cd62b4201d660df1b9">operator&lt;</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae84f551a2389e8cd62b4201d660df1b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gae84f551a2389e8cd62b4201d660df1b9">More...</a><br /></td></tr>
<tr class="separator:gae84f551a2389e8cd62b4201d660df1b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ea3f3ac717f1e63a2e7d34db59aed9a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga4ea3f3ac717f1e63a2e7d34db59aed9a">operator&lt;</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4ea3f3ac717f1e63a2e7d34db59aed9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga4ea3f3ac717f1e63a2e7d34db59aed9a">More...</a><br /></td></tr>
<tr class="separator:ga4ea3f3ac717f1e63a2e7d34db59aed9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7bb3741d4c78797853098bca3cd271f3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga7bb3741d4c78797853098bca3cd271f3">operator&lt;</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7bb3741d4c78797853098bca3cd271f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga7bb3741d4c78797853098bca3cd271f3">More...</a><br /></td></tr>
<tr class="separator:ga7bb3741d4c78797853098bca3cd271f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga330a25b5269510ba479c624fecc8ae44"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga330a25b5269510ba479c624fecc8ae44">operator&lt;</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga330a25b5269510ba479c624fecc8ae44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga330a25b5269510ba479c624fecc8ae44">More...</a><br /></td></tr>
<tr class="separator:ga330a25b5269510ba479c624fecc8ae44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga83930be47f60ee943f3fae8c5245a118"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga83930be47f60ee943f3fae8c5245a118">operator&lt;</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga83930be47f60ee943f3fae8c5245a118"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga83930be47f60ee943f3fae8c5245a118">More...</a><br /></td></tr>
<tr class="separator:ga83930be47f60ee943f3fae8c5245a118"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2b6bf9f6a557116c6139fb9320d5f0a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gad2b6bf9f6a557116c6139fb9320d5f0a">operator&lt;</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gad2b6bf9f6a557116c6139fb9320d5f0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gad2b6bf9f6a557116c6139fb9320d5f0a">More...</a><br /></td></tr>
<tr class="separator:gad2b6bf9f6a557116c6139fb9320d5f0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga079132c99ee5d0dabe730c3b9293b9e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga079132c99ee5d0dabe730c3b9293b9e9">operator&lt;</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga079132c99ee5d0dabe730c3b9293b9e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga079132c99ee5d0dabe730c3b9293b9e9">More...</a><br /></td></tr>
<tr class="separator:ga079132c99ee5d0dabe730c3b9293b9e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga18f16603d37068ccba725f160179e9a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga18f16603d37068ccba725f160179e9a2">operator&lt;</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga18f16603d37068ccba725f160179e9a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga18f16603d37068ccba725f160179e9a2">More...</a><br /></td></tr>
<tr class="separator:ga18f16603d37068ccba725f160179e9a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga97e977c6313d195468f6cadd68e92cb1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga97e977c6313d195468f6cadd68e92cb1">operator&lt;</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga97e977c6313d195468f6cadd68e92cb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga97e977c6313d195468f6cadd68e92cb1">More...</a><br /></td></tr>
<tr class="separator:ga97e977c6313d195468f6cadd68e92cb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga33d4a071930a00722dc682e459600b49"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga33d4a071930a00722dc682e459600b49">operator&lt;</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga33d4a071930a00722dc682e459600b49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga33d4a071930a00722dc682e459600b49">More...</a><br /></td></tr>
<tr class="separator:ga33d4a071930a00722dc682e459600b49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac76add45106dcb20e9d129ff78f7da23"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gac76add45106dcb20e9d129ff78f7da23">operator&lt;</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gac76add45106dcb20e9d129ff78f7da23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gac76add45106dcb20e9d129ff78f7da23">More...</a><br /></td></tr>
<tr class="separator:gac76add45106dcb20e9d129ff78f7da23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0e6897058045eb8fb5f2397b5d7ce36c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga0e6897058045eb8fb5f2397b5d7ce36c">operator&lt;</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga0e6897058045eb8fb5f2397b5d7ce36c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga0e6897058045eb8fb5f2397b5d7ce36c">More...</a><br /></td></tr>
<tr class="separator:ga0e6897058045eb8fb5f2397b5d7ce36c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab7a2d6131053b07fd94b4baa3896f4f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gab7a2d6131053b07fd94b4baa3896f4f9">operator&lt;</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:gab7a2d6131053b07fd94b4baa3896f4f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gab7a2d6131053b07fd94b4baa3896f4f9">More...</a><br /></td></tr>
<tr class="separator:gab7a2d6131053b07fd94b4baa3896f4f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga15510fd212e4032ed10683d58a86414d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga15510fd212e4032ed10683d58a86414d">operator&lt;</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga15510fd212e4032ed10683d58a86414d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga15510fd212e4032ed10683d58a86414d">More...</a><br /></td></tr>
<tr class="separator:ga15510fd212e4032ed10683d58a86414d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34f745203cab1ff96f9c9ea5066b249b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga34f745203cab1ff96f9c9ea5066b249b">operator&lt;</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga34f745203cab1ff96f9c9ea5066b249b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga34f745203cab1ff96f9c9ea5066b249b">More...</a><br /></td></tr>
<tr class="separator:ga34f745203cab1ff96f9c9ea5066b249b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f0e238c546bfc95fd19e8a78c0fbba8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga6f0e238c546bfc95fd19e8a78c0fbba8">operator&lt;</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga6f0e238c546bfc95fd19e8a78c0fbba8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga6f0e238c546bfc95fd19e8a78c0fbba8">More...</a><br /></td></tr>
<tr class="separator:ga6f0e238c546bfc95fd19e8a78c0fbba8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc866a0eceeef9d130bdaeca1e180dfb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gacc866a0eceeef9d130bdaeca1e180dfb">operator&lt;</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gacc866a0eceeef9d130bdaeca1e180dfb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#gacc866a0eceeef9d130bdaeca1e180dfb">More...</a><br /></td></tr>
<tr class="separator:gacc866a0eceeef9d130bdaeca1e180dfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b5893fe7cf01ff7f4621939befc9922"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga4b5893fe7cf01ff7f4621939befc9922">operator&lt;</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga4b5893fe7cf01ff7f4621939befc9922"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a7e8a4fd759fe00417dd599bf3d41ee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga6a7e8a4fd759fe00417dd599bf3d41ee">operator&lt;</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6a7e8a4fd759fe00417dd599bf3d41ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga6a7e8a4fd759fe00417dd599bf3d41ee">More...</a><br /></td></tr>
<tr class="separator:ga6a7e8a4fd759fe00417dd599bf3d41ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga89a4c0b8c261e282b7c6b9e282769ecb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga89a4c0b8c261e282b7c6b9e282769ecb">operator&lt;</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga89a4c0b8c261e282b7c6b9e282769ecb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga89a4c0b8c261e282b7c6b9e282769ecb">More...</a><br /></td></tr>
<tr class="separator:ga89a4c0b8c261e282b7c6b9e282769ecb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9ce3a4722ee38d04d1b4e3ac5307f652"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga9ce3a4722ee38d04d1b4e3ac5307f652">operator&lt;</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga9ce3a4722ee38d04d1b4e3ac5307f652"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.   <a href="group__arith__func__lt.htm#ga9ce3a4722ee38d04d1b4e3ac5307f652">More...</a><br /></td></tr>
<tr class="separator:ga9ce3a4722ee38d04d1b4e3ac5307f652"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad5d178905a6baff6c9a69786f58570d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gad5d178905a6baff6c9a69786f58570d1">operator&lt;</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gad5d178905a6baff6c9a69786f58570d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga63ba21d149d3978f11d95a6c31ed727c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga63ba21d149d3978f11d95a6c31ed727c">operator&lt;=</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga63ba21d149d3978f11d95a6c31ed727c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga63ba21d149d3978f11d95a6c31ed727c">More...</a><br /></td></tr>
<tr class="separator:ga63ba21d149d3978f11d95a6c31ed727c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d9c70991d468b40a8378c7f41139b16"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga5d9c70991d468b40a8378c7f41139b16">operator&lt;=</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5d9c70991d468b40a8378c7f41139b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga5d9c70991d468b40a8378c7f41139b16">More...</a><br /></td></tr>
<tr class="separator:ga5d9c70991d468b40a8378c7f41139b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01cecc3469325f615318e1299870acd2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga01cecc3469325f615318e1299870acd2">operator&lt;=</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga01cecc3469325f615318e1299870acd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga01cecc3469325f615318e1299870acd2">More...</a><br /></td></tr>
<tr class="separator:ga01cecc3469325f615318e1299870acd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11dbf083254c2059615a2044fa0ce706"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga11dbf083254c2059615a2044fa0ce706">operator&lt;=</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga11dbf083254c2059615a2044fa0ce706"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga11dbf083254c2059615a2044fa0ce706">More...</a><br /></td></tr>
<tr class="separator:ga11dbf083254c2059615a2044fa0ce706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga16026d885c53b5d400d3179117e92a38"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga16026d885c53b5d400d3179117e92a38">operator&lt;=</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga16026d885c53b5d400d3179117e92a38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga16026d885c53b5d400d3179117e92a38">More...</a><br /></td></tr>
<tr class="separator:ga16026d885c53b5d400d3179117e92a38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf7a78edce0757c28f63332140e1269f7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gaf7a78edce0757c28f63332140e1269f7">operator&lt;=</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf7a78edce0757c28f63332140e1269f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#gaf7a78edce0757c28f63332140e1269f7">More...</a><br /></td></tr>
<tr class="separator:gaf7a78edce0757c28f63332140e1269f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad7c705798e98fc10fb10ecc42fcdda81"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gad7c705798e98fc10fb10ecc42fcdda81">operator&lt;=</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad7c705798e98fc10fb10ecc42fcdda81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#gad7c705798e98fc10fb10ecc42fcdda81">More...</a><br /></td></tr>
<tr class="separator:gad7c705798e98fc10fb10ecc42fcdda81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6e72c52ee5ff9476ba1618f2ec01027d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga6e72c52ee5ff9476ba1618f2ec01027d">operator&lt;=</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6e72c52ee5ff9476ba1618f2ec01027d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga6e72c52ee5ff9476ba1618f2ec01027d">More...</a><br /></td></tr>
<tr class="separator:ga6e72c52ee5ff9476ba1618f2ec01027d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5e267da65d60bbd710ee7853d2877302"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga5e267da65d60bbd710ee7853d2877302">operator&lt;=</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5e267da65d60bbd710ee7853d2877302"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga5e267da65d60bbd710ee7853d2877302">More...</a><br /></td></tr>
<tr class="separator:ga5e267da65d60bbd710ee7853d2877302"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae791686139c895ab725e39d19866ec47"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gae791686139c895ab725e39d19866ec47">operator&lt;=</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae791686139c895ab725e39d19866ec47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#gae791686139c895ab725e39d19866ec47">More...</a><br /></td></tr>
<tr class="separator:gae791686139c895ab725e39d19866ec47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5c654b369a3122fc8a25ec41f2a9dc89"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga5c654b369a3122fc8a25ec41f2a9dc89">operator&lt;=</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5c654b369a3122fc8a25ec41f2a9dc89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga5c654b369a3122fc8a25ec41f2a9dc89">More...</a><br /></td></tr>
<tr class="separator:ga5c654b369a3122fc8a25ec41f2a9dc89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab72cf6eaaae723619c480c4b1cab5a3d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gab72cf6eaaae723619c480c4b1cab5a3d">operator&lt;=</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab72cf6eaaae723619c480c4b1cab5a3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#gab72cf6eaaae723619c480c4b1cab5a3d">More...</a><br /></td></tr>
<tr class="separator:gab72cf6eaaae723619c480c4b1cab5a3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4412b316eff10a690cae00f194d2b64b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga4412b316eff10a690cae00f194d2b64b">operator&lt;=</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4412b316eff10a690cae00f194d2b64b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga4412b316eff10a690cae00f194d2b64b">More...</a><br /></td></tr>
<tr class="separator:ga4412b316eff10a690cae00f194d2b64b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fa57ea4474c3fe5d84ad8075d5963ed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga9fa57ea4474c3fe5d84ad8075d5963ed">operator&lt;=</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9fa57ea4474c3fe5d84ad8075d5963ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga9fa57ea4474c3fe5d84ad8075d5963ed">More...</a><br /></td></tr>
<tr class="separator:ga9fa57ea4474c3fe5d84ad8075d5963ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8131193b7b8e43d8c79967ae179c4c1c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga8131193b7b8e43d8c79967ae179c4c1c">operator&lt;=</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga8131193b7b8e43d8c79967ae179c4c1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga8131193b7b8e43d8c79967ae179c4c1c">More...</a><br /></td></tr>
<tr class="separator:ga8131193b7b8e43d8c79967ae179c4c1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga54d2b06c2ee202e59443f5083ea63a69"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga54d2b06c2ee202e59443f5083ea63a69">operator&lt;=</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga54d2b06c2ee202e59443f5083ea63a69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga54d2b06c2ee202e59443f5083ea63a69">More...</a><br /></td></tr>
<tr class="separator:ga54d2b06c2ee202e59443f5083ea63a69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d84d5c4bf71d040e86c6c4164775c4d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga3d84d5c4bf71d040e86c6c4164775c4d">operator&lt;=</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga3d84d5c4bf71d040e86c6c4164775c4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga3d84d5c4bf71d040e86c6c4164775c4d">More...</a><br /></td></tr>
<tr class="separator:ga3d84d5c4bf71d040e86c6c4164775c4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga366678df011a2d02349b16cf109b5125"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga366678df011a2d02349b16cf109b5125">operator&lt;=</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga366678df011a2d02349b16cf109b5125"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga366678df011a2d02349b16cf109b5125">More...</a><br /></td></tr>
<tr class="separator:ga366678df011a2d02349b16cf109b5125"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga60134cf5915f9f6f685e4eac9ef8f002"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga60134cf5915f9f6f685e4eac9ef8f002">operator&lt;=</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga60134cf5915f9f6f685e4eac9ef8f002"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga60134cf5915f9f6f685e4eac9ef8f002">More...</a><br /></td></tr>
<tr class="separator:ga60134cf5915f9f6f685e4eac9ef8f002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65ee6929c569504ca3b525d0aa0dd40a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga65ee6929c569504ca3b525d0aa0dd40a">operator&lt;=</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga65ee6929c569504ca3b525d0aa0dd40a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga65ee6929c569504ca3b525d0aa0dd40a">More...</a><br /></td></tr>
<tr class="separator:ga65ee6929c569504ca3b525d0aa0dd40a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga26c0148b326d3437e96d24bb982053de"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga26c0148b326d3437e96d24bb982053de">operator&lt;=</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga26c0148b326d3437e96d24bb982053de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga26c0148b326d3437e96d24bb982053de">More...</a><br /></td></tr>
<tr class="separator:ga26c0148b326d3437e96d24bb982053de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga18434f653ec6f2a0995a1505472f851c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga18434f653ec6f2a0995a1505472f851c">operator&lt;=</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga18434f653ec6f2a0995a1505472f851c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga18434f653ec6f2a0995a1505472f851c">More...</a><br /></td></tr>
<tr class="separator:ga18434f653ec6f2a0995a1505472f851c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga282fe76d8a162246c4190564be1dbec4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga282fe76d8a162246c4190564be1dbec4">operator&lt;=</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga282fe76d8a162246c4190564be1dbec4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga282fe76d8a162246c4190564be1dbec4">More...</a><br /></td></tr>
<tr class="separator:ga282fe76d8a162246c4190564be1dbec4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9ad2828896355dce54f394cbecb975d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga9ad2828896355dce54f394cbecb975d2">operator&lt;=</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga9ad2828896355dce54f394cbecb975d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga9ad2828896355dce54f394cbecb975d2">More...</a><br /></td></tr>
<tr class="separator:ga9ad2828896355dce54f394cbecb975d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga315f98c5b13cc9621bc3d8310f4aa35b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga315f98c5b13cc9621bc3d8310f4aa35b">operator&lt;=</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga315f98c5b13cc9621bc3d8310f4aa35b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga315f98c5b13cc9621bc3d8310f4aa35b">More...</a><br /></td></tr>
<tr class="separator:ga315f98c5b13cc9621bc3d8310f4aa35b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac19668bd9c248270f14a217d9524d741"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gac19668bd9c248270f14a217d9524d741">operator&lt;=</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gac19668bd9c248270f14a217d9524d741"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#gac19668bd9c248270f14a217d9524d741">More...</a><br /></td></tr>
<tr class="separator:gac19668bd9c248270f14a217d9524d741"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00e4d48d2fadb11d983d6a8e0000378f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga00e4d48d2fadb11d983d6a8e0000378f">operator&lt;=</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga00e4d48d2fadb11d983d6a8e0000378f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2274d84d94661acdc2193a92e1f05a66"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga2274d84d94661acdc2193a92e1f05a66">operator&lt;=</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2274d84d94661acdc2193a92e1f05a66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga2274d84d94661acdc2193a92e1f05a66">More...</a><br /></td></tr>
<tr class="separator:ga2274d84d94661acdc2193a92e1f05a66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f6a2c06c7e96abc55a00e250702fb51"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga5f6a2c06c7e96abc55a00e250702fb51">operator&lt;=</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5f6a2c06c7e96abc55a00e250702fb51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#ga5f6a2c06c7e96abc55a00e250702fb51">More...</a><br /></td></tr>
<tr class="separator:ga5f6a2c06c7e96abc55a00e250702fb51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae03c6d9dcaa91051947708890ece8fa1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gae03c6d9dcaa91051947708890ece8fa1">operator&lt;=</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:gae03c6d9dcaa91051947708890ece8fa1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.   <a href="group__arith__func__le.htm#gae03c6d9dcaa91051947708890ece8fa1">More...</a><br /></td></tr>
<tr class="separator:gae03c6d9dcaa91051947708890ece8fa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab4d7064cd2160d431502269483900c75"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gab4d7064cd2160d431502269483900c75">operator&lt;=</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gab4d7064cd2160d431502269483900c75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga7635b61eff910853fb18e51a74a74411"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga7635b61eff910853fb18e51a74a74411">operator&gt;</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7635b61eff910853fb18e51a74a74411"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga7635b61eff910853fb18e51a74a74411">More...</a><br /></td></tr>
<tr class="separator:ga7635b61eff910853fb18e51a74a74411"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad7605910524e893a11546294d74df615"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gad7605910524e893a11546294d74df615">operator&gt;</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad7605910524e893a11546294d74df615"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gad7605910524e893a11546294d74df615">More...</a><br /></td></tr>
<tr class="separator:gad7605910524e893a11546294d74df615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga70f3b27e97c79985408d30deb57152d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga70f3b27e97c79985408d30deb57152d2">operator&gt;</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga70f3b27e97c79985408d30deb57152d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga70f3b27e97c79985408d30deb57152d2">More...</a><br /></td></tr>
<tr class="separator:ga70f3b27e97c79985408d30deb57152d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34b635046cd08e2f22e58e450af452bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga34b635046cd08e2f22e58e450af452bc">operator&gt;</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga34b635046cd08e2f22e58e450af452bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga34b635046cd08e2f22e58e450af452bc">More...</a><br /></td></tr>
<tr class="separator:ga34b635046cd08e2f22e58e450af452bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4819b2a41d1b8c06a539ab0debdc48cb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga4819b2a41d1b8c06a539ab0debdc48cb">operator&gt;</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4819b2a41d1b8c06a539ab0debdc48cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga4819b2a41d1b8c06a539ab0debdc48cb">More...</a><br /></td></tr>
<tr class="separator:ga4819b2a41d1b8c06a539ab0debdc48cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga51869fdbd571ca553b2ceb84959f0f25"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga51869fdbd571ca553b2ceb84959f0f25">operator&gt;</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga51869fdbd571ca553b2ceb84959f0f25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga51869fdbd571ca553b2ceb84959f0f25">More...</a><br /></td></tr>
<tr class="separator:ga51869fdbd571ca553b2ceb84959f0f25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e50647eb740c7217b10fd6e718e8896"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga1e50647eb740c7217b10fd6e718e8896">operator&gt;</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1e50647eb740c7217b10fd6e718e8896"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga1e50647eb740c7217b10fd6e718e8896">More...</a><br /></td></tr>
<tr class="separator:ga1e50647eb740c7217b10fd6e718e8896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b842df58ed8a8f525e0a3d6b8336a8c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga2b842df58ed8a8f525e0a3d6b8336a8c">operator&gt;</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2b842df58ed8a8f525e0a3d6b8336a8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga2b842df58ed8a8f525e0a3d6b8336a8c">More...</a><br /></td></tr>
<tr class="separator:ga2b842df58ed8a8f525e0a3d6b8336a8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga20677ba2fe710c9ca725613269e23e3d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga20677ba2fe710c9ca725613269e23e3d">operator&gt;</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga20677ba2fe710c9ca725613269e23e3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga20677ba2fe710c9ca725613269e23e3d">More...</a><br /></td></tr>
<tr class="separator:ga20677ba2fe710c9ca725613269e23e3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f50fb99a4afee3920b531184fd6401b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga6f50fb99a4afee3920b531184fd6401b">operator&gt;</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6f50fb99a4afee3920b531184fd6401b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga6f50fb99a4afee3920b531184fd6401b">More...</a><br /></td></tr>
<tr class="separator:ga6f50fb99a4afee3920b531184fd6401b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad09c785a46aad8732a3fe4aa9bc831c2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gad09c785a46aad8732a3fe4aa9bc831c2">operator&gt;</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad09c785a46aad8732a3fe4aa9bc831c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gad09c785a46aad8732a3fe4aa9bc831c2">More...</a><br /></td></tr>
<tr class="separator:gad09c785a46aad8732a3fe4aa9bc831c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0102cd1db9cc791f6b8f2c3c18f13bd6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga0102cd1db9cc791f6b8f2c3c18f13bd6">operator&gt;</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0102cd1db9cc791f6b8f2c3c18f13bd6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga0102cd1db9cc791f6b8f2c3c18f13bd6">More...</a><br /></td></tr>
<tr class="separator:ga0102cd1db9cc791f6b8f2c3c18f13bd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa39a2d65a59306bc4c92d444b750173a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaa39a2d65a59306bc4c92d444b750173a">operator&gt;</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa39a2d65a59306bc4c92d444b750173a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gaa39a2d65a59306bc4c92d444b750173a">More...</a><br /></td></tr>
<tr class="separator:gaa39a2d65a59306bc4c92d444b750173a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2c6e69d79ae930f31dc658b65026054e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga2c6e69d79ae930f31dc658b65026054e">operator&gt;</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2c6e69d79ae930f31dc658b65026054e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga2c6e69d79ae930f31dc658b65026054e">More...</a><br /></td></tr>
<tr class="separator:ga2c6e69d79ae930f31dc658b65026054e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeac03f2dfc7462295724c365f8b59404"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaeac03f2dfc7462295724c365f8b59404">operator&gt;</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gaeac03f2dfc7462295724c365f8b59404"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gaeac03f2dfc7462295724c365f8b59404">More...</a><br /></td></tr>
<tr class="separator:gaeac03f2dfc7462295724c365f8b59404"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9555749c2d079d547e01e20d3694ffaa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga9555749c2d079d547e01e20d3694ffaa">operator&gt;</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga9555749c2d079d547e01e20d3694ffaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga9555749c2d079d547e01e20d3694ffaa">More...</a><br /></td></tr>
<tr class="separator:ga9555749c2d079d547e01e20d3694ffaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga16086c7ca60ced479d5b4ee1b1071143"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga16086c7ca60ced479d5b4ee1b1071143">operator&gt;</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga16086c7ca60ced479d5b4ee1b1071143"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga16086c7ca60ced479d5b4ee1b1071143">More...</a><br /></td></tr>
<tr class="separator:ga16086c7ca60ced479d5b4ee1b1071143"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae0f3cae3b9676bd5d4f470f91f573d6c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gae0f3cae3b9676bd5d4f470f91f573d6c">operator&gt;</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:gae0f3cae3b9676bd5d4f470f91f573d6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gae0f3cae3b9676bd5d4f470f91f573d6c">More...</a><br /></td></tr>
<tr class="separator:gae0f3cae3b9676bd5d4f470f91f573d6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0dc17ed9c2106d932e497c236f0427ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga0dc17ed9c2106d932e497c236f0427ce">operator&gt;</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga0dc17ed9c2106d932e497c236f0427ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga0dc17ed9c2106d932e497c236f0427ce">More...</a><br /></td></tr>
<tr class="separator:ga0dc17ed9c2106d932e497c236f0427ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa03601239b1c6870da2d33783d0c8cc4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaa03601239b1c6870da2d33783d0c8cc4">operator&gt;</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gaa03601239b1c6870da2d33783d0c8cc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gaa03601239b1c6870da2d33783d0c8cc4">More...</a><br /></td></tr>
<tr class="separator:gaa03601239b1c6870da2d33783d0c8cc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaff2fd7196d0cce3f06050a84ec6a0e8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaff2fd7196d0cce3f06050a84ec6a0e8e">operator&gt;</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:gaff2fd7196d0cce3f06050a84ec6a0e8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gaff2fd7196d0cce3f06050a84ec6a0e8e">More...</a><br /></td></tr>
<tr class="separator:gaff2fd7196d0cce3f06050a84ec6a0e8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c373cbdebdad2e04f63066ba52d6702"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga8c373cbdebdad2e04f63066ba52d6702">operator&gt;</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga8c373cbdebdad2e04f63066ba52d6702"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga8c373cbdebdad2e04f63066ba52d6702">More...</a><br /></td></tr>
<tr class="separator:ga8c373cbdebdad2e04f63066ba52d6702"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga237289482c2e3a66c5d7f03c6fd724f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga237289482c2e3a66c5d7f03c6fd724f4">operator&gt;</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga237289482c2e3a66c5d7f03c6fd724f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga237289482c2e3a66c5d7f03c6fd724f4">More...</a><br /></td></tr>
<tr class="separator:ga237289482c2e3a66c5d7f03c6fd724f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3f5e56c3791da8e2811a5160bc5c1a75"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga3f5e56c3791da8e2811a5160bc5c1a75">operator&gt;</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga3f5e56c3791da8e2811a5160bc5c1a75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga3f5e56c3791da8e2811a5160bc5c1a75">More...</a><br /></td></tr>
<tr class="separator:ga3f5e56c3791da8e2811a5160bc5c1a75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0e90cb941435f856b37b9e34448d969"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaa0e90cb941435f856b37b9e34448d969">operator&gt;</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gaa0e90cb941435f856b37b9e34448d969"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gaa0e90cb941435f856b37b9e34448d969">More...</a><br /></td></tr>
<tr class="separator:gaa0e90cb941435f856b37b9e34448d969"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5a8534ed15ee827117391ef6dbc1143e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga5a8534ed15ee827117391ef6dbc1143e">operator&gt;</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga5a8534ed15ee827117391ef6dbc1143e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga5a8534ed15ee827117391ef6dbc1143e">More...</a><br /></td></tr>
<tr class="separator:ga5a8534ed15ee827117391ef6dbc1143e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaedd3a20094d3786a6417b017c119bdf4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaedd3a20094d3786a6417b017c119bdf4">operator&gt;</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gaedd3a20094d3786a6417b017c119bdf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga24773a0031478b917eed609f13ee7a80"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga24773a0031478b917eed609f13ee7a80">operator&gt;</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga24773a0031478b917eed609f13ee7a80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga24773a0031478b917eed609f13ee7a80">More...</a><br /></td></tr>
<tr class="separator:ga24773a0031478b917eed609f13ee7a80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf9deb5aa3ba33a24ff21f390577b00ae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaf9deb5aa3ba33a24ff21f390577b00ae">operator&gt;</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf9deb5aa3ba33a24ff21f390577b00ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#gaf9deb5aa3ba33a24ff21f390577b00ae">More...</a><br /></td></tr>
<tr class="separator:gaf9deb5aa3ba33a24ff21f390577b00ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11c940bb5dc1ae385bb0e4a15a88b008"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga11c940bb5dc1ae385bb0e4a15a88b008">operator&gt;</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga11c940bb5dc1ae385bb0e4a15a88b008"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.   <a href="group__arith__func__gt.htm#ga11c940bb5dc1ae385bb0e4a15a88b008">More...</a><br /></td></tr>
<tr class="separator:ga11c940bb5dc1ae385bb0e4a15a88b008"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga918da93335a59938845d9cc3970f3961"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga918da93335a59938845d9cc3970f3961">operator&gt;</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga918da93335a59938845d9cc3970f3961"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga5a63c6d33f332dec1d770e4ed191fc48"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga5a63c6d33f332dec1d770e4ed191fc48">operator&gt;=</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5a63c6d33f332dec1d770e4ed191fc48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga5a63c6d33f332dec1d770e4ed191fc48">More...</a><br /></td></tr>
<tr class="separator:ga5a63c6d33f332dec1d770e4ed191fc48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf5eeb6f7088104411828b33893ee23c6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gaf5eeb6f7088104411828b33893ee23c6">operator&gt;=</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf5eeb6f7088104411828b33893ee23c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#gaf5eeb6f7088104411828b33893ee23c6">More...</a><br /></td></tr>
<tr class="separator:gaf5eeb6f7088104411828b33893ee23c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae69f77441c63c391122fdd261d38e4fb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gae69f77441c63c391122fdd261d38e4fb">operator&gt;=</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae69f77441c63c391122fdd261d38e4fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#gae69f77441c63c391122fdd261d38e4fb">More...</a><br /></td></tr>
<tr class="separator:gae69f77441c63c391122fdd261d38e4fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2c3678de47c8a1e9baf77bef0bb3b4a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga2c3678de47c8a1e9baf77bef0bb3b4a8">operator&gt;=</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2c3678de47c8a1e9baf77bef0bb3b4a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga2c3678de47c8a1e9baf77bef0bb3b4a8">More...</a><br /></td></tr>
<tr class="separator:ga2c3678de47c8a1e9baf77bef0bb3b4a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadaef1f84593c7d74d11eca025ebe3daa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gadaef1f84593c7d74d11eca025ebe3daa">operator&gt;=</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gadaef1f84593c7d74d11eca025ebe3daa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#gadaef1f84593c7d74d11eca025ebe3daa">More...</a><br /></td></tr>
<tr class="separator:gadaef1f84593c7d74d11eca025ebe3daa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2bbb49c163b3dee0682c216c278d930e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga2bbb49c163b3dee0682c216c278d930e">operator&gt;=</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2bbb49c163b3dee0682c216c278d930e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga2bbb49c163b3dee0682c216c278d930e">More...</a><br /></td></tr>
<tr class="separator:ga2bbb49c163b3dee0682c216c278d930e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d381f0a881ce604b1ccb1ac251625f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga2d381f0a881ce604b1ccb1ac251625f9">operator&gt;=</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2d381f0a881ce604b1ccb1ac251625f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga2d381f0a881ce604b1ccb1ac251625f9">More...</a><br /></td></tr>
<tr class="separator:ga2d381f0a881ce604b1ccb1ac251625f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga27cd2055eae331bc4d8f2b0e9cd57e95"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga27cd2055eae331bc4d8f2b0e9cd57e95">operator&gt;=</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga27cd2055eae331bc4d8f2b0e9cd57e95"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga27cd2055eae331bc4d8f2b0e9cd57e95">More...</a><br /></td></tr>
<tr class="separator:ga27cd2055eae331bc4d8f2b0e9cd57e95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf7ac52c782cfc9698e7d108d37e11623"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gaf7ac52c782cfc9698e7d108d37e11623">operator&gt;=</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf7ac52c782cfc9698e7d108d37e11623"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#gaf7ac52c782cfc9698e7d108d37e11623">More...</a><br /></td></tr>
<tr class="separator:gaf7ac52c782cfc9698e7d108d37e11623"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2795646f1d9be2d6a0234209e966cfe0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga2795646f1d9be2d6a0234209e966cfe0">operator&gt;=</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2795646f1d9be2d6a0234209e966cfe0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga2795646f1d9be2d6a0234209e966cfe0">More...</a><br /></td></tr>
<tr class="separator:ga2795646f1d9be2d6a0234209e966cfe0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae1301a069696fdab46b51483e7393e52"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gae1301a069696fdab46b51483e7393e52">operator&gt;=</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae1301a069696fdab46b51483e7393e52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#gae1301a069696fdab46b51483e7393e52">More...</a><br /></td></tr>
<tr class="separator:gae1301a069696fdab46b51483e7393e52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1aa31172e23a51ec4ba6d5681aeacde0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga1aa31172e23a51ec4ba6d5681aeacde0">operator&gt;=</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1aa31172e23a51ec4ba6d5681aeacde0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga1aa31172e23a51ec4ba6d5681aeacde0">More...</a><br /></td></tr>
<tr class="separator:ga1aa31172e23a51ec4ba6d5681aeacde0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa6e76960c5811a45bb56ba16ad5364f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gaa6e76960c5811a45bb56ba16ad5364f1">operator&gt;=</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa6e76960c5811a45bb56ba16ad5364f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#gaa6e76960c5811a45bb56ba16ad5364f1">More...</a><br /></td></tr>
<tr class="separator:gaa6e76960c5811a45bb56ba16ad5364f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab3f8cf1f2c3030be36089db46f945c47"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gab3f8cf1f2c3030be36089db46f945c47">operator&gt;=</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab3f8cf1f2c3030be36089db46f945c47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#gab3f8cf1f2c3030be36089db46f945c47">More...</a><br /></td></tr>
<tr class="separator:gab3f8cf1f2c3030be36089db46f945c47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3c1e6563a6f1aa84a5a87ee6f9998a9f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga3c1e6563a6f1aa84a5a87ee6f9998a9f">operator&gt;=</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga3c1e6563a6f1aa84a5a87ee6f9998a9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga3c1e6563a6f1aa84a5a87ee6f9998a9f">More...</a><br /></td></tr>
<tr class="separator:ga3c1e6563a6f1aa84a5a87ee6f9998a9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab99154dad58dab2c507e20b2c8cad9ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gab99154dad58dab2c507e20b2c8cad9ff">operator&gt;=</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gab99154dad58dab2c507e20b2c8cad9ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#gab99154dad58dab2c507e20b2c8cad9ff">More...</a><br /></td></tr>
<tr class="separator:gab99154dad58dab2c507e20b2c8cad9ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7f8c423ca38614f5eff3357eac96f4fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga7f8c423ca38614f5eff3357eac96f4fd">operator&gt;=</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga7f8c423ca38614f5eff3357eac96f4fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga7f8c423ca38614f5eff3357eac96f4fd">More...</a><br /></td></tr>
<tr class="separator:ga7f8c423ca38614f5eff3357eac96f4fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7feaae4310a64c790b0fa1afb278fba9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga7feaae4310a64c790b0fa1afb278fba9">operator&gt;=</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga7feaae4310a64c790b0fa1afb278fba9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga7feaae4310a64c790b0fa1afb278fba9">More...</a><br /></td></tr>
<tr class="separator:ga7feaae4310a64c790b0fa1afb278fba9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga53b917b73fef4e88f6549a40ac1c3ea8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga53b917b73fef4e88f6549a40ac1c3ea8">operator&gt;=</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga53b917b73fef4e88f6549a40ac1c3ea8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga53b917b73fef4e88f6549a40ac1c3ea8">More...</a><br /></td></tr>
<tr class="separator:ga53b917b73fef4e88f6549a40ac1c3ea8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga228c27bb6a3b775f3f098b80900f2aa6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga228c27bb6a3b775f3f098b80900f2aa6">operator&gt;=</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga228c27bb6a3b775f3f098b80900f2aa6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga228c27bb6a3b775f3f098b80900f2aa6">More...</a><br /></td></tr>
<tr class="separator:ga228c27bb6a3b775f3f098b80900f2aa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga713ff00f4dafee7d17217823f6a928bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga713ff00f4dafee7d17217823f6a928bb">operator&gt;=</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga713ff00f4dafee7d17217823f6a928bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga713ff00f4dafee7d17217823f6a928bb">More...</a><br /></td></tr>
<tr class="separator:ga713ff00f4dafee7d17217823f6a928bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1dfe2fded1de71dda7bd8864eeda3a02"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga1dfe2fded1de71dda7bd8864eeda3a02">operator&gt;=</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga1dfe2fded1de71dda7bd8864eeda3a02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga1dfe2fded1de71dda7bd8864eeda3a02">More...</a><br /></td></tr>
<tr class="separator:ga1dfe2fded1de71dda7bd8864eeda3a02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae1d3261a82beea4bfee5571323be3c30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gae1d3261a82beea4bfee5571323be3c30">operator&gt;=</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gae1d3261a82beea4bfee5571323be3c30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#gae1d3261a82beea4bfee5571323be3c30">More...</a><br /></td></tr>
<tr class="separator:gae1d3261a82beea4bfee5571323be3c30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga279b89894396b768029702afb2ea877b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga279b89894396b768029702afb2ea877b">operator&gt;=</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga279b89894396b768029702afb2ea877b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga279b89894396b768029702afb2ea877b">More...</a><br /></td></tr>
<tr class="separator:ga279b89894396b768029702afb2ea877b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga04c6e2bb1cea1edf2fdc73a812e104fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga04c6e2bb1cea1edf2fdc73a812e104fa">operator&gt;=</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga04c6e2bb1cea1edf2fdc73a812e104fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga04c6e2bb1cea1edf2fdc73a812e104fa">More...</a><br /></td></tr>
<tr class="separator:ga04c6e2bb1cea1edf2fdc73a812e104fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac533f2c45c3e9498c8be6152a277d228"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gac533f2c45c3e9498c8be6152a277d228">operator&gt;=</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gac533f2c45c3e9498c8be6152a277d228"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#gac533f2c45c3e9498c8be6152a277d228">More...</a><br /></td></tr>
<tr class="separator:gac533f2c45c3e9498c8be6152a277d228"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5720d91075b612414b8f2ad94c77313f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga5720d91075b612414b8f2ad94c77313f">operator&gt;=</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga5720d91075b612414b8f2ad94c77313f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaff5138eafedb3baf468433026553d1ae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gaff5138eafedb3baf468433026553d1ae">operator&gt;=</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaff5138eafedb3baf468433026553d1ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#gaff5138eafedb3baf468433026553d1ae">More...</a><br /></td></tr>
<tr class="separator:gaff5138eafedb3baf468433026553d1ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga91386759552537dc17acb74a4c3582da"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga91386759552537dc17acb74a4c3582da">operator&gt;=</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga91386759552537dc17acb74a4c3582da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga91386759552537dc17acb74a4c3582da">More...</a><br /></td></tr>
<tr class="separator:ga91386759552537dc17acb74a4c3582da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1fd5aef41af102c096b81de0065df214"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga1fd5aef41af102c096b81de0065df214">operator&gt;=</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga1fd5aef41af102c096b81de0065df214"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.   <a href="group__arith__func__ge.htm#ga1fd5aef41af102c096b81de0065df214">More...</a><br /></td></tr>
<tr class="separator:ga1fd5aef41af102c096b81de0065df214"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabdcb3d3098ee9e1eb1d43bb2933bdd95"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gabdcb3d3098ee9e1eb1d43bb2933bdd95">operator&gt;=</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gabdcb3d3098ee9e1eb1d43bb2933bdd95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga506b0d3c2fddaf44d7dc30f79e6212d7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga506b0d3c2fddaf44d7dc30f79e6212d7">operator||</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga506b0d3c2fddaf44d7dc30f79e6212d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga506b0d3c2fddaf44d7dc30f79e6212d7">More...</a><br /></td></tr>
<tr class="separator:ga506b0d3c2fddaf44d7dc30f79e6212d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab2c7e633c5d60eb37a6f7d87fa20a35f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gab2c7e633c5d60eb37a6f7d87fa20a35f">operator||</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab2c7e633c5d60eb37a6f7d87fa20a35f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#gab2c7e633c5d60eb37a6f7d87fa20a35f">More...</a><br /></td></tr>
<tr class="separator:gab2c7e633c5d60eb37a6f7d87fa20a35f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2c387498166d75a8d30bdc3563f38ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gad2c387498166d75a8d30bdc3563f38ef">operator||</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad2c387498166d75a8d30bdc3563f38ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#gad2c387498166d75a8d30bdc3563f38ef">More...</a><br /></td></tr>
<tr class="separator:gad2c387498166d75a8d30bdc3563f38ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaad63f051077d2fe2934a7636a159a4ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gaad63f051077d2fe2934a7636a159a4ce">operator||</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaad63f051077d2fe2934a7636a159a4ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#gaad63f051077d2fe2934a7636a159a4ce">More...</a><br /></td></tr>
<tr class="separator:gaad63f051077d2fe2934a7636a159a4ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9702188ffa8056ae38b395fc6285eb21"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga9702188ffa8056ae38b395fc6285eb21">operator||</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9702188ffa8056ae38b395fc6285eb21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga9702188ffa8056ae38b395fc6285eb21">More...</a><br /></td></tr>
<tr class="separator:ga9702188ffa8056ae38b395fc6285eb21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga51d20fdf51c994ba8892e87a525c1904"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga51d20fdf51c994ba8892e87a525c1904">operator||</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga51d20fdf51c994ba8892e87a525c1904"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga51d20fdf51c994ba8892e87a525c1904">More...</a><br /></td></tr>
<tr class="separator:ga51d20fdf51c994ba8892e87a525c1904"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga54d58551b24cb5a6b4b58e3ae5ac5e48"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga54d58551b24cb5a6b4b58e3ae5ac5e48">operator||</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga54d58551b24cb5a6b4b58e3ae5ac5e48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga54d58551b24cb5a6b4b58e3ae5ac5e48">More...</a><br /></td></tr>
<tr class="separator:ga54d58551b24cb5a6b4b58e3ae5ac5e48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga324c2d4cb10fa5f8285c139ea8367367"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga324c2d4cb10fa5f8285c139ea8367367">operator||</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga324c2d4cb10fa5f8285c139ea8367367"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga324c2d4cb10fa5f8285c139ea8367367">More...</a><br /></td></tr>
<tr class="separator:ga324c2d4cb10fa5f8285c139ea8367367"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga87cc3cdd5213e99b6dffcb15db67e8bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga87cc3cdd5213e99b6dffcb15db67e8bc">operator||</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga87cc3cdd5213e99b6dffcb15db67e8bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga87cc3cdd5213e99b6dffcb15db67e8bc">More...</a><br /></td></tr>
<tr class="separator:ga87cc3cdd5213e99b6dffcb15db67e8bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae7817648b665c1878fbd949d78cd9c50"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gae7817648b665c1878fbd949d78cd9c50">operator||</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae7817648b665c1878fbd949d78cd9c50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#gae7817648b665c1878fbd949d78cd9c50">More...</a><br /></td></tr>
<tr class="separator:gae7817648b665c1878fbd949d78cd9c50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeea5737ae96642e3eccd602951748fc5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gaeea5737ae96642e3eccd602951748fc5">operator||</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaeea5737ae96642e3eccd602951748fc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#gaeea5737ae96642e3eccd602951748fc5">More...</a><br /></td></tr>
<tr class="separator:gaeea5737ae96642e3eccd602951748fc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0ae9902b35f4ed966066e569a56c0a34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga0ae9902b35f4ed966066e569a56c0a34">operator||</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0ae9902b35f4ed966066e569a56c0a34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga0ae9902b35f4ed966066e569a56c0a34">More...</a><br /></td></tr>
<tr class="separator:ga0ae9902b35f4ed966066e569a56c0a34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeba749ff9a231dfdc9fe917e70943cdb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gaeba749ff9a231dfdc9fe917e70943cdb">operator||</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaeba749ff9a231dfdc9fe917e70943cdb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#gaeba749ff9a231dfdc9fe917e70943cdb">More...</a><br /></td></tr>
<tr class="separator:gaeba749ff9a231dfdc9fe917e70943cdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga19ff0161c031c21ed3b10fde55fb4232"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga19ff0161c031c21ed3b10fde55fb4232">operator||</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga19ff0161c031c21ed3b10fde55fb4232"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga19ff0161c031c21ed3b10fde55fb4232">More...</a><br /></td></tr>
<tr class="separator:ga19ff0161c031c21ed3b10fde55fb4232"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6316a55175e07ce755fafbc4fa7f58b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga6316a55175e07ce755fafbc4fa7f58b9">operator||</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga6316a55175e07ce755fafbc4fa7f58b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga6316a55175e07ce755fafbc4fa7f58b9">More...</a><br /></td></tr>
<tr class="separator:ga6316a55175e07ce755fafbc4fa7f58b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac17c0bee51e7205ee716dd03696cc0bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gac17c0bee51e7205ee716dd03696cc0bb">operator||</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gac17c0bee51e7205ee716dd03696cc0bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#gac17c0bee51e7205ee716dd03696cc0bb">More...</a><br /></td></tr>
<tr class="separator:gac17c0bee51e7205ee716dd03696cc0bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac8beddc9fdd8cf7b04ef7bc15b4d3ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gaac8beddc9fdd8cf7b04ef7bc15b4d3ef">operator||</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gaac8beddc9fdd8cf7b04ef7bc15b4d3ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#gaac8beddc9fdd8cf7b04ef7bc15b4d3ef">More...</a><br /></td></tr>
<tr class="separator:gaac8beddc9fdd8cf7b04ef7bc15b4d3ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae956d550008632074f4c1fdcb5ec1d6b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gae956d550008632074f4c1fdcb5ec1d6b">operator||</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:gae956d550008632074f4c1fdcb5ec1d6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#gae956d550008632074f4c1fdcb5ec1d6b">More...</a><br /></td></tr>
<tr class="separator:gae956d550008632074f4c1fdcb5ec1d6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4880f2647999de771a65ffa2bd5fefec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga4880f2647999de771a65ffa2bd5fefec">operator||</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga4880f2647999de771a65ffa2bd5fefec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga4880f2647999de771a65ffa2bd5fefec">More...</a><br /></td></tr>
<tr class="separator:ga4880f2647999de771a65ffa2bd5fefec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga46aa4de9661e670c44dc767c6a5c09c7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga46aa4de9661e670c44dc767c6a5c09c7">operator||</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga46aa4de9661e670c44dc767c6a5c09c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga46aa4de9661e670c44dc767c6a5c09c7">More...</a><br /></td></tr>
<tr class="separator:ga46aa4de9661e670c44dc767c6a5c09c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaad9f61dd446f01e2207a231c286f9ca1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gaad9f61dd446f01e2207a231c286f9ca1">operator||</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:gaad9f61dd446f01e2207a231c286f9ca1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#gaad9f61dd446f01e2207a231c286f9ca1">More...</a><br /></td></tr>
<tr class="separator:gaad9f61dd446f01e2207a231c286f9ca1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga66be9e9e09727a32f1d17929508aa9ee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga66be9e9e09727a32f1d17929508aa9ee">operator||</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga66be9e9e09727a32f1d17929508aa9ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga66be9e9e09727a32f1d17929508aa9ee">More...</a><br /></td></tr>
<tr class="separator:ga66be9e9e09727a32f1d17929508aa9ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4945389ddf6cb5cb7e99e6d9a0bfa3e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga4945389ddf6cb5cb7e99e6d9a0bfa3e9">operator||</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga4945389ddf6cb5cb7e99e6d9a0bfa3e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga4945389ddf6cb5cb7e99e6d9a0bfa3e9">More...</a><br /></td></tr>
<tr class="separator:ga4945389ddf6cb5cb7e99e6d9a0bfa3e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e9861acfeb83e2a46637c323a06c65a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga8e9861acfeb83e2a46637c323a06c65a">operator||</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga8e9861acfeb83e2a46637c323a06c65a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga8e9861acfeb83e2a46637c323a06c65a">More...</a><br /></td></tr>
<tr class="separator:ga8e9861acfeb83e2a46637c323a06c65a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac8c62fc649e13cfb5d43e7afab8b5862"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gac8c62fc649e13cfb5d43e7afab8b5862">operator||</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gac8c62fc649e13cfb5d43e7afab8b5862"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#gac8c62fc649e13cfb5d43e7afab8b5862">More...</a><br /></td></tr>
<tr class="separator:gac8c62fc649e13cfb5d43e7afab8b5862"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b5bb9ce47157bab4544e8be2fba2ab2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga4b5bb9ce47157bab4544e8be2fba2ab2">operator||</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga4b5bb9ce47157bab4544e8be2fba2ab2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga4b5bb9ce47157bab4544e8be2fba2ab2">More...</a><br /></td></tr>
<tr class="separator:ga4b5bb9ce47157bab4544e8be2fba2ab2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeee5d22ec5bca690da9677814b564af0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gaeee5d22ec5bca690da9677814b564af0">operator||</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gaeee5d22ec5bca690da9677814b564af0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6cd30ecf4a08b189cb25facdd6e147f2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga6cd30ecf4a08b189cb25facdd6e147f2">operator||</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6cd30ecf4a08b189cb25facdd6e147f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga6cd30ecf4a08b189cb25facdd6e147f2">More...</a><br /></td></tr>
<tr class="separator:ga6cd30ecf4a08b189cb25facdd6e147f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga078f69ef9fbf7e764c6ecc7e4cc08c6d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga078f69ef9fbf7e764c6ecc7e4cc08c6d">operator||</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga078f69ef9fbf7e764c6ecc7e4cc08c6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#ga078f69ef9fbf7e764c6ecc7e4cc08c6d">More...</a><br /></td></tr>
<tr class="separator:ga078f69ef9fbf7e764c6ecc7e4cc08c6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf129dc3ff3f9040274efd047a0ab8947"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gaf129dc3ff3f9040274efd047a0ab8947">operator||</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:gaf129dc3ff3f9040274efd047a0ab8947"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.   <a href="group__arith__func__or.htm#gaf129dc3ff3f9040274efd047a0ab8947">More...</a><br /></td></tr>
<tr class="separator:gaf129dc3ff3f9040274efd047a0ab8947"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6dad0926c4425201d90622598776755c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga6dad0926c4425201d90622598776755c">operator||</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga6dad0926c4425201d90622598776755c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gafcbb4f28a4d0d1493417fd1ae21f1ec4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gafcbb4f28a4d0d1493417fd1ae21f1ec4">operator%</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gafcbb4f28a4d0d1493417fd1ae21f1ec4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#gafcbb4f28a4d0d1493417fd1ae21f1ec4">More...</a><br /></td></tr>
<tr class="separator:gafcbb4f28a4d0d1493417fd1ae21f1ec4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga52ecb67f1f3ae3b2f2015fd61d6ebdd3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga52ecb67f1f3ae3b2f2015fd61d6ebdd3">operator%</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga52ecb67f1f3ae3b2f2015fd61d6ebdd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga52ecb67f1f3ae3b2f2015fd61d6ebdd3">More...</a><br /></td></tr>
<tr class="separator:ga52ecb67f1f3ae3b2f2015fd61d6ebdd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e66462807a04fd1f2c67fc3fda4a4e1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga9e66462807a04fd1f2c67fc3fda4a4e1">operator%</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9e66462807a04fd1f2c67fc3fda4a4e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga9e66462807a04fd1f2c67fc3fda4a4e1">More...</a><br /></td></tr>
<tr class="separator:ga9e66462807a04fd1f2c67fc3fda4a4e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7a075a6a44e6f4acc76a89b1a6cd7cda"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga7a075a6a44e6f4acc76a89b1a6cd7cda">operator%</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7a075a6a44e6f4acc76a89b1a6cd7cda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga7a075a6a44e6f4acc76a89b1a6cd7cda">More...</a><br /></td></tr>
<tr class="separator:ga7a075a6a44e6f4acc76a89b1a6cd7cda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaccdc73995e38747d6cd7ca2ff11adb4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gaaccdc73995e38747d6cd7ca2ff11adb4">operator%</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaaccdc73995e38747d6cd7ca2ff11adb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#gaaccdc73995e38747d6cd7ca2ff11adb4">More...</a><br /></td></tr>
<tr class="separator:gaaccdc73995e38747d6cd7ca2ff11adb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe92f24f3e8b728996868b322ad3dc39"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gabe92f24f3e8b728996868b322ad3dc39">operator%</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gabe92f24f3e8b728996868b322ad3dc39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#gabe92f24f3e8b728996868b322ad3dc39">More...</a><br /></td></tr>
<tr class="separator:gabe92f24f3e8b728996868b322ad3dc39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad6059f7363511efba9c9212ad21bdd9d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gad6059f7363511efba9c9212ad21bdd9d">operator%</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad6059f7363511efba9c9212ad21bdd9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#gad6059f7363511efba9c9212ad21bdd9d">More...</a><br /></td></tr>
<tr class="separator:gad6059f7363511efba9c9212ad21bdd9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1fdf9241fdcce3370a14cb167d1d5206"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga1fdf9241fdcce3370a14cb167d1d5206">operator%</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1fdf9241fdcce3370a14cb167d1d5206"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga1fdf9241fdcce3370a14cb167d1d5206">More...</a><br /></td></tr>
<tr class="separator:ga1fdf9241fdcce3370a14cb167d1d5206"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4c62dd59b51d7ae0cbecf3702471b295"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga4c62dd59b51d7ae0cbecf3702471b295">operator%</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4c62dd59b51d7ae0cbecf3702471b295"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga4c62dd59b51d7ae0cbecf3702471b295">More...</a><br /></td></tr>
<tr class="separator:ga4c62dd59b51d7ae0cbecf3702471b295"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a895b189cd96cfe9dc33576c056ccda"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga2a895b189cd96cfe9dc33576c056ccda">operator%</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2a895b189cd96cfe9dc33576c056ccda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga2a895b189cd96cfe9dc33576c056ccda">More...</a><br /></td></tr>
<tr class="separator:ga2a895b189cd96cfe9dc33576c056ccda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1fec64d003ddbbc56593fe4b5368167f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga1fec64d003ddbbc56593fe4b5368167f">operator%</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1fec64d003ddbbc56593fe4b5368167f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga1fec64d003ddbbc56593fe4b5368167f">More...</a><br /></td></tr>
<tr class="separator:ga1fec64d003ddbbc56593fe4b5368167f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga21e36c02b8c7438cf26a08d1694bfcde"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga21e36c02b8c7438cf26a08d1694bfcde">operator%</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga21e36c02b8c7438cf26a08d1694bfcde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga21e36c02b8c7438cf26a08d1694bfcde">More...</a><br /></td></tr>
<tr class="separator:ga21e36c02b8c7438cf26a08d1694bfcde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga49bb6b08980123714cc39835a0c850a3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga49bb6b08980123714cc39835a0c850a3">operator%</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga49bb6b08980123714cc39835a0c850a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga49bb6b08980123714cc39835a0c850a3">More...</a><br /></td></tr>
<tr class="separator:ga49bb6b08980123714cc39835a0c850a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga05d908fa0d286e6b39bf25526448188c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga05d908fa0d286e6b39bf25526448188c">operator%</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga05d908fa0d286e6b39bf25526448188c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga05d908fa0d286e6b39bf25526448188c">More...</a><br /></td></tr>
<tr class="separator:ga05d908fa0d286e6b39bf25526448188c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3c2623ea2af292d16a4d9f5e540500ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga3c2623ea2af292d16a4d9f5e540500ca">operator%</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga3c2623ea2af292d16a4d9f5e540500ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga3c2623ea2af292d16a4d9f5e540500ca">More...</a><br /></td></tr>
<tr class="separator:ga3c2623ea2af292d16a4d9f5e540500ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga505b1b3012b126ce5ed27be72e179c8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga505b1b3012b126ce5ed27be72e179c8e">operator%</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga505b1b3012b126ce5ed27be72e179c8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga505b1b3012b126ce5ed27be72e179c8e">More...</a><br /></td></tr>
<tr class="separator:ga505b1b3012b126ce5ed27be72e179c8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e5e10750b4d37f3bca6c0e543a922b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga1e5e10750b4d37f3bca6c0e543a922b8">operator%</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga1e5e10750b4d37f3bca6c0e543a922b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga1e5e10750b4d37f3bca6c0e543a922b8">More...</a><br /></td></tr>
<tr class="separator:ga1e5e10750b4d37f3bca6c0e543a922b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab2cdce4f608524309acbb07e4729769d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gab2cdce4f608524309acbb07e4729769d">operator%</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:gab2cdce4f608524309acbb07e4729769d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#gab2cdce4f608524309acbb07e4729769d">More...</a><br /></td></tr>
<tr class="separator:gab2cdce4f608524309acbb07e4729769d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5beea889dcf19f9b3e770b27e882f1d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga5beea889dcf19f9b3e770b27e882f1d5">operator%</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga5beea889dcf19f9b3e770b27e882f1d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga5beea889dcf19f9b3e770b27e882f1d5">More...</a><br /></td></tr>
<tr class="separator:ga5beea889dcf19f9b3e770b27e882f1d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac3e9ba2dcf69a61aece2131e3d7bea8f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gac3e9ba2dcf69a61aece2131e3d7bea8f">operator%</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gac3e9ba2dcf69a61aece2131e3d7bea8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#gac3e9ba2dcf69a61aece2131e3d7bea8f">More...</a><br /></td></tr>
<tr class="separator:gac3e9ba2dcf69a61aece2131e3d7bea8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga53324ad85c4084f4af068f8dc7607056"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga53324ad85c4084f4af068f8dc7607056">operator%</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga53324ad85c4084f4af068f8dc7607056"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga53324ad85c4084f4af068f8dc7607056">More...</a><br /></td></tr>
<tr class="separator:ga53324ad85c4084f4af068f8dc7607056"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf4b63a5a009077d60816964505c02ce3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gaf4b63a5a009077d60816964505c02ce3">operator%</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:gaf4b63a5a009077d60816964505c02ce3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#gaf4b63a5a009077d60816964505c02ce3">More...</a><br /></td></tr>
<tr class="separator:gaf4b63a5a009077d60816964505c02ce3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga287c860be8dd582d6ba6d67870ce8d4b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga287c860be8dd582d6ba6d67870ce8d4b">operator%</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga287c860be8dd582d6ba6d67870ce8d4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga287c860be8dd582d6ba6d67870ce8d4b">More...</a><br /></td></tr>
<tr class="separator:ga287c860be8dd582d6ba6d67870ce8d4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8f72c4ffb12bc3a7c81d8fe4924b31df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga8f72c4ffb12bc3a7c81d8fe4924b31df">operator%</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga8f72c4ffb12bc3a7c81d8fe4924b31df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga8f72c4ffb12bc3a7c81d8fe4924b31df">More...</a><br /></td></tr>
<tr class="separator:ga8f72c4ffb12bc3a7c81d8fe4924b31df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9407698d9dce599f17739561c7a17edb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga9407698d9dce599f17739561c7a17edb">operator%</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga9407698d9dce599f17739561c7a17edb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga9407698d9dce599f17739561c7a17edb">More...</a><br /></td></tr>
<tr class="separator:ga9407698d9dce599f17739561c7a17edb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga69e3108d6d317e4c908dfc4444b90314"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga69e3108d6d317e4c908dfc4444b90314">operator%</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga69e3108d6d317e4c908dfc4444b90314"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga69e3108d6d317e4c908dfc4444b90314">More...</a><br /></td></tr>
<tr class="separator:ga69e3108d6d317e4c908dfc4444b90314"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab261d88a11b27c577c875b7b2430c8d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gab261d88a11b27c577c875b7b2430c8d9">operator%</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gab261d88a11b27c577c875b7b2430c8d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga075e0d2f21ee521ec4d1c19f9dd40462"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga075e0d2f21ee521ec4d1c19f9dd40462">operator%</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga075e0d2f21ee521ec4d1c19f9dd40462"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga075e0d2f21ee521ec4d1c19f9dd40462">More...</a><br /></td></tr>
<tr class="separator:ga075e0d2f21ee521ec4d1c19f9dd40462"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga42b66f0b7fa2439d7cfa0a5396a8a5aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga42b66f0b7fa2439d7cfa0a5396a8a5aa">operator%</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga42b66f0b7fa2439d7cfa0a5396a8a5aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga42b66f0b7fa2439d7cfa0a5396a8a5aa">More...</a><br /></td></tr>
<tr class="separator:ga42b66f0b7fa2439d7cfa0a5396a8a5aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e71bb8f3c2d7e111e1c79e469178114"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga3e71bb8f3c2d7e111e1c79e469178114">operator%</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga3e71bb8f3c2d7e111e1c79e469178114"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.   <a href="group__arith__func__mod.htm#ga3e71bb8f3c2d7e111e1c79e469178114">More...</a><br /></td></tr>
<tr class="separator:ga3e71bb8f3c2d7e111e1c79e469178114"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga301c399cb42dfe86f849f1faf5324937"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga301c399cb42dfe86f849f1faf5324937">operator%</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga301c399cb42dfe86f849f1faf5324937"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gaf3d865ca59384d011351a52f106a75d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gaf3d865ca59384d011351a52f106a75d0">operator|</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf3d865ca59384d011351a52f106a75d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#gaf3d865ca59384d011351a52f106a75d0">More...</a><br /></td></tr>
<tr class="separator:gaf3d865ca59384d011351a52f106a75d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga24729ad331ada89aee8494382239c981"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga24729ad331ada89aee8494382239c981">operator|</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga24729ad331ada89aee8494382239c981"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga24729ad331ada89aee8494382239c981">More...</a><br /></td></tr>
<tr class="separator:ga24729ad331ada89aee8494382239c981"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga90e116011fc446880a23dbebc5ccd20a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga90e116011fc446880a23dbebc5ccd20a">operator|</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga90e116011fc446880a23dbebc5ccd20a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga90e116011fc446880a23dbebc5ccd20a">More...</a><br /></td></tr>
<tr class="separator:ga90e116011fc446880a23dbebc5ccd20a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7cbdf79aafec8570eeefcee438854961"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga7cbdf79aafec8570eeefcee438854961">operator|</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7cbdf79aafec8570eeefcee438854961"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga7cbdf79aafec8570eeefcee438854961">More...</a><br /></td></tr>
<tr class="separator:ga7cbdf79aafec8570eeefcee438854961"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9ca5e44c942701ad94745b4bfb7064fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga9ca5e44c942701ad94745b4bfb7064fc">operator|</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9ca5e44c942701ad94745b4bfb7064fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga9ca5e44c942701ad94745b4bfb7064fc">More...</a><br /></td></tr>
<tr class="separator:ga9ca5e44c942701ad94745b4bfb7064fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa854e79e92bd0773b216bc460892edd5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gaa854e79e92bd0773b216bc460892edd5">operator|</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa854e79e92bd0773b216bc460892edd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#gaa854e79e92bd0773b216bc460892edd5">More...</a><br /></td></tr>
<tr class="separator:gaa854e79e92bd0773b216bc460892edd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga77fa2402d5de7b4e63967aa8e47d970d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga77fa2402d5de7b4e63967aa8e47d970d">operator|</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga77fa2402d5de7b4e63967aa8e47d970d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga77fa2402d5de7b4e63967aa8e47d970d">More...</a><br /></td></tr>
<tr class="separator:ga77fa2402d5de7b4e63967aa8e47d970d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad009a7d9b99282a94bf9dcd4ec859ca6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gad009a7d9b99282a94bf9dcd4ec859ca6">operator|</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad009a7d9b99282a94bf9dcd4ec859ca6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#gad009a7d9b99282a94bf9dcd4ec859ca6">More...</a><br /></td></tr>
<tr class="separator:gad009a7d9b99282a94bf9dcd4ec859ca6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6380411ac80c69e813306a6ac76737fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga6380411ac80c69e813306a6ac76737fc">operator|</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6380411ac80c69e813306a6ac76737fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga6380411ac80c69e813306a6ac76737fc">More...</a><br /></td></tr>
<tr class="separator:ga6380411ac80c69e813306a6ac76737fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabdf333a042a9d0b7415d7eeafd06db93"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gabdf333a042a9d0b7415d7eeafd06db93">operator|</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gabdf333a042a9d0b7415d7eeafd06db93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#gabdf333a042a9d0b7415d7eeafd06db93">More...</a><br /></td></tr>
<tr class="separator:gabdf333a042a9d0b7415d7eeafd06db93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaebaca9ddb7825564d9f9228e0c19ab88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gaebaca9ddb7825564d9f9228e0c19ab88">operator|</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaebaca9ddb7825564d9f9228e0c19ab88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#gaebaca9ddb7825564d9f9228e0c19ab88">More...</a><br /></td></tr>
<tr class="separator:gaebaca9ddb7825564d9f9228e0c19ab88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa6affdda1ffed1e8bc0a3a49d654e55a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gaa6affdda1ffed1e8bc0a3a49d654e55a">operator|</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa6affdda1ffed1e8bc0a3a49d654e55a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#gaa6affdda1ffed1e8bc0a3a49d654e55a">More...</a><br /></td></tr>
<tr class="separator:gaa6affdda1ffed1e8bc0a3a49d654e55a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga13187ab991e85d31eccfe1f5b142fc4a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga13187ab991e85d31eccfe1f5b142fc4a">operator|</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga13187ab991e85d31eccfe1f5b142fc4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga13187ab991e85d31eccfe1f5b142fc4a">More...</a><br /></td></tr>
<tr class="separator:ga13187ab991e85d31eccfe1f5b142fc4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4838cccad507856fb20e575e386bfbae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga4838cccad507856fb20e575e386bfbae">operator|</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4838cccad507856fb20e575e386bfbae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga4838cccad507856fb20e575e386bfbae">More...</a><br /></td></tr>
<tr class="separator:ga4838cccad507856fb20e575e386bfbae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7b51554529e639f028b3a610817ef5e6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga7b51554529e639f028b3a610817ef5e6">operator|</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga7b51554529e639f028b3a610817ef5e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga7b51554529e639f028b3a610817ef5e6">More...</a><br /></td></tr>
<tr class="separator:ga7b51554529e639f028b3a610817ef5e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa4fe57d304e0531b250a65e9a1b69019"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gaa4fe57d304e0531b250a65e9a1b69019">operator|</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gaa4fe57d304e0531b250a65e9a1b69019"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#gaa4fe57d304e0531b250a65e9a1b69019">More...</a><br /></td></tr>
<tr class="separator:gaa4fe57d304e0531b250a65e9a1b69019"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e6945c8bb9903debbfd24ef3051f428"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga9e6945c8bb9903debbfd24ef3051f428">operator|</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga9e6945c8bb9903debbfd24ef3051f428"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga9e6945c8bb9903debbfd24ef3051f428">More...</a><br /></td></tr>
<tr class="separator:ga9e6945c8bb9903debbfd24ef3051f428"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga626748e2c3f88aef6dab3ad49e20d701"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga626748e2c3f88aef6dab3ad49e20d701">operator|</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga626748e2c3f88aef6dab3ad49e20d701"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga626748e2c3f88aef6dab3ad49e20d701">More...</a><br /></td></tr>
<tr class="separator:ga626748e2c3f88aef6dab3ad49e20d701"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5775175ce5bd2baf185d7daf031ea0bf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga5775175ce5bd2baf185d7daf031ea0bf">operator|</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga5775175ce5bd2baf185d7daf031ea0bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga5775175ce5bd2baf185d7daf031ea0bf">More...</a><br /></td></tr>
<tr class="separator:ga5775175ce5bd2baf185d7daf031ea0bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8682445cef72d65077329908564fd950"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga8682445cef72d65077329908564fd950">operator|</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga8682445cef72d65077329908564fd950"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga8682445cef72d65077329908564fd950">More...</a><br /></td></tr>
<tr class="separator:ga8682445cef72d65077329908564fd950"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga716a7c1f885de291c9f60379a6f3e2f5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga716a7c1f885de291c9f60379a6f3e2f5">operator|</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga716a7c1f885de291c9f60379a6f3e2f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga716a7c1f885de291c9f60379a6f3e2f5">More...</a><br /></td></tr>
<tr class="separator:ga716a7c1f885de291c9f60379a6f3e2f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6b6d24507099fa3485d54d2054bffd92"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga6b6d24507099fa3485d54d2054bffd92">operator|</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga6b6d24507099fa3485d54d2054bffd92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga6b6d24507099fa3485d54d2054bffd92">More...</a><br /></td></tr>
<tr class="separator:ga6b6d24507099fa3485d54d2054bffd92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac7ad00a7cf95e039ec9d740a7adab0f0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gac7ad00a7cf95e039ec9d740a7adab0f0">operator|</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gac7ad00a7cf95e039ec9d740a7adab0f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#gac7ad00a7cf95e039ec9d740a7adab0f0">More...</a><br /></td></tr>
<tr class="separator:gac7ad00a7cf95e039ec9d740a7adab0f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafad53f51c56aab22383f6a0524106081"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gafad53f51c56aab22383f6a0524106081">operator|</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:gafad53f51c56aab22383f6a0524106081"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#gafad53f51c56aab22383f6a0524106081">More...</a><br /></td></tr>
<tr class="separator:gafad53f51c56aab22383f6a0524106081"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga70b356e71133718b89c3844e4f48cb3b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga70b356e71133718b89c3844e4f48cb3b">operator|</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga70b356e71133718b89c3844e4f48cb3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga70b356e71133718b89c3844e4f48cb3b">More...</a><br /></td></tr>
<tr class="separator:ga70b356e71133718b89c3844e4f48cb3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabfdfd0a8bf8c5c0dfaeea2a2f292127a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gabfdfd0a8bf8c5c0dfaeea2a2f292127a">operator|</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gabfdfd0a8bf8c5c0dfaeea2a2f292127a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#gabfdfd0a8bf8c5c0dfaeea2a2f292127a">More...</a><br /></td></tr>
<tr class="separator:gabfdfd0a8bf8c5c0dfaeea2a2f292127a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga20f1e7e7e61ea64e1ed7dc267bea91b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga20f1e7e7e61ea64e1ed7dc267bea91b6">operator|</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga20f1e7e7e61ea64e1ed7dc267bea91b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga770e72ca34cf2c3b91446faccbf811ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga770e72ca34cf2c3b91446faccbf811ca">operator|</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga770e72ca34cf2c3b91446faccbf811ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga770e72ca34cf2c3b91446faccbf811ca">More...</a><br /></td></tr>
<tr class="separator:ga770e72ca34cf2c3b91446faccbf811ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0e951d618ebdf3d9ab3b14e7481b45ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga0e951d618ebdf3d9ab3b14e7481b45ef">operator|</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0e951d618ebdf3d9ab3b14e7481b45ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#ga0e951d618ebdf3d9ab3b14e7481b45ef">More...</a><br /></td></tr>
<tr class="separator:ga0e951d618ebdf3d9ab3b14e7481b45ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada745690de11033defc03fe14f6a5f50"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gada745690de11033defc03fe14f6a5f50">operator|</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:gada745690de11033defc03fe14f6a5f50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.   <a href="group__arith__func__bitor.htm#gada745690de11033defc03fe14f6a5f50">More...</a><br /></td></tr>
<tr class="separator:gada745690de11033defc03fe14f6a5f50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga85c77120b83c9895c098e4c0190e7e79"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga85c77120b83c9895c098e4c0190e7e79">operator|</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga85c77120b83c9895c098e4c0190e7e79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga97b6fcf0e5dbe6603668f7f72c2a7977"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga97b6fcf0e5dbe6603668f7f72c2a7977">operator^</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga97b6fcf0e5dbe6603668f7f72c2a7977"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga97b6fcf0e5dbe6603668f7f72c2a7977">More...</a><br /></td></tr>
<tr class="separator:ga97b6fcf0e5dbe6603668f7f72c2a7977"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab3eb61d3ed55b46f3b596a11127540c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gab3eb61d3ed55b46f3b596a11127540c4">operator^</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab3eb61d3ed55b46f3b596a11127540c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#gab3eb61d3ed55b46f3b596a11127540c4">More...</a><br /></td></tr>
<tr class="separator:gab3eb61d3ed55b46f3b596a11127540c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga32310fc2ac0665526e064aaaf55409f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga32310fc2ac0665526e064aaaf55409f4">operator^</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga32310fc2ac0665526e064aaaf55409f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga32310fc2ac0665526e064aaaf55409f4">More...</a><br /></td></tr>
<tr class="separator:ga32310fc2ac0665526e064aaaf55409f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d36603b7fb5b9e44cd0e52ed6259393"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga1d36603b7fb5b9e44cd0e52ed6259393">operator^</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1d36603b7fb5b9e44cd0e52ed6259393"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga1d36603b7fb5b9e44cd0e52ed6259393">More...</a><br /></td></tr>
<tr class="separator:ga1d36603b7fb5b9e44cd0e52ed6259393"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb354e15049cd21c9df3a5e20c113e5a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gadb354e15049cd21c9df3a5e20c113e5a">operator^</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gadb354e15049cd21c9df3a5e20c113e5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#gadb354e15049cd21c9df3a5e20c113e5a">More...</a><br /></td></tr>
<tr class="separator:gadb354e15049cd21c9df3a5e20c113e5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab1d843fa897e572a59db765ad99ec639"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gab1d843fa897e572a59db765ad99ec639">operator^</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab1d843fa897e572a59db765ad99ec639"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#gab1d843fa897e572a59db765ad99ec639">More...</a><br /></td></tr>
<tr class="separator:gab1d843fa897e572a59db765ad99ec639"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8dd512e7a0979d84b071a790360d7cde"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga8dd512e7a0979d84b071a790360d7cde">operator^</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8dd512e7a0979d84b071a790360d7cde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga8dd512e7a0979d84b071a790360d7cde">More...</a><br /></td></tr>
<tr class="separator:ga8dd512e7a0979d84b071a790360d7cde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga753726d24eb4f0fe05b0d1eb949bf8d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga753726d24eb4f0fe05b0d1eb949bf8d0">operator^</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga753726d24eb4f0fe05b0d1eb949bf8d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga753726d24eb4f0fe05b0d1eb949bf8d0">More...</a><br /></td></tr>
<tr class="separator:ga753726d24eb4f0fe05b0d1eb949bf8d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga23d31a536551a9a37a0ed7d0bbbd540f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga23d31a536551a9a37a0ed7d0bbbd540f">operator^</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga23d31a536551a9a37a0ed7d0bbbd540f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga23d31a536551a9a37a0ed7d0bbbd540f">More...</a><br /></td></tr>
<tr class="separator:ga23d31a536551a9a37a0ed7d0bbbd540f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf473e164788f9ae19bffaab0457d0d71"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gaf473e164788f9ae19bffaab0457d0d71">operator^</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf473e164788f9ae19bffaab0457d0d71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#gaf473e164788f9ae19bffaab0457d0d71">More...</a><br /></td></tr>
<tr class="separator:gaf473e164788f9ae19bffaab0457d0d71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11d14ef9c7d610edcc4839c0ced1dcaa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga11d14ef9c7d610edcc4839c0ced1dcaa">operator^</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga11d14ef9c7d610edcc4839c0ced1dcaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga11d14ef9c7d610edcc4839c0ced1dcaa">More...</a><br /></td></tr>
<tr class="separator:ga11d14ef9c7d610edcc4839c0ced1dcaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga35080f1160a3d75e83cac0e9652a09b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga35080f1160a3d75e83cac0e9652a09b4">operator^</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga35080f1160a3d75e83cac0e9652a09b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga35080f1160a3d75e83cac0e9652a09b4">More...</a><br /></td></tr>
<tr class="separator:ga35080f1160a3d75e83cac0e9652a09b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga74323e9a1ae51b266361fb2f54c3216c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga74323e9a1ae51b266361fb2f54c3216c">operator^</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga74323e9a1ae51b266361fb2f54c3216c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga74323e9a1ae51b266361fb2f54c3216c">More...</a><br /></td></tr>
<tr class="separator:ga74323e9a1ae51b266361fb2f54c3216c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4172e6620b0423ade58236ce875843cf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga4172e6620b0423ade58236ce875843cf">operator^</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4172e6620b0423ade58236ce875843cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga4172e6620b0423ade58236ce875843cf">More...</a><br /></td></tr>
<tr class="separator:ga4172e6620b0423ade58236ce875843cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac7283a665873e3aedb3d44562a5778ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gac7283a665873e3aedb3d44562a5778ca">operator^</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gac7283a665873e3aedb3d44562a5778ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#gac7283a665873e3aedb3d44562a5778ca">More...</a><br /></td></tr>
<tr class="separator:gac7283a665873e3aedb3d44562a5778ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe63020dc8738121481faa5857b16cb3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gafe63020dc8738121481faa5857b16cb3">operator^</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gafe63020dc8738121481faa5857b16cb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#gafe63020dc8738121481faa5857b16cb3">More...</a><br /></td></tr>
<tr class="separator:gafe63020dc8738121481faa5857b16cb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga259f2585b4b580ccb1d8dda60e27416b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga259f2585b4b580ccb1d8dda60e27416b">operator^</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga259f2585b4b580ccb1d8dda60e27416b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga259f2585b4b580ccb1d8dda60e27416b">More...</a><br /></td></tr>
<tr class="separator:ga259f2585b4b580ccb1d8dda60e27416b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab98eef689e30bf92274f9518c1c8ac02"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gab98eef689e30bf92274f9518c1c8ac02">operator^</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:gab98eef689e30bf92274f9518c1c8ac02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#gab98eef689e30bf92274f9518c1c8ac02">More...</a><br /></td></tr>
<tr class="separator:gab98eef689e30bf92274f9518c1c8ac02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8df0717e770c281de891f4c9a6321e87"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga8df0717e770c281de891f4c9a6321e87">operator^</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga8df0717e770c281de891f4c9a6321e87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga8df0717e770c281de891f4c9a6321e87">More...</a><br /></td></tr>
<tr class="separator:ga8df0717e770c281de891f4c9a6321e87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga371a9461c874715c7b8c43d5b17fdb13"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga371a9461c874715c7b8c43d5b17fdb13">operator^</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga371a9461c874715c7b8c43d5b17fdb13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga371a9461c874715c7b8c43d5b17fdb13">More...</a><br /></td></tr>
<tr class="separator:ga371a9461c874715c7b8c43d5b17fdb13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11d2a1b594d12cc618cff4a2564d814f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga11d2a1b594d12cc618cff4a2564d814f">operator^</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga11d2a1b594d12cc618cff4a2564d814f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga11d2a1b594d12cc618cff4a2564d814f">More...</a><br /></td></tr>
<tr class="separator:ga11d2a1b594d12cc618cff4a2564d814f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a775332255d2f22b3d99267fb344c09"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga6a775332255d2f22b3d99267fb344c09">operator^</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga6a775332255d2f22b3d99267fb344c09"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga6a775332255d2f22b3d99267fb344c09">More...</a><br /></td></tr>
<tr class="separator:ga6a775332255d2f22b3d99267fb344c09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4617ae1a7c5f1d451565df087313d44f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga4617ae1a7c5f1d451565df087313d44f">operator^</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga4617ae1a7c5f1d451565df087313d44f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga4617ae1a7c5f1d451565df087313d44f">More...</a><br /></td></tr>
<tr class="separator:ga4617ae1a7c5f1d451565df087313d44f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00ece1d2d6d20e5217b4222e495fa5bf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga00ece1d2d6d20e5217b4222e495fa5bf">operator^</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga00ece1d2d6d20e5217b4222e495fa5bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga00ece1d2d6d20e5217b4222e495fa5bf">More...</a><br /></td></tr>
<tr class="separator:ga00ece1d2d6d20e5217b4222e495fa5bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga41fabec890eed78bcb477114c61a76ec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga41fabec890eed78bcb477114c61a76ec">operator^</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga41fabec890eed78bcb477114c61a76ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga41fabec890eed78bcb477114c61a76ec">More...</a><br /></td></tr>
<tr class="separator:ga41fabec890eed78bcb477114c61a76ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf397c833f75be66190ff681f271f47d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gaf397c833f75be66190ff681f271f47d0">operator^</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gaf397c833f75be66190ff681f271f47d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#gaf397c833f75be66190ff681f271f47d0">More...</a><br /></td></tr>
<tr class="separator:gaf397c833f75be66190ff681f271f47d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac22e69aa8bbeb28aae6322f1ee391b83"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gac22e69aa8bbeb28aae6322f1ee391b83">operator^</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gac22e69aa8bbeb28aae6322f1ee391b83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadf142b17019e2deb14b7066733cf0cd3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gadf142b17019e2deb14b7066733cf0cd3">operator^</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gadf142b17019e2deb14b7066733cf0cd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#gadf142b17019e2deb14b7066733cf0cd3">More...</a><br /></td></tr>
<tr class="separator:gadf142b17019e2deb14b7066733cf0cd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga35256817252b5b367af30b66a0cdd22d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga35256817252b5b367af30b66a0cdd22d">operator^</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga35256817252b5b367af30b66a0cdd22d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga35256817252b5b367af30b66a0cdd22d">More...</a><br /></td></tr>
<tr class="separator:ga35256817252b5b367af30b66a0cdd22d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga171b2d0c155f8bc5af9bab3c6c7111e5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga171b2d0c155f8bc5af9bab3c6c7111e5">operator^</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga171b2d0c155f8bc5af9bab3c6c7111e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.   <a href="group__arith__func__bitxor.htm#ga171b2d0c155f8bc5af9bab3c6c7111e5">More...</a><br /></td></tr>
<tr class="separator:ga171b2d0c155f8bc5af9bab3c6c7111e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c073f9808484513001a9a0a4b6ce9cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga9c073f9808484513001a9a0a4b6ce9cc">operator^</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga9c073f9808484513001a9a0a4b6ce9cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga19841f8e962cdccd8dd857d7f9242862"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga19841f8e962cdccd8dd857d7f9242862">operator&lt;&lt;</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga19841f8e962cdccd8dd857d7f9242862"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga19841f8e962cdccd8dd857d7f9242862">More...</a><br /></td></tr>
<tr class="separator:ga19841f8e962cdccd8dd857d7f9242862"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab28ddb565b0d9b84408351792376e617"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gab28ddb565b0d9b84408351792376e617">operator&lt;&lt;</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab28ddb565b0d9b84408351792376e617"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#gab28ddb565b0d9b84408351792376e617">More...</a><br /></td></tr>
<tr class="separator:gab28ddb565b0d9b84408351792376e617"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga98095dcd3001c8a6eda51bb362fd61b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga98095dcd3001c8a6eda51bb362fd61b5">operator&lt;&lt;</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga98095dcd3001c8a6eda51bb362fd61b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga98095dcd3001c8a6eda51bb362fd61b5">More...</a><br /></td></tr>
<tr class="separator:ga98095dcd3001c8a6eda51bb362fd61b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5179f957455374014a2c111570ceecfa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga5179f957455374014a2c111570ceecfa">operator&lt;&lt;</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5179f957455374014a2c111570ceecfa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga5179f957455374014a2c111570ceecfa">More...</a><br /></td></tr>
<tr class="separator:ga5179f957455374014a2c111570ceecfa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga451cdbb97591f0b92ab7a8468c945fa3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga451cdbb97591f0b92ab7a8468c945fa3">operator&lt;&lt;</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga451cdbb97591f0b92ab7a8468c945fa3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga451cdbb97591f0b92ab7a8468c945fa3">More...</a><br /></td></tr>
<tr class="separator:ga451cdbb97591f0b92ab7a8468c945fa3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa92a134baa9c9df8fdd6ec15995bcdc9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gaa92a134baa9c9df8fdd6ec15995bcdc9">operator&lt;&lt;</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa92a134baa9c9df8fdd6ec15995bcdc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#gaa92a134baa9c9df8fdd6ec15995bcdc9">More...</a><br /></td></tr>
<tr class="separator:gaa92a134baa9c9df8fdd6ec15995bcdc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3551b214c269e4160bec54f4591073c8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga3551b214c269e4160bec54f4591073c8">operator&lt;&lt;</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga3551b214c269e4160bec54f4591073c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga3551b214c269e4160bec54f4591073c8">More...</a><br /></td></tr>
<tr class="separator:ga3551b214c269e4160bec54f4591073c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11d90c3a55018b2a1486c49e9ec1c252"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga11d90c3a55018b2a1486c49e9ec1c252">operator&lt;&lt;</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga11d90c3a55018b2a1486c49e9ec1c252"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga11d90c3a55018b2a1486c49e9ec1c252">More...</a><br /></td></tr>
<tr class="separator:ga11d90c3a55018b2a1486c49e9ec1c252"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac6b74cfb08bc333a196c8b0e8c9c07b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gac6b74cfb08bc333a196c8b0e8c9c07b9">operator&lt;&lt;</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac6b74cfb08bc333a196c8b0e8c9c07b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#gac6b74cfb08bc333a196c8b0e8c9c07b9">More...</a><br /></td></tr>
<tr class="separator:gac6b74cfb08bc333a196c8b0e8c9c07b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga72ecdb97cbe9c63e668b475197998b2c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga72ecdb97cbe9c63e668b475197998b2c">operator&lt;&lt;</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga72ecdb97cbe9c63e668b475197998b2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga72ecdb97cbe9c63e668b475197998b2c">More...</a><br /></td></tr>
<tr class="separator:ga72ecdb97cbe9c63e668b475197998b2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadd0f7c17f6b881005c3b697e0a77304a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gadd0f7c17f6b881005c3b697e0a77304a">operator&lt;&lt;</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gadd0f7c17f6b881005c3b697e0a77304a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#gadd0f7c17f6b881005c3b697e0a77304a">More...</a><br /></td></tr>
<tr class="separator:gadd0f7c17f6b881005c3b697e0a77304a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4db7fa0c38758e1b42a141c0bfc2ebbd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga4db7fa0c38758e1b42a141c0bfc2ebbd">operator&lt;&lt;</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4db7fa0c38758e1b42a141c0bfc2ebbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga4db7fa0c38758e1b42a141c0bfc2ebbd">More...</a><br /></td></tr>
<tr class="separator:ga4db7fa0c38758e1b42a141c0bfc2ebbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0a028ac3b58618ffb8392cf2fd6a7815"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga0a028ac3b58618ffb8392cf2fd6a7815">operator&lt;&lt;</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0a028ac3b58618ffb8392cf2fd6a7815"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga0a028ac3b58618ffb8392cf2fd6a7815">More...</a><br /></td></tr>
<tr class="separator:ga0a028ac3b58618ffb8392cf2fd6a7815"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab2eea765d2a9766fa274eaeddfe54931"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gab2eea765d2a9766fa274eaeddfe54931">operator&lt;&lt;</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab2eea765d2a9766fa274eaeddfe54931"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#gab2eea765d2a9766fa274eaeddfe54931">More...</a><br /></td></tr>
<tr class="separator:gab2eea765d2a9766fa274eaeddfe54931"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga420fe0bef2c6b111bdb5a6dc4163ce9c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga420fe0bef2c6b111bdb5a6dc4163ce9c">operator&lt;&lt;</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga420fe0bef2c6b111bdb5a6dc4163ce9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga420fe0bef2c6b111bdb5a6dc4163ce9c">More...</a><br /></td></tr>
<tr class="separator:ga420fe0bef2c6b111bdb5a6dc4163ce9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga24553c567b48b525026e3d5e2ab5b2bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga24553c567b48b525026e3d5e2ab5b2bd">operator&lt;&lt;</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga24553c567b48b525026e3d5e2ab5b2bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga24553c567b48b525026e3d5e2ab5b2bd">More...</a><br /></td></tr>
<tr class="separator:ga24553c567b48b525026e3d5e2ab5b2bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad149377a81c0e9ca4e391c212f3fa7d3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gad149377a81c0e9ca4e391c212f3fa7d3">operator&lt;&lt;</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gad149377a81c0e9ca4e391c212f3fa7d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#gad149377a81c0e9ca4e391c212f3fa7d3">More...</a><br /></td></tr>
<tr class="separator:gad149377a81c0e9ca4e391c212f3fa7d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5983f92965fabb8b469dd8f138a0ae43"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga5983f92965fabb8b469dd8f138a0ae43">operator&lt;&lt;</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga5983f92965fabb8b469dd8f138a0ae43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga5983f92965fabb8b469dd8f138a0ae43">More...</a><br /></td></tr>
<tr class="separator:ga5983f92965fabb8b469dd8f138a0ae43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae26405cbe9e1af87fb3cc9a74b4faaf6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gae26405cbe9e1af87fb3cc9a74b4faaf6">operator&lt;&lt;</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:gae26405cbe9e1af87fb3cc9a74b4faaf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#gae26405cbe9e1af87fb3cc9a74b4faaf6">More...</a><br /></td></tr>
<tr class="separator:gae26405cbe9e1af87fb3cc9a74b4faaf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc17af826ed6ffff2d7a226f4954377a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gabc17af826ed6ffff2d7a226f4954377a">operator&lt;&lt;</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gabc17af826ed6ffff2d7a226f4954377a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#gabc17af826ed6ffff2d7a226f4954377a">More...</a><br /></td></tr>
<tr class="separator:gabc17af826ed6ffff2d7a226f4954377a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga07235c610f033948799bdafb3de3ce67"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga07235c610f033948799bdafb3de3ce67">operator&lt;&lt;</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga07235c610f033948799bdafb3de3ce67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga07235c610f033948799bdafb3de3ce67">More...</a><br /></td></tr>
<tr class="separator:ga07235c610f033948799bdafb3de3ce67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6222c8bb04a25a627878fa05658716ac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga6222c8bb04a25a627878fa05658716ac">operator&lt;&lt;</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga6222c8bb04a25a627878fa05658716ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga6222c8bb04a25a627878fa05658716ac">More...</a><br /></td></tr>
<tr class="separator:ga6222c8bb04a25a627878fa05658716ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae8c432d31c4a464b7503709e686c248c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gae8c432d31c4a464b7503709e686c248c">operator&lt;&lt;</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gae8c432d31c4a464b7503709e686c248c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#gae8c432d31c4a464b7503709e686c248c">More...</a><br /></td></tr>
<tr class="separator:gae8c432d31c4a464b7503709e686c248c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa5a39782556898cde8ee7d6e7c3d3d7e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gaa5a39782556898cde8ee7d6e7c3d3d7e">operator&lt;&lt;</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:gaa5a39782556898cde8ee7d6e7c3d3d7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#gaa5a39782556898cde8ee7d6e7c3d3d7e">More...</a><br /></td></tr>
<tr class="separator:gaa5a39782556898cde8ee7d6e7c3d3d7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d56684549e28b69db783e30d7bebc78"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga3d56684549e28b69db783e30d7bebc78">operator&lt;&lt;</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga3d56684549e28b69db783e30d7bebc78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga3d56684549e28b69db783e30d7bebc78">More...</a><br /></td></tr>
<tr class="separator:ga3d56684549e28b69db783e30d7bebc78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa520abe910f2381b41c54e75634206a9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gaa520abe910f2381b41c54e75634206a9">operator&lt;&lt;</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gaa520abe910f2381b41c54e75634206a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#gaa520abe910f2381b41c54e75634206a9">More...</a><br /></td></tr>
<tr class="separator:gaa520abe910f2381b41c54e75634206a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad438e226e28690176d50c205eac1d367"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gad438e226e28690176d50c205eac1d367">operator&lt;&lt;</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gad438e226e28690176d50c205eac1d367"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d9e0e2697b230b3fbd4131a549393cb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga1d9e0e2697b230b3fbd4131a549393cb">operator&lt;&lt;</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1d9e0e2697b230b3fbd4131a549393cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#ga1d9e0e2697b230b3fbd4131a549393cb">More...</a><br /></td></tr>
<tr class="separator:ga1d9e0e2697b230b3fbd4131a549393cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaabf17d86d713369f191e1431bb3f629e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gaabf17d86d713369f191e1431bb3f629e">operator&lt;&lt;</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaabf17d86d713369f191e1431bb3f629e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#gaabf17d86d713369f191e1431bb3f629e">More...</a><br /></td></tr>
<tr class="separator:gaabf17d86d713369f191e1431bb3f629e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabb5d61e7eb457cc94837476d9147799d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gabb5d61e7eb457cc94837476d9147799d">operator&lt;&lt;</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:gabb5d61e7eb457cc94837476d9147799d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftl.htm#gabb5d61e7eb457cc94837476d9147799d">More...</a><br /></td></tr>
<tr class="separator:gabb5d61e7eb457cc94837476d9147799d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae06c0b60e59b4581bd3fdab6db0c976"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gaae06c0b60e59b4581bd3fdab6db0c976">operator&lt;&lt;</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gaae06c0b60e59b4581bd3fdab6db0c976"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gad130d9b296937446da493f7f7f659178"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gad130d9b296937446da493f7f7f659178">operator&gt;&gt;</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad130d9b296937446da493f7f7f659178"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#gad130d9b296937446da493f7f7f659178">More...</a><br /></td></tr>
<tr class="separator:gad130d9b296937446da493f7f7f659178"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga68f103536d4b74debf634d94caebd903"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga68f103536d4b74debf634d94caebd903">operator&gt;&gt;</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga68f103536d4b74debf634d94caebd903"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga68f103536d4b74debf634d94caebd903">More...</a><br /></td></tr>
<tr class="separator:ga68f103536d4b74debf634d94caebd903"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafcc5fcaa33f4cd9afe30fa9bce081227"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gafcc5fcaa33f4cd9afe30fa9bce081227">operator&gt;&gt;</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gafcc5fcaa33f4cd9afe30fa9bce081227"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#gafcc5fcaa33f4cd9afe30fa9bce081227">More...</a><br /></td></tr>
<tr class="separator:gafcc5fcaa33f4cd9afe30fa9bce081227"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6279b94b795c9865aba061c27284fa5d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga6279b94b795c9865aba061c27284fa5d">operator&gt;&gt;</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6279b94b795c9865aba061c27284fa5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga6279b94b795c9865aba061c27284fa5d">More...</a><br /></td></tr>
<tr class="separator:ga6279b94b795c9865aba061c27284fa5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab558843d5e02e957c190af461bd8285f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gab558843d5e02e957c190af461bd8285f">operator&gt;&gt;</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab558843d5e02e957c190af461bd8285f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#gab558843d5e02e957c190af461bd8285f">More...</a><br /></td></tr>
<tr class="separator:gab558843d5e02e957c190af461bd8285f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadd6871254a67a8a9d6134ca9cc5d26ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gadd6871254a67a8a9d6134ca9cc5d26ca">operator&gt;&gt;</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gadd6871254a67a8a9d6134ca9cc5d26ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#gadd6871254a67a8a9d6134ca9cc5d26ca">More...</a><br /></td></tr>
<tr class="separator:gadd6871254a67a8a9d6134ca9cc5d26ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga872d3eec13f4e33b7e9ac83043fcba80"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga872d3eec13f4e33b7e9ac83043fcba80">operator&gt;&gt;</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga872d3eec13f4e33b7e9ac83043fcba80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga872d3eec13f4e33b7e9ac83043fcba80">More...</a><br /></td></tr>
<tr class="separator:ga872d3eec13f4e33b7e9ac83043fcba80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5342ebb77f96853012e7ce62f158524a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga5342ebb77f96853012e7ce62f158524a">operator&gt;&gt;</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5342ebb77f96853012e7ce62f158524a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga5342ebb77f96853012e7ce62f158524a">More...</a><br /></td></tr>
<tr class="separator:ga5342ebb77f96853012e7ce62f158524a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7747e83389d79236bcae6a9aa085b816"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga7747e83389d79236bcae6a9aa085b816">operator&gt;&gt;</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7747e83389d79236bcae6a9aa085b816"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga7747e83389d79236bcae6a9aa085b816">More...</a><br /></td></tr>
<tr class="separator:ga7747e83389d79236bcae6a9aa085b816"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac33519bf30ca44e4428d41e8770bacf6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gac33519bf30ca44e4428d41e8770bacf6">operator&gt;&gt;</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac33519bf30ca44e4428d41e8770bacf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#gac33519bf30ca44e4428d41e8770bacf6">More...</a><br /></td></tr>
<tr class="separator:gac33519bf30ca44e4428d41e8770bacf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd3eb5502888fa9da503df7d8ad85f93"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gafd3eb5502888fa9da503df7d8ad85f93">operator&gt;&gt;</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gafd3eb5502888fa9da503df7d8ad85f93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#gafd3eb5502888fa9da503df7d8ad85f93">More...</a><br /></td></tr>
<tr class="separator:gafd3eb5502888fa9da503df7d8ad85f93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga91840e37c2d5a71ec7d7612ac29bfb4b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga91840e37c2d5a71ec7d7612ac29bfb4b">operator&gt;&gt;</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga91840e37c2d5a71ec7d7612ac29bfb4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga91840e37c2d5a71ec7d7612ac29bfb4b">More...</a><br /></td></tr>
<tr class="separator:ga91840e37c2d5a71ec7d7612ac29bfb4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga891695eec916a0f240d2e5f6823279a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga891695eec916a0f240d2e5f6823279a2">operator&gt;&gt;</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga891695eec916a0f240d2e5f6823279a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga891695eec916a0f240d2e5f6823279a2">More...</a><br /></td></tr>
<tr class="separator:ga891695eec916a0f240d2e5f6823279a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab83151425032d20dd5b1cd71368a3700"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gab83151425032d20dd5b1cd71368a3700">operator&gt;&gt;</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab83151425032d20dd5b1cd71368a3700"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#gab83151425032d20dd5b1cd71368a3700">More...</a><br /></td></tr>
<tr class="separator:gab83151425032d20dd5b1cd71368a3700"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab78e73b2b769b5f2df86861e8aa49d1a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gab78e73b2b769b5f2df86861e8aa49d1a">operator&gt;&gt;</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gab78e73b2b769b5f2df86861e8aa49d1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#gab78e73b2b769b5f2df86861e8aa49d1a">More...</a><br /></td></tr>
<tr class="separator:gab78e73b2b769b5f2df86861e8aa49d1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga395bea130ffa5ecffd78c2ef966afa18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga395bea130ffa5ecffd78c2ef966afa18">operator&gt;&gt;</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga395bea130ffa5ecffd78c2ef966afa18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga395bea130ffa5ecffd78c2ef966afa18">More...</a><br /></td></tr>
<tr class="separator:ga395bea130ffa5ecffd78c2ef966afa18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa7a3e0403c8ede7420cf386bdff72e84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gaa7a3e0403c8ede7420cf386bdff72e84">operator&gt;&gt;</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gaa7a3e0403c8ede7420cf386bdff72e84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#gaa7a3e0403c8ede7420cf386bdff72e84">More...</a><br /></td></tr>
<tr class="separator:gaa7a3e0403c8ede7420cf386bdff72e84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ab483e40abdd8cc2d2534fd93cd1e67"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga7ab483e40abdd8cc2d2534fd93cd1e67">operator&gt;&gt;</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga7ab483e40abdd8cc2d2534fd93cd1e67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga7ab483e40abdd8cc2d2534fd93cd1e67">More...</a><br /></td></tr>
<tr class="separator:ga7ab483e40abdd8cc2d2534fd93cd1e67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0cc34e39d43d0dd6e6d471343767e774"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga0cc34e39d43d0dd6e6d471343767e774">operator&gt;&gt;</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga0cc34e39d43d0dd6e6d471343767e774"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga0cc34e39d43d0dd6e6d471343767e774">More...</a><br /></td></tr>
<tr class="separator:ga0cc34e39d43d0dd6e6d471343767e774"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2c8507f4f920ea778bbb01cdc74ea165"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga2c8507f4f920ea778bbb01cdc74ea165">operator&gt;&gt;</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga2c8507f4f920ea778bbb01cdc74ea165"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga2c8507f4f920ea778bbb01cdc74ea165">More...</a><br /></td></tr>
<tr class="separator:ga2c8507f4f920ea778bbb01cdc74ea165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f0df8a3f17c801777f67e5413e84b20"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga9f0df8a3f17c801777f67e5413e84b20">operator&gt;&gt;</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga9f0df8a3f17c801777f67e5413e84b20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga9f0df8a3f17c801777f67e5413e84b20">More...</a><br /></td></tr>
<tr class="separator:ga9f0df8a3f17c801777f67e5413e84b20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga56cbf6c8943fbe065a0c1a493259176c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga56cbf6c8943fbe065a0c1a493259176c">operator&gt;&gt;</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga56cbf6c8943fbe065a0c1a493259176c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga56cbf6c8943fbe065a0c1a493259176c">More...</a><br /></td></tr>
<tr class="separator:ga56cbf6c8943fbe065a0c1a493259176c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2eb72297b66d4ad0a16dbe196d5f8f4a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga2eb72297b66d4ad0a16dbe196d5f8f4a">operator&gt;&gt;</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga2eb72297b66d4ad0a16dbe196d5f8f4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga2eb72297b66d4ad0a16dbe196d5f8f4a">More...</a><br /></td></tr>
<tr class="separator:ga2eb72297b66d4ad0a16dbe196d5f8f4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf6bc74243092c1c03eba8820e4e4919e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gaf6bc74243092c1c03eba8820e4e4919e">operator&gt;&gt;</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:gaf6bc74243092c1c03eba8820e4e4919e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#gaf6bc74243092c1c03eba8820e4e4919e">More...</a><br /></td></tr>
<tr class="separator:gaf6bc74243092c1c03eba8820e4e4919e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb8d3de265286ba5ba75834ba5a4e9a5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gadb8d3de265286ba5ba75834ba5a4e9a5">operator&gt;&gt;</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gadb8d3de265286ba5ba75834ba5a4e9a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#gadb8d3de265286ba5ba75834ba5a4e9a5">More...</a><br /></td></tr>
<tr class="separator:gadb8d3de265286ba5ba75834ba5a4e9a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga58f0fa022d6bf3c621f2982c480dbfca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga58f0fa022d6bf3c621f2982c480dbfca">operator&gt;&gt;</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga58f0fa022d6bf3c621f2982c480dbfca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga58f0fa022d6bf3c621f2982c480dbfca">More...</a><br /></td></tr>
<tr class="separator:ga58f0fa022d6bf3c621f2982c480dbfca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa90474e2828f9906f37dc7d91c9ed228"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gaa90474e2828f9906f37dc7d91c9ed228">operator&gt;&gt;</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gaa90474e2828f9906f37dc7d91c9ed228"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga83405fd3664217f64ac944f12e14a11b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga83405fd3664217f64ac944f12e14a11b">operator&gt;&gt;</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga83405fd3664217f64ac944f12e14a11b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga83405fd3664217f64ac944f12e14a11b">More...</a><br /></td></tr>
<tr class="separator:ga83405fd3664217f64ac944f12e14a11b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4814f3258b9462be476e0e60893d2048"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga4814f3258b9462be476e0e60893d2048">operator&gt;&gt;</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4814f3258b9462be476e0e60893d2048"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#ga4814f3258b9462be476e0e60893d2048">More...</a><br /></td></tr>
<tr class="separator:ga4814f3258b9462be476e0e60893d2048"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac8ca4033985aad13a10775d271c334f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gac8ca4033985aad13a10775d271c334f8">operator&gt;&gt;</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:gac8ca4033985aad13a10775d271c334f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.   <a href="group__arith__func__shiftr.htm#gac8ca4033985aad13a10775d271c334f8">More...</a><br /></td></tr>
<tr class="separator:gac8ca4033985aad13a10775d271c334f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf75c6f71b1e07ab034e52009c49e4c52"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gaf75c6f71b1e07ab034e52009c49e4c52">operator&gt;&gt;</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gaf75c6f71b1e07ab034e52009c49e4c52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga7d5d2215a50b2e24affc23db8fcab5b2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga7d5d2215a50b2e24affc23db8fcab5b2">operator&amp;</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7d5d2215a50b2e24affc23db8fcab5b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise AND operation on two arrays or an array and a value.  <a href="group__arith__func__bitand.htm#ga7d5d2215a50b2e24affc23db8fcab5b2">More...</a><br /></td></tr>
<tr class="separator:ga7d5d2215a50b2e24affc23db8fcab5b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga83d2c1412c453df4d09d35f5a7b9d137"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga83d2c1412c453df4d09d35f5a7b9d137">operator&amp;</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="separator:ga83d2c1412c453df4d09d35f5a7b9d137"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b810904b8b811742b4fa404a5a24ed2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga2b810904b8b811742b4fa404a5a24ed2">operator&amp;</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga2b810904b8b811742b4fa404a5a24ed2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1a49fa5e7fcc2edc3bfdae367f1fde3b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga1a49fa5e7fcc2edc3bfdae367f1fde3b">operator&amp;</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="separator:ga1a49fa5e7fcc2edc3bfdae367f1fde3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga467b5423ad01b73d543b381f510a619d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga467b5423ad01b73d543b381f510a619d">operator&amp;</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="separator:ga467b5423ad01b73d543b381f510a619d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga116e84f2be4a8402248c55a6b06286ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga116e84f2be4a8402248c55a6b06286ef">operator&amp;</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="separator:ga116e84f2be4a8402248c55a6b06286ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc7e0fe374ea7a702ca3f62a36a12517"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gabc7e0fe374ea7a702ca3f62a36a12517">operator&amp;</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="separator:gabc7e0fe374ea7a702ca3f62a36a12517"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3ad74949daef5a3f00f0186e72a7a9aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga3ad74949daef5a3f00f0186e72a7a9aa">operator&amp;</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="separator:ga3ad74949daef5a3f00f0186e72a7a9aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6479e1f127d7b40ca24353875dd43d04"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga6479e1f127d7b40ca24353875dd43d04">operator&amp;</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="separator:ga6479e1f127d7b40ca24353875dd43d04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e011d5fa9123670acce020f885c82b3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga3e011d5fa9123670acce020f885c82b3">operator&amp;</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="separator:ga3e011d5fa9123670acce020f885c82b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga702f435cae2aa6b397d79aa5596efd88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga702f435cae2aa6b397d79aa5596efd88">operator&amp;</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="separator:ga702f435cae2aa6b397d79aa5596efd88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5fb366bc2450d78cdacb3d83402420b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga5fb366bc2450d78cdacb3d83402420b9">operator&amp;</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="separator:ga5fb366bc2450d78cdacb3d83402420b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d318c984fdbbc5b1ab18e2f3a23e6db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga3d318c984fdbbc5b1ab18e2f3a23e6db">operator&amp;</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="separator:ga3d318c984fdbbc5b1ab18e2f3a23e6db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae711bd18b75e48225d2702d805effbc1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gae711bd18b75e48225d2702d805effbc1">operator&amp;</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="separator:gae711bd18b75e48225d2702d805effbc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac29c2c00d85bb8df0a7a8e446d9ea5ed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gac29c2c00d85bb8df0a7a8e446d9ea5ed">operator&amp;</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gac29c2c00d85bb8df0a7a8e446d9ea5ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae7a7c0d7301b37d6f3b1d7a2cc2928e8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gae7a7c0d7301b37d6f3b1d7a2cc2928e8">operator&amp;</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="separator:gae7a7c0d7301b37d6f3b1d7a2cc2928e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga92e9d951d69f258c3958ee0161c4e7b1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga92e9d951d69f258c3958ee0161c4e7b1">operator&amp;</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga92e9d951d69f258c3958ee0161c4e7b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fc7a012f27f8544c916eb823f73bbe5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga9fc7a012f27f8544c916eb823f73bbe5">operator&amp;</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga9fc7a012f27f8544c916eb823f73bbe5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga070ec00632321ac37b076775b3f7ce6e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga070ec00632321ac37b076775b3f7ce6e">operator&amp;</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga070ec00632321ac37b076775b3f7ce6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaadf88dfed308dbca64bba817fec1f43c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gaadf88dfed308dbca64bba817fec1f43c">operator&amp;</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gaadf88dfed308dbca64bba817fec1f43c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a28d926bff32649216c1ea9e6e460fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga6a28d926bff32649216c1ea9e6e460fe">operator&amp;</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga6a28d926bff32649216c1ea9e6e460fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga27367d8e9cfad4e2f52ddc8ad332fd9d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga27367d8e9cfad4e2f52ddc8ad332fd9d">operator&amp;</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga27367d8e9cfad4e2f52ddc8ad332fd9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga62c2584ff5fa84b22332b2e1458f6ca5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga62c2584ff5fa84b22332b2e1458f6ca5">operator&amp;</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga62c2584ff5fa84b22332b2e1458f6ca5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae53c6276224eed1b391dd2385a628445"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gae53c6276224eed1b391dd2385a628445">operator&amp;</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gae53c6276224eed1b391dd2385a628445"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b88cbaa18425bd284a2bcc7a768fbdb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga9b88cbaa18425bd284a2bcc7a768fbdb">operator&amp;</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga9b88cbaa18425bd284a2bcc7a768fbdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gababc1a871247abbbf54ca888dc8a19a0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gababc1a871247abbbf54ca888dc8a19a0">operator&amp;</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gababc1a871247abbbf54ca888dc8a19a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1168167147a0af136fcd48d949de9ccc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga1168167147a0af136fcd48d949de9ccc">operator&amp;</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga1168167147a0af136fcd48d949de9ccc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga151e565c804538a03363c445f52acb79"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga151e565c804538a03363c445f52acb79">operator&amp;</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga151e565c804538a03363c445f52acb79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga333a5007cdbdcc647e7181c94e2dfd09"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga333a5007cdbdcc647e7181c94e2dfd09">operator&amp;</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga333a5007cdbdcc647e7181c94e2dfd09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad54d88fc2c8aa46e810ee2b1ca57eacd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gad54d88fc2c8aa46e810ee2b1ca57eacd">operator&amp;</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gad54d88fc2c8aa46e810ee2b1ca57eacd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1cc44d5d38af9fe15a3265182aa09ee7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga1cc44d5d38af9fe15a3265182aa09ee7">operator&amp;</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga1cc44d5d38af9fe15a3265182aa09ee7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gace7ea04c1d6a160e3d85b02712d7f36d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gace7ea04c1d6a160e3d85b02712d7f36d">operator&amp;&amp;</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gace7ea04c1d6a160e3d85b02712d7f36d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a logical AND operation on two arrays or an array and a value.  <a href="group__arith__func__and.htm#gace7ea04c1d6a160e3d85b02712d7f36d">More...</a><br /></td></tr>
<tr class="separator:gace7ea04c1d6a160e3d85b02712d7f36d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b0c0662795d8d81a8a2e4652802cda9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga9b0c0662795d8d81a8a2e4652802cda9">operator&amp;&amp;</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="separator:ga9b0c0662795d8d81a8a2e4652802cda9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga35f23c55ea2cdf833687ea71dd1a856d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga35f23c55ea2cdf833687ea71dd1a856d">operator&amp;&amp;</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga35f23c55ea2cdf833687ea71dd1a856d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae098ee7de79d80ee55a294ff10c8a719"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gae098ee7de79d80ee55a294ff10c8a719">operator&amp;&amp;</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="separator:gae098ee7de79d80ee55a294ff10c8a719"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8ba25c701f1daa23fe14d7ba8cb150cd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga8ba25c701f1daa23fe14d7ba8cb150cd">operator&amp;&amp;</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="separator:ga8ba25c701f1daa23fe14d7ba8cb150cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8054a8b660adda26e79a4a844a99f739"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga8054a8b660adda26e79a4a844a99f739">operator&amp;&amp;</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="separator:ga8054a8b660adda26e79a4a844a99f739"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8cfdfdf6800fb0a123d5212053271d32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga8cfdfdf6800fb0a123d5212053271d32">operator&amp;&amp;</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="separator:ga8cfdfdf6800fb0a123d5212053271d32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga72863ac0ad2b0a2ec9ea972a3120bd27"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga72863ac0ad2b0a2ec9ea972a3120bd27">operator&amp;&amp;</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="separator:ga72863ac0ad2b0a2ec9ea972a3120bd27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3eced739cf00d6ebde8b66dd931154dd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga3eced739cf00d6ebde8b66dd931154dd">operator&amp;&amp;</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="separator:ga3eced739cf00d6ebde8b66dd931154dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0158e081790bd3b444ea5d524fccf36b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga0158e081790bd3b444ea5d524fccf36b">operator&amp;&amp;</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="separator:ga0158e081790bd3b444ea5d524fccf36b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabb2351a743a773d30cddf4c9a63f9c4e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gabb2351a743a773d30cddf4c9a63f9c4e">operator&amp;&amp;</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="separator:gabb2351a743a773d30cddf4c9a63f9c4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga469aa5f2ec5fc0beebf714450211f592"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga469aa5f2ec5fc0beebf714450211f592">operator&amp;&amp;</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="separator:ga469aa5f2ec5fc0beebf714450211f592"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaef6274296de0293ce70ce43a080673aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gaef6274296de0293ce70ce43a080673aa">operator&amp;&amp;</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="separator:gaef6274296de0293ce70ce43a080673aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga370a6ce571a88de09e626018e6fb5ae3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga370a6ce571a88de09e626018e6fb5ae3">operator&amp;&amp;</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="separator:ga370a6ce571a88de09e626018e6fb5ae3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga71034234033c8ceb71e11e009c55f7a6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga71034234033c8ceb71e11e009c55f7a6">operator&amp;&amp;</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga71034234033c8ceb71e11e009c55f7a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd52a68d8da9c2c23f1784d339f3e32e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gabd52a68d8da9c2c23f1784d339f3e32e">operator&amp;&amp;</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="separator:gabd52a68d8da9c2c23f1784d339f3e32e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafccbf1c32976893d83ac8b7baa8efab4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gafccbf1c32976893d83ac8b7baa8efab4">operator&amp;&amp;</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gafccbf1c32976893d83ac8b7baa8efab4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c4e02d0ae1663bafa447c91570dd734"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga8c4e02d0ae1663bafa447c91570dd734">operator&amp;&amp;</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga8c4e02d0ae1663bafa447c91570dd734"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c3933d36879027445bb06c6fc4bf492"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga1c3933d36879027445bb06c6fc4bf492">operator&amp;&amp;</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga1c3933d36879027445bb06c6fc4bf492"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga259b93fd537fa61e43dc704b1d53e2aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga259b93fd537fa61e43dc704b1d53e2aa">operator&amp;&amp;</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga259b93fd537fa61e43dc704b1d53e2aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4dd3f428acce6bc11a0797947c181d62"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga4dd3f428acce6bc11a0797947c181d62">operator&amp;&amp;</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga4dd3f428acce6bc11a0797947c181d62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5ea249723769e8839ba3ecc167c0179d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga5ea249723769e8839ba3ecc167c0179d">operator&amp;&amp;</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga5ea249723769e8839ba3ecc167c0179d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4a1a6a1e77c5bfbdd79ec827fb1eeead"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga4a1a6a1e77c5bfbdd79ec827fb1eeead">operator&amp;&amp;</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga4a1a6a1e77c5bfbdd79ec827fb1eeead"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe3f441ae2ca5696efa1948c06b04649"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gabe3f441ae2ca5696efa1948c06b04649">operator&amp;&amp;</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gabe3f441ae2ca5696efa1948c06b04649"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae6d01f79e94ce1aeb789af3c2f87d9e5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gae6d01f79e94ce1aeb789af3c2f87d9e5">operator&amp;&amp;</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gae6d01f79e94ce1aeb789af3c2f87d9e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae5ef22764a351e81b91cb34b5bc3b0b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gae5ef22764a351e81b91cb34b5bc3b0b5">operator&amp;&amp;</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gae5ef22764a351e81b91cb34b5bc3b0b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae0a6dc6545084983e94379f7a3737131"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gae0a6dc6545084983e94379f7a3737131">operator&amp;&amp;</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gae0a6dc6545084983e94379f7a3737131"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga82aad0fdd47f17c3d9c4985d16b1233b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga82aad0fdd47f17c3d9c4985d16b1233b">operator&amp;&amp;</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga82aad0fdd47f17c3d9c4985d16b1233b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad907c9a108634ba4aec95aae9f195382"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gad907c9a108634ba4aec95aae9f195382">operator&amp;&amp;</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gad907c9a108634ba4aec95aae9f195382"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaecf5ea222997a07c57085b7d9290688b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gaecf5ea222997a07c57085b7d9290688b">operator&amp;&amp;</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gaecf5ea222997a07c57085b7d9290688b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa18942f8cc6078aa541e68722f17b71e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gaa18942f8cc6078aa541e68722f17b71e">operator&amp;&amp;</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gaa18942f8cc6078aa541e68722f17b71e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gaabf89285b7036427efe452491025567d"><td class="memItemLeft" align="right" valign="top">array &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gaabf89285b7036427efe452491025567d">eval</a> (array &amp;a)</td></tr>
<tr class="memdesc:gaabf89285b7036427efe452491025567d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate an expression (nonblocking).  <a href="group__data__mat.htm#gaabf89285b7036427efe452491025567d">More...</a><br /></td></tr>
<tr class="separator:gaabf89285b7036427efe452491025567d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeb23ddc71eab09a347a16d95ef50bb8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gaeb23ddc71eab09a347a16d95ef50bb8e">eval</a> (int num, array **arrays)</td></tr>
<tr class="memdesc:gaeb23ddc71eab09a347a16d95ef50bb8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate multiple arrays simultaneously.  <a href="group__data__mat.htm#gaeb23ddc71eab09a347a16d95ef50bb8e">More...</a><br /></td></tr>
<tr class="separator:gaeb23ddc71eab09a347a16d95ef50bb8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c2e8a69bc1358ed6ccebd7389592f41"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga1c2e8a69bc1358ed6ccebd7389592f41">eval</a> (array &amp;a, array &amp;b)</td></tr>
<tr class="separator:ga1c2e8a69bc1358ed6ccebd7389592f41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad38e2b8e4cf47b3fc368cac216e2cc0c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gad38e2b8e4cf47b3fc368cac216e2cc0c">eval</a> (array &amp;a, array &amp;b, array &amp;c)</td></tr>
<tr class="separator:gad38e2b8e4cf47b3fc368cac216e2cc0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad33a414f09315ad6c29dfbbf27667056"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gad33a414f09315ad6c29dfbbf27667056">eval</a> (array &amp;a, array &amp;b, array &amp;c, array &amp;d)</td></tr>
<tr class="separator:gad33a414f09315ad6c29dfbbf27667056"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0161c96c96679621c5a84d3f5624365a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga0161c96c96679621c5a84d3f5624365a">eval</a> (array &amp;a, array &amp;b, array &amp;c, array &amp;d, array &amp;e)</td></tr>
<tr class="separator:ga0161c96c96679621c5a84d3f5624365a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa6c941656e8249523a4571dbce1ea238"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gaa6c941656e8249523a4571dbce1ea238">eval</a> (array &amp;a, array &amp;b, array &amp;c, array &amp;d, array &amp;e, array &amp;f)</td></tr>
<tr class="separator:gaa6c941656e8249523a4571dbce1ea238"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf4111f1b5bba7b23172bd1edb612cf4d"><td class="memItemLeft" align="right" valign="top">const array &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gaf4111f1b5bba7b23172bd1edb612cf4d">eval</a> (const array &amp;a)</td></tr>
<tr class="memdesc:gaf4111f1b5bba7b23172bd1edb612cf4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate an expression (nonblocking).  <a href="group__data__mat.htm#gaf4111f1b5bba7b23172bd1edb612cf4d">More...</a><br /></td></tr>
<tr class="separator:gaf4111f1b5bba7b23172bd1edb612cf4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga20b29d9e7a43ca8b78e71425d77e2c3e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga20b29d9e7a43ca8b78e71425d77e2c3e">eval</a> (const array &amp;a, const array &amp;b)</td></tr>
<tr class="separator:ga20b29d9e7a43ca8b78e71425d77e2c3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6768d050c6f6b5dfaa81e58bef8e6c7e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga6768d050c6f6b5dfaa81e58bef8e6c7e">eval</a> (const array &amp;a, const array &amp;b, const array &amp;c)</td></tr>
<tr class="separator:ga6768d050c6f6b5dfaa81e58bef8e6c7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a4e51d8235be39feb95ed7f3705d45a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga6a4e51d8235be39feb95ed7f3705d45a">eval</a> (const array &amp;a, const array &amp;b, const array &amp;c, const array &amp;d)</td></tr>
<tr class="separator:ga6a4e51d8235be39feb95ed7f3705d45a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f0887f5ce7949238c183c4935cb4c43"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga2f0887f5ce7949238c183c4935cb4c43">eval</a> (const array &amp;a, const array &amp;b, const array &amp;c, const array &amp;d, const array &amp;e)</td></tr>
<tr class="separator:ga2f0887f5ce7949238c183c4935cb4c43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f6a1f0711ec8f6274fb659657769829"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga0f6a1f0711ec8f6274fb659657769829">eval</a> (const array &amp;a, const array &amp;b, const array &amp;c, const array &amp;d, const array &amp;e, const array &amp;f)</td></tr>
<tr class="separator:ga0f6a1f0711ec8f6274fb659657769829"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga53102a8868e3897da60a9fe6c07a3579"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga53102a8868e3897da60a9fe6c07a3579">setManualEvalFlag</a> (bool flag)</td></tr>
<tr class="memdesc:ga53102a8868e3897da60a9fe6c07a3579"><td class="mdescLeft">&#160;</td><td class="mdescRight">Turn the manual eval flag on or off.  <a href="group__data__mat.htm#ga53102a8868e3897da60a9fe6c07a3579">More...</a><br /></td></tr>
<tr class="separator:ga53102a8868e3897da60a9fe6c07a3579"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga24a43914c6cdc2f7340093f2c2fb3fae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga24a43914c6cdc2f7340093f2c2fb3fae">getManualEvalFlag</a> ()</td></tr>
<tr class="memdesc:ga24a43914c6cdc2f7340093f2c2fb3fae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the manual eval flag.  <a href="group__data__mat.htm#ga24a43914c6cdc2f7340093f2c2fb3fae">More...</a><br /></td></tr>
<tr class="separator:ga24a43914c6cdc2f7340093f2c2fb3fae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga834be32357616d8ab735087c6f681858"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga834be32357616d8ab735087c6f681858">af_create_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, const void *const data, const unsigned ndims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const dims, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type)</td></tr>
<tr class="memdesc:ga834be32357616d8ab735087c6f681858"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> handle initialized with user defined data.  <a href="group__c__api__mat.htm#ga834be32357616d8ab735087c6f681858">More...</a><br /></td></tr>
<tr class="separator:ga834be32357616d8ab735087c6f681858"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b8f5cf6fce69aa1574544bc2d44d7d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga3b8f5cf6fce69aa1574544bc2d44d7d0">af_create_handle</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, const unsigned ndims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const dims, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type)</td></tr>
<tr class="memdesc:ga3b8f5cf6fce69aa1574544bc2d44d7d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create af_array handle.  <a href="group__c__api__mat.htm#ga3b8f5cf6fce69aa1574544bc2d44d7d0">More...</a><br /></td></tr>
<tr class="separator:ga3b8f5cf6fce69aa1574544bc2d44d7d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f8e4d3732b5fd4b91ad51eec634f7a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga0f8e4d3732b5fd4b91ad51eec634f7a2">af_copy_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga0f8e4d3732b5fd4b91ad51eec634f7a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deep copy an array to another.  <a href="group__c__api__mat.htm#ga0f8e4d3732b5fd4b91ad51eec634f7a2">More...</a><br /></td></tr>
<tr class="separator:ga0f8e4d3732b5fd4b91ad51eec634f7a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafef13633d184acc726ad9daca7a7bc99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gafef13633d184acc726ad9daca7a7bc99">af_write_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr, const void *data, const size_t bytes, <a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af_source</a> src)</td></tr>
<tr class="memdesc:gafef13633d184acc726ad9daca7a7bc99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy data from a C pointer (host/device) to an existing array.  <a href="group__c__api__mat.htm#gafef13633d184acc726ad9daca7a7bc99">More...</a><br /></td></tr>
<tr class="separator:gafef13633d184acc726ad9daca7a7bc99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6040dc6f0eb127402fbf62c1165f0b9d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga6040dc6f0eb127402fbf62c1165f0b9d">af_get_data_ptr</a> (void *data, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga6040dc6f0eb127402fbf62c1165f0b9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy data from an af_array to a C pointer.  <a href="group__c__api__mat.htm#ga6040dc6f0eb127402fbf62c1165f0b9d">More...</a><br /></td></tr>
<tr class="separator:ga6040dc6f0eb127402fbf62c1165f0b9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad6c58648ed0db398e170dabf045e8309"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gad6c58648ed0db398e170dabf045e8309">af_release_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gad6c58648ed0db398e170dabf045e8309"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reduce the reference count of the <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>.  <a href="group__c__api__mat.htm#gad6c58648ed0db398e170dabf045e8309">More...</a><br /></td></tr>
<tr class="separator:gad6c58648ed0db398e170dabf045e8309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ed45b3f881c0f6c80c5cf2af886dbab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga7ed45b3f881c0f6c80c5cf2af886dbab">af_retain_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga7ed45b3f881c0f6c80c5cf2af886dbab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> reference count.  <a href="group__c__api__mat.htm#ga7ed45b3f881c0f6c80c5cf2af886dbab">More...</a><br /></td></tr>
<tr class="separator:ga7ed45b3f881c0f6c80c5cf2af886dbab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34d9070b94c3bac673df7f13b9c718a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga34d9070b94c3bac673df7f13b9c718a2">af_get_data_ref_count</a> (int *use_count, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga34d9070b94c3bac673df7f13b9c718a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the reference count of <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>.  <a href="group__c__api__mat.htm#ga34d9070b94c3bac673df7f13b9c718a2">More...</a><br /></td></tr>
<tr class="separator:ga34d9070b94c3bac673df7f13b9c718a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9de141bfc5936741d2496f59c1bac777"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga9de141bfc5936741d2496f59c1bac777">af_eval</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga9de141bfc5936741d2496f59c1bac777"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate any expressions in the Array.  <a href="group__c__api__mat.htm#ga9de141bfc5936741d2496f59c1bac777">More...</a><br /></td></tr>
<tr class="separator:ga9de141bfc5936741d2496f59c1bac777"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e08f4cda2471a477d2fa91c2356f72c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga9e08f4cda2471a477d2fa91c2356f72c">af_eval_multiple</a> (const int num, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arrays)</td></tr>
<tr class="memdesc:ga9e08f4cda2471a477d2fa91c2356f72c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate multiple arrays together.  <a href="group__c__api__mat.htm#ga9e08f4cda2471a477d2fa91c2356f72c">More...</a><br /></td></tr>
<tr class="separator:ga9e08f4cda2471a477d2fa91c2356f72c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga869f5e9331e9e010345de2589add7bae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga869f5e9331e9e010345de2589add7bae">af_set_manual_eval_flag</a> (bool flag)</td></tr>
<tr class="memdesc:ga869f5e9331e9e010345de2589add7bae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Turn the manual eval flag on or off.  <a href="group__c__api__mat.htm#ga869f5e9331e9e010345de2589add7bae">More...</a><br /></td></tr>
<tr class="separator:ga869f5e9331e9e010345de2589add7bae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga890c476d90cb689f2835d2e4f74f5868"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga890c476d90cb689f2835d2e4f74f5868">af_get_manual_eval_flag</a> (bool *flag)</td></tr>
<tr class="memdesc:ga890c476d90cb689f2835d2e4f74f5868"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the manual eval flag.  <a href="group__c__api__mat.htm#ga890c476d90cb689f2835d2e4f74f5868">More...</a><br /></td></tr>
<tr class="separator:ga890c476d90cb689f2835d2e4f74f5868"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6845bbe4385a60a606b88f8130252c1f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga6845bbe4385a60a606b88f8130252c1f">af_get_elements</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *elems, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga6845bbe4385a60a606b88f8130252c1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the total number of elements across all dimensions of the array.  <a href="group__c__api__mat.htm#ga6845bbe4385a60a606b88f8130252c1f">More...</a><br /></td></tr>
<tr class="separator:ga6845bbe4385a60a606b88f8130252c1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0dda6898e1c0d9a43efb56cd6a988c9b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga0dda6898e1c0d9a43efb56cd6a988c9b">af_get_type</a> (<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> *type, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga0dda6898e1c0d9a43efb56cd6a988c9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of an array.  <a href="group__c__api__mat.htm#ga0dda6898e1c0d9a43efb56cd6a988c9b">More...</a><br /></td></tr>
<tr class="separator:ga0dda6898e1c0d9a43efb56cd6a988c9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8b90da50a532837d9763e301b2267348"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga8b90da50a532837d9763e301b2267348">af_get_dims</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d0, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d1, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d2, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d3, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga8b90da50a532837d9763e301b2267348"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the dimensions of an array.  <a href="group__c__api__mat.htm#ga8b90da50a532837d9763e301b2267348">More...</a><br /></td></tr>
<tr class="separator:ga8b90da50a532837d9763e301b2267348"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaefa019d932ff58c2a829ce87edddd2a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gaefa019d932ff58c2a829ce87edddd2a8">af_get_numdims</a> (unsigned *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gaefa019d932ff58c2a829ce87edddd2a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of dimensions of an array.  <a href="group__c__api__mat.htm#gaefa019d932ff58c2a829ce87edddd2a8">More...</a><br /></td></tr>
<tr class="separator:gaefa019d932ff58c2a829ce87edddd2a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga19c749e95314e1c77d816ad9952fb680"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga19c749e95314e1c77d816ad9952fb680">af_is_empty</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga19c749e95314e1c77d816ad9952fb680"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is empty.  <a href="group__c__api__mat.htm#ga19c749e95314e1c77d816ad9952fb680">More...</a><br /></td></tr>
<tr class="separator:ga19c749e95314e1c77d816ad9952fb680"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae3dfa6dc1c03c5efe7482bfc9c41266a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gae3dfa6dc1c03c5efe7482bfc9c41266a">af_is_scalar</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gae3dfa6dc1c03c5efe7482bfc9c41266a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is scalar, ie.  <a href="group__c__api__mat.htm#gae3dfa6dc1c03c5efe7482bfc9c41266a">More...</a><br /></td></tr>
<tr class="separator:gae3dfa6dc1c03c5efe7482bfc9c41266a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabbe3249a355293daabd5907d7df67c6a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gabbe3249a355293daabd5907d7df67c6a">af_is_row</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gabbe3249a355293daabd5907d7df67c6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is row vector.  <a href="group__c__api__mat.htm#gabbe3249a355293daabd5907d7df67c6a">More...</a><br /></td></tr>
<tr class="separator:gabbe3249a355293daabd5907d7df67c6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga184b5a5feb146f2a2a44fed36b35e435"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga184b5a5feb146f2a2a44fed36b35e435">af_is_column</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga184b5a5feb146f2a2a44fed36b35e435"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is a column vector.  <a href="group__c__api__mat.htm#ga184b5a5feb146f2a2a44fed36b35e435">More...</a><br /></td></tr>
<tr class="separator:ga184b5a5feb146f2a2a44fed36b35e435"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00a23c7dd281fdcdec10b8395e611154"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga00a23c7dd281fdcdec10b8395e611154">af_is_vector</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga00a23c7dd281fdcdec10b8395e611154"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is a vector.  <a href="group__c__api__mat.htm#ga00a23c7dd281fdcdec10b8395e611154">More...</a><br /></td></tr>
<tr class="separator:ga00a23c7dd281fdcdec10b8395e611154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd8a5edf6467340d0b40341be9f677e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gacd8a5edf6467340d0b40341be9f677e9">af_is_complex</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gacd8a5edf6467340d0b40341be9f677e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is complex type.  <a href="group__c__api__mat.htm#gacd8a5edf6467340d0b40341be9f677e9">More...</a><br /></td></tr>
<tr class="separator:gacd8a5edf6467340d0b40341be9f677e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafaa0c1597ef34a7320ed589f80fdce10"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gafaa0c1597ef34a7320ed589f80fdce10">af_is_real</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gafaa0c1597ef34a7320ed589f80fdce10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is real type.  <a href="group__c__api__mat.htm#gafaa0c1597ef34a7320ed589f80fdce10">More...</a><br /></td></tr>
<tr class="separator:gafaa0c1597ef34a7320ed589f80fdce10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb499641bfc02dfa56a75be9ba237e3f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gadb499641bfc02dfa56a75be9ba237e3f">af_is_double</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gadb499641bfc02dfa56a75be9ba237e3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is double precision type.  <a href="group__c__api__mat.htm#gadb499641bfc02dfa56a75be9ba237e3f">More...</a><br /></td></tr>
<tr class="separator:gadb499641bfc02dfa56a75be9ba237e3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1bd444b2c78a4f4731d4523a90200175"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga1bd444b2c78a4f4731d4523a90200175">af_is_single</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga1bd444b2c78a4f4731d4523a90200175"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is single precision type.  <a href="group__c__api__mat.htm#ga1bd444b2c78a4f4731d4523a90200175">More...</a><br /></td></tr>
<tr class="separator:ga1bd444b2c78a4f4731d4523a90200175"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga247a830d52f1cb2450369af3d8d8f2f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga247a830d52f1cb2450369af3d8d8f2f1">af_is_half</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga247a830d52f1cb2450369af3d8d8f2f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is 16 bit floating point type.  <a href="group__c__api__mat.htm#ga247a830d52f1cb2450369af3d8d8f2f1">More...</a><br /></td></tr>
<tr class="separator:ga247a830d52f1cb2450369af3d8d8f2f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f2b3e689d07f5135dfc1ee6cf9825a3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga6f2b3e689d07f5135dfc1ee6cf9825a3">af_is_realfloating</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga6f2b3e689d07f5135dfc1ee6cf9825a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is real floating point type.  <a href="group__c__api__mat.htm#ga6f2b3e689d07f5135dfc1ee6cf9825a3">More...</a><br /></td></tr>
<tr class="separator:ga6f2b3e689d07f5135dfc1ee6cf9825a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5eb0d277412a2beeffe7e7a9f89b98ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga5eb0d277412a2beeffe7e7a9f89b98ea">af_is_floating</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga5eb0d277412a2beeffe7e7a9f89b98ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is floating precision type.  <a href="group__c__api__mat.htm#ga5eb0d277412a2beeffe7e7a9f89b98ea">More...</a><br /></td></tr>
<tr class="separator:ga5eb0d277412a2beeffe7e7a9f89b98ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga768e8326a6aaa81c6543949afc781af2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga768e8326a6aaa81c6543949afc781af2">af_is_integer</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga768e8326a6aaa81c6543949afc781af2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is integer type.  <a href="group__c__api__mat.htm#ga768e8326a6aaa81c6543949afc781af2">More...</a><br /></td></tr>
<tr class="separator:ga768e8326a6aaa81c6543949afc781af2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafae10fc1378b72404120572e21ff5d27"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gafae10fc1378b72404120572e21ff5d27">af_is_bool</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gafae10fc1378b72404120572e21ff5d27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is bool type.  <a href="group__c__api__mat.htm#gafae10fc1378b72404120572e21ff5d27">More...</a><br /></td></tr>
<tr class="separator:gafae10fc1378b72404120572e21ff5d27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac96d3ca37a435874de22a76838a8cf54"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gac96d3ca37a435874de22a76838a8cf54">af_is_sparse</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gac96d3ca37a435874de22a76838a8cf54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is sparse.  <a href="group__c__api__mat.htm#gac96d3ca37a435874de22a76838a8cf54">More...</a><br /></td></tr>
<tr class="separator:gac96d3ca37a435874de22a76838a8cf54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaefe2e343a74a84bd43b588218ecc09a3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gaefe2e343a74a84bd43b588218ecc09a3">af_get_scalar</a> (void *output_value, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gaefe2e343a74a84bd43b588218ecc09a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get first element from an array.  <a href="group__c__api__mat.htm#gaefe2e343a74a84bd43b588218ecc09a3">More...</a><br /></td></tr>
<tr class="separator:gaefe2e343a74a84bd43b588218ecc09a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a96147e5f8a7b6037405defdd7e190dd8" name="a96147e5f8a7b6037405defdd7e190dd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96147e5f8a7b6037405defdd7e190dd8">&#9670;&#160;</a></span>ASSIGN <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASSIGN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">OP</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> array_proxy &amp;a);         \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> array &amp;a);               \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">double</span> &amp;a);              \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> cdouble &amp;a);             \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> cfloat &amp;a);              \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;a);               \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;a);                 \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> &amp;a);            \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;a);                \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">char</span> &amp;a);                \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> &amp;a);       \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">long</span>  &amp;a);               \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> &amp;a);       \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>  &amp;a);          \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> &amp;a);</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01008">1008</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>

</div>
</div>
<a id="a96147e5f8a7b6037405defdd7e190dd8" name="a96147e5f8a7b6037405defdd7e190dd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96147e5f8a7b6037405defdd7e190dd8">&#9670;&#160;</a></span>ASSIGN <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASSIGN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">OP</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">short</span> &amp;a);               \</div>
<div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> &amp;a);</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01008">1008</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>

</div>
</div>
<a id="a96147e5f8a7b6037405defdd7e190dd8" name="a96147e5f8a7b6037405defdd7e190dd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96147e5f8a7b6037405defdd7e190dd8">&#9670;&#160;</a></span>ASSIGN <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASSIGN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">OP</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">        <a class="code hl_define" href="array_8h.htm#a3024a14587b6373c2e2a3fe65f2b8b12">ASSIGN_</a>(OP)                                                                       \</div>
<div class="line">          array&amp; OP(<span class="keyword">const</span> <span class="keywordtype">short</span>  &amp;val);               \</div>
<div class="line">          array&amp; OP(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> &amp;val);</div>
<div class="ttc" id="aarray_8h_htm_a3024a14587b6373c2e2a3fe65f2b8b12"><div class="ttname"><a href="array_8h.htm#a3024a14587b6373c2e2a3fe65f2b8b12">ASSIGN_</a></div><div class="ttdeci">#define ASSIGN_(OP2)</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00990">array.h:990</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01008">1008</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>

</div>
</div>
<a id="a3024a14587b6373c2e2a3fe65f2b8b12" name="a3024a14587b6373c2e2a3fe65f2b8b12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3024a14587b6373c2e2a3fe65f2b8b12">&#9670;&#160;</a></span>ASSIGN_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASSIGN_</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">OP2</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">        array&amp; OP2(<span class="keyword">const</span> array &amp;val);                                                     \</div>
<div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">double</span> &amp;val);               \</div>
<div class="line">        array&amp; OP2(<span class="keyword">const</span> cdouble &amp;val);              \</div>
<div class="line">        array&amp; OP2(<span class="keyword">const</span> cfloat &amp;val);               \</div>
<div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;val);                \</div>
<div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;val);                  \</div>
<div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> &amp;val);             \</div>
<div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;val);                 \</div>
<div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">char</span> &amp;val);                 \</div>
<div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> &amp;val);        \</div>
<div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">long</span>  &amp;val);                \</div>
<div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> &amp;val);        \</div>
<div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>  &amp;val);           \</div>
<div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> &amp;val);</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l00990">990</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>

</div>
</div>
<a id="a6d8256045dabd15534382126773e729d" name="a6d8256045dabd15534382126773e729d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d8256045dabd15534382126773e729d">&#9670;&#160;</a></span>BIN_OP</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BIN_OP</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">OP</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">        <a class="code hl_define" href="array_8h.htm#a2c8e67e88a0a2815d1253276803deef4">BIN_OP_</a>(OP)                                                                                                       \</div>
<div class="line">        <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> <span class="keywordtype">short</span>&amp; lhs, <span class="keyword">const</span> array&amp; rhs);            \</div>
<div class="line">        <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&amp; lhs, <span class="keyword">const</span> array&amp; rhs);   \</div>
<div class="line">        <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">short</span>&amp; rhs);            \</div>
<div class="line">        <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&amp; rhs);</div>
<div class="ttc" id="aarray_8h_htm_a2c8e67e88a0a2815d1253276803deef4"><div class="ttname"><a href="array_8h.htm#a2c8e67e88a0a2815d1253276803deef4">BIN_OP_</a></div><div class="ttdeci">#define BIN_OP_(OP)</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l01140">array.h:1140</a></div></div>
<div class="ttc" id="adefines_8h_htm_ab23e67549eba2cfbaf0eb5f88f947e48"><div class="ttname"><a href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a></div><div class="ttdeci">#define AFAPI</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00038">defines.h:38</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01170">1170</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>

</div>
</div>
<a id="a2c8e67e88a0a2815d1253276803deef4" name="a2c8e67e88a0a2815d1253276803deef4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c8e67e88a0a2815d1253276803deef4">&#9670;&#160;</a></span>BIN_OP_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BIN_OP_</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">OP</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> array&amp; rhs);                                                                 \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; lhs, <span class="keyword">const</span> array&amp; rhs);                \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> <span class="keywordtype">int</span>&amp; lhs, <span class="keyword">const</span> array&amp; rhs);                 \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> <span class="keywordtype">unsigned</span>&amp; lhs, <span class="keyword">const</span> array&amp; rhs);            \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> <span class="keywordtype">char</span>&amp; lhs, <span class="keyword">const</span> array&amp; rhs);                \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>&amp; lhs, <span class="keyword">const</span> array&amp; rhs);       \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> array&amp; rhs);                \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> array&amp; rhs);       \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> array&amp; rhs);           \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> array&amp; rhs);  \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; lhs, <span class="keyword">const</span> array&amp; rhs);              \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; lhs, <span class="keyword">const</span> array&amp; rhs);               \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> cfloat&amp; lhs, <span class="keyword">const</span> array&amp; rhs);              \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> cdouble&amp; lhs, <span class="keyword">const</span> array&amp; rhs);             \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; rhs);                \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">int</span>&amp; rhs);                 \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span>&amp; rhs);            \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">char</span>&amp; rhs);                \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>&amp; rhs);       \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">long</span>&amp; rhs);                \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>&amp; rhs);       \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; rhs);           \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; rhs);  \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; rhs);              \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">float</span>&amp; rhs);               \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> cfloat&amp; rhs);              \</div>
<div class="line">    <a class="code hl_define" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array OP (<span class="keyword">const</span> array&amp; lhs, <span class="keyword">const</span> cdouble&amp; rhs);</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01140">1140</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="navelem"><a class="el" href="array_8h.htm">array.h</a></li>
        <li class="footer">Generated on Wed Aug 30 2023 15:41:55 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
