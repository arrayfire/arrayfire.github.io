<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: array.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('array_8h.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a>  </div>
  <div class="headertitle">
<div class="title">array.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<h3 class="version">(2020-10-27 00:11:00 -0400, (build d99887ae))</h3><div class="textblock"><code>#include &lt;af/compilers.h&gt;</code><br />
<code>#include &lt;<a class="el" href="defines_8h_source.htm">af/defines.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="device_8h_source.htm">af/device.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="dim4_8hpp_source.htm">af/dim4.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="exception_8h_source.htm">af/exception.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="index_8h_source.htm">af/index.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="seq_8h_source.htm">af/seq.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="util_8h_source.htm">af/util.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="traits_8hpp_source.htm">af/traits.hpp</a>&gt;</code><br />
</div>
<p><a href="array_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1array.htm">array</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A multi dimensional data container.  <a href="classaf_1_1array.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Intermediate data class.  <a href="classaf_1_1array_1_1array__proxy.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceaf"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm">af</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a96147e5f8a7b6037405defdd7e190dd8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(OP)</td></tr>
<tr class="separator:a96147e5f8a7b6037405defdd7e190dd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96147e5f8a7b6037405defdd7e190dd8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(OP)</td></tr>
<tr class="separator:a96147e5f8a7b6037405defdd7e190dd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3024a14587b6373c2e2a3fe65f2b8b12"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="array_8h.htm#a3024a14587b6373c2e2a3fe65f2b8b12">ASSIGN_</a>(OP2)</td></tr>
<tr class="separator:a3024a14587b6373c2e2a3fe65f2b8b12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96147e5f8a7b6037405defdd7e190dd8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(OP)</td></tr>
<tr class="separator:a96147e5f8a7b6037405defdd7e190dd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c8e67e88a0a2815d1253276803deef4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="array_8h.htm#a2c8e67e88a0a2815d1253276803deef4">BIN_OP_</a>(OP)</td></tr>
<tr class="separator:a2c8e67e88a0a2815d1253276803deef4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d8256045dabd15534382126773e729d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(OP)</td></tr>
<tr class="separator:a6d8256045dabd15534382126773e729d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga7d51866424616760656cfa16c4c8164d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga7d51866424616760656cfa16c4c8164d">operator+</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7d51866424616760656cfa16c4c8164d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga7d51866424616760656cfa16c4c8164d">More...</a><br /></td></tr>
<tr class="separator:ga7d51866424616760656cfa16c4c8164d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab5ade0ae1a4acd12275f1c633dcbbe7d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gab5ade0ae1a4acd12275f1c633dcbbe7d">operator+</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab5ade0ae1a4acd12275f1c633dcbbe7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#gab5ade0ae1a4acd12275f1c633dcbbe7d">More...</a><br /></td></tr>
<tr class="separator:gab5ade0ae1a4acd12275f1c633dcbbe7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9aece7612ca2427aae1f213782aeadd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gae9aece7612ca2427aae1f213782aeadd">operator+</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae9aece7612ca2427aae1f213782aeadd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#gae9aece7612ca2427aae1f213782aeadd">More...</a><br /></td></tr>
<tr class="separator:gae9aece7612ca2427aae1f213782aeadd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9cce7b588854c258e9189ecb9f2ce03e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga9cce7b588854c258e9189ecb9f2ce03e">operator+</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9cce7b588854c258e9189ecb9f2ce03e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga9cce7b588854c258e9189ecb9f2ce03e">More...</a><br /></td></tr>
<tr class="separator:ga9cce7b588854c258e9189ecb9f2ce03e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f8bc9129631c592a336c0600e8c73bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga6f8bc9129631c592a336c0600e8c73bd">operator+</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6f8bc9129631c592a336c0600e8c73bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga6f8bc9129631c592a336c0600e8c73bd">More...</a><br /></td></tr>
<tr class="separator:ga6f8bc9129631c592a336c0600e8c73bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga897c7a9cf03ee90ae67fd144c2f2eb78"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga897c7a9cf03ee90ae67fd144c2f2eb78">operator+</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga897c7a9cf03ee90ae67fd144c2f2eb78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga897c7a9cf03ee90ae67fd144c2f2eb78">More...</a><br /></td></tr>
<tr class="separator:ga897c7a9cf03ee90ae67fd144c2f2eb78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea6acff100e76e527bcefee639ef6701"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gaea6acff100e76e527bcefee639ef6701">operator+</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaea6acff100e76e527bcefee639ef6701"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#gaea6acff100e76e527bcefee639ef6701">More...</a><br /></td></tr>
<tr class="separator:gaea6acff100e76e527bcefee639ef6701"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1fc4d83fb1035827938137cdea422c90"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga1fc4d83fb1035827938137cdea422c90">operator+</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1fc4d83fb1035827938137cdea422c90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga1fc4d83fb1035827938137cdea422c90">More...</a><br /></td></tr>
<tr class="separator:ga1fc4d83fb1035827938137cdea422c90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6274f9aa218318bb264feb27c70892de"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga6274f9aa218318bb264feb27c70892de">operator+</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6274f9aa218318bb264feb27c70892de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga6274f9aa218318bb264feb27c70892de">More...</a><br /></td></tr>
<tr class="separator:ga6274f9aa218318bb264feb27c70892de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c06f6a8b9c5c0215e965b863eef85fb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga0c06f6a8b9c5c0215e965b863eef85fb">operator+</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0c06f6a8b9c5c0215e965b863eef85fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga0c06f6a8b9c5c0215e965b863eef85fb">More...</a><br /></td></tr>
<tr class="separator:ga0c06f6a8b9c5c0215e965b863eef85fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2913d86f98964937ddbcba7d0808bf18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga2913d86f98964937ddbcba7d0808bf18">operator+</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2913d86f98964937ddbcba7d0808bf18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga2913d86f98964937ddbcba7d0808bf18">More...</a><br /></td></tr>
<tr class="separator:ga2913d86f98964937ddbcba7d0808bf18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga326647d60952d5295c695c89176fac06"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga326647d60952d5295c695c89176fac06">operator+</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga326647d60952d5295c695c89176fac06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga326647d60952d5295c695c89176fac06">More...</a><br /></td></tr>
<tr class="separator:ga326647d60952d5295c695c89176fac06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac552f3315930d7415c09c97c2b3f2958"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gac552f3315930d7415c09c97c2b3f2958">operator+</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac552f3315930d7415c09c97c2b3f2958"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#gac552f3315930d7415c09c97c2b3f2958">More...</a><br /></td></tr>
<tr class="separator:gac552f3315930d7415c09c97c2b3f2958"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac69969f41036e361ed9d49c5a3bdab88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gac69969f41036e361ed9d49c5a3bdab88">operator+</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac69969f41036e361ed9d49c5a3bdab88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#gac69969f41036e361ed9d49c5a3bdab88">More...</a><br /></td></tr>
<tr class="separator:gac69969f41036e361ed9d49c5a3bdab88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaecc374522bf7cd68fd5e7e4d126dcd3e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gaecc374522bf7cd68fd5e7e4d126dcd3e">operator+</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gaecc374522bf7cd68fd5e7e4d126dcd3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#gaecc374522bf7cd68fd5e7e4d126dcd3e">More...</a><br /></td></tr>
<tr class="separator:gaecc374522bf7cd68fd5e7e4d126dcd3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga651d3b0fcb1919eed66723285bcb7b4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga651d3b0fcb1919eed66723285bcb7b4f">operator+</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga651d3b0fcb1919eed66723285bcb7b4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga651d3b0fcb1919eed66723285bcb7b4f">More...</a><br /></td></tr>
<tr class="separator:ga651d3b0fcb1919eed66723285bcb7b4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga341c8d6a5cc66ae022afcc3d3dfb6f64"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga341c8d6a5cc66ae022afcc3d3dfb6f64">operator+</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga341c8d6a5cc66ae022afcc3d3dfb6f64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga341c8d6a5cc66ae022afcc3d3dfb6f64">More...</a><br /></td></tr>
<tr class="separator:ga341c8d6a5cc66ae022afcc3d3dfb6f64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1a68170d5539199d256eab53a7189fd8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga1a68170d5539199d256eab53a7189fd8">operator+</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga1a68170d5539199d256eab53a7189fd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga1a68170d5539199d256eab53a7189fd8">More...</a><br /></td></tr>
<tr class="separator:ga1a68170d5539199d256eab53a7189fd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9dac331b228a90346da4013961b45b67"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga9dac331b228a90346da4013961b45b67">operator+</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga9dac331b228a90346da4013961b45b67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga9dac331b228a90346da4013961b45b67">More...</a><br /></td></tr>
<tr class="separator:ga9dac331b228a90346da4013961b45b67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac00a9d1547fcf4b5e2364f4cd750a30a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gac00a9d1547fcf4b5e2364f4cd750a30a">operator+</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gac00a9d1547fcf4b5e2364f4cd750a30a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#gac00a9d1547fcf4b5e2364f4cd750a30a">More...</a><br /></td></tr>
<tr class="separator:gac00a9d1547fcf4b5e2364f4cd750a30a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga51dc6356169caef337018a87845e1ad9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga51dc6356169caef337018a87845e1ad9">operator+</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga51dc6356169caef337018a87845e1ad9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga51dc6356169caef337018a87845e1ad9">More...</a><br /></td></tr>
<tr class="separator:ga51dc6356169caef337018a87845e1ad9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c749b56395f90b9332f39b0c55dfa6f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga9c749b56395f90b9332f39b0c55dfa6f">operator+</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga9c749b56395f90b9332f39b0c55dfa6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga9c749b56395f90b9332f39b0c55dfa6f">More...</a><br /></td></tr>
<tr class="separator:ga9c749b56395f90b9332f39b0c55dfa6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad69db45bcef38ab4b9926bdec00175eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gad69db45bcef38ab4b9926bdec00175eb">operator+</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gad69db45bcef38ab4b9926bdec00175eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#gad69db45bcef38ab4b9926bdec00175eb">More...</a><br /></td></tr>
<tr class="separator:gad69db45bcef38ab4b9926bdec00175eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga20104a12db4cf98a1431d6d6a42e3a6e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga20104a12db4cf98a1431d6d6a42e3a6e">operator+</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga20104a12db4cf98a1431d6d6a42e3a6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga20104a12db4cf98a1431d6d6a42e3a6e">More...</a><br /></td></tr>
<tr class="separator:ga20104a12db4cf98a1431d6d6a42e3a6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga47faf6f861c03570696031a186efd18e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga47faf6f861c03570696031a186efd18e">operator+</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga47faf6f861c03570696031a186efd18e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga47faf6f861c03570696031a186efd18e">More...</a><br /></td></tr>
<tr class="separator:ga47faf6f861c03570696031a186efd18e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c928e3d0da10b8bb0c125db136031e8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga9c928e3d0da10b8bb0c125db136031e8">operator+</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga9c928e3d0da10b8bb0c125db136031e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga9c928e3d0da10b8bb0c125db136031e8">More...</a><br /></td></tr>
<tr class="separator:ga9c928e3d0da10b8bb0c125db136031e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9a7f7489ddbf441efe7600e7c8d11feb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga9a7f7489ddbf441efe7600e7c8d11feb">operator+</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga9a7f7489ddbf441efe7600e7c8d11feb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9658862d87e0d735007520ef80e80acf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga9658862d87e0d735007520ef80e80acf">operator+</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9658862d87e0d735007520ef80e80acf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga9658862d87e0d735007520ef80e80acf">More...</a><br /></td></tr>
<tr class="separator:ga9658862d87e0d735007520ef80e80acf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gace86e46bcf50d7769092a8b692a24472"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gace86e46bcf50d7769092a8b692a24472">operator+</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gace86e46bcf50d7769092a8b692a24472"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#gace86e46bcf50d7769092a8b692a24472">More...</a><br /></td></tr>
<tr class="separator:gace86e46bcf50d7769092a8b692a24472"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6176eb436a3c41acd4cb5ac105fc2a04"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga6176eb436a3c41acd4cb5ac105fc2a04">operator+</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga6176eb436a3c41acd4cb5ac105fc2a04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga6176eb436a3c41acd4cb5ac105fc2a04">More...</a><br /></td></tr>
<tr class="separator:ga6176eb436a3c41acd4cb5ac105fc2a04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5178216ae5af9509d54f70646448bf77"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga5178216ae5af9509d54f70646448bf77">operator+</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga5178216ae5af9509d54f70646448bf77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gafa57cf4a71580be2bfd04a83a66d9835"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gafa57cf4a71580be2bfd04a83a66d9835">operator-</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gafa57cf4a71580be2bfd04a83a66d9835"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#gafa57cf4a71580be2bfd04a83a66d9835">More...</a><br /></td></tr>
<tr class="separator:gafa57cf4a71580be2bfd04a83a66d9835"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0136d171c6caa5f6ac1fa126b2c3338d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga0136d171c6caa5f6ac1fa126b2c3338d">operator-</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0136d171c6caa5f6ac1fa126b2c3338d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga0136d171c6caa5f6ac1fa126b2c3338d">More...</a><br /></td></tr>
<tr class="separator:ga0136d171c6caa5f6ac1fa126b2c3338d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga92cd7daf330d142b00329d86240a1b97"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga92cd7daf330d142b00329d86240a1b97">operator-</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga92cd7daf330d142b00329d86240a1b97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga92cd7daf330d142b00329d86240a1b97">More...</a><br /></td></tr>
<tr class="separator:ga92cd7daf330d142b00329d86240a1b97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5cd1127759e1fa7ff1d7f6b102b9869e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga5cd1127759e1fa7ff1d7f6b102b9869e">operator-</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5cd1127759e1fa7ff1d7f6b102b9869e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga5cd1127759e1fa7ff1d7f6b102b9869e">More...</a><br /></td></tr>
<tr class="separator:ga5cd1127759e1fa7ff1d7f6b102b9869e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaabd48811a22b05ecf95dc43fac3e2247"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gaabd48811a22b05ecf95dc43fac3e2247">operator-</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaabd48811a22b05ecf95dc43fac3e2247"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#gaabd48811a22b05ecf95dc43fac3e2247">More...</a><br /></td></tr>
<tr class="separator:gaabd48811a22b05ecf95dc43fac3e2247"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad06d7027280e6593c9f4a39296e4e24c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gad06d7027280e6593c9f4a39296e4e24c">operator-</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad06d7027280e6593c9f4a39296e4e24c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#gad06d7027280e6593c9f4a39296e4e24c">More...</a><br /></td></tr>
<tr class="separator:gad06d7027280e6593c9f4a39296e4e24c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga936731d38b8dc4901031499f415117f5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga936731d38b8dc4901031499f415117f5">operator-</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga936731d38b8dc4901031499f415117f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga936731d38b8dc4901031499f415117f5">More...</a><br /></td></tr>
<tr class="separator:ga936731d38b8dc4901031499f415117f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67e652c63ba3f9fc5332b366a6ca5e91"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga67e652c63ba3f9fc5332b366a6ca5e91">operator-</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga67e652c63ba3f9fc5332b366a6ca5e91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga67e652c63ba3f9fc5332b366a6ca5e91">More...</a><br /></td></tr>
<tr class="separator:ga67e652c63ba3f9fc5332b366a6ca5e91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4333aa92f25b13b4223fe5de5d7916d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gae4333aa92f25b13b4223fe5de5d7916d">operator-</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae4333aa92f25b13b4223fe5de5d7916d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#gae4333aa92f25b13b4223fe5de5d7916d">More...</a><br /></td></tr>
<tr class="separator:gae4333aa92f25b13b4223fe5de5d7916d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9906515a096507ee1ff8ae87f1cce235"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga9906515a096507ee1ff8ae87f1cce235">operator-</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9906515a096507ee1ff8ae87f1cce235"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga9906515a096507ee1ff8ae87f1cce235">More...</a><br /></td></tr>
<tr class="separator:ga9906515a096507ee1ff8ae87f1cce235"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa82b152b5e6cd05e5d22addae6ff1acf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gaa82b152b5e6cd05e5d22addae6ff1acf">operator-</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa82b152b5e6cd05e5d22addae6ff1acf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#gaa82b152b5e6cd05e5d22addae6ff1acf">More...</a><br /></td></tr>
<tr class="separator:gaa82b152b5e6cd05e5d22addae6ff1acf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae162a0ca08d9eda17a3d82898f9dd97d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gae162a0ca08d9eda17a3d82898f9dd97d">operator-</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae162a0ca08d9eda17a3d82898f9dd97d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#gae162a0ca08d9eda17a3d82898f9dd97d">More...</a><br /></td></tr>
<tr class="separator:gae162a0ca08d9eda17a3d82898f9dd97d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga94e734829e9ddf3c8e058c80e14d8439"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga94e734829e9ddf3c8e058c80e14d8439">operator-</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga94e734829e9ddf3c8e058c80e14d8439"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga94e734829e9ddf3c8e058c80e14d8439">More...</a><br /></td></tr>
<tr class="separator:ga94e734829e9ddf3c8e058c80e14d8439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab8583193ce2f234349d00f8cb6c0754d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gab8583193ce2f234349d00f8cb6c0754d">operator-</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab8583193ce2f234349d00f8cb6c0754d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#gab8583193ce2f234349d00f8cb6c0754d">More...</a><br /></td></tr>
<tr class="separator:gab8583193ce2f234349d00f8cb6c0754d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9f97dd4c0f20c44ca7e9fcc8c4e9f67"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gae9f97dd4c0f20c44ca7e9fcc8c4e9f67">operator-</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gae9f97dd4c0f20c44ca7e9fcc8c4e9f67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#gae9f97dd4c0f20c44ca7e9fcc8c4e9f67">More...</a><br /></td></tr>
<tr class="separator:gae9f97dd4c0f20c44ca7e9fcc8c4e9f67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab818ed02401ed7bea71c4ef072c8c557"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gab818ed02401ed7bea71c4ef072c8c557">operator-</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gab818ed02401ed7bea71c4ef072c8c557"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#gab818ed02401ed7bea71c4ef072c8c557">More...</a><br /></td></tr>
<tr class="separator:gab818ed02401ed7bea71c4ef072c8c557"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf904b47fc19f5d972fe36bcf524f4c20"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gaf904b47fc19f5d972fe36bcf524f4c20">operator-</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gaf904b47fc19f5d972fe36bcf524f4c20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#gaf904b47fc19f5d972fe36bcf524f4c20">More...</a><br /></td></tr>
<tr class="separator:gaf904b47fc19f5d972fe36bcf524f4c20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8a8ef6d23e293c6960f22eaed4145344"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga8a8ef6d23e293c6960f22eaed4145344">operator-</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga8a8ef6d23e293c6960f22eaed4145344"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga8a8ef6d23e293c6960f22eaed4145344">More...</a><br /></td></tr>
<tr class="separator:ga8a8ef6d23e293c6960f22eaed4145344"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga91e7d968382280e60f0b5833c752100b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga91e7d968382280e60f0b5833c752100b">operator-</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga91e7d968382280e60f0b5833c752100b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga91e7d968382280e60f0b5833c752100b">More...</a><br /></td></tr>
<tr class="separator:ga91e7d968382280e60f0b5833c752100b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga43c387d8435db3056f26ef9959db21bf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga43c387d8435db3056f26ef9959db21bf">operator-</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga43c387d8435db3056f26ef9959db21bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga43c387d8435db3056f26ef9959db21bf">More...</a><br /></td></tr>
<tr class="separator:ga43c387d8435db3056f26ef9959db21bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga73e8999255e64a27521d12848ed805bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga73e8999255e64a27521d12848ed805bc">operator-</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga73e8999255e64a27521d12848ed805bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga73e8999255e64a27521d12848ed805bc">More...</a><br /></td></tr>
<tr class="separator:ga73e8999255e64a27521d12848ed805bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5fdb2f4d71bd568e4bc9ae66fffb06ad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga5fdb2f4d71bd568e4bc9ae66fffb06ad">operator-</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga5fdb2f4d71bd568e4bc9ae66fffb06ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga5fdb2f4d71bd568e4bc9ae66fffb06ad">More...</a><br /></td></tr>
<tr class="separator:ga5fdb2f4d71bd568e4bc9ae66fffb06ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea1077d58dd334777b393cd9934cf878"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gaea1077d58dd334777b393cd9934cf878">operator-</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gaea1077d58dd334777b393cd9934cf878"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#gaea1077d58dd334777b393cd9934cf878">More...</a><br /></td></tr>
<tr class="separator:gaea1077d58dd334777b393cd9934cf878"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b71cea512ab50021ff63f00cef668ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga3b71cea512ab50021ff63f00cef668ba">operator-</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga3b71cea512ab50021ff63f00cef668ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga3b71cea512ab50021ff63f00cef668ba">More...</a><br /></td></tr>
<tr class="separator:ga3b71cea512ab50021ff63f00cef668ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3c91833cf7e79f416a9a9b38a779adcb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga3c91833cf7e79f416a9a9b38a779adcb">operator-</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga3c91833cf7e79f416a9a9b38a779adcb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga3c91833cf7e79f416a9a9b38a779adcb">More...</a><br /></td></tr>
<tr class="separator:ga3c91833cf7e79f416a9a9b38a779adcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga23f04b0914e2f50532b01b66b1cb2b72"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga23f04b0914e2f50532b01b66b1cb2b72">operator-</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga23f04b0914e2f50532b01b66b1cb2b72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga23f04b0914e2f50532b01b66b1cb2b72">More...</a><br /></td></tr>
<tr class="separator:ga23f04b0914e2f50532b01b66b1cb2b72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf26c0b2ef80a2f279ed113b7b89496c0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gaf26c0b2ef80a2f279ed113b7b89496c0">operator-</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gaf26c0b2ef80a2f279ed113b7b89496c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf51cd35c5042074213adc2f005113f7d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gaf51cd35c5042074213adc2f005113f7d">operator-</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf51cd35c5042074213adc2f005113f7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#gaf51cd35c5042074213adc2f005113f7d">More...</a><br /></td></tr>
<tr class="separator:gaf51cd35c5042074213adc2f005113f7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac94b706a52c2b92a65032de167f1b304"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#gac94b706a52c2b92a65032de167f1b304">operator-</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac94b706a52c2b92a65032de167f1b304"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#gac94b706a52c2b92a65032de167f1b304">More...</a><br /></td></tr>
<tr class="separator:gac94b706a52c2b92a65032de167f1b304"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga417c2a733abd728ab1ce0eb6db5192db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga417c2a733abd728ab1ce0eb6db5192db">operator-</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga417c2a733abd728ab1ce0eb6db5192db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts two arrays or an array and a value.  <a href="group__arith__func__sub.htm#ga417c2a733abd728ab1ce0eb6db5192db">More...</a><br /></td></tr>
<tr class="separator:ga417c2a733abd728ab1ce0eb6db5192db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga148757306498b6929d8eaf21b335d7f2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__sub.htm#ga148757306498b6929d8eaf21b335d7f2">operator-</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga148757306498b6929d8eaf21b335d7f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga8317504ec8b9c15d29b27cc77039cb69"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga8317504ec8b9c15d29b27cc77039cb69">operator*</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8317504ec8b9c15d29b27cc77039cb69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga8317504ec8b9c15d29b27cc77039cb69">More...</a><br /></td></tr>
<tr class="separator:ga8317504ec8b9c15d29b27cc77039cb69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaef98b3bb8ccaf5dfa5e0e8a1ca298551"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gaef98b3bb8ccaf5dfa5e0e8a1ca298551">operator*</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaef98b3bb8ccaf5dfa5e0e8a1ca298551"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#gaef98b3bb8ccaf5dfa5e0e8a1ca298551">More...</a><br /></td></tr>
<tr class="separator:gaef98b3bb8ccaf5dfa5e0e8a1ca298551"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b1d8a1ac30bf326d17b2491467ee01c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga3b1d8a1ac30bf326d17b2491467ee01c">operator*</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga3b1d8a1ac30bf326d17b2491467ee01c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga3b1d8a1ac30bf326d17b2491467ee01c">More...</a><br /></td></tr>
<tr class="separator:ga3b1d8a1ac30bf326d17b2491467ee01c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf2282fa4b0e68aa5e5f523e15d4188c9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gaf2282fa4b0e68aa5e5f523e15d4188c9">operator*</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf2282fa4b0e68aa5e5f523e15d4188c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#gaf2282fa4b0e68aa5e5f523e15d4188c9">More...</a><br /></td></tr>
<tr class="separator:gaf2282fa4b0e68aa5e5f523e15d4188c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b8175314936bdb49fa1830f8d6aafda"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga3b8175314936bdb49fa1830f8d6aafda">operator*</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga3b8175314936bdb49fa1830f8d6aafda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga3b8175314936bdb49fa1830f8d6aafda">More...</a><br /></td></tr>
<tr class="separator:ga3b8175314936bdb49fa1830f8d6aafda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga57881779a3bef8ec197c7e98d1080541"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga57881779a3bef8ec197c7e98d1080541">operator*</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga57881779a3bef8ec197c7e98d1080541"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga57881779a3bef8ec197c7e98d1080541">More...</a><br /></td></tr>
<tr class="separator:ga57881779a3bef8ec197c7e98d1080541"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4d911d0bad8683e1e058420fd5c55695"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga4d911d0bad8683e1e058420fd5c55695">operator*</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4d911d0bad8683e1e058420fd5c55695"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga4d911d0bad8683e1e058420fd5c55695">More...</a><br /></td></tr>
<tr class="separator:ga4d911d0bad8683e1e058420fd5c55695"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d975c90156fbbb109bf2768e11ce1dc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga1d975c90156fbbb109bf2768e11ce1dc">operator*</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1d975c90156fbbb109bf2768e11ce1dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga1d975c90156fbbb109bf2768e11ce1dc">More...</a><br /></td></tr>
<tr class="separator:ga1d975c90156fbbb109bf2768e11ce1dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1b8b5bb1ef3d2393f82a993691537a8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga1b8b5bb1ef3d2393f82a993691537a8a">operator*</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1b8b5bb1ef3d2393f82a993691537a8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga1b8b5bb1ef3d2393f82a993691537a8a">More...</a><br /></td></tr>
<tr class="separator:ga1b8b5bb1ef3d2393f82a993691537a8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5eaeb463e4e034ddfc1bda25f21d26d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga5eaeb463e4e034ddfc1bda25f21d26d4">operator*</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5eaeb463e4e034ddfc1bda25f21d26d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga5eaeb463e4e034ddfc1bda25f21d26d4">More...</a><br /></td></tr>
<tr class="separator:ga5eaeb463e4e034ddfc1bda25f21d26d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga669e034a6b58546954854b481a78742f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga669e034a6b58546954854b481a78742f">operator*</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga669e034a6b58546954854b481a78742f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga669e034a6b58546954854b481a78742f">More...</a><br /></td></tr>
<tr class="separator:ga669e034a6b58546954854b481a78742f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga12d73001f6684b2d9d98dbb9867aab5d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga12d73001f6684b2d9d98dbb9867aab5d">operator*</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga12d73001f6684b2d9d98dbb9867aab5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga12d73001f6684b2d9d98dbb9867aab5d">More...</a><br /></td></tr>
<tr class="separator:ga12d73001f6684b2d9d98dbb9867aab5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabb627ab145f8b77d54373c4579da3bb6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gabb627ab145f8b77d54373c4579da3bb6">operator*</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gabb627ab145f8b77d54373c4579da3bb6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#gabb627ab145f8b77d54373c4579da3bb6">More...</a><br /></td></tr>
<tr class="separator:gabb627ab145f8b77d54373c4579da3bb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga944c435a78faca30709e8a51e83a0f4e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga944c435a78faca30709e8a51e83a0f4e">operator*</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga944c435a78faca30709e8a51e83a0f4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga944c435a78faca30709e8a51e83a0f4e">More...</a><br /></td></tr>
<tr class="separator:ga944c435a78faca30709e8a51e83a0f4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa44ca35c520cb50d2f977eae59870390"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gaa44ca35c520cb50d2f977eae59870390">operator*</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gaa44ca35c520cb50d2f977eae59870390"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#gaa44ca35c520cb50d2f977eae59870390">More...</a><br /></td></tr>
<tr class="separator:gaa44ca35c520cb50d2f977eae59870390"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2c23d356cd116ed61e1c55d2979d8f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gaa2c23d356cd116ed61e1c55d2979d8f9">operator*</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gaa2c23d356cd116ed61e1c55d2979d8f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#gaa2c23d356cd116ed61e1c55d2979d8f9">More...</a><br /></td></tr>
<tr class="separator:gaa2c23d356cd116ed61e1c55d2979d8f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc2aacf1ba5929ff1466c5abce99314c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gabc2aacf1ba5929ff1466c5abce99314c">operator*</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gabc2aacf1ba5929ff1466c5abce99314c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#gabc2aacf1ba5929ff1466c5abce99314c">More...</a><br /></td></tr>
<tr class="separator:gabc2aacf1ba5929ff1466c5abce99314c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7f582821f7e1c3b035ee6f27a12756d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga7f582821f7e1c3b035ee6f27a12756d1">operator*</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga7f582821f7e1c3b035ee6f27a12756d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga7f582821f7e1c3b035ee6f27a12756d1">More...</a><br /></td></tr>
<tr class="separator:ga7f582821f7e1c3b035ee6f27a12756d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga45234014790d9c8cb99ab851064619dd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga45234014790d9c8cb99ab851064619dd">operator*</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga45234014790d9c8cb99ab851064619dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga45234014790d9c8cb99ab851064619dd">More...</a><br /></td></tr>
<tr class="separator:ga45234014790d9c8cb99ab851064619dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gace496cbbead21b8943c638a3916a24a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gace496cbbead21b8943c638a3916a24a2">operator*</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gace496cbbead21b8943c638a3916a24a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#gace496cbbead21b8943c638a3916a24a2">More...</a><br /></td></tr>
<tr class="separator:gace496cbbead21b8943c638a3916a24a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga47f3b51e40fb6565345d12e1cd430776"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga47f3b51e40fb6565345d12e1cd430776">operator*</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga47f3b51e40fb6565345d12e1cd430776"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga47f3b51e40fb6565345d12e1cd430776">More...</a><br /></td></tr>
<tr class="separator:ga47f3b51e40fb6565345d12e1cd430776"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga15fe3085a426fc6203326ea0e47892bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga15fe3085a426fc6203326ea0e47892bc">operator*</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga15fe3085a426fc6203326ea0e47892bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga15fe3085a426fc6203326ea0e47892bc">More...</a><br /></td></tr>
<tr class="separator:ga15fe3085a426fc6203326ea0e47892bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf0e032b99476f17f00a4d683cce23a2f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gaf0e032b99476f17f00a4d683cce23a2f">operator*</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gaf0e032b99476f17f00a4d683cce23a2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#gaf0e032b99476f17f00a4d683cce23a2f">More...</a><br /></td></tr>
<tr class="separator:gaf0e032b99476f17f00a4d683cce23a2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad3b0c34cfd9c9dffa7be7288e5dfcf5e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gad3b0c34cfd9c9dffa7be7288e5dfcf5e">operator*</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:gad3b0c34cfd9c9dffa7be7288e5dfcf5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#gad3b0c34cfd9c9dffa7be7288e5dfcf5e">More...</a><br /></td></tr>
<tr class="separator:gad3b0c34cfd9c9dffa7be7288e5dfcf5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad0762011f741a94d6342b27cbb6e7903"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#gad0762011f741a94d6342b27cbb6e7903">operator*</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gad0762011f741a94d6342b27cbb6e7903"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#gad0762011f741a94d6342b27cbb6e7903">More...</a><br /></td></tr>
<tr class="separator:gad0762011f741a94d6342b27cbb6e7903"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2206456d263ee820b9fc0431bc0fde99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga2206456d263ee820b9fc0431bc0fde99">operator*</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga2206456d263ee820b9fc0431bc0fde99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga2206456d263ee820b9fc0431bc0fde99">More...</a><br /></td></tr>
<tr class="separator:ga2206456d263ee820b9fc0431bc0fde99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7daba1c531609d6e5f1c9132769801e0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga7daba1c531609d6e5f1c9132769801e0">operator*</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga7daba1c531609d6e5f1c9132769801e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1412dad87c4ef139b781a573db510aee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga1412dad87c4ef139b781a573db510aee">operator*</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1412dad87c4ef139b781a573db510aee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga1412dad87c4ef139b781a573db510aee">More...</a><br /></td></tr>
<tr class="separator:ga1412dad87c4ef139b781a573db510aee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ad72de9265a5e98ab4df15d2bff5bb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga7ad72de9265a5e98ab4df15d2bff5bb2">operator*</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7ad72de9265a5e98ab4df15d2bff5bb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga7ad72de9265a5e98ab4df15d2bff5bb2">More...</a><br /></td></tr>
<tr class="separator:ga7ad72de9265a5e98ab4df15d2bff5bb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga25f9b5a6bb0560928823002aef2c11b3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga25f9b5a6bb0560928823002aef2c11b3">operator*</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga25f9b5a6bb0560928823002aef2c11b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies two arrays or an array and a value.  <a href="group__arith__func__mul.htm#ga25f9b5a6bb0560928823002aef2c11b3">More...</a><br /></td></tr>
<tr class="separator:ga25f9b5a6bb0560928823002aef2c11b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga787a71d9fdd828773ff908ba2b6fe3bf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mul.htm#ga787a71d9fdd828773ff908ba2b6fe3bf">operator*</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga787a71d9fdd828773ff908ba2b6fe3bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gac83d4e810c751d6d764c2416a4f97ed0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gac83d4e810c751d6d764c2416a4f97ed0">operator/</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac83d4e810c751d6d764c2416a4f97ed0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#gac83d4e810c751d6d764c2416a4f97ed0">More...</a><br /></td></tr>
<tr class="separator:gac83d4e810c751d6d764c2416a4f97ed0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae1973dd2df95b2f12ad597113cb44500"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gae1973dd2df95b2f12ad597113cb44500">operator/</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae1973dd2df95b2f12ad597113cb44500"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#gae1973dd2df95b2f12ad597113cb44500">More...</a><br /></td></tr>
<tr class="separator:gae1973dd2df95b2f12ad597113cb44500"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga44a16b185913221a5dbc06937532dbb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga44a16b185913221a5dbc06937532dbb2">operator/</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga44a16b185913221a5dbc06937532dbb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga44a16b185913221a5dbc06937532dbb2">More...</a><br /></td></tr>
<tr class="separator:ga44a16b185913221a5dbc06937532dbb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac8ac376be6689ceb5f1bb8ae8ae02c47"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gac8ac376be6689ceb5f1bb8ae8ae02c47">operator/</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac8ac376be6689ceb5f1bb8ae8ae02c47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#gac8ac376be6689ceb5f1bb8ae8ae02c47">More...</a><br /></td></tr>
<tr class="separator:gac8ac376be6689ceb5f1bb8ae8ae02c47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b17b76698eab7a3fc06a35a12c22511"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga4b17b76698eab7a3fc06a35a12c22511">operator/</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4b17b76698eab7a3fc06a35a12c22511"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga4b17b76698eab7a3fc06a35a12c22511">More...</a><br /></td></tr>
<tr class="separator:ga4b17b76698eab7a3fc06a35a12c22511"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga36e2699efe51f73f34820547152aa57c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga36e2699efe51f73f34820547152aa57c">operator/</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga36e2699efe51f73f34820547152aa57c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga36e2699efe51f73f34820547152aa57c">More...</a><br /></td></tr>
<tr class="separator:ga36e2699efe51f73f34820547152aa57c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf4c32560588e5c6d610104d9470841bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaf4c32560588e5c6d610104d9470841bb">operator/</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf4c32560588e5c6d610104d9470841bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#gaf4c32560588e5c6d610104d9470841bb">More...</a><br /></td></tr>
<tr class="separator:gaf4c32560588e5c6d610104d9470841bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafafad0b2b8f1de226bebb8c8bcd4c72c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gafafad0b2b8f1de226bebb8c8bcd4c72c">operator/</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gafafad0b2b8f1de226bebb8c8bcd4c72c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#gafafad0b2b8f1de226bebb8c8bcd4c72c">More...</a><br /></td></tr>
<tr class="separator:gafafad0b2b8f1de226bebb8c8bcd4c72c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0fb4fbe58e87db081febbc4f882d0a1e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga0fb4fbe58e87db081febbc4f882d0a1e">operator/</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0fb4fbe58e87db081febbc4f882d0a1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga0fb4fbe58e87db081febbc4f882d0a1e">More...</a><br /></td></tr>
<tr class="separator:ga0fb4fbe58e87db081febbc4f882d0a1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga44198d81efdea626cac5fa35ea57e3da"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga44198d81efdea626cac5fa35ea57e3da">operator/</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga44198d81efdea626cac5fa35ea57e3da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga44198d81efdea626cac5fa35ea57e3da">More...</a><br /></td></tr>
<tr class="separator:ga44198d81efdea626cac5fa35ea57e3da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1191890099d6c877cbef4cf3efc01657"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga1191890099d6c877cbef4cf3efc01657">operator/</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1191890099d6c877cbef4cf3efc01657"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga1191890099d6c877cbef4cf3efc01657">More...</a><br /></td></tr>
<tr class="separator:ga1191890099d6c877cbef4cf3efc01657"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae50831413963056f798d0ac69abfe677"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gae50831413963056f798d0ac69abfe677">operator/</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae50831413963056f798d0ac69abfe677"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#gae50831413963056f798d0ac69abfe677">More...</a><br /></td></tr>
<tr class="separator:gae50831413963056f798d0ac69abfe677"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65c0cce3a1556e61653c307523ead16d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga65c0cce3a1556e61653c307523ead16d">operator/</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga65c0cce3a1556e61653c307523ead16d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga65c0cce3a1556e61653c307523ead16d">More...</a><br /></td></tr>
<tr class="separator:ga65c0cce3a1556e61653c307523ead16d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d740e7f3f3a648f93938b2c246f67c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga9d740e7f3f3a648f93938b2c246f67c4">operator/</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9d740e7f3f3a648f93938b2c246f67c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga9d740e7f3f3a648f93938b2c246f67c4">More...</a><br /></td></tr>
<tr class="separator:ga9d740e7f3f3a648f93938b2c246f67c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga692a3dfecacc6e82bc20635544185592"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga692a3dfecacc6e82bc20635544185592">operator/</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga692a3dfecacc6e82bc20635544185592"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga692a3dfecacc6e82bc20635544185592">More...</a><br /></td></tr>
<tr class="separator:ga692a3dfecacc6e82bc20635544185592"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b7eef79bae887411e902301617fb99d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga2b7eef79bae887411e902301617fb99d">operator/</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga2b7eef79bae887411e902301617fb99d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga2b7eef79bae887411e902301617fb99d">More...</a><br /></td></tr>
<tr class="separator:ga2b7eef79bae887411e902301617fb99d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabf18e81d4c74fa9d453b7da89b59d433"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gabf18e81d4c74fa9d453b7da89b59d433">operator/</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gabf18e81d4c74fa9d453b7da89b59d433"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#gabf18e81d4c74fa9d453b7da89b59d433">More...</a><br /></td></tr>
<tr class="separator:gabf18e81d4c74fa9d453b7da89b59d433"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2cb8169f57bb97e80365c9b774237e00"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga2cb8169f57bb97e80365c9b774237e00">operator/</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga2cb8169f57bb97e80365c9b774237e00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga2cb8169f57bb97e80365c9b774237e00">More...</a><br /></td></tr>
<tr class="separator:ga2cb8169f57bb97e80365c9b774237e00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga385267048eb10c5cbd92ac028381bcb0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga385267048eb10c5cbd92ac028381bcb0">operator/</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga385267048eb10c5cbd92ac028381bcb0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga385267048eb10c5cbd92ac028381bcb0">More...</a><br /></td></tr>
<tr class="separator:ga385267048eb10c5cbd92ac028381bcb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6c6113792b8e77b0f1b65fe1a14d3d60"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga6c6113792b8e77b0f1b65fe1a14d3d60">operator/</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga6c6113792b8e77b0f1b65fe1a14d3d60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga6c6113792b8e77b0f1b65fe1a14d3d60">More...</a><br /></td></tr>
<tr class="separator:ga6c6113792b8e77b0f1b65fe1a14d3d60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa3817aa57c07b3d7c8fae2297c80e379"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaa3817aa57c07b3d7c8fae2297c80e379">operator/</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:gaa3817aa57c07b3d7c8fae2297c80e379"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#gaa3817aa57c07b3d7c8fae2297c80e379">More...</a><br /></td></tr>
<tr class="separator:gaa3817aa57c07b3d7c8fae2297c80e379"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b271f363d8f3dedff79a32bbf0ef3db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga3b271f363d8f3dedff79a32bbf0ef3db">operator/</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga3b271f363d8f3dedff79a32bbf0ef3db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga3b271f363d8f3dedff79a32bbf0ef3db">More...</a><br /></td></tr>
<tr class="separator:ga3b271f363d8f3dedff79a32bbf0ef3db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf70a6082f4deb2a66b5e9ce838aa94fb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaf70a6082f4deb2a66b5e9ce838aa94fb">operator/</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gaf70a6082f4deb2a66b5e9ce838aa94fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#gaf70a6082f4deb2a66b5e9ce838aa94fb">More...</a><br /></td></tr>
<tr class="separator:gaf70a6082f4deb2a66b5e9ce838aa94fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8f6e6d8a6d78bb573347bc948f4ece49"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga8f6e6d8a6d78bb573347bc948f4ece49">operator/</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga8f6e6d8a6d78bb573347bc948f4ece49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga8f6e6d8a6d78bb573347bc948f4ece49">More...</a><br /></td></tr>
<tr class="separator:ga8f6e6d8a6d78bb573347bc948f4ece49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga671e1ceef2bed6d58a6b15e77f288eaa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga671e1ceef2bed6d58a6b15e77f288eaa">operator/</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga671e1ceef2bed6d58a6b15e77f288eaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga671e1ceef2bed6d58a6b15e77f288eaa">More...</a><br /></td></tr>
<tr class="separator:ga671e1ceef2bed6d58a6b15e77f288eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf192ba87e87523c407520fe20d847099"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#gaf192ba87e87523c407520fe20d847099">operator/</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gaf192ba87e87523c407520fe20d847099"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#gaf192ba87e87523c407520fe20d847099">More...</a><br /></td></tr>
<tr class="separator:gaf192ba87e87523c407520fe20d847099"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga39aa6c258e9fbd17ee88c465705c3673"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga39aa6c258e9fbd17ee88c465705c3673">operator/</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga39aa6c258e9fbd17ee88c465705c3673"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01d81f7664df5648686715980ebe90ab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga01d81f7664df5648686715980ebe90ab">operator/</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga01d81f7664df5648686715980ebe90ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga01d81f7664df5648686715980ebe90ab">More...</a><br /></td></tr>
<tr class="separator:ga01d81f7664df5648686715980ebe90ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga273a5bb7aa516c5dafb31f714735d54c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga273a5bb7aa516c5dafb31f714735d54c">operator/</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga273a5bb7aa516c5dafb31f714735d54c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga273a5bb7aa516c5dafb31f714735d54c">More...</a><br /></td></tr>
<tr class="separator:ga273a5bb7aa516c5dafb31f714735d54c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3ff1fad2b629204933e92fa75e56872d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga3ff1fad2b629204933e92fa75e56872d">operator/</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga3ff1fad2b629204933e92fa75e56872d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides two arrays or an array and a value.  <a href="group__arith__func__div.htm#ga3ff1fad2b629204933e92fa75e56872d">More...</a><br /></td></tr>
<tr class="separator:ga3ff1fad2b629204933e92fa75e56872d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga778d9f0ebdec268595863dd59aa7c6f3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__div.htm#ga778d9f0ebdec268595863dd59aa7c6f3">operator/</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga778d9f0ebdec268595863dd59aa7c6f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga09dd9c72bd295829fd83e8802f454ca1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga09dd9c72bd295829fd83e8802f454ca1">operator==</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga09dd9c72bd295829fd83e8802f454ca1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga09dd9c72bd295829fd83e8802f454ca1">More...</a><br /></td></tr>
<tr class="separator:ga09dd9c72bd295829fd83e8802f454ca1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga71d9cb8d1daea7a99a81c2d0f58dff93"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga71d9cb8d1daea7a99a81c2d0f58dff93">operator==</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga71d9cb8d1daea7a99a81c2d0f58dff93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga71d9cb8d1daea7a99a81c2d0f58dff93">More...</a><br /></td></tr>
<tr class="separator:ga71d9cb8d1daea7a99a81c2d0f58dff93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadf63cbcefa16e12397d6a2e5d7aba78d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gadf63cbcefa16e12397d6a2e5d7aba78d">operator==</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gadf63cbcefa16e12397d6a2e5d7aba78d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gadf63cbcefa16e12397d6a2e5d7aba78d">More...</a><br /></td></tr>
<tr class="separator:gadf63cbcefa16e12397d6a2e5d7aba78d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga924652e463b7b1d4a2ce5a2fed9314d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga924652e463b7b1d4a2ce5a2fed9314d4">operator==</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga924652e463b7b1d4a2ce5a2fed9314d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga924652e463b7b1d4a2ce5a2fed9314d4">More...</a><br /></td></tr>
<tr class="separator:ga924652e463b7b1d4a2ce5a2fed9314d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacfbe4ce1e3b2b7f46123318b9e5c7606"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gacfbe4ce1e3b2b7f46123318b9e5c7606">operator==</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gacfbe4ce1e3b2b7f46123318b9e5c7606"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gacfbe4ce1e3b2b7f46123318b9e5c7606">More...</a><br /></td></tr>
<tr class="separator:gacfbe4ce1e3b2b7f46123318b9e5c7606"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga38c0a354b9d81b49ee8443052b664c36"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga38c0a354b9d81b49ee8443052b664c36">operator==</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga38c0a354b9d81b49ee8443052b664c36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga38c0a354b9d81b49ee8443052b664c36">More...</a><br /></td></tr>
<tr class="separator:ga38c0a354b9d81b49ee8443052b664c36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba7d46bd8670b0269f288e0e6a0bdeff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaba7d46bd8670b0269f288e0e6a0bdeff">operator==</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaba7d46bd8670b0269f288e0e6a0bdeff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gaba7d46bd8670b0269f288e0e6a0bdeff">More...</a><br /></td></tr>
<tr class="separator:gaba7d46bd8670b0269f288e0e6a0bdeff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf5c7deec7b3eb5b2c77a0feb0f6e1823"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaf5c7deec7b3eb5b2c77a0feb0f6e1823">operator==</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf5c7deec7b3eb5b2c77a0feb0f6e1823"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gaf5c7deec7b3eb5b2c77a0feb0f6e1823">More...</a><br /></td></tr>
<tr class="separator:gaf5c7deec7b3eb5b2c77a0feb0f6e1823"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf5e1b61fb42fa7527857372d09b96dd2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaf5e1b61fb42fa7527857372d09b96dd2">operator==</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf5e1b61fb42fa7527857372d09b96dd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gaf5e1b61fb42fa7527857372d09b96dd2">More...</a><br /></td></tr>
<tr class="separator:gaf5e1b61fb42fa7527857372d09b96dd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5e7c29e709ad3ab258ce4185a014d4b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga5e7c29e709ad3ab258ce4185a014d4b5">operator==</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5e7c29e709ad3ab258ce4185a014d4b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga5e7c29e709ad3ab258ce4185a014d4b5">More...</a><br /></td></tr>
<tr class="separator:ga5e7c29e709ad3ab258ce4185a014d4b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6b786e844bdee209e33ab1892f7ca2bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga6b786e844bdee209e33ab1892f7ca2bb">operator==</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6b786e844bdee209e33ab1892f7ca2bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga6b786e844bdee209e33ab1892f7ca2bb">More...</a><br /></td></tr>
<tr class="separator:ga6b786e844bdee209e33ab1892f7ca2bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf2257eddb979ce77f6e2ec30735a71f3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaf2257eddb979ce77f6e2ec30735a71f3">operator==</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf2257eddb979ce77f6e2ec30735a71f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gaf2257eddb979ce77f6e2ec30735a71f3">More...</a><br /></td></tr>
<tr class="separator:gaf2257eddb979ce77f6e2ec30735a71f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9aa025be72a08fbdc03dfc810349c69"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gac9aa025be72a08fbdc03dfc810349c69">operator==</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac9aa025be72a08fbdc03dfc810349c69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gac9aa025be72a08fbdc03dfc810349c69">More...</a><br /></td></tr>
<tr class="separator:gac9aa025be72a08fbdc03dfc810349c69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd34b6a39e3c02c8a35e595737510a20"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gabd34b6a39e3c02c8a35e595737510a20">operator==</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gabd34b6a39e3c02c8a35e595737510a20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gabd34b6a39e3c02c8a35e595737510a20">More...</a><br /></td></tr>
<tr class="separator:gabd34b6a39e3c02c8a35e595737510a20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaefe15baca31d09915feb3df8d316b5a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaefe15baca31d09915feb3df8d316b5a7">operator==</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gaefe15baca31d09915feb3df8d316b5a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gaefe15baca31d09915feb3df8d316b5a7">More...</a><br /></td></tr>
<tr class="separator:gaefe15baca31d09915feb3df8d316b5a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd048bb97605e11a8829194a296a6307"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gafd048bb97605e11a8829194a296a6307">operator==</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gafd048bb97605e11a8829194a296a6307"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gafd048bb97605e11a8829194a296a6307">More...</a><br /></td></tr>
<tr class="separator:gafd048bb97605e11a8829194a296a6307"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacbec52639189ee7adf8ac72eb622ee4e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gacbec52639189ee7adf8ac72eb622ee4e">operator==</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gacbec52639189ee7adf8ac72eb622ee4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gacbec52639189ee7adf8ac72eb622ee4e">More...</a><br /></td></tr>
<tr class="separator:gacbec52639189ee7adf8ac72eb622ee4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f16b3b144e766b14180935279f03517"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga6f16b3b144e766b14180935279f03517">operator==</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga6f16b3b144e766b14180935279f03517"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga6f16b3b144e766b14180935279f03517">More...</a><br /></td></tr>
<tr class="separator:ga6f16b3b144e766b14180935279f03517"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f1d21eb0ac93ace6ee8347b5edd9a54"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga5f1d21eb0ac93ace6ee8347b5edd9a54">operator==</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga5f1d21eb0ac93ace6ee8347b5edd9a54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga5f1d21eb0ac93ace6ee8347b5edd9a54">More...</a><br /></td></tr>
<tr class="separator:ga5f1d21eb0ac93ace6ee8347b5edd9a54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaf505747436be5b8b8efd658ffedfba0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaaf505747436be5b8b8efd658ffedfba0">operator==</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gaaf505747436be5b8b8efd658ffedfba0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gaaf505747436be5b8b8efd658ffedfba0">More...</a><br /></td></tr>
<tr class="separator:gaaf505747436be5b8b8efd658ffedfba0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga053ccd901d2c871d9888a731a85ff134"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga053ccd901d2c871d9888a731a85ff134">operator==</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga053ccd901d2c871d9888a731a85ff134"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga053ccd901d2c871d9888a731a85ff134">More...</a><br /></td></tr>
<tr class="separator:ga053ccd901d2c871d9888a731a85ff134"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf5b75c44883b18e133159bc0b5c79227"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaf5b75c44883b18e133159bc0b5c79227">operator==</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:gaf5b75c44883b18e133159bc0b5c79227"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gaf5b75c44883b18e133159bc0b5c79227">More...</a><br /></td></tr>
<tr class="separator:gaf5b75c44883b18e133159bc0b5c79227"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b830feb1ceada24645a6dfab6a18b6b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga9b830feb1ceada24645a6dfab6a18b6b">operator==</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga9b830feb1ceada24645a6dfab6a18b6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga9b830feb1ceada24645a6dfab6a18b6b">More...</a><br /></td></tr>
<tr class="separator:ga9b830feb1ceada24645a6dfab6a18b6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga217fac85597820c4ab7d7efa6c126665"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga217fac85597820c4ab7d7efa6c126665">operator==</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga217fac85597820c4ab7d7efa6c126665"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga217fac85597820c4ab7d7efa6c126665">More...</a><br /></td></tr>
<tr class="separator:ga217fac85597820c4ab7d7efa6c126665"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga938398197988f97eb5f51119fcdebff8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga938398197988f97eb5f51119fcdebff8">operator==</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga938398197988f97eb5f51119fcdebff8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga938398197988f97eb5f51119fcdebff8">More...</a><br /></td></tr>
<tr class="separator:ga938398197988f97eb5f51119fcdebff8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8b2ecdbbb25eb403b1b6a60ad7e27f1d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga8b2ecdbbb25eb403b1b6a60ad7e27f1d">operator==</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga8b2ecdbbb25eb403b1b6a60ad7e27f1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga8b2ecdbbb25eb403b1b6a60ad7e27f1d">More...</a><br /></td></tr>
<tr class="separator:ga8b2ecdbbb25eb403b1b6a60ad7e27f1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9db34e9c766cd6b24e5f84bbdc36dc13"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga9db34e9c766cd6b24e5f84bbdc36dc13">operator==</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga9db34e9c766cd6b24e5f84bbdc36dc13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad7ae0c807ef6a9668acef93bb618644f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gad7ae0c807ef6a9668acef93bb618644f">operator==</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad7ae0c807ef6a9668acef93bb618644f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gad7ae0c807ef6a9668acef93bb618644f">More...</a><br /></td></tr>
<tr class="separator:gad7ae0c807ef6a9668acef93bb618644f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae22e5dcb1cfde6cac67bdd6a1f0e877d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gae22e5dcb1cfde6cac67bdd6a1f0e877d">operator==</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae22e5dcb1cfde6cac67bdd6a1f0e877d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gae22e5dcb1cfde6cac67bdd6a1f0e877d">More...</a><br /></td></tr>
<tr class="separator:gae22e5dcb1cfde6cac67bdd6a1f0e877d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a9e45d677758a05e58af857c655cd82"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga6a9e45d677758a05e58af857c655cd82">operator==</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga6a9e45d677758a05e58af857c655cd82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#ga6a9e45d677758a05e58af857c655cd82">More...</a><br /></td></tr>
<tr class="separator:ga6a9e45d677758a05e58af857c655cd82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga22c90a58d9fd67a8a351153532558d33"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga22c90a58d9fd67a8a351153532558d33">operator==</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga22c90a58d9fd67a8a351153532558d33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gabb296d1b19266a22f0816ba52984601c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gabb296d1b19266a22f0816ba52984601c">operator!=</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gabb296d1b19266a22f0816ba52984601c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#gabb296d1b19266a22f0816ba52984601c">More...</a><br /></td></tr>
<tr class="separator:gabb296d1b19266a22f0816ba52984601c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11f92f2102e62d3aa18c4d02172b4758"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga11f92f2102e62d3aa18c4d02172b4758">operator!=</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga11f92f2102e62d3aa18c4d02172b4758"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga11f92f2102e62d3aa18c4d02172b4758">More...</a><br /></td></tr>
<tr class="separator:ga11f92f2102e62d3aa18c4d02172b4758"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga685b004a40c7d6527f48e01e0fc5a92e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga685b004a40c7d6527f48e01e0fc5a92e">operator!=</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga685b004a40c7d6527f48e01e0fc5a92e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga685b004a40c7d6527f48e01e0fc5a92e">More...</a><br /></td></tr>
<tr class="separator:ga685b004a40c7d6527f48e01e0fc5a92e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga59de1a7e6572311082c97ad60e0322df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga59de1a7e6572311082c97ad60e0322df">operator!=</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga59de1a7e6572311082c97ad60e0322df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga59de1a7e6572311082c97ad60e0322df">More...</a><br /></td></tr>
<tr class="separator:ga59de1a7e6572311082c97ad60e0322df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae1e2bedec406a28d6871fbe5c0950885"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gae1e2bedec406a28d6871fbe5c0950885">operator!=</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae1e2bedec406a28d6871fbe5c0950885"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#gae1e2bedec406a28d6871fbe5c0950885">More...</a><br /></td></tr>
<tr class="separator:gae1e2bedec406a28d6871fbe5c0950885"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5658db7eebb0a3b6ad897fc91751d2f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga5658db7eebb0a3b6ad897fc91751d2f1">operator!=</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5658db7eebb0a3b6ad897fc91751d2f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga5658db7eebb0a3b6ad897fc91751d2f1">More...</a><br /></td></tr>
<tr class="separator:ga5658db7eebb0a3b6ad897fc91751d2f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga751857deca4aee3ba523dd7641c77170"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga751857deca4aee3ba523dd7641c77170">operator!=</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga751857deca4aee3ba523dd7641c77170"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga751857deca4aee3ba523dd7641c77170">More...</a><br /></td></tr>
<tr class="separator:ga751857deca4aee3ba523dd7641c77170"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1028e7547f83ea79d6a7d297b1887e63"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga1028e7547f83ea79d6a7d297b1887e63">operator!=</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1028e7547f83ea79d6a7d297b1887e63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga1028e7547f83ea79d6a7d297b1887e63">More...</a><br /></td></tr>
<tr class="separator:ga1028e7547f83ea79d6a7d297b1887e63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga77ec5dcd1cdbe752749095b9dc0b3f3f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga77ec5dcd1cdbe752749095b9dc0b3f3f">operator!=</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga77ec5dcd1cdbe752749095b9dc0b3f3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga77ec5dcd1cdbe752749095b9dc0b3f3f">More...</a><br /></td></tr>
<tr class="separator:ga77ec5dcd1cdbe752749095b9dc0b3f3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b94790225a1d655bdc83656e3aa876a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga3b94790225a1d655bdc83656e3aa876a">operator!=</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga3b94790225a1d655bdc83656e3aa876a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga3b94790225a1d655bdc83656e3aa876a">More...</a><br /></td></tr>
<tr class="separator:ga3b94790225a1d655bdc83656e3aa876a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf67876729fa9b0026300f5ab25651e5c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gaf67876729fa9b0026300f5ab25651e5c">operator!=</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf67876729fa9b0026300f5ab25651e5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#gaf67876729fa9b0026300f5ab25651e5c">More...</a><br /></td></tr>
<tr class="separator:gaf67876729fa9b0026300f5ab25651e5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac246690b8c35b57c1e4b22cdad90c230"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gac246690b8c35b57c1e4b22cdad90c230">operator!=</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac246690b8c35b57c1e4b22cdad90c230"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#gac246690b8c35b57c1e4b22cdad90c230">More...</a><br /></td></tr>
<tr class="separator:gac246690b8c35b57c1e4b22cdad90c230"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4f483c6f48b7bdad5d89c4c9a45744b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga4f483c6f48b7bdad5d89c4c9a45744b6">operator!=</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4f483c6f48b7bdad5d89c4c9a45744b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga4f483c6f48b7bdad5d89c4c9a45744b6">More...</a><br /></td></tr>
<tr class="separator:ga4f483c6f48b7bdad5d89c4c9a45744b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab9ed5a6853d2d3117184514c64a96082"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gab9ed5a6853d2d3117184514c64a96082">operator!=</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab9ed5a6853d2d3117184514c64a96082"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#gab9ed5a6853d2d3117184514c64a96082">More...</a><br /></td></tr>
<tr class="separator:gab9ed5a6853d2d3117184514c64a96082"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga773f41d3dcb7c3c510e7326baac49011"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga773f41d3dcb7c3c510e7326baac49011">operator!=</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga773f41d3dcb7c3c510e7326baac49011"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga773f41d3dcb7c3c510e7326baac49011">More...</a><br /></td></tr>
<tr class="separator:ga773f41d3dcb7c3c510e7326baac49011"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd827c20b90c3b59a13d0fa485ac78f2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gacd827c20b90c3b59a13d0fa485ac78f2">operator!=</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gacd827c20b90c3b59a13d0fa485ac78f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#gacd827c20b90c3b59a13d0fa485ac78f2">More...</a><br /></td></tr>
<tr class="separator:gacd827c20b90c3b59a13d0fa485ac78f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga953d0c956d0f1c50f6a8e049eed29651"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga953d0c956d0f1c50f6a8e049eed29651">operator!=</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga953d0c956d0f1c50f6a8e049eed29651"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga953d0c956d0f1c50f6a8e049eed29651">More...</a><br /></td></tr>
<tr class="separator:ga953d0c956d0f1c50f6a8e049eed29651"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1de7b0387deebf32c91481850b6b0504"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga1de7b0387deebf32c91481850b6b0504">operator!=</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga1de7b0387deebf32c91481850b6b0504"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga1de7b0387deebf32c91481850b6b0504">More...</a><br /></td></tr>
<tr class="separator:ga1de7b0387deebf32c91481850b6b0504"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67b3c76c2aa60b5e30766c52a68fd03c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga67b3c76c2aa60b5e30766c52a68fd03c">operator!=</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga67b3c76c2aa60b5e30766c52a68fd03c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga67b3c76c2aa60b5e30766c52a68fd03c">More...</a><br /></td></tr>
<tr class="separator:ga67b3c76c2aa60b5e30766c52a68fd03c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaee088c87db8e72280ae6ad1e8e8eeec2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gaee088c87db8e72280ae6ad1e8e8eeec2">operator!=</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gaee088c87db8e72280ae6ad1e8e8eeec2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#gaee088c87db8e72280ae6ad1e8e8eeec2">More...</a><br /></td></tr>
<tr class="separator:gaee088c87db8e72280ae6ad1e8e8eeec2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9324fac0d9485e5b2b910d1db6005e5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gac9324fac0d9485e5b2b910d1db6005e5">operator!=</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:gac9324fac0d9485e5b2b910d1db6005e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#gac9324fac0d9485e5b2b910d1db6005e5">More...</a><br /></td></tr>
<tr class="separator:gac9324fac0d9485e5b2b910d1db6005e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga53dd22a7c51e5ecf8afd940f6779b2d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga53dd22a7c51e5ecf8afd940f6779b2d8">operator!=</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga53dd22a7c51e5ecf8afd940f6779b2d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga53dd22a7c51e5ecf8afd940f6779b2d8">More...</a><br /></td></tr>
<tr class="separator:ga53dd22a7c51e5ecf8afd940f6779b2d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae73dc0fa47c671dc5d2f5b3f9a19e16a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gae73dc0fa47c671dc5d2f5b3f9a19e16a">operator!=</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gae73dc0fa47c671dc5d2f5b3f9a19e16a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#gae73dc0fa47c671dc5d2f5b3f9a19e16a">More...</a><br /></td></tr>
<tr class="separator:gae73dc0fa47c671dc5d2f5b3f9a19e16a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd527a10fb1127384436d9d822616460"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gafd527a10fb1127384436d9d822616460">operator!=</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:gafd527a10fb1127384436d9d822616460"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#gafd527a10fb1127384436d9d822616460">More...</a><br /></td></tr>
<tr class="separator:gafd527a10fb1127384436d9d822616460"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gace0232c0713eae1bc643ea855fd6ac60"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gace0232c0713eae1bc643ea855fd6ac60">operator!=</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gace0232c0713eae1bc643ea855fd6ac60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#gace0232c0713eae1bc643ea855fd6ac60">More...</a><br /></td></tr>
<tr class="separator:gace0232c0713eae1bc643ea855fd6ac60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae0967787ecc0c2b801933eb877a0e8f6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gae0967787ecc0c2b801933eb877a0e8f6">operator!=</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gae0967787ecc0c2b801933eb877a0e8f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#gae0967787ecc0c2b801933eb877a0e8f6">More...</a><br /></td></tr>
<tr class="separator:gae0967787ecc0c2b801933eb877a0e8f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0e40504a26fd5cc7a4eddb77477b956"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gaa0e40504a26fd5cc7a4eddb77477b956">operator!=</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gaa0e40504a26fd5cc7a4eddb77477b956"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga224af7d8de127ec084b7f98a45c25fd5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga224af7d8de127ec084b7f98a45c25fd5">operator!=</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga224af7d8de127ec084b7f98a45c25fd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga224af7d8de127ec084b7f98a45c25fd5">More...</a><br /></td></tr>
<tr class="separator:ga224af7d8de127ec084b7f98a45c25fd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c2302c2852b738bb84dc3cea02bd558"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga8c2302c2852b738bb84dc3cea02bd558">operator!=</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8c2302c2852b738bb84dc3cea02bd558"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga8c2302c2852b738bb84dc3cea02bd558">More...</a><br /></td></tr>
<tr class="separator:ga8c2302c2852b738bb84dc3cea02bd558"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga011bfb619dda620980ee4b6ada010a23"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#ga011bfb619dda620980ee4b6ada010a23">operator!=</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga011bfb619dda620980ee4b6ada010a23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an inequality operation on two arrays or an array and a value.  <a href="group__arith__func__neq.htm#ga011bfb619dda620980ee4b6ada010a23">More...</a><br /></td></tr>
<tr class="separator:ga011bfb619dda620980ee4b6ada010a23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab69cd7ab38410c6197f0cb39064867a9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neq.htm#gab69cd7ab38410c6197f0cb39064867a9">operator!=</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gab69cd7ab38410c6197f0cb39064867a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga0f498f332a5200a6c26efa7018fa8301"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga0f498f332a5200a6c26efa7018fa8301">operator&lt;</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0f498f332a5200a6c26efa7018fa8301"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga0f498f332a5200a6c26efa7018fa8301">More...</a><br /></td></tr>
<tr class="separator:ga0f498f332a5200a6c26efa7018fa8301"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1460875b0556d0800cf73361e17868f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga1460875b0556d0800cf73361e17868f1">operator&lt;</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1460875b0556d0800cf73361e17868f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga1460875b0556d0800cf73361e17868f1">More...</a><br /></td></tr>
<tr class="separator:ga1460875b0556d0800cf73361e17868f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9a33ba15199498b02f0739b525a6331"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gae9a33ba15199498b02f0739b525a6331">operator&lt;</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae9a33ba15199498b02f0739b525a6331"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#gae9a33ba15199498b02f0739b525a6331">More...</a><br /></td></tr>
<tr class="separator:gae9a33ba15199498b02f0739b525a6331"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01d9df6510cdf01b8f2099f472f1a62c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga01d9df6510cdf01b8f2099f472f1a62c">operator&lt;</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga01d9df6510cdf01b8f2099f472f1a62c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga01d9df6510cdf01b8f2099f472f1a62c">More...</a><br /></td></tr>
<tr class="separator:ga01d9df6510cdf01b8f2099f472f1a62c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga38fcf55794c41ab80a561fba1f6f8d68"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga38fcf55794c41ab80a561fba1f6f8d68">operator&lt;</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga38fcf55794c41ab80a561fba1f6f8d68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga38fcf55794c41ab80a561fba1f6f8d68">More...</a><br /></td></tr>
<tr class="separator:ga38fcf55794c41ab80a561fba1f6f8d68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga84d2dace0b557aea85b436d2b4e221d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga84d2dace0b557aea85b436d2b4e221d2">operator&lt;</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga84d2dace0b557aea85b436d2b4e221d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga84d2dace0b557aea85b436d2b4e221d2">More...</a><br /></td></tr>
<tr class="separator:ga84d2dace0b557aea85b436d2b4e221d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9aee58bfc337c1c1a9957faaa0e6d2d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga9aee58bfc337c1c1a9957faaa0e6d2d6">operator&lt;</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9aee58bfc337c1c1a9957faaa0e6d2d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga9aee58bfc337c1c1a9957faaa0e6d2d6">More...</a><br /></td></tr>
<tr class="separator:ga9aee58bfc337c1c1a9957faaa0e6d2d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c5ac0267065fea8d9d4e2f95a0d2cc7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga8c5ac0267065fea8d9d4e2f95a0d2cc7">operator&lt;</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8c5ac0267065fea8d9d4e2f95a0d2cc7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga8c5ac0267065fea8d9d4e2f95a0d2cc7">More...</a><br /></td></tr>
<tr class="separator:ga8c5ac0267065fea8d9d4e2f95a0d2cc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga58f4c55362b903293ed730598cbe96f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga58f4c55362b903293ed730598cbe96f8">operator&lt;</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga58f4c55362b903293ed730598cbe96f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga58f4c55362b903293ed730598cbe96f8">More...</a><br /></td></tr>
<tr class="separator:ga58f4c55362b903293ed730598cbe96f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa27ab8b7ab794f6d7ea7448fee31429b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gaa27ab8b7ab794f6d7ea7448fee31429b">operator&lt;</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa27ab8b7ab794f6d7ea7448fee31429b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#gaa27ab8b7ab794f6d7ea7448fee31429b">More...</a><br /></td></tr>
<tr class="separator:gaa27ab8b7ab794f6d7ea7448fee31429b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f15b27033846badfdc8dafe391c5ab2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga6f15b27033846badfdc8dafe391c5ab2">operator&lt;</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6f15b27033846badfdc8dafe391c5ab2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga6f15b27033846badfdc8dafe391c5ab2">More...</a><br /></td></tr>
<tr class="separator:ga6f15b27033846badfdc8dafe391c5ab2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ceaa7bca44f2393d9968acbf41a76a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga7ceaa7bca44f2393d9968acbf41a76a2">operator&lt;</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7ceaa7bca44f2393d9968acbf41a76a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga7ceaa7bca44f2393d9968acbf41a76a2">More...</a><br /></td></tr>
<tr class="separator:ga7ceaa7bca44f2393d9968acbf41a76a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7e123216962d70665c258862a0bd52ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga7e123216962d70665c258862a0bd52ba">operator&lt;</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7e123216962d70665c258862a0bd52ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga7e123216962d70665c258862a0bd52ba">More...</a><br /></td></tr>
<tr class="separator:ga7e123216962d70665c258862a0bd52ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga81843ed3ad1c671ec5aed89508d26e3f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga81843ed3ad1c671ec5aed89508d26e3f">operator&lt;</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga81843ed3ad1c671ec5aed89508d26e3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga81843ed3ad1c671ec5aed89508d26e3f">More...</a><br /></td></tr>
<tr class="separator:ga81843ed3ad1c671ec5aed89508d26e3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeb4c5a11235c8c6d042385503ea6a23b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gaeb4c5a11235c8c6d042385503ea6a23b">operator&lt;</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gaeb4c5a11235c8c6d042385503ea6a23b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#gaeb4c5a11235c8c6d042385503ea6a23b">More...</a><br /></td></tr>
<tr class="separator:gaeb4c5a11235c8c6d042385503ea6a23b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac22fb625ae13af40c1e680671f89341d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gac22fb625ae13af40c1e680671f89341d">operator&lt;</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gac22fb625ae13af40c1e680671f89341d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#gac22fb625ae13af40c1e680671f89341d">More...</a><br /></td></tr>
<tr class="separator:gac22fb625ae13af40c1e680671f89341d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacad065838922b51e17b83f92bbaf4f25"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gacad065838922b51e17b83f92bbaf4f25">operator&lt;</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gacad065838922b51e17b83f92bbaf4f25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#gacad065838922b51e17b83f92bbaf4f25">More...</a><br /></td></tr>
<tr class="separator:gacad065838922b51e17b83f92bbaf4f25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga89bd3bbea9ad9807a6cd84f38b14db6f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga89bd3bbea9ad9807a6cd84f38b14db6f">operator&lt;</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga89bd3bbea9ad9807a6cd84f38b14db6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga89bd3bbea9ad9807a6cd84f38b14db6f">More...</a><br /></td></tr>
<tr class="separator:ga89bd3bbea9ad9807a6cd84f38b14db6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed8221f9351dd57b9ed73d964775b65a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gaed8221f9351dd57b9ed73d964775b65a">operator&lt;</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:gaed8221f9351dd57b9ed73d964775b65a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#gaed8221f9351dd57b9ed73d964775b65a">More...</a><br /></td></tr>
<tr class="separator:gaed8221f9351dd57b9ed73d964775b65a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadaa9dea99e6d76616632f5777474ee62"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gadaa9dea99e6d76616632f5777474ee62">operator&lt;</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gadaa9dea99e6d76616632f5777474ee62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#gadaa9dea99e6d76616632f5777474ee62">More...</a><br /></td></tr>
<tr class="separator:gadaa9dea99e6d76616632f5777474ee62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga52041a86b12173338a8a2c9cc051d4bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga52041a86b12173338a8a2c9cc051d4bb">operator&lt;</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga52041a86b12173338a8a2c9cc051d4bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga52041a86b12173338a8a2c9cc051d4bb">More...</a><br /></td></tr>
<tr class="separator:ga52041a86b12173338a8a2c9cc051d4bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga24b74befa807aa7002c379ac707091f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga24b74befa807aa7002c379ac707091f9">operator&lt;</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga24b74befa807aa7002c379ac707091f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga24b74befa807aa7002c379ac707091f9">More...</a><br /></td></tr>
<tr class="separator:ga24b74befa807aa7002c379ac707091f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad476bfc37cf2ef8bb2342c2058dc65e2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gad476bfc37cf2ef8bb2342c2058dc65e2">operator&lt;</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gad476bfc37cf2ef8bb2342c2058dc65e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#gad476bfc37cf2ef8bb2342c2058dc65e2">More...</a><br /></td></tr>
<tr class="separator:gad476bfc37cf2ef8bb2342c2058dc65e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d3721a8aea977152543273e1f085649"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga6d3721a8aea977152543273e1f085649">operator&lt;</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga6d3721a8aea977152543273e1f085649"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga6d3721a8aea977152543273e1f085649">More...</a><br /></td></tr>
<tr class="separator:ga6d3721a8aea977152543273e1f085649"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga30c43a8125f402a791e04b80904b45bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga30c43a8125f402a791e04b80904b45bc">operator&lt;</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga30c43a8125f402a791e04b80904b45bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga30c43a8125f402a791e04b80904b45bc">More...</a><br /></td></tr>
<tr class="separator:ga30c43a8125f402a791e04b80904b45bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae3b0d7a4d65d2ee54dbf6a605fdee93"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gaae3b0d7a4d65d2ee54dbf6a605fdee93">operator&lt;</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gaae3b0d7a4d65d2ee54dbf6a605fdee93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#gaae3b0d7a4d65d2ee54dbf6a605fdee93">More...</a><br /></td></tr>
<tr class="separator:gaae3b0d7a4d65d2ee54dbf6a605fdee93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf6c6c3bf9a17ebc482678b14a160f0c9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gaf6c6c3bf9a17ebc482678b14a160f0c9">operator&lt;</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gaf6c6c3bf9a17ebc482678b14a160f0c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c227b5475697a6b26b984fbe7eacbc4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga8c227b5475697a6b26b984fbe7eacbc4">operator&lt;</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8c227b5475697a6b26b984fbe7eacbc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#ga8c227b5475697a6b26b984fbe7eacbc4">More...</a><br /></td></tr>
<tr class="separator:ga8c227b5475697a6b26b984fbe7eacbc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaec668330da965aedd55c4d3255152945"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gaec668330da965aedd55c4d3255152945">operator&lt;</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaec668330da965aedd55c4d3255152945"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#gaec668330da965aedd55c4d3255152945">More...</a><br /></td></tr>
<tr class="separator:gaec668330da965aedd55c4d3255152945"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadaeff7925c476de42de48972c284f83e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#gadaeff7925c476de42de48972c284f83e">operator&lt;</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:gadaeff7925c476de42de48972c284f83e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a lower than operation on two arrays or an array and a value.  <a href="group__arith__func__lt.htm#gadaeff7925c476de42de48972c284f83e">More...</a><br /></td></tr>
<tr class="separator:gadaeff7925c476de42de48972c284f83e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d72a526acdbde211688bb9e7e47c113"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__lt.htm#ga3d72a526acdbde211688bb9e7e47c113">operator&lt;</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga3d72a526acdbde211688bb9e7e47c113"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gace7247b2ddcc64e0157fb0904eae9185"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gace7247b2ddcc64e0157fb0904eae9185">operator&lt;=</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gace7247b2ddcc64e0157fb0904eae9185"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#gace7247b2ddcc64e0157fb0904eae9185">More...</a><br /></td></tr>
<tr class="separator:gace7247b2ddcc64e0157fb0904eae9185"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab5e5da720e7a45ae8facf02fbf3c3ea3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gab5e5da720e7a45ae8facf02fbf3c3ea3">operator&lt;=</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab5e5da720e7a45ae8facf02fbf3c3ea3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#gab5e5da720e7a45ae8facf02fbf3c3ea3">More...</a><br /></td></tr>
<tr class="separator:gab5e5da720e7a45ae8facf02fbf3c3ea3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga14c9334da09f94c7b39d9f42f5b41d22"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga14c9334da09f94c7b39d9f42f5b41d22">operator&lt;=</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga14c9334da09f94c7b39d9f42f5b41d22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga14c9334da09f94c7b39d9f42f5b41d22">More...</a><br /></td></tr>
<tr class="separator:ga14c9334da09f94c7b39d9f42f5b41d22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga17d8c8d88d2139f71e48043d5d17bb22"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga17d8c8d88d2139f71e48043d5d17bb22">operator&lt;=</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga17d8c8d88d2139f71e48043d5d17bb22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga17d8c8d88d2139f71e48043d5d17bb22">More...</a><br /></td></tr>
<tr class="separator:ga17d8c8d88d2139f71e48043d5d17bb22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga25329f36198a08c5e5ead5c9be5f3b3b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga25329f36198a08c5e5ead5c9be5f3b3b">operator&lt;=</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga25329f36198a08c5e5ead5c9be5f3b3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga25329f36198a08c5e5ead5c9be5f3b3b">More...</a><br /></td></tr>
<tr class="separator:ga25329f36198a08c5e5ead5c9be5f3b3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf3026197aa0bb74871940941641c969d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gaf3026197aa0bb74871940941641c969d">operator&lt;=</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf3026197aa0bb74871940941641c969d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#gaf3026197aa0bb74871940941641c969d">More...</a><br /></td></tr>
<tr class="separator:gaf3026197aa0bb74871940941641c969d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0a14034a39b88401a1c0e5ebfcc37bd8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga0a14034a39b88401a1c0e5ebfcc37bd8">operator&lt;=</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0a14034a39b88401a1c0e5ebfcc37bd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga0a14034a39b88401a1c0e5ebfcc37bd8">More...</a><br /></td></tr>
<tr class="separator:ga0a14034a39b88401a1c0e5ebfcc37bd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5c9b205b9a267f7f18ee50e8ce130b64"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga5c9b205b9a267f7f18ee50e8ce130b64">operator&lt;=</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5c9b205b9a267f7f18ee50e8ce130b64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga5c9b205b9a267f7f18ee50e8ce130b64">More...</a><br /></td></tr>
<tr class="separator:ga5c9b205b9a267f7f18ee50e8ce130b64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0a18912b6d01a3780d232fdee7743a39"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga0a18912b6d01a3780d232fdee7743a39">operator&lt;=</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0a18912b6d01a3780d232fdee7743a39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga0a18912b6d01a3780d232fdee7743a39">More...</a><br /></td></tr>
<tr class="separator:ga0a18912b6d01a3780d232fdee7743a39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa5b029426e8150b068ec9d11bd5e14f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gaa5b029426e8150b068ec9d11bd5e14f8">operator&lt;=</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa5b029426e8150b068ec9d11bd5e14f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#gaa5b029426e8150b068ec9d11bd5e14f8">More...</a><br /></td></tr>
<tr class="separator:gaa5b029426e8150b068ec9d11bd5e14f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf11050d8b2ae59404537a1507be8a15d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gaf11050d8b2ae59404537a1507be8a15d">operator&lt;=</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf11050d8b2ae59404537a1507be8a15d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#gaf11050d8b2ae59404537a1507be8a15d">More...</a><br /></td></tr>
<tr class="separator:gaf11050d8b2ae59404537a1507be8a15d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fd3d7776f6e01b2cb70e1b5eae156d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga9fd3d7776f6e01b2cb70e1b5eae156d1">operator&lt;=</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9fd3d7776f6e01b2cb70e1b5eae156d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga9fd3d7776f6e01b2cb70e1b5eae156d1">More...</a><br /></td></tr>
<tr class="separator:ga9fd3d7776f6e01b2cb70e1b5eae156d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f8945421937f5cdbb157713b296bd4c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga1f8945421937f5cdbb157713b296bd4c">operator&lt;=</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1f8945421937f5cdbb157713b296bd4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga1f8945421937f5cdbb157713b296bd4c">More...</a><br /></td></tr>
<tr class="separator:ga1f8945421937f5cdbb157713b296bd4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5151e41f77d66720fddbece1ef793be2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga5151e41f77d66720fddbece1ef793be2">operator&lt;=</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5151e41f77d66720fddbece1ef793be2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga5151e41f77d66720fddbece1ef793be2">More...</a><br /></td></tr>
<tr class="separator:ga5151e41f77d66720fddbece1ef793be2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafc96acfdc7c59d688603b33bf5fa0dcf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gafc96acfdc7c59d688603b33bf5fa0dcf">operator&lt;=</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gafc96acfdc7c59d688603b33bf5fa0dcf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#gafc96acfdc7c59d688603b33bf5fa0dcf">More...</a><br /></td></tr>
<tr class="separator:gafc96acfdc7c59d688603b33bf5fa0dcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeeadc69c6fc73747361c82fb7a70a9ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gaeeadc69c6fc73747361c82fb7a70a9ef">operator&lt;=</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gaeeadc69c6fc73747361c82fb7a70a9ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#gaeeadc69c6fc73747361c82fb7a70a9ef">More...</a><br /></td></tr>
<tr class="separator:gaeeadc69c6fc73747361c82fb7a70a9ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacee2a25bd7646bc84c97fab028ec310a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gacee2a25bd7646bc84c97fab028ec310a">operator&lt;=</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gacee2a25bd7646bc84c97fab028ec310a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#gacee2a25bd7646bc84c97fab028ec310a">More...</a><br /></td></tr>
<tr class="separator:gacee2a25bd7646bc84c97fab028ec310a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga22c2aa82f4137b6a509237b87ae26895"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga22c2aa82f4137b6a509237b87ae26895">operator&lt;=</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga22c2aa82f4137b6a509237b87ae26895"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga22c2aa82f4137b6a509237b87ae26895">More...</a><br /></td></tr>
<tr class="separator:ga22c2aa82f4137b6a509237b87ae26895"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaca934a34ac9bf85deb6e69baa4e9be13"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gaca934a34ac9bf85deb6e69baa4e9be13">operator&lt;=</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:gaca934a34ac9bf85deb6e69baa4e9be13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#gaca934a34ac9bf85deb6e69baa4e9be13">More...</a><br /></td></tr>
<tr class="separator:gaca934a34ac9bf85deb6e69baa4e9be13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d02efcbe35377942b92252b901566d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga2d02efcbe35377942b92252b901566d8">operator&lt;=</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga2d02efcbe35377942b92252b901566d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga2d02efcbe35377942b92252b901566d8">More...</a><br /></td></tr>
<tr class="separator:ga2d02efcbe35377942b92252b901566d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2bc81ce8b21140b1861987cd7b8952f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga2bc81ce8b21140b1861987cd7b8952f1">operator&lt;=</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga2bc81ce8b21140b1861987cd7b8952f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga2bc81ce8b21140b1861987cd7b8952f1">More...</a><br /></td></tr>
<tr class="separator:ga2bc81ce8b21140b1861987cd7b8952f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c6a5a6dfde99974a46efae18b254094"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga1c6a5a6dfde99974a46efae18b254094">operator&lt;=</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga1c6a5a6dfde99974a46efae18b254094"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga1c6a5a6dfde99974a46efae18b254094">More...</a><br /></td></tr>
<tr class="separator:ga1c6a5a6dfde99974a46efae18b254094"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae34e8ce2b129cb0530ebb766dbd5f4da"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gae34e8ce2b129cb0530ebb766dbd5f4da">operator&lt;=</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gae34e8ce2b129cb0530ebb766dbd5f4da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#gae34e8ce2b129cb0530ebb766dbd5f4da">More...</a><br /></td></tr>
<tr class="separator:gae34e8ce2b129cb0530ebb766dbd5f4da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5b30f5f81a1a479a389ab145fa7cc298"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga5b30f5f81a1a479a389ab145fa7cc298">operator&lt;=</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga5b30f5f81a1a479a389ab145fa7cc298"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga5b30f5f81a1a479a389ab145fa7cc298">More...</a><br /></td></tr>
<tr class="separator:ga5b30f5f81a1a479a389ab145fa7cc298"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac3dd31cec238235a75fc403f76d3a8bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gac3dd31cec238235a75fc403f76d3a8bd">operator&lt;=</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gac3dd31cec238235a75fc403f76d3a8bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#gac3dd31cec238235a75fc403f76d3a8bd">More...</a><br /></td></tr>
<tr class="separator:gac3dd31cec238235a75fc403f76d3a8bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga30e3100f93eda64b51850b684bb805b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga30e3100f93eda64b51850b684bb805b8">operator&lt;=</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga30e3100f93eda64b51850b684bb805b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga30e3100f93eda64b51850b684bb805b8">More...</a><br /></td></tr>
<tr class="separator:ga30e3100f93eda64b51850b684bb805b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3cd24a6a5af411f721498d70416ebdc5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga3cd24a6a5af411f721498d70416ebdc5">operator&lt;=</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga3cd24a6a5af411f721498d70416ebdc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8abc4eaa555311553364e720495ed61c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga8abc4eaa555311553364e720495ed61c">operator&lt;=</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8abc4eaa555311553364e720495ed61c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga8abc4eaa555311553364e720495ed61c">More...</a><br /></td></tr>
<tr class="separator:ga8abc4eaa555311553364e720495ed61c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga23ab96cd19a1ff34e8296f6a7a4a0c5d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#ga23ab96cd19a1ff34e8296f6a7a4a0c5d">operator&lt;=</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga23ab96cd19a1ff34e8296f6a7a4a0c5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#ga23ab96cd19a1ff34e8296f6a7a4a0c5d">More...</a><br /></td></tr>
<tr class="separator:ga23ab96cd19a1ff34e8296f6a7a4a0c5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf85c0b01f0bf1a09992b47a5994b6d56"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gaf85c0b01f0bf1a09992b47a5994b6d56">operator&lt;=</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:gaf85c0b01f0bf1a09992b47a5994b6d56"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an lower or equal operation on two arrays or an array and a value.  <a href="group__arith__func__le.htm#gaf85c0b01f0bf1a09992b47a5994b6d56">More...</a><br /></td></tr>
<tr class="separator:gaf85c0b01f0bf1a09992b47a5994b6d56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac2569e99fca6ca01d9c6d2e4dd6081ae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__le.htm#gac2569e99fca6ca01d9c6d2e4dd6081ae">operator&lt;=</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gac2569e99fca6ca01d9c6d2e4dd6081ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga235b1c2b0037153b574426194ed222cb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga235b1c2b0037153b574426194ed222cb">operator&gt;</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga235b1c2b0037153b574426194ed222cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga235b1c2b0037153b574426194ed222cb">More...</a><br /></td></tr>
<tr class="separator:ga235b1c2b0037153b574426194ed222cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa1a6a53e6366e82fc3643d4ed292c46d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaa1a6a53e6366e82fc3643d4ed292c46d">operator&gt;</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa1a6a53e6366e82fc3643d4ed292c46d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gaa1a6a53e6366e82fc3643d4ed292c46d">More...</a><br /></td></tr>
<tr class="separator:gaa1a6a53e6366e82fc3643d4ed292c46d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9185f223a35d0658b272a4e4f89670a6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga9185f223a35d0658b272a4e4f89670a6">operator&gt;</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9185f223a35d0658b272a4e4f89670a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga9185f223a35d0658b272a4e4f89670a6">More...</a><br /></td></tr>
<tr class="separator:ga9185f223a35d0658b272a4e4f89670a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadce5b076bf2a25e852b4aaafc7a4d517"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gadce5b076bf2a25e852b4aaafc7a4d517">operator&gt;</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gadce5b076bf2a25e852b4aaafc7a4d517"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gadce5b076bf2a25e852b4aaafc7a4d517">More...</a><br /></td></tr>
<tr class="separator:gadce5b076bf2a25e852b4aaafc7a4d517"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga98391bc7d8eeb5ac9009d60a32e5eca1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga98391bc7d8eeb5ac9009d60a32e5eca1">operator&gt;</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga98391bc7d8eeb5ac9009d60a32e5eca1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga98391bc7d8eeb5ac9009d60a32e5eca1">More...</a><br /></td></tr>
<tr class="separator:ga98391bc7d8eeb5ac9009d60a32e5eca1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae189b502680774e68c65df3582e596aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gae189b502680774e68c65df3582e596aa">operator&gt;</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae189b502680774e68c65df3582e596aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gae189b502680774e68c65df3582e596aa">More...</a><br /></td></tr>
<tr class="separator:gae189b502680774e68c65df3582e596aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaafe4f1e88e6cc80fb924a49f5306580f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaafe4f1e88e6cc80fb924a49f5306580f">operator&gt;</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaafe4f1e88e6cc80fb924a49f5306580f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gaafe4f1e88e6cc80fb924a49f5306580f">More...</a><br /></td></tr>
<tr class="separator:gaafe4f1e88e6cc80fb924a49f5306580f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e5f47bf22536dda64ed7836dac6d356"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga1e5f47bf22536dda64ed7836dac6d356">operator&gt;</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1e5f47bf22536dda64ed7836dac6d356"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga1e5f47bf22536dda64ed7836dac6d356">More...</a><br /></td></tr>
<tr class="separator:ga1e5f47bf22536dda64ed7836dac6d356"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae25a5eb3232d1644532ea14a33ff2677"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gae25a5eb3232d1644532ea14a33ff2677">operator&gt;</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae25a5eb3232d1644532ea14a33ff2677"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gae25a5eb3232d1644532ea14a33ff2677">More...</a><br /></td></tr>
<tr class="separator:gae25a5eb3232d1644532ea14a33ff2677"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga73585dd1667a1c8c9c8aad600fb626c0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga73585dd1667a1c8c9c8aad600fb626c0">operator&gt;</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga73585dd1667a1c8c9c8aad600fb626c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga73585dd1667a1c8c9c8aad600fb626c0">More...</a><br /></td></tr>
<tr class="separator:ga73585dd1667a1c8c9c8aad600fb626c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga37585e1bad0a7cd2b94936fd246e036a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga37585e1bad0a7cd2b94936fd246e036a">operator&gt;</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga37585e1bad0a7cd2b94936fd246e036a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga37585e1bad0a7cd2b94936fd246e036a">More...</a><br /></td></tr>
<tr class="separator:ga37585e1bad0a7cd2b94936fd246e036a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3349cb07c2762af2b8dd9dc6a2d63b9e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga3349cb07c2762af2b8dd9dc6a2d63b9e">operator&gt;</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga3349cb07c2762af2b8dd9dc6a2d63b9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga3349cb07c2762af2b8dd9dc6a2d63b9e">More...</a><br /></td></tr>
<tr class="separator:ga3349cb07c2762af2b8dd9dc6a2d63b9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc3b3173971a0e9b0301cbd71e0020c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gacc3b3173971a0e9b0301cbd71e0020c4">operator&gt;</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gacc3b3173971a0e9b0301cbd71e0020c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gacc3b3173971a0e9b0301cbd71e0020c4">More...</a><br /></td></tr>
<tr class="separator:gacc3b3173971a0e9b0301cbd71e0020c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaabf72b3a94dfc2957522b681992a52a6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaabf72b3a94dfc2957522b681992a52a6">operator&gt;</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaabf72b3a94dfc2957522b681992a52a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gaabf72b3a94dfc2957522b681992a52a6">More...</a><br /></td></tr>
<tr class="separator:gaabf72b3a94dfc2957522b681992a52a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga516a00d97878c07a4a9243fa1bad6c61"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga516a00d97878c07a4a9243fa1bad6c61">operator&gt;</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga516a00d97878c07a4a9243fa1bad6c61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga516a00d97878c07a4a9243fa1bad6c61">More...</a><br /></td></tr>
<tr class="separator:ga516a00d97878c07a4a9243fa1bad6c61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac2af295915bb3934b25c31e3e1b69842"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gac2af295915bb3934b25c31e3e1b69842">operator&gt;</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gac2af295915bb3934b25c31e3e1b69842"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gac2af295915bb3934b25c31e3e1b69842">More...</a><br /></td></tr>
<tr class="separator:gac2af295915bb3934b25c31e3e1b69842"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga44d41038c299786c89d2960cca29e3ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga44d41038c299786c89d2960cca29e3ff">operator&gt;</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga44d41038c299786c89d2960cca29e3ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga44d41038c299786c89d2960cca29e3ff">More...</a><br /></td></tr>
<tr class="separator:ga44d41038c299786c89d2960cca29e3ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b5caa0836dd7a1af5d62edf94b8ba35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga4b5caa0836dd7a1af5d62edf94b8ba35">operator&gt;</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga4b5caa0836dd7a1af5d62edf94b8ba35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga4b5caa0836dd7a1af5d62edf94b8ba35">More...</a><br /></td></tr>
<tr class="separator:ga4b5caa0836dd7a1af5d62edf94b8ba35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6395fa17f631a99bc4619eb1e36bd934"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga6395fa17f631a99bc4619eb1e36bd934">operator&gt;</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga6395fa17f631a99bc4619eb1e36bd934"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga6395fa17f631a99bc4619eb1e36bd934">More...</a><br /></td></tr>
<tr class="separator:ga6395fa17f631a99bc4619eb1e36bd934"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0120de1a9469d5ad496245d66a900fc4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga0120de1a9469d5ad496245d66a900fc4">operator&gt;</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga0120de1a9469d5ad496245d66a900fc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga0120de1a9469d5ad496245d66a900fc4">More...</a><br /></td></tr>
<tr class="separator:ga0120de1a9469d5ad496245d66a900fc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabbb9c1c9cf160221f3938798a9490e0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gabbb9c1c9cf160221f3938798a9490e0b">operator&gt;</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:gabbb9c1c9cf160221f3938798a9490e0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gabbb9c1c9cf160221f3938798a9490e0b">More...</a><br /></td></tr>
<tr class="separator:gabbb9c1c9cf160221f3938798a9490e0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1b48094a61acf07c0144504704a936f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga1b48094a61acf07c0144504704a936f9">operator&gt;</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga1b48094a61acf07c0144504704a936f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga1b48094a61acf07c0144504704a936f9">More...</a><br /></td></tr>
<tr class="separator:ga1b48094a61acf07c0144504704a936f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd5e3f6447a9102943aaf2e7b1c3a64a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gafd5e3f6447a9102943aaf2e7b1c3a64a">operator&gt;</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gafd5e3f6447a9102943aaf2e7b1c3a64a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gafd5e3f6447a9102943aaf2e7b1c3a64a">More...</a><br /></td></tr>
<tr class="separator:gafd5e3f6447a9102943aaf2e7b1c3a64a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa3c6426b37586541456cc10f3e9c2bdf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaa3c6426b37586541456cc10f3e9c2bdf">operator&gt;</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:gaa3c6426b37586541456cc10f3e9c2bdf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gaa3c6426b37586541456cc10f3e9c2bdf">More...</a><br /></td></tr>
<tr class="separator:gaa3c6426b37586541456cc10f3e9c2bdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf35b4258fff7a885e9f954e534c12f64"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gaf35b4258fff7a885e9f954e534c12f64">operator&gt;</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gaf35b4258fff7a885e9f954e534c12f64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gaf35b4258fff7a885e9f954e534c12f64">More...</a><br /></td></tr>
<tr class="separator:gaf35b4258fff7a885e9f954e534c12f64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae0e6002654c095d3b5bbd0233ce182d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gae0e6002654c095d3b5bbd0233ce182d1">operator&gt;</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gae0e6002654c095d3b5bbd0233ce182d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gae0e6002654c095d3b5bbd0233ce182d1">More...</a><br /></td></tr>
<tr class="separator:gae0e6002654c095d3b5bbd0233ce182d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga316c59a0d9d07675c24602c62146c4d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga316c59a0d9d07675c24602c62146c4d2">operator&gt;</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga316c59a0d9d07675c24602c62146c4d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad728d70199b3d91dc4deffa53b012f53"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gad728d70199b3d91dc4deffa53b012f53">operator&gt;</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad728d70199b3d91dc4deffa53b012f53"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gad728d70199b3d91dc4deffa53b012f53">More...</a><br /></td></tr>
<tr class="separator:gad728d70199b3d91dc4deffa53b012f53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7f0b78868c48610021aa2c104364155b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga7f0b78868c48610021aa2c104364155b">operator&gt;</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7f0b78868c48610021aa2c104364155b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#ga7f0b78868c48610021aa2c104364155b">More...</a><br /></td></tr>
<tr class="separator:ga7f0b78868c48610021aa2c104364155b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab0b4f145cdf51365458f5780cda8b3ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#gab0b4f145cdf51365458f5780cda8b3ef">operator&gt;</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:gab0b4f145cdf51365458f5780cda8b3ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater than operation on two arrays or an array and a value.  <a href="group__arith__func__gt.htm#gab0b4f145cdf51365458f5780cda8b3ef">More...</a><br /></td></tr>
<tr class="separator:gab0b4f145cdf51365458f5780cda8b3ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga53a8a9d9c91bdaaee025d02a4362f99e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__gt.htm#ga53a8a9d9c91bdaaee025d02a4362f99e">operator&gt;</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga53a8a9d9c91bdaaee025d02a4362f99e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga8f6acca82a93055bd713432092c429d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga8f6acca82a93055bd713432092c429d0">operator&gt;=</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8f6acca82a93055bd713432092c429d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga8f6acca82a93055bd713432092c429d0">More...</a><br /></td></tr>
<tr class="separator:ga8f6acca82a93055bd713432092c429d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga69ed02690e31f3b58b229254f40e70dc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga69ed02690e31f3b58b229254f40e70dc">operator&gt;=</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga69ed02690e31f3b58b229254f40e70dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga69ed02690e31f3b58b229254f40e70dc">More...</a><br /></td></tr>
<tr class="separator:ga69ed02690e31f3b58b229254f40e70dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2000ed8271016bc5249924d26d41cdae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga2000ed8271016bc5249924d26d41cdae">operator&gt;=</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2000ed8271016bc5249924d26d41cdae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga2000ed8271016bc5249924d26d41cdae">More...</a><br /></td></tr>
<tr class="separator:ga2000ed8271016bc5249924d26d41cdae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga06189d6719f79506bacfcbca0c835e3c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga06189d6719f79506bacfcbca0c835e3c">operator&gt;=</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga06189d6719f79506bacfcbca0c835e3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga06189d6719f79506bacfcbca0c835e3c">More...</a><br /></td></tr>
<tr class="separator:ga06189d6719f79506bacfcbca0c835e3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae86462dc5988a6e7372ad6b400e8fee2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gae86462dc5988a6e7372ad6b400e8fee2">operator&gt;=</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae86462dc5988a6e7372ad6b400e8fee2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#gae86462dc5988a6e7372ad6b400e8fee2">More...</a><br /></td></tr>
<tr class="separator:gae86462dc5988a6e7372ad6b400e8fee2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae1c7c0e9ac647facebac7f5807f81438"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gae1c7c0e9ac647facebac7f5807f81438">operator&gt;=</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae1c7c0e9ac647facebac7f5807f81438"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#gae1c7c0e9ac647facebac7f5807f81438">More...</a><br /></td></tr>
<tr class="separator:gae1c7c0e9ac647facebac7f5807f81438"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf294222a5c658fda697796046cfd5423"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gaf294222a5c658fda697796046cfd5423">operator&gt;=</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf294222a5c658fda697796046cfd5423"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#gaf294222a5c658fda697796046cfd5423">More...</a><br /></td></tr>
<tr class="separator:gaf294222a5c658fda697796046cfd5423"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0872ebe76e3e82aece2e6f52fef6cd5f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga0872ebe76e3e82aece2e6f52fef6cd5f">operator&gt;=</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0872ebe76e3e82aece2e6f52fef6cd5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga0872ebe76e3e82aece2e6f52fef6cd5f">More...</a><br /></td></tr>
<tr class="separator:ga0872ebe76e3e82aece2e6f52fef6cd5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga36c9c5f34b4761585541281432103968"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga36c9c5f34b4761585541281432103968">operator&gt;=</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga36c9c5f34b4761585541281432103968"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga36c9c5f34b4761585541281432103968">More...</a><br /></td></tr>
<tr class="separator:ga36c9c5f34b4761585541281432103968"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5a55f779337d361cdc840a3f1e5fb7ab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga5a55f779337d361cdc840a3f1e5fb7ab">operator&gt;=</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5a55f779337d361cdc840a3f1e5fb7ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga5a55f779337d361cdc840a3f1e5fb7ab">More...</a><br /></td></tr>
<tr class="separator:ga5a55f779337d361cdc840a3f1e5fb7ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8200f6c254a846211e4fb0361e5a897e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga8200f6c254a846211e4fb0361e5a897e">operator&gt;=</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8200f6c254a846211e4fb0361e5a897e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga8200f6c254a846211e4fb0361e5a897e">More...</a><br /></td></tr>
<tr class="separator:ga8200f6c254a846211e4fb0361e5a897e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga21d661d8f0f76fb7cc6b10a89249ddfc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga21d661d8f0f76fb7cc6b10a89249ddfc">operator&gt;=</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga21d661d8f0f76fb7cc6b10a89249ddfc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga21d661d8f0f76fb7cc6b10a89249ddfc">More...</a><br /></td></tr>
<tr class="separator:ga21d661d8f0f76fb7cc6b10a89249ddfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0eb950dd7c1afb8c77ef36f826b329dd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga0eb950dd7c1afb8c77ef36f826b329dd">operator&gt;=</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0eb950dd7c1afb8c77ef36f826b329dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga0eb950dd7c1afb8c77ef36f826b329dd">More...</a><br /></td></tr>
<tr class="separator:ga0eb950dd7c1afb8c77ef36f826b329dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e88f421e8032245b10b0c97254392b3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga8e88f421e8032245b10b0c97254392b3">operator&gt;=</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8e88f421e8032245b10b0c97254392b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga8e88f421e8032245b10b0c97254392b3">More...</a><br /></td></tr>
<tr class="separator:ga8e88f421e8032245b10b0c97254392b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe65eccfe8ca1571796a93a72e971a0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gabe65eccfe8ca1571796a93a72e971a0b">operator&gt;=</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gabe65eccfe8ca1571796a93a72e971a0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#gabe65eccfe8ca1571796a93a72e971a0b">More...</a><br /></td></tr>
<tr class="separator:gabe65eccfe8ca1571796a93a72e971a0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga524f191fd5e2ff59d481ac6fcd4a029c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga524f191fd5e2ff59d481ac6fcd4a029c">operator&gt;=</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga524f191fd5e2ff59d481ac6fcd4a029c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga524f191fd5e2ff59d481ac6fcd4a029c">More...</a><br /></td></tr>
<tr class="separator:ga524f191fd5e2ff59d481ac6fcd4a029c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad1f4c5c0cd912cd71214ec41335abce4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gad1f4c5c0cd912cd71214ec41335abce4">operator&gt;=</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gad1f4c5c0cd912cd71214ec41335abce4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#gad1f4c5c0cd912cd71214ec41335abce4">More...</a><br /></td></tr>
<tr class="separator:gad1f4c5c0cd912cd71214ec41335abce4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga94358c75ca97c5c416d0d247dcb3f122"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga94358c75ca97c5c416d0d247dcb3f122">operator&gt;=</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga94358c75ca97c5c416d0d247dcb3f122"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga94358c75ca97c5c416d0d247dcb3f122">More...</a><br /></td></tr>
<tr class="separator:ga94358c75ca97c5c416d0d247dcb3f122"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4396a0b86b3da3b4b9259de1b598bd82"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga4396a0b86b3da3b4b9259de1b598bd82">operator&gt;=</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga4396a0b86b3da3b4b9259de1b598bd82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga4396a0b86b3da3b4b9259de1b598bd82">More...</a><br /></td></tr>
<tr class="separator:ga4396a0b86b3da3b4b9259de1b598bd82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0d6e99d6863d1380fe118915a57b2a6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gaa0d6e99d6863d1380fe118915a57b2a6">operator&gt;=</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gaa0d6e99d6863d1380fe118915a57b2a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#gaa0d6e99d6863d1380fe118915a57b2a6">More...</a><br /></td></tr>
<tr class="separator:gaa0d6e99d6863d1380fe118915a57b2a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa56e26b56fae28c6b00441714656e77c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gaa56e26b56fae28c6b00441714656e77c">operator&gt;=</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:gaa56e26b56fae28c6b00441714656e77c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#gaa56e26b56fae28c6b00441714656e77c">More...</a><br /></td></tr>
<tr class="separator:gaa56e26b56fae28c6b00441714656e77c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga36d298f563857a126593c3d40c24a4a6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga36d298f563857a126593c3d40c24a4a6">operator&gt;=</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga36d298f563857a126593c3d40c24a4a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga36d298f563857a126593c3d40c24a4a6">More...</a><br /></td></tr>
<tr class="separator:ga36d298f563857a126593c3d40c24a4a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga08802dd589484790f4c7d1aa3ba9f728"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga08802dd589484790f4c7d1aa3ba9f728">operator&gt;=</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga08802dd589484790f4c7d1aa3ba9f728"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga08802dd589484790f4c7d1aa3ba9f728">More...</a><br /></td></tr>
<tr class="separator:ga08802dd589484790f4c7d1aa3ba9f728"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga04cc7bab47894976af129fb6b55eab50"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga04cc7bab47894976af129fb6b55eab50">operator&gt;=</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga04cc7bab47894976af129fb6b55eab50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga04cc7bab47894976af129fb6b55eab50">More...</a><br /></td></tr>
<tr class="separator:ga04cc7bab47894976af129fb6b55eab50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga92cd85948c3b24e70cc7854a57873758"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga92cd85948c3b24e70cc7854a57873758">operator&gt;=</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga92cd85948c3b24e70cc7854a57873758"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga92cd85948c3b24e70cc7854a57873758">More...</a><br /></td></tr>
<tr class="separator:ga92cd85948c3b24e70cc7854a57873758"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc2cdabfce150901e62a6e760751c6b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gadc2cdabfce150901e62a6e760751c6b9">operator&gt;=</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gadc2cdabfce150901e62a6e760751c6b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#gadc2cdabfce150901e62a6e760751c6b9">More...</a><br /></td></tr>
<tr class="separator:gadc2cdabfce150901e62a6e760751c6b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa7e961c4c4922ec40012ff5d365bc08"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gaaa7e961c4c4922ec40012ff5d365bc08">operator&gt;=</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gaaa7e961c4c4922ec40012ff5d365bc08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga53d7e4e10e6a249277815a4e5c8cf2ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga53d7e4e10e6a249277815a4e5c8cf2ba">operator&gt;=</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga53d7e4e10e6a249277815a4e5c8cf2ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga53d7e4e10e6a249277815a4e5c8cf2ba">More...</a><br /></td></tr>
<tr class="separator:ga53d7e4e10e6a249277815a4e5c8cf2ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga19d0d58b756273203b476ac990b5788f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga19d0d58b756273203b476ac990b5788f">operator&gt;=</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga19d0d58b756273203b476ac990b5788f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#ga19d0d58b756273203b476ac990b5788f">More...</a><br /></td></tr>
<tr class="separator:ga19d0d58b756273203b476ac990b5788f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab10dc9694133fd80248edc141264b963"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gab10dc9694133fd80248edc141264b963">operator&gt;=</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:gab10dc9694133fd80248edc141264b963"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <a href="group__arith__func__ge.htm#gab10dc9694133fd80248edc141264b963">More...</a><br /></td></tr>
<tr class="separator:gab10dc9694133fd80248edc141264b963"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75c7a6ae2a5e71e0e288db05d9a89beb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga75c7a6ae2a5e71e0e288db05d9a89beb">operator&gt;=</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga75c7a6ae2a5e71e0e288db05d9a89beb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga86b7c982ad199dc3fb2b88879ebd98f0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga86b7c982ad199dc3fb2b88879ebd98f0">operator||</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga86b7c982ad199dc3fb2b88879ebd98f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga86b7c982ad199dc3fb2b88879ebd98f0">More...</a><br /></td></tr>
<tr class="separator:ga86b7c982ad199dc3fb2b88879ebd98f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5e3d694eeca92a367a4ec05e525925dc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga5e3d694eeca92a367a4ec05e525925dc">operator||</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5e3d694eeca92a367a4ec05e525925dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga5e3d694eeca92a367a4ec05e525925dc">More...</a><br /></td></tr>
<tr class="separator:ga5e3d694eeca92a367a4ec05e525925dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ce6c8e8f23906e6567d2a748e30a710"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga1ce6c8e8f23906e6567d2a748e30a710">operator||</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1ce6c8e8f23906e6567d2a748e30a710"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga1ce6c8e8f23906e6567d2a748e30a710">More...</a><br /></td></tr>
<tr class="separator:ga1ce6c8e8f23906e6567d2a748e30a710"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67f58ee1fb1007aa8532bd6c2e5521a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga67f58ee1fb1007aa8532bd6c2e5521a2">operator||</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga67f58ee1fb1007aa8532bd6c2e5521a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga67f58ee1fb1007aa8532bd6c2e5521a2">More...</a><br /></td></tr>
<tr class="separator:ga67f58ee1fb1007aa8532bd6c2e5521a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0abb4f3f5e7d2e50a8e4e7159b60ce4a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga0abb4f3f5e7d2e50a8e4e7159b60ce4a">operator||</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0abb4f3f5e7d2e50a8e4e7159b60ce4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga0abb4f3f5e7d2e50a8e4e7159b60ce4a">More...</a><br /></td></tr>
<tr class="separator:ga0abb4f3f5e7d2e50a8e4e7159b60ce4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf54315c5a2ced89dc78e3b6989af6998"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gaf54315c5a2ced89dc78e3b6989af6998">operator||</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf54315c5a2ced89dc78e3b6989af6998"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#gaf54315c5a2ced89dc78e3b6989af6998">More...</a><br /></td></tr>
<tr class="separator:gaf54315c5a2ced89dc78e3b6989af6998"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga679e2b63daa184531904070b4ca957ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga679e2b63daa184531904070b4ca957ef">operator||</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga679e2b63daa184531904070b4ca957ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga679e2b63daa184531904070b4ca957ef">More...</a><br /></td></tr>
<tr class="separator:ga679e2b63daa184531904070b4ca957ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga714fc875a22dba2cd7538d888cdf4db2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga714fc875a22dba2cd7538d888cdf4db2">operator||</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga714fc875a22dba2cd7538d888cdf4db2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga714fc875a22dba2cd7538d888cdf4db2">More...</a><br /></td></tr>
<tr class="separator:ga714fc875a22dba2cd7538d888cdf4db2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa8a6d27fa2e5b53ac53e62f9c44ddd57"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gaa8a6d27fa2e5b53ac53e62f9c44ddd57">operator||</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa8a6d27fa2e5b53ac53e62f9c44ddd57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#gaa8a6d27fa2e5b53ac53e62f9c44ddd57">More...</a><br /></td></tr>
<tr class="separator:gaa8a6d27fa2e5b53ac53e62f9c44ddd57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3bdbdd47dca150ab1a679a53d11d06e6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga3bdbdd47dca150ab1a679a53d11d06e6">operator||</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga3bdbdd47dca150ab1a679a53d11d06e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga3bdbdd47dca150ab1a679a53d11d06e6">More...</a><br /></td></tr>
<tr class="separator:ga3bdbdd47dca150ab1a679a53d11d06e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4e9aadd97d38110d105379c2612d6601"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga4e9aadd97d38110d105379c2612d6601">operator||</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4e9aadd97d38110d105379c2612d6601"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga4e9aadd97d38110d105379c2612d6601">More...</a><br /></td></tr>
<tr class="separator:ga4e9aadd97d38110d105379c2612d6601"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2029fcd2a2c20de14dd5ff72e50ad3e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gad2029fcd2a2c20de14dd5ff72e50ad3e">operator||</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad2029fcd2a2c20de14dd5ff72e50ad3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#gad2029fcd2a2c20de14dd5ff72e50ad3e">More...</a><br /></td></tr>
<tr class="separator:gad2029fcd2a2c20de14dd5ff72e50ad3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga93eb7f04dfa83680880cfdf79d32f19b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga93eb7f04dfa83680880cfdf79d32f19b">operator||</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga93eb7f04dfa83680880cfdf79d32f19b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga93eb7f04dfa83680880cfdf79d32f19b">More...</a><br /></td></tr>
<tr class="separator:ga93eb7f04dfa83680880cfdf79d32f19b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4d98bdae0312750ed59110bbca53d90c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga4d98bdae0312750ed59110bbca53d90c">operator||</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4d98bdae0312750ed59110bbca53d90c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga4d98bdae0312750ed59110bbca53d90c">More...</a><br /></td></tr>
<tr class="separator:ga4d98bdae0312750ed59110bbca53d90c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab56e84873adc6215fc2c117a8a308bf4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gab56e84873adc6215fc2c117a8a308bf4">operator||</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gab56e84873adc6215fc2c117a8a308bf4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#gab56e84873adc6215fc2c117a8a308bf4">More...</a><br /></td></tr>
<tr class="separator:gab56e84873adc6215fc2c117a8a308bf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb19966f36b139deee33fbb86fdfd3ac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gadb19966f36b139deee33fbb86fdfd3ac">operator||</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gadb19966f36b139deee33fbb86fdfd3ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#gadb19966f36b139deee33fbb86fdfd3ac">More...</a><br /></td></tr>
<tr class="separator:gadb19966f36b139deee33fbb86fdfd3ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c881acf99c89f3b043112c18149568c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga0c881acf99c89f3b043112c18149568c">operator||</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga0c881acf99c89f3b043112c18149568c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga0c881acf99c89f3b043112c18149568c">More...</a><br /></td></tr>
<tr class="separator:ga0c881acf99c89f3b043112c18149568c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaec5d282b89fc6f538847e3ecc1b4dba1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gaec5d282b89fc6f538847e3ecc1b4dba1">operator||</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:gaec5d282b89fc6f538847e3ecc1b4dba1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#gaec5d282b89fc6f538847e3ecc1b4dba1">More...</a><br /></td></tr>
<tr class="separator:gaec5d282b89fc6f538847e3ecc1b4dba1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d8ea37b17fa730106e55ced55b63239"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga2d8ea37b17fa730106e55ced55b63239">operator||</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga2d8ea37b17fa730106e55ced55b63239"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga2d8ea37b17fa730106e55ced55b63239">More...</a><br /></td></tr>
<tr class="separator:ga2d8ea37b17fa730106e55ced55b63239"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4563cf5402710f418866eed695669c93"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga4563cf5402710f418866eed695669c93">operator||</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga4563cf5402710f418866eed695669c93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga4563cf5402710f418866eed695669c93">More...</a><br /></td></tr>
<tr class="separator:ga4563cf5402710f418866eed695669c93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac55e34abab0dfeec90ba864ff9468bdb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gac55e34abab0dfeec90ba864ff9468bdb">operator||</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:gac55e34abab0dfeec90ba864ff9468bdb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#gac55e34abab0dfeec90ba864ff9468bdb">More...</a><br /></td></tr>
<tr class="separator:gac55e34abab0dfeec90ba864ff9468bdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga696348d1a87d68897dbbb9b0e37ae24c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga696348d1a87d68897dbbb9b0e37ae24c">operator||</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga696348d1a87d68897dbbb9b0e37ae24c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga696348d1a87d68897dbbb9b0e37ae24c">More...</a><br /></td></tr>
<tr class="separator:ga696348d1a87d68897dbbb9b0e37ae24c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac8eeee2f354711341e61a3ad33316fb6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gac8eeee2f354711341e61a3ad33316fb6">operator||</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gac8eeee2f354711341e61a3ad33316fb6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#gac8eeee2f354711341e61a3ad33316fb6">More...</a><br /></td></tr>
<tr class="separator:gac8eeee2f354711341e61a3ad33316fb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafccded190a389f4fc274e76025f68f94"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gafccded190a389f4fc274e76025f68f94">operator||</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:gafccded190a389f4fc274e76025f68f94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#gafccded190a389f4fc274e76025f68f94">More...</a><br /></td></tr>
<tr class="separator:gafccded190a389f4fc274e76025f68f94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gace2c6299ddacdeeae035562353bfcb57"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gace2c6299ddacdeeae035562353bfcb57">operator||</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:gace2c6299ddacdeeae035562353bfcb57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#gace2c6299ddacdeeae035562353bfcb57">More...</a><br /></td></tr>
<tr class="separator:gace2c6299ddacdeeae035562353bfcb57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8ab2f41d32d9b24aaa9a39eeb12f6907"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga8ab2f41d32d9b24aaa9a39eeb12f6907">operator||</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga8ab2f41d32d9b24aaa9a39eeb12f6907"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga8ab2f41d32d9b24aaa9a39eeb12f6907">More...</a><br /></td></tr>
<tr class="separator:ga8ab2f41d32d9b24aaa9a39eeb12f6907"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada26069a9abd1fcd35c9c7d7554164d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#gada26069a9abd1fcd35c9c7d7554164d4">operator||</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gada26069a9abd1fcd35c9c7d7554164d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1fbe8a020ca1176e050c8fa17bc92921"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga1fbe8a020ca1176e050c8fa17bc92921">operator||</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1fbe8a020ca1176e050c8fa17bc92921"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga1fbe8a020ca1176e050c8fa17bc92921">More...</a><br /></td></tr>
<tr class="separator:ga1fbe8a020ca1176e050c8fa17bc92921"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga57ecc8d1fdb126b14bc166bcd6a7dade"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga57ecc8d1fdb126b14bc166bcd6a7dade">operator||</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga57ecc8d1fdb126b14bc166bcd6a7dade"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga57ecc8d1fdb126b14bc166bcd6a7dade">More...</a><br /></td></tr>
<tr class="separator:ga57ecc8d1fdb126b14bc166bcd6a7dade"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d83a7a286ec1272226d6a94cade8beb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga2d83a7a286ec1272226d6a94cade8beb">operator||</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga2d83a7a286ec1272226d6a94cade8beb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an logical OR operation on two arrays or an array and a value.  <a href="group__arith__func__or.htm#ga2d83a7a286ec1272226d6a94cade8beb">More...</a><br /></td></tr>
<tr class="separator:ga2d83a7a286ec1272226d6a94cade8beb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga831c8ba2728b4307391dc864b310f8a6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__or.htm#ga831c8ba2728b4307391dc864b310f8a6">operator||</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga831c8ba2728b4307391dc864b310f8a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga5d7b2765f4b08919b5329c18ab6be5a1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga5d7b2765f4b08919b5329c18ab6be5a1">operator%</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5d7b2765f4b08919b5329c18ab6be5a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga5d7b2765f4b08919b5329c18ab6be5a1">More...</a><br /></td></tr>
<tr class="separator:ga5d7b2765f4b08919b5329c18ab6be5a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34e8020b614980167ad9a698681556ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga34e8020b614980167ad9a698681556ff">operator%</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga34e8020b614980167ad9a698681556ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga34e8020b614980167ad9a698681556ff">More...</a><br /></td></tr>
<tr class="separator:ga34e8020b614980167ad9a698681556ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab8fb5f43d510bef80bf8c35c526a1cd2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gab8fb5f43d510bef80bf8c35c526a1cd2">operator%</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab8fb5f43d510bef80bf8c35c526a1cd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#gab8fb5f43d510bef80bf8c35c526a1cd2">More...</a><br /></td></tr>
<tr class="separator:gab8fb5f43d510bef80bf8c35c526a1cd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga033c4e72bb77f1538a25dd815a616166"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga033c4e72bb77f1538a25dd815a616166">operator%</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga033c4e72bb77f1538a25dd815a616166"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga033c4e72bb77f1538a25dd815a616166">More...</a><br /></td></tr>
<tr class="separator:ga033c4e72bb77f1538a25dd815a616166"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe985103a1e4cbac52b7930a4d57fd81"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gabe985103a1e4cbac52b7930a4d57fd81">operator%</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gabe985103a1e4cbac52b7930a4d57fd81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#gabe985103a1e4cbac52b7930a4d57fd81">More...</a><br /></td></tr>
<tr class="separator:gabe985103a1e4cbac52b7930a4d57fd81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b5ec05d400762b7da2a752e37dff859"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga4b5ec05d400762b7da2a752e37dff859">operator%</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4b5ec05d400762b7da2a752e37dff859"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga4b5ec05d400762b7da2a752e37dff859">More...</a><br /></td></tr>
<tr class="separator:ga4b5ec05d400762b7da2a752e37dff859"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga485a775d6c564150b78fb9e75f88dd16"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga485a775d6c564150b78fb9e75f88dd16">operator%</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga485a775d6c564150b78fb9e75f88dd16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga485a775d6c564150b78fb9e75f88dd16">More...</a><br /></td></tr>
<tr class="separator:ga485a775d6c564150b78fb9e75f88dd16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac22e53f2ce9aac324bbd1e3dc6b95043"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gac22e53f2ce9aac324bbd1e3dc6b95043">operator%</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac22e53f2ce9aac324bbd1e3dc6b95043"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#gac22e53f2ce9aac324bbd1e3dc6b95043">More...</a><br /></td></tr>
<tr class="separator:gac22e53f2ce9aac324bbd1e3dc6b95043"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga25303731dbeb3918b506c5cf4a2d7044"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga25303731dbeb3918b506c5cf4a2d7044">operator%</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga25303731dbeb3918b506c5cf4a2d7044"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga25303731dbeb3918b506c5cf4a2d7044">More...</a><br /></td></tr>
<tr class="separator:ga25303731dbeb3918b506c5cf4a2d7044"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6bcb6d5e9f2167c6d78d9447a2cf8381"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga6bcb6d5e9f2167c6d78d9447a2cf8381">operator%</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6bcb6d5e9f2167c6d78d9447a2cf8381"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga6bcb6d5e9f2167c6d78d9447a2cf8381">More...</a><br /></td></tr>
<tr class="separator:ga6bcb6d5e9f2167c6d78d9447a2cf8381"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4aab986ad83e47cf9f05dafc782d5af9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga4aab986ad83e47cf9f05dafc782d5af9">operator%</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4aab986ad83e47cf9f05dafc782d5af9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga4aab986ad83e47cf9f05dafc782d5af9">More...</a><br /></td></tr>
<tr class="separator:ga4aab986ad83e47cf9f05dafc782d5af9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga313a4fe5b9dff44af5330696d13327d3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga313a4fe5b9dff44af5330696d13327d3">operator%</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga313a4fe5b9dff44af5330696d13327d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga313a4fe5b9dff44af5330696d13327d3">More...</a><br /></td></tr>
<tr class="separator:ga313a4fe5b9dff44af5330696d13327d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f63e1f0bfbd5525de14de9106da0947"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga9f63e1f0bfbd5525de14de9106da0947">operator%</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9f63e1f0bfbd5525de14de9106da0947"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga9f63e1f0bfbd5525de14de9106da0947">More...</a><br /></td></tr>
<tr class="separator:ga9f63e1f0bfbd5525de14de9106da0947"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacaf1272e2b5e57b58ee1130b40655124"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gacaf1272e2b5e57b58ee1130b40655124">operator%</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gacaf1272e2b5e57b58ee1130b40655124"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#gacaf1272e2b5e57b58ee1130b40655124">More...</a><br /></td></tr>
<tr class="separator:gacaf1272e2b5e57b58ee1130b40655124"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a25aca6bb245f59df020d5302025495"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga2a25aca6bb245f59df020d5302025495">operator%</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga2a25aca6bb245f59df020d5302025495"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga2a25aca6bb245f59df020d5302025495">More...</a><br /></td></tr>
<tr class="separator:ga2a25aca6bb245f59df020d5302025495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab8501c6a2c23c744ad1029326ac6db09"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gab8501c6a2c23c744ad1029326ac6db09">operator%</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gab8501c6a2c23c744ad1029326ac6db09"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#gab8501c6a2c23c744ad1029326ac6db09">More...</a><br /></td></tr>
<tr class="separator:gab8501c6a2c23c744ad1029326ac6db09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga68136d2e155228d2dc2a1505b1b8ea8d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga68136d2e155228d2dc2a1505b1b8ea8d">operator%</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga68136d2e155228d2dc2a1505b1b8ea8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga68136d2e155228d2dc2a1505b1b8ea8d">More...</a><br /></td></tr>
<tr class="separator:ga68136d2e155228d2dc2a1505b1b8ea8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7b8f4701a28124ab6b08c38d1b615493"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga7b8f4701a28124ab6b08c38d1b615493">operator%</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga7b8f4701a28124ab6b08c38d1b615493"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga7b8f4701a28124ab6b08c38d1b615493">More...</a><br /></td></tr>
<tr class="separator:ga7b8f4701a28124ab6b08c38d1b615493"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9c3aa591a589f46ff5c99c0965418d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gac9c3aa591a589f46ff5c99c0965418d9">operator%</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:gac9c3aa591a589f46ff5c99c0965418d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#gac9c3aa591a589f46ff5c99c0965418d9">More...</a><br /></td></tr>
<tr class="separator:gac9c3aa591a589f46ff5c99c0965418d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga242cc64e5ef76c8a11b98e552fb6bded"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga242cc64e5ef76c8a11b98e552fb6bded">operator%</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga242cc64e5ef76c8a11b98e552fb6bded"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga242cc64e5ef76c8a11b98e552fb6bded">More...</a><br /></td></tr>
<tr class="separator:ga242cc64e5ef76c8a11b98e552fb6bded"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafb5658ccce4d8170d64397e98c8d2f01"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gafb5658ccce4d8170d64397e98c8d2f01">operator%</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:gafb5658ccce4d8170d64397e98c8d2f01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#gafb5658ccce4d8170d64397e98c8d2f01">More...</a><br /></td></tr>
<tr class="separator:gafb5658ccce4d8170d64397e98c8d2f01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga928a076ddbe170812779e4c5be54b0cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga928a076ddbe170812779e4c5be54b0cc">operator%</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga928a076ddbe170812779e4c5be54b0cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga928a076ddbe170812779e4c5be54b0cc">More...</a><br /></td></tr>
<tr class="separator:ga928a076ddbe170812779e4c5be54b0cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga594d80e7dc5d489dbe8531daf4a903eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga594d80e7dc5d489dbe8531daf4a903eb">operator%</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga594d80e7dc5d489dbe8531daf4a903eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga594d80e7dc5d489dbe8531daf4a903eb">More...</a><br /></td></tr>
<tr class="separator:ga594d80e7dc5d489dbe8531daf4a903eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga03242dff9f96a81161813f29570e32ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga03242dff9f96a81161813f29570e32ce">operator%</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga03242dff9f96a81161813f29570e32ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga03242dff9f96a81161813f29570e32ce">More...</a><br /></td></tr>
<tr class="separator:ga03242dff9f96a81161813f29570e32ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1521fc58c14a72d46a2c96c1328b324b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga1521fc58c14a72d46a2c96c1328b324b">operator%</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga1521fc58c14a72d46a2c96c1328b324b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga1521fc58c14a72d46a2c96c1328b324b">More...</a><br /></td></tr>
<tr class="separator:ga1521fc58c14a72d46a2c96c1328b324b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4bfe12c32ba003c51cff1b8ae09be48f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga4bfe12c32ba003c51cff1b8ae09be48f">operator%</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga4bfe12c32ba003c51cff1b8ae09be48f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga4bfe12c32ba003c51cff1b8ae09be48f">More...</a><br /></td></tr>
<tr class="separator:ga4bfe12c32ba003c51cff1b8ae09be48f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9456140ec7d5e9f9a33efa2bf9b3b5f0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga9456140ec7d5e9f9a33efa2bf9b3b5f0">operator%</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga9456140ec7d5e9f9a33efa2bf9b3b5f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9ed9cd1b0d23cbc92443bb212da90281"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga9ed9cd1b0d23cbc92443bb212da90281">operator%</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9ed9cd1b0d23cbc92443bb212da90281"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga9ed9cd1b0d23cbc92443bb212da90281">More...</a><br /></td></tr>
<tr class="separator:ga9ed9cd1b0d23cbc92443bb212da90281"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6815b34119be0a13de311c956a65e468"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga6815b34119be0a13de311c956a65e468">operator%</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6815b34119be0a13de311c956a65e468"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#ga6815b34119be0a13de311c956a65e468">More...</a><br /></td></tr>
<tr class="separator:ga6815b34119be0a13de311c956a65e468"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae5c6882d28d3e894a598bad824b19c4e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#gae5c6882d28d3e894a598bad824b19c4e">operator%</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:gae5c6882d28d3e894a598bad824b19c4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an modulo operation on two arrays or an array and a value.  <a href="group__arith__func__mod.htm#gae5c6882d28d3e894a598bad824b19c4e">More...</a><br /></td></tr>
<tr class="separator:gae5c6882d28d3e894a598bad824b19c4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga62ac57c63041d66547276d01df9aaeec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__mod.htm#ga62ac57c63041d66547276d01df9aaeec">operator%</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga62ac57c63041d66547276d01df9aaeec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gafd5247844cbabc82134aa2ab9660a7df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gafd5247844cbabc82134aa2ab9660a7df">operator|</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gafd5247844cbabc82134aa2ab9660a7df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#gafd5247844cbabc82134aa2ab9660a7df">More...</a><br /></td></tr>
<tr class="separator:gafd5247844cbabc82134aa2ab9660a7df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf83ffc138567779fe085c153e84089a6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gaf83ffc138567779fe085c153e84089a6">operator|</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf83ffc138567779fe085c153e84089a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#gaf83ffc138567779fe085c153e84089a6">More...</a><br /></td></tr>
<tr class="separator:gaf83ffc138567779fe085c153e84089a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa38bd9696539268f24743b4e28699fa1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gaa38bd9696539268f24743b4e28699fa1">operator|</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa38bd9696539268f24743b4e28699fa1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#gaa38bd9696539268f24743b4e28699fa1">More...</a><br /></td></tr>
<tr class="separator:gaa38bd9696539268f24743b4e28699fa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5b06f02c77bf0ef4698cf3d17d9bf8d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga5b06f02c77bf0ef4698cf3d17d9bf8d5">operator|</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5b06f02c77bf0ef4698cf3d17d9bf8d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga5b06f02c77bf0ef4698cf3d17d9bf8d5">More...</a><br /></td></tr>
<tr class="separator:ga5b06f02c77bf0ef4698cf3d17d9bf8d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75afd529aae44a8cee164768d6a417a5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga75afd529aae44a8cee164768d6a417a5">operator|</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga75afd529aae44a8cee164768d6a417a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga75afd529aae44a8cee164768d6a417a5">More...</a><br /></td></tr>
<tr class="separator:ga75afd529aae44a8cee164768d6a417a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaade651cababd48f0a91ba08e14f26da5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gaade651cababd48f0a91ba08e14f26da5">operator|</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaade651cababd48f0a91ba08e14f26da5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#gaade651cababd48f0a91ba08e14f26da5">More...</a><br /></td></tr>
<tr class="separator:gaade651cababd48f0a91ba08e14f26da5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga211ab107f370a256b0a8cf05c0a53027"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga211ab107f370a256b0a8cf05c0a53027">operator|</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga211ab107f370a256b0a8cf05c0a53027"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga211ab107f370a256b0a8cf05c0a53027">More...</a><br /></td></tr>
<tr class="separator:ga211ab107f370a256b0a8cf05c0a53027"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab3d20254142d9035e6fee26ab2a22fef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gab3d20254142d9035e6fee26ab2a22fef">operator|</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab3d20254142d9035e6fee26ab2a22fef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#gab3d20254142d9035e6fee26ab2a22fef">More...</a><br /></td></tr>
<tr class="separator:gab3d20254142d9035e6fee26ab2a22fef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad19b5ce12c87dbb601204c3e7c55f7ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gad19b5ce12c87dbb601204c3e7c55f7ff">operator|</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad19b5ce12c87dbb601204c3e7c55f7ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#gad19b5ce12c87dbb601204c3e7c55f7ff">More...</a><br /></td></tr>
<tr class="separator:gad19b5ce12c87dbb601204c3e7c55f7ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8b0b2a1e9fa34aabecc20e616e42bcc3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga8b0b2a1e9fa34aabecc20e616e42bcc3">operator|</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8b0b2a1e9fa34aabecc20e616e42bcc3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga8b0b2a1e9fa34aabecc20e616e42bcc3">More...</a><br /></td></tr>
<tr class="separator:ga8b0b2a1e9fa34aabecc20e616e42bcc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0b224a0ca10eb15ca0463239dca0e81e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga0b224a0ca10eb15ca0463239dca0e81e">operator|</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0b224a0ca10eb15ca0463239dca0e81e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga0b224a0ca10eb15ca0463239dca0e81e">More...</a><br /></td></tr>
<tr class="separator:ga0b224a0ca10eb15ca0463239dca0e81e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac3a0245c3dc45fa313f1a9b94b6caa06"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gac3a0245c3dc45fa313f1a9b94b6caa06">operator|</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac3a0245c3dc45fa313f1a9b94b6caa06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#gac3a0245c3dc45fa313f1a9b94b6caa06">More...</a><br /></td></tr>
<tr class="separator:gac3a0245c3dc45fa313f1a9b94b6caa06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaee3c7d592925abdbdb901b8136f2c145"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gaee3c7d592925abdbdb901b8136f2c145">operator|</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaee3c7d592925abdbdb901b8136f2c145"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#gaee3c7d592925abdbdb901b8136f2c145">More...</a><br /></td></tr>
<tr class="separator:gaee3c7d592925abdbdb901b8136f2c145"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadac5c7f28f25003d21011d8151e930bf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gadac5c7f28f25003d21011d8151e930bf">operator|</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gadac5c7f28f25003d21011d8151e930bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#gadac5c7f28f25003d21011d8151e930bf">More...</a><br /></td></tr>
<tr class="separator:gadac5c7f28f25003d21011d8151e930bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5dd8b799c32450bcc9e1fb87c6944718"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga5dd8b799c32450bcc9e1fb87c6944718">operator|</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga5dd8b799c32450bcc9e1fb87c6944718"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga5dd8b799c32450bcc9e1fb87c6944718">More...</a><br /></td></tr>
<tr class="separator:ga5dd8b799c32450bcc9e1fb87c6944718"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga86dae72c9b1ff2c908885abc6c62dd8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga86dae72c9b1ff2c908885abc6c62dd8a">operator|</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga86dae72c9b1ff2c908885abc6c62dd8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga86dae72c9b1ff2c908885abc6c62dd8a">More...</a><br /></td></tr>
<tr class="separator:ga86dae72c9b1ff2c908885abc6c62dd8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac0fb5b406d47eedd113fb5930088e5cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gac0fb5b406d47eedd113fb5930088e5cc">operator|</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gac0fb5b406d47eedd113fb5930088e5cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#gac0fb5b406d47eedd113fb5930088e5cc">More...</a><br /></td></tr>
<tr class="separator:gac0fb5b406d47eedd113fb5930088e5cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga90404e3496a4167a54a353000ea6341a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga90404e3496a4167a54a353000ea6341a">operator|</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga90404e3496a4167a54a353000ea6341a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga90404e3496a4167a54a353000ea6341a">More...</a><br /></td></tr>
<tr class="separator:ga90404e3496a4167a54a353000ea6341a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga15689e2896e03560fb65e6910a373717"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga15689e2896e03560fb65e6910a373717">operator|</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga15689e2896e03560fb65e6910a373717"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga15689e2896e03560fb65e6910a373717">More...</a><br /></td></tr>
<tr class="separator:ga15689e2896e03560fb65e6910a373717"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c9bbf1c94fc2ba3f2afbc5d006c6a82"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga1c9bbf1c94fc2ba3f2afbc5d006c6a82">operator|</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga1c9bbf1c94fc2ba3f2afbc5d006c6a82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga1c9bbf1c94fc2ba3f2afbc5d006c6a82">More...</a><br /></td></tr>
<tr class="separator:ga1c9bbf1c94fc2ba3f2afbc5d006c6a82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd0f5638d222702ecaab9a11f00483ab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gafd0f5638d222702ecaab9a11f00483ab">operator|</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:gafd0f5638d222702ecaab9a11f00483ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#gafd0f5638d222702ecaab9a11f00483ab">More...</a><br /></td></tr>
<tr class="separator:gafd0f5638d222702ecaab9a11f00483ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1394c67505703b37c360355acd23a439"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga1394c67505703b37c360355acd23a439">operator|</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga1394c67505703b37c360355acd23a439"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga1394c67505703b37c360355acd23a439">More...</a><br /></td></tr>
<tr class="separator:ga1394c67505703b37c360355acd23a439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae5849978a299a4479211b9dc2a0b383e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gae5849978a299a4479211b9dc2a0b383e">operator|</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gae5849978a299a4479211b9dc2a0b383e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#gae5849978a299a4479211b9dc2a0b383e">More...</a><br /></td></tr>
<tr class="separator:gae5849978a299a4479211b9dc2a0b383e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5e6575f5cf1978876ce57ed67004cdd3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga5e6575f5cf1978876ce57ed67004cdd3">operator|</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga5e6575f5cf1978876ce57ed67004cdd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga5e6575f5cf1978876ce57ed67004cdd3">More...</a><br /></td></tr>
<tr class="separator:ga5e6575f5cf1978876ce57ed67004cdd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4c51dc35b31ca27729f0a05cc9dfa4d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga4c51dc35b31ca27729f0a05cc9dfa4d8">operator|</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga4c51dc35b31ca27729f0a05cc9dfa4d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga4c51dc35b31ca27729f0a05cc9dfa4d8">More...</a><br /></td></tr>
<tr class="separator:ga4c51dc35b31ca27729f0a05cc9dfa4d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga68fc2158e0a850a341c0126dc33c1fde"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga68fc2158e0a850a341c0126dc33c1fde">operator|</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga68fc2158e0a850a341c0126dc33c1fde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga68fc2158e0a850a341c0126dc33c1fde">More...</a><br /></td></tr>
<tr class="separator:ga68fc2158e0a850a341c0126dc33c1fde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga62145c3b2f4b9b9293bbe5077b449127"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga62145c3b2f4b9b9293bbe5077b449127">operator|</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga62145c3b2f4b9b9293bbe5077b449127"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga659cb9e76ef3f3c9968a58b6728b577d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga659cb9e76ef3f3c9968a58b6728b577d">operator|</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga659cb9e76ef3f3c9968a58b6728b577d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga659cb9e76ef3f3c9968a58b6728b577d">More...</a><br /></td></tr>
<tr class="separator:ga659cb9e76ef3f3c9968a58b6728b577d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga66a860a445d1a97d16ae4ca84a100c18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga66a860a445d1a97d16ae4ca84a100c18">operator|</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga66a860a445d1a97d16ae4ca84a100c18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga66a860a445d1a97d16ae4ca84a100c18">More...</a><br /></td></tr>
<tr class="separator:ga66a860a445d1a97d16ae4ca84a100c18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga718074c9e39cc9dcfed0e7616de68507"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#ga718074c9e39cc9dcfed0e7616de68507">operator|</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga718074c9e39cc9dcfed0e7616de68507"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise OR operation on two arrays or an array and a value.  <a href="group__arith__func__bitor.htm#ga718074c9e39cc9dcfed0e7616de68507">More...</a><br /></td></tr>
<tr class="separator:ga718074c9e39cc9dcfed0e7616de68507"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd47ffc728711da055e564e874359544"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitor.htm#gacd47ffc728711da055e564e874359544">operator|</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gacd47ffc728711da055e564e874359544"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga8df844346693dbe77a2cf00124dbbe9d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga8df844346693dbe77a2cf00124dbbe9d">operator^</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8df844346693dbe77a2cf00124dbbe9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga8df844346693dbe77a2cf00124dbbe9d">More...</a><br /></td></tr>
<tr class="separator:ga8df844346693dbe77a2cf00124dbbe9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafc02816e6fb0446d6bf34eb1e5cfd1ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gafc02816e6fb0446d6bf34eb1e5cfd1ff">operator^</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gafc02816e6fb0446d6bf34eb1e5cfd1ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#gafc02816e6fb0446d6bf34eb1e5cfd1ff">More...</a><br /></td></tr>
<tr class="separator:gafc02816e6fb0446d6bf34eb1e5cfd1ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11d91d4db674d5ec24fa86e5f5e504e1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga11d91d4db674d5ec24fa86e5f5e504e1">operator^</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga11d91d4db674d5ec24fa86e5f5e504e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga11d91d4db674d5ec24fa86e5f5e504e1">More...</a><br /></td></tr>
<tr class="separator:ga11d91d4db674d5ec24fa86e5f5e504e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa11efee800fe1779f0b7a5f505307287"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gaa11efee800fe1779f0b7a5f505307287">operator^</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa11efee800fe1779f0b7a5f505307287"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#gaa11efee800fe1779f0b7a5f505307287">More...</a><br /></td></tr>
<tr class="separator:gaa11efee800fe1779f0b7a5f505307287"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb68b72a3dd70f3b2955e2b143f70707"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gadb68b72a3dd70f3b2955e2b143f70707">operator^</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gadb68b72a3dd70f3b2955e2b143f70707"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#gadb68b72a3dd70f3b2955e2b143f70707">More...</a><br /></td></tr>
<tr class="separator:gadb68b72a3dd70f3b2955e2b143f70707"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01b80a2e0f16db8098e0294d56ef9e90"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga01b80a2e0f16db8098e0294d56ef9e90">operator^</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga01b80a2e0f16db8098e0294d56ef9e90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga01b80a2e0f16db8098e0294d56ef9e90">More...</a><br /></td></tr>
<tr class="separator:ga01b80a2e0f16db8098e0294d56ef9e90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67d6131cf74ceef316f7da4a31da4716"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga67d6131cf74ceef316f7da4a31da4716">operator^</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga67d6131cf74ceef316f7da4a31da4716"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga67d6131cf74ceef316f7da4a31da4716">More...</a><br /></td></tr>
<tr class="separator:ga67d6131cf74ceef316f7da4a31da4716"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b6ea0269f2941a021a75d7325365089"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga2b6ea0269f2941a021a75d7325365089">operator^</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2b6ea0269f2941a021a75d7325365089"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga2b6ea0269f2941a021a75d7325365089">More...</a><br /></td></tr>
<tr class="separator:ga2b6ea0269f2941a021a75d7325365089"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga86c63743752801a148145971032e8b06"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga86c63743752801a148145971032e8b06">operator^</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga86c63743752801a148145971032e8b06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga86c63743752801a148145971032e8b06">More...</a><br /></td></tr>
<tr class="separator:ga86c63743752801a148145971032e8b06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe81c4dae6be69f96ee8a360c93d0b94"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gabe81c4dae6be69f96ee8a360c93d0b94">operator^</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gabe81c4dae6be69f96ee8a360c93d0b94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#gabe81c4dae6be69f96ee8a360c93d0b94">More...</a><br /></td></tr>
<tr class="separator:gabe81c4dae6be69f96ee8a360c93d0b94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9004c93cebab071a56e72afd6b1ae21"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gae9004c93cebab071a56e72afd6b1ae21">operator^</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae9004c93cebab071a56e72afd6b1ae21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#gae9004c93cebab071a56e72afd6b1ae21">More...</a><br /></td></tr>
<tr class="separator:gae9004c93cebab071a56e72afd6b1ae21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd664f31358bdff4a6fd9211b20a597c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gabd664f31358bdff4a6fd9211b20a597c">operator^</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gabd664f31358bdff4a6fd9211b20a597c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#gabd664f31358bdff4a6fd9211b20a597c">More...</a><br /></td></tr>
<tr class="separator:gabd664f31358bdff4a6fd9211b20a597c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga20004a903d243c782c575baae0b60acf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga20004a903d243c782c575baae0b60acf">operator^</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga20004a903d243c782c575baae0b60acf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga20004a903d243c782c575baae0b60acf">More...</a><br /></td></tr>
<tr class="separator:ga20004a903d243c782c575baae0b60acf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7bf2cdbd6517671260e7b76283178a23"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga7bf2cdbd6517671260e7b76283178a23">operator^</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7bf2cdbd6517671260e7b76283178a23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga7bf2cdbd6517671260e7b76283178a23">More...</a><br /></td></tr>
<tr class="separator:ga7bf2cdbd6517671260e7b76283178a23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8186d3c53170662badb25e823c2017bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga8186d3c53170662badb25e823c2017bd">operator^</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga8186d3c53170662badb25e823c2017bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga8186d3c53170662badb25e823c2017bd">More...</a><br /></td></tr>
<tr class="separator:ga8186d3c53170662badb25e823c2017bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga92e402bcc6481ac883729835d7a7f82e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga92e402bcc6481ac883729835d7a7f82e">operator^</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga92e402bcc6481ac883729835d7a7f82e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga92e402bcc6481ac883729835d7a7f82e">More...</a><br /></td></tr>
<tr class="separator:ga92e402bcc6481ac883729835d7a7f82e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2cbfc6bdf7ac8a3e9b45ce6c6289950e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga2cbfc6bdf7ac8a3e9b45ce6c6289950e">operator^</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga2cbfc6bdf7ac8a3e9b45ce6c6289950e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga2cbfc6bdf7ac8a3e9b45ce6c6289950e">More...</a><br /></td></tr>
<tr class="separator:ga2cbfc6bdf7ac8a3e9b45ce6c6289950e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaad311d3636a26fe1ab66d78bca332e06"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gaad311d3636a26fe1ab66d78bca332e06">operator^</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:gaad311d3636a26fe1ab66d78bca332e06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#gaad311d3636a26fe1ab66d78bca332e06">More...</a><br /></td></tr>
<tr class="separator:gaad311d3636a26fe1ab66d78bca332e06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadded6f0985170b313c4ad973befaa906"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gadded6f0985170b313c4ad973befaa906">operator^</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:gadded6f0985170b313c4ad973befaa906"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#gadded6f0985170b313c4ad973befaa906">More...</a><br /></td></tr>
<tr class="separator:gadded6f0985170b313c4ad973befaa906"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa8b9a330b94baf32442e38e11602930e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gaa8b9a330b94baf32442e38e11602930e">operator^</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gaa8b9a330b94baf32442e38e11602930e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#gaa8b9a330b94baf32442e38e11602930e">More...</a><br /></td></tr>
<tr class="separator:gaa8b9a330b94baf32442e38e11602930e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5a13df852339383ca822f9e7993770f7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga5a13df852339383ca822f9e7993770f7">operator^</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga5a13df852339383ca822f9e7993770f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga5a13df852339383ca822f9e7993770f7">More...</a><br /></td></tr>
<tr class="separator:ga5a13df852339383ca822f9e7993770f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacb795249862f874c7e547da21ec5121d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gacb795249862f874c7e547da21ec5121d">operator^</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:gacb795249862f874c7e547da21ec5121d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#gacb795249862f874c7e547da21ec5121d">More...</a><br /></td></tr>
<tr class="separator:gacb795249862f874c7e547da21ec5121d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1dbbb8b1e2f1a30cbda9e8a6c048c4e6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga1dbbb8b1e2f1a30cbda9e8a6c048c4e6">operator^</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga1dbbb8b1e2f1a30cbda9e8a6c048c4e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga1dbbb8b1e2f1a30cbda9e8a6c048c4e6">More...</a><br /></td></tr>
<tr class="separator:ga1dbbb8b1e2f1a30cbda9e8a6c048c4e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01c1d269812be05c74a0a52d82f2d0ed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga01c1d269812be05c74a0a52d82f2d0ed">operator^</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga01c1d269812be05c74a0a52d82f2d0ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga01c1d269812be05c74a0a52d82f2d0ed">More...</a><br /></td></tr>
<tr class="separator:ga01c1d269812be05c74a0a52d82f2d0ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga577297cfe99e9cdf28c032ceeec9a99b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga577297cfe99e9cdf28c032ceeec9a99b">operator^</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga577297cfe99e9cdf28c032ceeec9a99b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga577297cfe99e9cdf28c032ceeec9a99b">More...</a><br /></td></tr>
<tr class="separator:ga577297cfe99e9cdf28c032ceeec9a99b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf125b9c5f05603d96cb2457da42553a9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gaf125b9c5f05603d96cb2457da42553a9">operator^</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:gaf125b9c5f05603d96cb2457da42553a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#gaf125b9c5f05603d96cb2457da42553a9">More...</a><br /></td></tr>
<tr class="separator:gaf125b9c5f05603d96cb2457da42553a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0f386932b9033b8b9d7e37ca1fac5e2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gaa0f386932b9033b8b9d7e37ca1fac5e2">operator^</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gaa0f386932b9033b8b9d7e37ca1fac5e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad158189c8812a397c2f5e3ed95d8e6d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gad158189c8812a397c2f5e3ed95d8e6d1">operator^</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad158189c8812a397c2f5e3ed95d8e6d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#gad158189c8812a397c2f5e3ed95d8e6d1">More...</a><br /></td></tr>
<tr class="separator:gad158189c8812a397c2f5e3ed95d8e6d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9c8e5aba2667e6b12127c9ad4ec330c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gae9c8e5aba2667e6b12127c9ad4ec330c">operator^</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae9c8e5aba2667e6b12127c9ad4ec330c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#gae9c8e5aba2667e6b12127c9ad4ec330c">More...</a><br /></td></tr>
<tr class="separator:gae9c8e5aba2667e6b12127c9ad4ec330c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga20d0fcb2d9e6d8e58fc51cf847fc4e1b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#ga20d0fcb2d9e6d8e58fc51cf847fc4e1b">operator^</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga20d0fcb2d9e6d8e58fc51cf847fc4e1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise XOR operation on two arrays or an array and a value.  <a href="group__arith__func__bitxor.htm#ga20d0fcb2d9e6d8e58fc51cf847fc4e1b">More...</a><br /></td></tr>
<tr class="separator:ga20d0fcb2d9e6d8e58fc51cf847fc4e1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae53f560423ecbc4e697b2ed72277f088"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitxor.htm#gae53f560423ecbc4e697b2ed72277f088">operator^</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gae53f560423ecbc4e697b2ed72277f088"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gade1f7cf5ba0c88126fef53eb6c48df47"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gade1f7cf5ba0c88126fef53eb6c48df47">operator&lt;&lt;</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gade1f7cf5ba0c88126fef53eb6c48df47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#gade1f7cf5ba0c88126fef53eb6c48df47">More...</a><br /></td></tr>
<tr class="separator:gade1f7cf5ba0c88126fef53eb6c48df47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga77297911e80393f06b9742c626a76a90"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga77297911e80393f06b9742c626a76a90">operator&lt;&lt;</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga77297911e80393f06b9742c626a76a90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga77297911e80393f06b9742c626a76a90">More...</a><br /></td></tr>
<tr class="separator:ga77297911e80393f06b9742c626a76a90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b89928c6079f679fe4669b9575dd891"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga9b89928c6079f679fe4669b9575dd891">operator&lt;&lt;</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9b89928c6079f679fe4669b9575dd891"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga9b89928c6079f679fe4669b9575dd891">More...</a><br /></td></tr>
<tr class="separator:ga9b89928c6079f679fe4669b9575dd891"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4404b66b83e548a73bb6a00dea04efee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga4404b66b83e548a73bb6a00dea04efee">operator&lt;&lt;</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4404b66b83e548a73bb6a00dea04efee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga4404b66b83e548a73bb6a00dea04efee">More...</a><br /></td></tr>
<tr class="separator:ga4404b66b83e548a73bb6a00dea04efee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac64462c336c8b3b45638748fcc7a37a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gac64462c336c8b3b45638748fcc7a37a8">operator&lt;&lt;</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac64462c336c8b3b45638748fcc7a37a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#gac64462c336c8b3b45638748fcc7a37a8">More...</a><br /></td></tr>
<tr class="separator:gac64462c336c8b3b45638748fcc7a37a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa4a7bd371ee09668be17ee79d8e672dc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gaa4a7bd371ee09668be17ee79d8e672dc">operator&lt;&lt;</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaa4a7bd371ee09668be17ee79d8e672dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#gaa4a7bd371ee09668be17ee79d8e672dc">More...</a><br /></td></tr>
<tr class="separator:gaa4a7bd371ee09668be17ee79d8e672dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac1f8be0cdc0362639a8a4c2e92c954d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gac1f8be0cdc0362639a8a4c2e92c954d0">operator&lt;&lt;</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac1f8be0cdc0362639a8a4c2e92c954d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#gac1f8be0cdc0362639a8a4c2e92c954d0">More...</a><br /></td></tr>
<tr class="separator:gac1f8be0cdc0362639a8a4c2e92c954d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8f9760b8574551660157b583a37c4dba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga8f9760b8574551660157b583a37c4dba">operator&lt;&lt;</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga8f9760b8574551660157b583a37c4dba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga8f9760b8574551660157b583a37c4dba">More...</a><br /></td></tr>
<tr class="separator:ga8f9760b8574551660157b583a37c4dba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga769bf35372c5e0e3abc8a3413e75288a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga769bf35372c5e0e3abc8a3413e75288a">operator&lt;&lt;</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga769bf35372c5e0e3abc8a3413e75288a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga769bf35372c5e0e3abc8a3413e75288a">More...</a><br /></td></tr>
<tr class="separator:ga769bf35372c5e0e3abc8a3413e75288a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fe9b39cbb5b775688c5722637c1be35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga9fe9b39cbb5b775688c5722637c1be35">operator&lt;&lt;</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9fe9b39cbb5b775688c5722637c1be35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga9fe9b39cbb5b775688c5722637c1be35">More...</a><br /></td></tr>
<tr class="separator:ga9fe9b39cbb5b775688c5722637c1be35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6edb6b723f7ebbe5ff55d5d9f7dd7069"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga6edb6b723f7ebbe5ff55d5d9f7dd7069">operator&lt;&lt;</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6edb6b723f7ebbe5ff55d5d9f7dd7069"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga6edb6b723f7ebbe5ff55d5d9f7dd7069">More...</a><br /></td></tr>
<tr class="separator:ga6edb6b723f7ebbe5ff55d5d9f7dd7069"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d887cdb15d8b18ba4b3186e4f857fb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga5d887cdb15d8b18ba4b3186e4f857fb2">operator&lt;&lt;</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5d887cdb15d8b18ba4b3186e4f857fb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga5d887cdb15d8b18ba4b3186e4f857fb2">More...</a><br /></td></tr>
<tr class="separator:ga5d887cdb15d8b18ba4b3186e4f857fb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf7a8a5be5cc04aef71b118134479daf6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gaf7a8a5be5cc04aef71b118134479daf6">operator&lt;&lt;</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf7a8a5be5cc04aef71b118134479daf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#gaf7a8a5be5cc04aef71b118134479daf6">More...</a><br /></td></tr>
<tr class="separator:gaf7a8a5be5cc04aef71b118134479daf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafc9509b20e3731f6ac48d8cfbf6cdd0d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gafc9509b20e3731f6ac48d8cfbf6cdd0d">operator&lt;&lt;</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gafc9509b20e3731f6ac48d8cfbf6cdd0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#gafc9509b20e3731f6ac48d8cfbf6cdd0d">More...</a><br /></td></tr>
<tr class="separator:gafc9509b20e3731f6ac48d8cfbf6cdd0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3580cb566c5367516b8d9ab7aa30133c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga3580cb566c5367516b8d9ab7aa30133c">operator&lt;&lt;</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga3580cb566c5367516b8d9ab7aa30133c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga3580cb566c5367516b8d9ab7aa30133c">More...</a><br /></td></tr>
<tr class="separator:ga3580cb566c5367516b8d9ab7aa30133c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf4b49cf257fb3508182ec52f42ad1fea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gaf4b49cf257fb3508182ec52f42ad1fea">operator&lt;&lt;</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gaf4b49cf257fb3508182ec52f42ad1fea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#gaf4b49cf257fb3508182ec52f42ad1fea">More...</a><br /></td></tr>
<tr class="separator:gaf4b49cf257fb3508182ec52f42ad1fea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa8b2a42a79922f8da289575bad6d8e31"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gaa8b2a42a79922f8da289575bad6d8e31">operator&lt;&lt;</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gaa8b2a42a79922f8da289575bad6d8e31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#gaa8b2a42a79922f8da289575bad6d8e31">More...</a><br /></td></tr>
<tr class="separator:gaa8b2a42a79922f8da289575bad6d8e31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f8f0735de6e763d2677a561db9865a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga6f8f0735de6e763d2677a561db9865a2">operator&lt;&lt;</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga6f8f0735de6e763d2677a561db9865a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga6f8f0735de6e763d2677a561db9865a2">More...</a><br /></td></tr>
<tr class="separator:ga6f8f0735de6e763d2677a561db9865a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf071b1a22cd6929f90f42f22939ed68d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gaf071b1a22cd6929f90f42f22939ed68d">operator&lt;&lt;</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:gaf071b1a22cd6929f90f42f22939ed68d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#gaf071b1a22cd6929f90f42f22939ed68d">More...</a><br /></td></tr>
<tr class="separator:gaf071b1a22cd6929f90f42f22939ed68d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadaf2e0a306b184086711423ec3c01881"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gadaf2e0a306b184086711423ec3c01881">operator&lt;&lt;</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gadaf2e0a306b184086711423ec3c01881"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#gadaf2e0a306b184086711423ec3c01881">More...</a><br /></td></tr>
<tr class="separator:gadaf2e0a306b184086711423ec3c01881"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga26e775927443e3e3afefdacffc84d04c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga26e775927443e3e3afefdacffc84d04c">operator&lt;&lt;</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga26e775927443e3e3afefdacffc84d04c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga26e775927443e3e3afefdacffc84d04c">More...</a><br /></td></tr>
<tr class="separator:ga26e775927443e3e3afefdacffc84d04c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaceba459f99d298d858eed9dc9b217628"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gaceba459f99d298d858eed9dc9b217628">operator&lt;&lt;</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:gaceba459f99d298d858eed9dc9b217628"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#gaceba459f99d298d858eed9dc9b217628">More...</a><br /></td></tr>
<tr class="separator:gaceba459f99d298d858eed9dc9b217628"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga22c1bfe268f36655f6eebad974d21372"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga22c1bfe268f36655f6eebad974d21372">operator&lt;&lt;</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga22c1bfe268f36655f6eebad974d21372"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga22c1bfe268f36655f6eebad974d21372">More...</a><br /></td></tr>
<tr class="separator:ga22c1bfe268f36655f6eebad974d21372"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ab6d11679a4aa87aae3d4f04a67c1e7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga4ab6d11679a4aa87aae3d4f04a67c1e7">operator&lt;&lt;</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga4ab6d11679a4aa87aae3d4f04a67c1e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga4ab6d11679a4aa87aae3d4f04a67c1e7">More...</a><br /></td></tr>
<tr class="separator:ga4ab6d11679a4aa87aae3d4f04a67c1e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6bc9c4d4af21b2d01b471f9fac34cd0e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga6bc9c4d4af21b2d01b471f9fac34cd0e">operator&lt;&lt;</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga6bc9c4d4af21b2d01b471f9fac34cd0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga6bc9c4d4af21b2d01b471f9fac34cd0e">More...</a><br /></td></tr>
<tr class="separator:ga6bc9c4d4af21b2d01b471f9fac34cd0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga60d24c00cd31988c9961ce65d9aafa8c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga60d24c00cd31988c9961ce65d9aafa8c">operator&lt;&lt;</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga60d24c00cd31988c9961ce65d9aafa8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga60d24c00cd31988c9961ce65d9aafa8c">More...</a><br /></td></tr>
<tr class="separator:ga60d24c00cd31988c9961ce65d9aafa8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d0adbc4f0b47a0847cf1b4e27ee6a60"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga2d0adbc4f0b47a0847cf1b4e27ee6a60">operator&lt;&lt;</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga2d0adbc4f0b47a0847cf1b4e27ee6a60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67bfab0e4add6be390a5317934ac1958"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga67bfab0e4add6be390a5317934ac1958">operator&lt;&lt;</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga67bfab0e4add6be390a5317934ac1958"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga67bfab0e4add6be390a5317934ac1958">More...</a><br /></td></tr>
<tr class="separator:ga67bfab0e4add6be390a5317934ac1958"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75cf1e04c3af9ebb17752323fe8ffc20"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga75cf1e04c3af9ebb17752323fe8ffc20">operator&lt;&lt;</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga75cf1e04c3af9ebb17752323fe8ffc20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga75cf1e04c3af9ebb17752323fe8ffc20">More...</a><br /></td></tr>
<tr class="separator:ga75cf1e04c3af9ebb17752323fe8ffc20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0129259eb88b58fd907f46215f66bf2e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#ga0129259eb88b58fd907f46215f66bf2e">operator&lt;&lt;</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga0129259eb88b58fd907f46215f66bf2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an left shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftl.htm#ga0129259eb88b58fd907f46215f66bf2e">More...</a><br /></td></tr>
<tr class="separator:ga0129259eb88b58fd907f46215f66bf2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed04567f4e7099a5097ca0d14f16fc72"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftl.htm#gaed04567f4e7099a5097ca0d14f16fc72">operator&lt;&lt;</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gaed04567f4e7099a5097ca0d14f16fc72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gad401146f5f407745770d593af6601a8d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gad401146f5f407745770d593af6601a8d">operator&gt;&gt;</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gad401146f5f407745770d593af6601a8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#gad401146f5f407745770d593af6601a8d">More...</a><br /></td></tr>
<tr class="separator:gad401146f5f407745770d593af6601a8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a8584ef990b70fb5e23415a712ed489"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga6a8584ef990b70fb5e23415a712ed489">operator&gt;&gt;</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6a8584ef990b70fb5e23415a712ed489"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga6a8584ef990b70fb5e23415a712ed489">More...</a><br /></td></tr>
<tr class="separator:ga6a8584ef990b70fb5e23415a712ed489"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga806e99deabef1dec5a443bbcc464864b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga806e99deabef1dec5a443bbcc464864b">operator&gt;&gt;</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga806e99deabef1dec5a443bbcc464864b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga806e99deabef1dec5a443bbcc464864b">More...</a><br /></td></tr>
<tr class="separator:ga806e99deabef1dec5a443bbcc464864b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga975a3f35852a6b027ca5510afebee74d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga975a3f35852a6b027ca5510afebee74d">operator&gt;&gt;</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga975a3f35852a6b027ca5510afebee74d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga975a3f35852a6b027ca5510afebee74d">More...</a><br /></td></tr>
<tr class="separator:ga975a3f35852a6b027ca5510afebee74d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga677177add62c96826fe521e667362420"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga677177add62c96826fe521e667362420">operator&gt;&gt;</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga677177add62c96826fe521e667362420"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga677177add62c96826fe521e667362420">More...</a><br /></td></tr>
<tr class="separator:ga677177add62c96826fe521e667362420"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4d4bf76985aaca207394cf008d72b991"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga4d4bf76985aaca207394cf008d72b991">operator&gt;&gt;</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga4d4bf76985aaca207394cf008d72b991"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga4d4bf76985aaca207394cf008d72b991">More...</a><br /></td></tr>
<tr class="separator:ga4d4bf76985aaca207394cf008d72b991"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeb440e722d7b3d23b58467f1668629df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gaeb440e722d7b3d23b58467f1668629df">operator&gt;&gt;</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaeb440e722d7b3d23b58467f1668629df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#gaeb440e722d7b3d23b58467f1668629df">More...</a><br /></td></tr>
<tr class="separator:gaeb440e722d7b3d23b58467f1668629df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7258c3bcabba8a600fe12d212f782727"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga7258c3bcabba8a600fe12d212f782727">operator&gt;&gt;</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7258c3bcabba8a600fe12d212f782727"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga7258c3bcabba8a600fe12d212f782727">More...</a><br /></td></tr>
<tr class="separator:ga7258c3bcabba8a600fe12d212f782727"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac0dd2ab2f0543580424aaf054651fc62"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gac0dd2ab2f0543580424aaf054651fc62">operator&gt;&gt;</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac0dd2ab2f0543580424aaf054651fc62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#gac0dd2ab2f0543580424aaf054651fc62">More...</a><br /></td></tr>
<tr class="separator:gac0dd2ab2f0543580424aaf054651fc62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga54f5e7c1108ab95beaadf69837d78657"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga54f5e7c1108ab95beaadf69837d78657">operator&gt;&gt;</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga54f5e7c1108ab95beaadf69837d78657"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga54f5e7c1108ab95beaadf69837d78657">More...</a><br /></td></tr>
<tr class="separator:ga54f5e7c1108ab95beaadf69837d78657"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafec7f8546ca0feea5bb6796aca79b183"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gafec7f8546ca0feea5bb6796aca79b183">operator&gt;&gt;</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gafec7f8546ca0feea5bb6796aca79b183"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#gafec7f8546ca0feea5bb6796aca79b183">More...</a><br /></td></tr>
<tr class="separator:gafec7f8546ca0feea5bb6796aca79b183"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafdd6b651a3b3aa2d4546eabaa6091070"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gafdd6b651a3b3aa2d4546eabaa6091070">operator&gt;&gt;</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gafdd6b651a3b3aa2d4546eabaa6091070"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#gafdd6b651a3b3aa2d4546eabaa6091070">More...</a><br /></td></tr>
<tr class="separator:gafdd6b651a3b3aa2d4546eabaa6091070"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ab43a4d8949166c538fa9405ece0d51"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga1ab43a4d8949166c538fa9405ece0d51">operator&gt;&gt;</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1ab43a4d8949166c538fa9405ece0d51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga1ab43a4d8949166c538fa9405ece0d51">More...</a><br /></td></tr>
<tr class="separator:ga1ab43a4d8949166c538fa9405ece0d51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf7b463dc8e205b9f6343c050f8c33b5d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gaf7b463dc8e205b9f6343c050f8c33b5d">operator&gt;&gt;</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaf7b463dc8e205b9f6343c050f8c33b5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#gaf7b463dc8e205b9f6343c050f8c33b5d">More...</a><br /></td></tr>
<tr class="separator:gaf7b463dc8e205b9f6343c050f8c33b5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5df7284038b2c15dffc63557a7cd4ca1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga5df7284038b2c15dffc63557a7cd4ca1">operator&gt;&gt;</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga5df7284038b2c15dffc63557a7cd4ca1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga5df7284038b2c15dffc63557a7cd4ca1">More...</a><br /></td></tr>
<tr class="separator:ga5df7284038b2c15dffc63557a7cd4ca1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga170b038d91b26b62eee905ebde063b8c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga170b038d91b26b62eee905ebde063b8c">operator&gt;&gt;</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga170b038d91b26b62eee905ebde063b8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga170b038d91b26b62eee905ebde063b8c">More...</a><br /></td></tr>
<tr class="separator:ga170b038d91b26b62eee905ebde063b8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0a7f441cd758df9da4002fa6c3d1e90c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga0a7f441cd758df9da4002fa6c3d1e90c">operator&gt;&gt;</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga0a7f441cd758df9da4002fa6c3d1e90c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga0a7f441cd758df9da4002fa6c3d1e90c">More...</a><br /></td></tr>
<tr class="separator:ga0a7f441cd758df9da4002fa6c3d1e90c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2e1382bd10511112d77bcefbc36b0ce2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga2e1382bd10511112d77bcefbc36b0ce2">operator&gt;&gt;</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga2e1382bd10511112d77bcefbc36b0ce2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga2e1382bd10511112d77bcefbc36b0ce2">More...</a><br /></td></tr>
<tr class="separator:ga2e1382bd10511112d77bcefbc36b0ce2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae32fb3d4af8e7c98a66dcc67caa95cbd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gae32fb3d4af8e7c98a66dcc67caa95cbd">operator&gt;&gt;</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:gae32fb3d4af8e7c98a66dcc67caa95cbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#gae32fb3d4af8e7c98a66dcc67caa95cbd">More...</a><br /></td></tr>
<tr class="separator:gae32fb3d4af8e7c98a66dcc67caa95cbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed0ed54c5c62a6e7f1052cf20b3c7e3e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gaed0ed54c5c62a6e7f1052cf20b3c7e3e">operator&gt;&gt;</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gaed0ed54c5c62a6e7f1052cf20b3c7e3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#gaed0ed54c5c62a6e7f1052cf20b3c7e3e">More...</a><br /></td></tr>
<tr class="separator:gaed0ed54c5c62a6e7f1052cf20b3c7e3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34fdd906026acf6ff156d5b318ec01fb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga34fdd906026acf6ff156d5b318ec01fb">operator&gt;&gt;</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga34fdd906026acf6ff156d5b318ec01fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga34fdd906026acf6ff156d5b318ec01fb">More...</a><br /></td></tr>
<tr class="separator:ga34fdd906026acf6ff156d5b318ec01fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0bebc99e71a5b24caaa58035f7d2525f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga0bebc99e71a5b24caaa58035f7d2525f">operator&gt;&gt;</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga0bebc99e71a5b24caaa58035f7d2525f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga0bebc99e71a5b24caaa58035f7d2525f">More...</a><br /></td></tr>
<tr class="separator:ga0bebc99e71a5b24caaa58035f7d2525f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga87bf90dbcdbcadf7abfd905491b3b923"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga87bf90dbcdbcadf7abfd905491b3b923">operator&gt;&gt;</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:ga87bf90dbcdbcadf7abfd905491b3b923"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga87bf90dbcdbcadf7abfd905491b3b923">More...</a><br /></td></tr>
<tr class="separator:ga87bf90dbcdbcadf7abfd905491b3b923"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga779300fa51b5dfed3cea65147cac2c9c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga779300fa51b5dfed3cea65147cac2c9c">operator&gt;&gt;</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga779300fa51b5dfed3cea65147cac2c9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga779300fa51b5dfed3cea65147cac2c9c">More...</a><br /></td></tr>
<tr class="separator:ga779300fa51b5dfed3cea65147cac2c9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga513216ade20ce56378342ca935a4abf8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga513216ade20ce56378342ca935a4abf8">operator&gt;&gt;</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga513216ade20ce56378342ca935a4abf8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga513216ade20ce56378342ca935a4abf8">More...</a><br /></td></tr>
<tr class="separator:ga513216ade20ce56378342ca935a4abf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67ff842037f399f3f5094dcb943003fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga67ff842037f399f3f5094dcb943003fe">operator&gt;&gt;</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga67ff842037f399f3f5094dcb943003fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga67ff842037f399f3f5094dcb943003fe">More...</a><br /></td></tr>
<tr class="separator:ga67ff842037f399f3f5094dcb943003fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab3124df9a2e5ea7e8406f75297fdf3af"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gab3124df9a2e5ea7e8406f75297fdf3af">operator&gt;&gt;</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:gab3124df9a2e5ea7e8406f75297fdf3af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5924bbc2214bad84177e08b37ae76604"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga5924bbc2214bad84177e08b37ae76604">operator&gt;&gt;</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga5924bbc2214bad84177e08b37ae76604"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga5924bbc2214bad84177e08b37ae76604">More...</a><br /></td></tr>
<tr class="separator:ga5924bbc2214bad84177e08b37ae76604"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga06cfa70aeddd422c1bf9a19689d3e3c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga06cfa70aeddd422c1bf9a19689d3e3c3">operator&gt;&gt;</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga06cfa70aeddd422c1bf9a19689d3e3c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga06cfa70aeddd422c1bf9a19689d3e3c3">More...</a><br /></td></tr>
<tr class="separator:ga06cfa70aeddd422c1bf9a19689d3e3c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4be23d63f2859e8799509d87b3e83ca4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#ga4be23d63f2859e8799509d87b3e83ca4">operator&gt;&gt;</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga4be23d63f2859e8799509d87b3e83ca4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an right shift operation on two arrays or an array and a value.  <a href="group__arith__func__shiftr.htm#ga4be23d63f2859e8799509d87b3e83ca4">More...</a><br /></td></tr>
<tr class="separator:ga4be23d63f2859e8799509d87b3e83ca4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9fbfc39a3d1685d5e975c42691735a6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__shiftr.htm#gae9fbfc39a3d1685d5e975c42691735a6">operator&gt;&gt;</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gae9fbfc39a3d1685d5e975c42691735a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gab46e2e664e37c6514c4fd4c8fd13c3d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gab46e2e664e37c6514c4fd4c8fd13c3d2">operator &amp;</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab46e2e664e37c6514c4fd4c8fd13c3d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an bitwise AND operation on two arrays or an array and a value.  <a href="group__arith__func__bitand.htm#gab46e2e664e37c6514c4fd4c8fd13c3d2">More...</a><br /></td></tr>
<tr class="separator:gab46e2e664e37c6514c4fd4c8fd13c3d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f499582b24691b9124911f9e24d7bc7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga1f499582b24691b9124911f9e24d7bc7">operator &amp;</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="separator:ga1f499582b24691b9124911f9e24d7bc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5baaf2296750620eb164ccda81460533"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga5baaf2296750620eb164ccda81460533">operator &amp;</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga5baaf2296750620eb164ccda81460533"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8322d5b75bd099efbb6e5403043dd3c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga8322d5b75bd099efbb6e5403043dd3c3">operator &amp;</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="separator:ga8322d5b75bd099efbb6e5403043dd3c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga47106577fd78490ed23cd11197a9168a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga47106577fd78490ed23cd11197a9168a">operator &amp;</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="separator:ga47106577fd78490ed23cd11197a9168a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa4103ab3386616e2d279ac2d4fd9b184"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gaa4103ab3386616e2d279ac2d4fd9b184">operator &amp;</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="separator:gaa4103ab3386616e2d279ac2d4fd9b184"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa08783b303c623b05790bfff5d903b7b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gaa08783b303c623b05790bfff5d903b7b">operator &amp;</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="separator:gaa08783b303c623b05790bfff5d903b7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa70610a0d1c8cfd03e8998fe61105c87"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gaa70610a0d1c8cfd03e8998fe61105c87">operator &amp;</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="separator:gaa70610a0d1c8cfd03e8998fe61105c87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0daeb0f86310395ee88c693610cc96fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga0daeb0f86310395ee88c693610cc96fa">operator &amp;</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="separator:ga0daeb0f86310395ee88c693610cc96fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga86f157e200b1d36f5a7b192d6a4e4028"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga86f157e200b1d36f5a7b192d6a4e4028">operator &amp;</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="separator:ga86f157e200b1d36f5a7b192d6a4e4028"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga299f027bad80214473a5cc13bdc9d924"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga299f027bad80214473a5cc13bdc9d924">operator &amp;</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="separator:ga299f027bad80214473a5cc13bdc9d924"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga229dd3eed80578a81a008efeb5e6cf99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga229dd3eed80578a81a008efeb5e6cf99">operator &amp;</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="separator:ga229dd3eed80578a81a008efeb5e6cf99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaedc73131a1e22a0a595aa56f1b7ee925"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gaedc73131a1e22a0a595aa56f1b7ee925">operator &amp;</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="separator:gaedc73131a1e22a0a595aa56f1b7ee925"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c8c797432364e33515dcdf3d046ddd2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga8c8c797432364e33515dcdf3d046ddd2">operator &amp;</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="separator:ga8c8c797432364e33515dcdf3d046ddd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab386009c850f86fa204c90638b396bd4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gab386009c850f86fa204c90638b396bd4">operator &amp;</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gab386009c850f86fa204c90638b396bd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e789ad23bdb3475ab3c490d06a39678"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga1e789ad23bdb3475ab3c490d06a39678">operator &amp;</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="separator:ga1e789ad23bdb3475ab3c490d06a39678"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd8c903d27f23b266f5e9788d5755769"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gafd8c903d27f23b266f5e9788d5755769">operator &amp;</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gafd8c903d27f23b266f5e9788d5755769"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1021a187b286f0e23384fb9f506f167a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga1021a187b286f0e23384fb9f506f167a">operator &amp;</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga1021a187b286f0e23384fb9f506f167a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga18c011015a2e01c80a1fa2b8412904ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga18c011015a2e01c80a1fa2b8412904ce">operator &amp;</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga18c011015a2e01c80a1fa2b8412904ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga44d7dfec718644487dbf32eb8050192b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga44d7dfec718644487dbf32eb8050192b">operator &amp;</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga44d7dfec718644487dbf32eb8050192b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa380e6028889c8ff2424703ab6469cf2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gaa380e6028889c8ff2424703ab6469cf2">operator &amp;</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gaa380e6028889c8ff2424703ab6469cf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaddb67494f47b0dca1dc2848703c47310"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gaddb67494f47b0dca1dc2848703c47310">operator &amp;</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gaddb67494f47b0dca1dc2848703c47310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1489caeadd82f0e8b5e9196e67ebed64"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga1489caeadd82f0e8b5e9196e67ebed64">operator &amp;</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga1489caeadd82f0e8b5e9196e67ebed64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5313b412ea62a5df35c15f45597b90d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#ga5313b412ea62a5df35c15f45597b90d2">operator &amp;</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga5313b412ea62a5df35c15f45597b90d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac71eda5f457f04b2f0b26f819ccf8f42"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gac71eda5f457f04b2f0b26f819ccf8f42">operator &amp;</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gac71eda5f457f04b2f0b26f819ccf8f42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaf7f468d4d9818d27b19637e162c073d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gaaf7f468d4d9818d27b19637e162c073d">operator &amp;</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gaaf7f468d4d9818d27b19637e162c073d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae99175e26042835d637f2630e08a180a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gae99175e26042835d637f2630e08a180a">operator &amp;</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gae99175e26042835d637f2630e08a180a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf1ffeed59585dc2ee0899c9232d3d5be"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gaf1ffeed59585dc2ee0899c9232d3d5be">operator &amp;</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gaf1ffeed59585dc2ee0899c9232d3d5be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad134452732cf139aa1ca12874db83ca9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gad134452732cf139aa1ca12874db83ca9">operator &amp;</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gad134452732cf139aa1ca12874db83ca9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae924073673a2be7a506795c0a18e09a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gaae924073673a2be7a506795c0a18e09a">operator &amp;</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gaae924073673a2be7a506795c0a18e09a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaca100d7f48bddc12ad779394e3bcc833"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__bitand.htm#gaca100d7f48bddc12ad779394e3bcc833">operator &amp;</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gaca100d7f48bddc12ad779394e3bcc833"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga934307d686f9bcb5a63b48d37d63d9a1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga934307d686f9bcb5a63b48d37d63d9a1">operator &amp;&amp;</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga934307d686f9bcb5a63b48d37d63d9a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a logical AND operation on two arrays or an array and a value.  <a href="group__arith__func__and.htm#ga934307d686f9bcb5a63b48d37d63d9a1">More...</a><br /></td></tr>
<tr class="separator:ga934307d686f9bcb5a63b48d37d63d9a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0861e061152e6c9ced839dd9a2aeab4e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga0861e061152e6c9ced839dd9a2aeab4e">operator &amp;&amp;</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="separator:ga0861e061152e6c9ced839dd9a2aeab4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga99617ff94317be4d98da8c6f211bed8c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga99617ff94317be4d98da8c6f211bed8c">operator &amp;&amp;</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="separator:ga99617ff94317be4d98da8c6f211bed8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01aee223f4087a6def0a51943674564b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga01aee223f4087a6def0a51943674564b">operator &amp;&amp;</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="separator:ga01aee223f4087a6def0a51943674564b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad53232e3453e3e1e54ba65eeee2f8432"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gad53232e3453e3e1e54ba65eeee2f8432">operator &amp;&amp;</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="separator:gad53232e3453e3e1e54ba65eeee2f8432"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga97e531f6ebd5267ac516871a07ce9f4b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga97e531f6ebd5267ac516871a07ce9f4b">operator &amp;&amp;</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="separator:ga97e531f6ebd5267ac516871a07ce9f4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa35fccc45323b0cf579f7f0dcf2f2478"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gaa35fccc45323b0cf579f7f0dcf2f2478">operator &amp;&amp;</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="separator:gaa35fccc45323b0cf579f7f0dcf2f2478"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga06f9f7675f3b1b0960418266cafd6370"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga06f9f7675f3b1b0960418266cafd6370">operator &amp;&amp;</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="separator:ga06f9f7675f3b1b0960418266cafd6370"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga74f1a3d70845480b319955fc661da834"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga74f1a3d70845480b319955fc661da834">operator &amp;&amp;</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="separator:ga74f1a3d70845480b319955fc661da834"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd8ee26500046a5a62e1f144b3a04f99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gafd8ee26500046a5a62e1f144b3a04f99">operator &amp;&amp;</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="separator:gafd8ee26500046a5a62e1f144b3a04f99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga83dad1451c3a0747e86e5e8c80955d25"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga83dad1451c3a0747e86e5e8c80955d25">operator &amp;&amp;</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="separator:ga83dad1451c3a0747e86e5e8c80955d25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabb10d32c17b744a6d371fd4550cade7d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gabb10d32c17b744a6d371fd4550cade7d">operator &amp;&amp;</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="separator:gabb10d32c17b744a6d371fd4550cade7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f3015fcbb805876b7f8251eb59f96bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga5f3015fcbb805876b7f8251eb59f96bd">operator &amp;&amp;</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="separator:ga5f3015fcbb805876b7f8251eb59f96bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae6f950a6556b87b8ef5d5c7875175f84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gae6f950a6556b87b8ef5d5c7875175f84">operator &amp;&amp;</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="separator:gae6f950a6556b87b8ef5d5c7875175f84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad25e190a0d8588575006da3a1e7e1f72"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gad25e190a0d8588575006da3a1e7e1f72">operator &amp;&amp;</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gad25e190a0d8588575006da3a1e7e1f72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad13232d19daaf0eb8abeed7a9f0b7cc7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gad13232d19daaf0eb8abeed7a9f0b7cc7">operator &amp;&amp;</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="separator:gad13232d19daaf0eb8abeed7a9f0b7cc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga39d2fe4d31a79d37bab35232e488d4bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga39d2fe4d31a79d37bab35232e488d4bc">operator &amp;&amp;</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga39d2fe4d31a79d37bab35232e488d4bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga548949124ed954ebbc5a8a3a4a4b5f94"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga548949124ed954ebbc5a8a3a4a4b5f94">operator &amp;&amp;</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga548949124ed954ebbc5a8a3a4a4b5f94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc6cd528a224cf5bfcb64dc158b5f755"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gabc6cd528a224cf5bfcb64dc158b5f755">operator &amp;&amp;</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gabc6cd528a224cf5bfcb64dc158b5f755"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga985f0e4a2b1be4870e18fbb7f192b137"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga985f0e4a2b1be4870e18fbb7f192b137">operator &amp;&amp;</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga985f0e4a2b1be4870e18fbb7f192b137"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe2ec0f0def3b198e396c837358a9091"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gabe2ec0f0def3b198e396c837358a9091">operator &amp;&amp;</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gabe2ec0f0def3b198e396c837358a9091"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga51d55255915f1b0ff62724c4e2f2f5e1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga51d55255915f1b0ff62724c4e2f2f5e1">operator &amp;&amp;</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga51d55255915f1b0ff62724c4e2f2f5e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c53f6dd0499c9dfa411d4b6b0eb47ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga1c53f6dd0499c9dfa411d4b6b0eb47ba">operator &amp;&amp;</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga1c53f6dd0499c9dfa411d4b6b0eb47ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa65baf57e01cf0a8024bb3baa1536013"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gaa65baf57e01cf0a8024bb3baa1536013">operator &amp;&amp;</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gaa65baf57e01cf0a8024bb3baa1536013"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c9bc282adf0df8f1dc6f3047e863784"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga1c9bc282adf0df8f1dc6f3047e863784">operator &amp;&amp;</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga1c9bc282adf0df8f1dc6f3047e863784"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d74d93f0d2e99145b132443985629b0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga9d74d93f0d2e99145b132443985629b0">operator &amp;&amp;</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga9d74d93f0d2e99145b132443985629b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga94e94f1e1aa0ed3a7793f08fd67678b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga94e94f1e1aa0ed3a7793f08fd67678b9">operator &amp;&amp;</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga94e94f1e1aa0ed3a7793f08fd67678b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6bb6e3e054a28ef352229098fcf58e02"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga6bb6e3e054a28ef352229098fcf58e02">operator &amp;&amp;</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga6bb6e3e054a28ef352229098fcf58e02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad66faa7afcfae1143cd97ebfbc25ac89"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gad66faa7afcfae1143cd97ebfbc25ac89">operator &amp;&amp;</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gad66faa7afcfae1143cd97ebfbc25ac89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga027bdd73f3972ffe921147582ac81969"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#ga027bdd73f3972ffe921147582ac81969">operator &amp;&amp;</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:ga027bdd73f3972ffe921147582ac81969"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab5a52690ec8c7d17e120ff0a683ce620"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__and.htm#gab5a52690ec8c7d17e120ff0a683ce620">operator &amp;&amp;</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="separator:gab5a52690ec8c7d17e120ff0a683ce620"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga121545fb637db409a523862cdb8ffe39"><td class="memItemLeft" align="right" valign="top">array &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a> (array &amp;a)</td></tr>
<tr class="memdesc:ga121545fb637db409a523862cdb8ffe39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate an expression (nonblocking).  <a href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">More...</a><br /></td></tr>
<tr class="separator:ga121545fb637db409a523862cdb8ffe39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeade064317ff4e40e66180718a34f9da"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gaeade064317ff4e40e66180718a34f9da">eval</a> (int num, array **arrays)</td></tr>
<tr class="memdesc:gaeade064317ff4e40e66180718a34f9da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate multiple arrays simultaneously.  <a href="group__data__mat.htm#gaeade064317ff4e40e66180718a34f9da">More...</a><br /></td></tr>
<tr class="separator:gaeade064317ff4e40e66180718a34f9da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a17a89fab2c26be8e911c4628c4c54c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga6a17a89fab2c26be8e911c4628c4c54c">eval</a> (array &amp;a, array &amp;b)</td></tr>
<tr class="separator:ga6a17a89fab2c26be8e911c4628c4c54c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga932cc56a65acbe91ff2cea42e2f43bb6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga932cc56a65acbe91ff2cea42e2f43bb6">eval</a> (array &amp;a, array &amp;b, array &amp;c)</td></tr>
<tr class="separator:ga932cc56a65acbe91ff2cea42e2f43bb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8d75de296c6378ef17825a3776db93e4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga8d75de296c6378ef17825a3776db93e4">eval</a> (array &amp;a, array &amp;b, array &amp;c, array &amp;d)</td></tr>
<tr class="separator:ga8d75de296c6378ef17825a3776db93e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2cfee88b0b16efb2e4c3fe5a01187ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gad2cfee88b0b16efb2e4c3fe5a01187ac">eval</a> (array &amp;a, array &amp;b, array &amp;c, array &amp;d, array &amp;e)</td></tr>
<tr class="separator:gad2cfee88b0b16efb2e4c3fe5a01187ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0b49360b87556fcc3d256c864e72e50b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga0b49360b87556fcc3d256c864e72e50b">eval</a> (array &amp;a, array &amp;b, array &amp;c, array &amp;d, array &amp;e, array &amp;f)</td></tr>
<tr class="separator:ga0b49360b87556fcc3d256c864e72e50b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga45f52ad29c9ac39d7fa2efd8f2470a22"><td class="memItemLeft" align="right" valign="top">const array &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga45f52ad29c9ac39d7fa2efd8f2470a22">eval</a> (const array &amp;a)</td></tr>
<tr class="memdesc:ga45f52ad29c9ac39d7fa2efd8f2470a22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate an expression (nonblocking).  <a href="group__data__mat.htm#ga45f52ad29c9ac39d7fa2efd8f2470a22">More...</a><br /></td></tr>
<tr class="separator:ga45f52ad29c9ac39d7fa2efd8f2470a22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2016101f197ce325858f706405dbb399"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga2016101f197ce325858f706405dbb399">eval</a> (const array &amp;a, const array &amp;b)</td></tr>
<tr class="separator:ga2016101f197ce325858f706405dbb399"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab9545550ae34532581c47d2f8a616569"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gab9545550ae34532581c47d2f8a616569">eval</a> (const array &amp;a, const array &amp;b, const array &amp;c)</td></tr>
<tr class="separator:gab9545550ae34532581c47d2f8a616569"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0ab6d6c52ec85bd70ee1223448958261"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga0ab6d6c52ec85bd70ee1223448958261">eval</a> (const array &amp;a, const array &amp;b, const array &amp;c, const array &amp;d)</td></tr>
<tr class="separator:ga0ab6d6c52ec85bd70ee1223448958261"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaddec0e716ad2d696f01b3359e2207e7d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gaddec0e716ad2d696f01b3359e2207e7d">eval</a> (const array &amp;a, const array &amp;b, const array &amp;c, const array &amp;d, const array &amp;e)</td></tr>
<tr class="separator:gaddec0e716ad2d696f01b3359e2207e7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed1d77332fa65805b2a6bf1cee8a857c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#gaed1d77332fa65805b2a6bf1cee8a857c">eval</a> (const array &amp;a, const array &amp;b, const array &amp;c, const array &amp;d, const array &amp;e, const array &amp;f)</td></tr>
<tr class="separator:gaed1d77332fa65805b2a6bf1cee8a857c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11dba1a052f2fe004665237d9670e1f5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga11dba1a052f2fe004665237d9670e1f5">setManualEvalFlag</a> (bool flag)</td></tr>
<tr class="memdesc:ga11dba1a052f2fe004665237d9670e1f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Turn the manual eval flag on or off.  <a href="group__data__mat.htm#ga11dba1a052f2fe004665237d9670e1f5">More...</a><br /></td></tr>
<tr class="separator:ga11dba1a052f2fe004665237d9670e1f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c2f8602994b437164ee5783cedabfa9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__mat.htm#ga0c2f8602994b437164ee5783cedabfa9">getManualEvalFlag</a> ()</td></tr>
<tr class="memdesc:ga0c2f8602994b437164ee5783cedabfa9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the manual eval flag.  <a href="group__data__mat.htm#ga0c2f8602994b437164ee5783cedabfa9">More...</a><br /></td></tr>
<tr class="separator:ga0c2f8602994b437164ee5783cedabfa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga834be32357616d8ab735087c6f681858"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga834be32357616d8ab735087c6f681858">af_create_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, const void *const data, const unsigned ndims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const dims, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type)</td></tr>
<tr class="memdesc:ga834be32357616d8ab735087c6f681858"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> handle initialized with user defined data.  <a href="group__c__api__mat.htm#ga834be32357616d8ab735087c6f681858">More...</a><br /></td></tr>
<tr class="separator:ga834be32357616d8ab735087c6f681858"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b8f5cf6fce69aa1574544bc2d44d7d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga3b8f5cf6fce69aa1574544bc2d44d7d0">af_create_handle</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, const unsigned ndims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const dims, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type)</td></tr>
<tr class="memdesc:ga3b8f5cf6fce69aa1574544bc2d44d7d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create af_array handle.  <a href="group__c__api__mat.htm#ga3b8f5cf6fce69aa1574544bc2d44d7d0">More...</a><br /></td></tr>
<tr class="separator:ga3b8f5cf6fce69aa1574544bc2d44d7d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f8e4d3732b5fd4b91ad51eec634f7a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga0f8e4d3732b5fd4b91ad51eec634f7a2">af_copy_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga0f8e4d3732b5fd4b91ad51eec634f7a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deep copy an array to another.  <a href="group__c__api__mat.htm#ga0f8e4d3732b5fd4b91ad51eec634f7a2">More...</a><br /></td></tr>
<tr class="separator:ga0f8e4d3732b5fd4b91ad51eec634f7a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafef13633d184acc726ad9daca7a7bc99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gafef13633d184acc726ad9daca7a7bc99">af_write_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr, const void *data, const size_t bytes, <a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af_source</a> src)</td></tr>
<tr class="memdesc:gafef13633d184acc726ad9daca7a7bc99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy data from a C pointer (host/device) to an existing array.  <a href="group__c__api__mat.htm#gafef13633d184acc726ad9daca7a7bc99">More...</a><br /></td></tr>
<tr class="separator:gafef13633d184acc726ad9daca7a7bc99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6040dc6f0eb127402fbf62c1165f0b9d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga6040dc6f0eb127402fbf62c1165f0b9d">af_get_data_ptr</a> (void *data, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga6040dc6f0eb127402fbf62c1165f0b9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy data from an af_array to a C pointer.  <a href="group__c__api__mat.htm#ga6040dc6f0eb127402fbf62c1165f0b9d">More...</a><br /></td></tr>
<tr class="separator:ga6040dc6f0eb127402fbf62c1165f0b9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad6c58648ed0db398e170dabf045e8309"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gad6c58648ed0db398e170dabf045e8309">af_release_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gad6c58648ed0db398e170dabf045e8309"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reduce the reference count of the <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>.  <a href="group__c__api__mat.htm#gad6c58648ed0db398e170dabf045e8309">More...</a><br /></td></tr>
<tr class="separator:gad6c58648ed0db398e170dabf045e8309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ed45b3f881c0f6c80c5cf2af886dbab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga7ed45b3f881c0f6c80c5cf2af886dbab">af_retain_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga7ed45b3f881c0f6c80c5cf2af886dbab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> reference count.  <a href="group__c__api__mat.htm#ga7ed45b3f881c0f6c80c5cf2af886dbab">More...</a><br /></td></tr>
<tr class="separator:ga7ed45b3f881c0f6c80c5cf2af886dbab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34d9070b94c3bac673df7f13b9c718a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga34d9070b94c3bac673df7f13b9c718a2">af_get_data_ref_count</a> (int *use_count, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga34d9070b94c3bac673df7f13b9c718a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the reference count of <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>.  <a href="group__c__api__mat.htm#ga34d9070b94c3bac673df7f13b9c718a2">More...</a><br /></td></tr>
<tr class="separator:ga34d9070b94c3bac673df7f13b9c718a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9de141bfc5936741d2496f59c1bac777"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga9de141bfc5936741d2496f59c1bac777">af_eval</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga9de141bfc5936741d2496f59c1bac777"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate any expressions in the Array.  <a href="group__c__api__mat.htm#ga9de141bfc5936741d2496f59c1bac777">More...</a><br /></td></tr>
<tr class="separator:ga9de141bfc5936741d2496f59c1bac777"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e08f4cda2471a477d2fa91c2356f72c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga9e08f4cda2471a477d2fa91c2356f72c">af_eval_multiple</a> (const int num, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arrays)</td></tr>
<tr class="memdesc:ga9e08f4cda2471a477d2fa91c2356f72c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate multiple arrays together.  <a href="group__c__api__mat.htm#ga9e08f4cda2471a477d2fa91c2356f72c">More...</a><br /></td></tr>
<tr class="separator:ga9e08f4cda2471a477d2fa91c2356f72c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga869f5e9331e9e010345de2589add7bae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga869f5e9331e9e010345de2589add7bae">af_set_manual_eval_flag</a> (bool flag)</td></tr>
<tr class="memdesc:ga869f5e9331e9e010345de2589add7bae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Turn the manual eval flag on or off.  <a href="group__c__api__mat.htm#ga869f5e9331e9e010345de2589add7bae">More...</a><br /></td></tr>
<tr class="separator:ga869f5e9331e9e010345de2589add7bae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga890c476d90cb689f2835d2e4f74f5868"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga890c476d90cb689f2835d2e4f74f5868">af_get_manual_eval_flag</a> (bool *flag)</td></tr>
<tr class="memdesc:ga890c476d90cb689f2835d2e4f74f5868"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the manual eval flag.  <a href="group__c__api__mat.htm#ga890c476d90cb689f2835d2e4f74f5868">More...</a><br /></td></tr>
<tr class="separator:ga890c476d90cb689f2835d2e4f74f5868"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6845bbe4385a60a606b88f8130252c1f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga6845bbe4385a60a606b88f8130252c1f">af_get_elements</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *elems, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga6845bbe4385a60a606b88f8130252c1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the total number of elements across all dimensions of the array.  <a href="group__c__api__mat.htm#ga6845bbe4385a60a606b88f8130252c1f">More...</a><br /></td></tr>
<tr class="separator:ga6845bbe4385a60a606b88f8130252c1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0dda6898e1c0d9a43efb56cd6a988c9b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga0dda6898e1c0d9a43efb56cd6a988c9b">af_get_type</a> (<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> *type, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga0dda6898e1c0d9a43efb56cd6a988c9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of an array.  <a href="group__c__api__mat.htm#ga0dda6898e1c0d9a43efb56cd6a988c9b">More...</a><br /></td></tr>
<tr class="separator:ga0dda6898e1c0d9a43efb56cd6a988c9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8b90da50a532837d9763e301b2267348"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga8b90da50a532837d9763e301b2267348">af_get_dims</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d0, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d1, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d2, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d3, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga8b90da50a532837d9763e301b2267348"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the dimensions of an array.  <a href="group__c__api__mat.htm#ga8b90da50a532837d9763e301b2267348">More...</a><br /></td></tr>
<tr class="separator:ga8b90da50a532837d9763e301b2267348"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaefa019d932ff58c2a829ce87edddd2a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gaefa019d932ff58c2a829ce87edddd2a8">af_get_numdims</a> (unsigned *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gaefa019d932ff58c2a829ce87edddd2a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of dimensions of an array.  <a href="group__c__api__mat.htm#gaefa019d932ff58c2a829ce87edddd2a8">More...</a><br /></td></tr>
<tr class="separator:gaefa019d932ff58c2a829ce87edddd2a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga19c749e95314e1c77d816ad9952fb680"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga19c749e95314e1c77d816ad9952fb680">af_is_empty</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga19c749e95314e1c77d816ad9952fb680"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is empty.  <a href="group__c__api__mat.htm#ga19c749e95314e1c77d816ad9952fb680">More...</a><br /></td></tr>
<tr class="separator:ga19c749e95314e1c77d816ad9952fb680"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae3dfa6dc1c03c5efe7482bfc9c41266a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gae3dfa6dc1c03c5efe7482bfc9c41266a">af_is_scalar</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gae3dfa6dc1c03c5efe7482bfc9c41266a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is scalar, ie.  <a href="group__c__api__mat.htm#gae3dfa6dc1c03c5efe7482bfc9c41266a">More...</a><br /></td></tr>
<tr class="separator:gae3dfa6dc1c03c5efe7482bfc9c41266a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabbe3249a355293daabd5907d7df67c6a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gabbe3249a355293daabd5907d7df67c6a">af_is_row</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gabbe3249a355293daabd5907d7df67c6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is row vector.  <a href="group__c__api__mat.htm#gabbe3249a355293daabd5907d7df67c6a">More...</a><br /></td></tr>
<tr class="separator:gabbe3249a355293daabd5907d7df67c6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga184b5a5feb146f2a2a44fed36b35e435"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga184b5a5feb146f2a2a44fed36b35e435">af_is_column</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga184b5a5feb146f2a2a44fed36b35e435"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is a column vector.  <a href="group__c__api__mat.htm#ga184b5a5feb146f2a2a44fed36b35e435">More...</a><br /></td></tr>
<tr class="separator:ga184b5a5feb146f2a2a44fed36b35e435"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00a23c7dd281fdcdec10b8395e611154"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga00a23c7dd281fdcdec10b8395e611154">af_is_vector</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga00a23c7dd281fdcdec10b8395e611154"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is a vector.  <a href="group__c__api__mat.htm#ga00a23c7dd281fdcdec10b8395e611154">More...</a><br /></td></tr>
<tr class="separator:ga00a23c7dd281fdcdec10b8395e611154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd8a5edf6467340d0b40341be9f677e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gacd8a5edf6467340d0b40341be9f677e9">af_is_complex</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gacd8a5edf6467340d0b40341be9f677e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is complex type.  <a href="group__c__api__mat.htm#gacd8a5edf6467340d0b40341be9f677e9">More...</a><br /></td></tr>
<tr class="separator:gacd8a5edf6467340d0b40341be9f677e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafaa0c1597ef34a7320ed589f80fdce10"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gafaa0c1597ef34a7320ed589f80fdce10">af_is_real</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gafaa0c1597ef34a7320ed589f80fdce10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is real type.  <a href="group__c__api__mat.htm#gafaa0c1597ef34a7320ed589f80fdce10">More...</a><br /></td></tr>
<tr class="separator:gafaa0c1597ef34a7320ed589f80fdce10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb499641bfc02dfa56a75be9ba237e3f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gadb499641bfc02dfa56a75be9ba237e3f">af_is_double</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gadb499641bfc02dfa56a75be9ba237e3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is double precision type.  <a href="group__c__api__mat.htm#gadb499641bfc02dfa56a75be9ba237e3f">More...</a><br /></td></tr>
<tr class="separator:gadb499641bfc02dfa56a75be9ba237e3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1bd444b2c78a4f4731d4523a90200175"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga1bd444b2c78a4f4731d4523a90200175">af_is_single</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga1bd444b2c78a4f4731d4523a90200175"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is single precision type.  <a href="group__c__api__mat.htm#ga1bd444b2c78a4f4731d4523a90200175">More...</a><br /></td></tr>
<tr class="separator:ga1bd444b2c78a4f4731d4523a90200175"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga247a830d52f1cb2450369af3d8d8f2f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga247a830d52f1cb2450369af3d8d8f2f1">af_is_half</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga247a830d52f1cb2450369af3d8d8f2f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is 16 bit floating point type.  <a href="group__c__api__mat.htm#ga247a830d52f1cb2450369af3d8d8f2f1">More...</a><br /></td></tr>
<tr class="separator:ga247a830d52f1cb2450369af3d8d8f2f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f2b3e689d07f5135dfc1ee6cf9825a3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga6f2b3e689d07f5135dfc1ee6cf9825a3">af_is_realfloating</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga6f2b3e689d07f5135dfc1ee6cf9825a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is real floating point type.  <a href="group__c__api__mat.htm#ga6f2b3e689d07f5135dfc1ee6cf9825a3">More...</a><br /></td></tr>
<tr class="separator:ga6f2b3e689d07f5135dfc1ee6cf9825a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5eb0d277412a2beeffe7e7a9f89b98ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga5eb0d277412a2beeffe7e7a9f89b98ea">af_is_floating</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga5eb0d277412a2beeffe7e7a9f89b98ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is floating precision type.  <a href="group__c__api__mat.htm#ga5eb0d277412a2beeffe7e7a9f89b98ea">More...</a><br /></td></tr>
<tr class="separator:ga5eb0d277412a2beeffe7e7a9f89b98ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga768e8326a6aaa81c6543949afc781af2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga768e8326a6aaa81c6543949afc781af2">af_is_integer</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga768e8326a6aaa81c6543949afc781af2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is integer type.  <a href="group__c__api__mat.htm#ga768e8326a6aaa81c6543949afc781af2">More...</a><br /></td></tr>
<tr class="separator:ga768e8326a6aaa81c6543949afc781af2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafae10fc1378b72404120572e21ff5d27"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gafae10fc1378b72404120572e21ff5d27">af_is_bool</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gafae10fc1378b72404120572e21ff5d27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is bool type.  <a href="group__c__api__mat.htm#gafae10fc1378b72404120572e21ff5d27">More...</a><br /></td></tr>
<tr class="separator:gafae10fc1378b72404120572e21ff5d27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac96d3ca37a435874de22a76838a8cf54"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gac96d3ca37a435874de22a76838a8cf54">af_is_sparse</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gac96d3ca37a435874de22a76838a8cf54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is sparse.  <a href="group__c__api__mat.htm#gac96d3ca37a435874de22a76838a8cf54">More...</a><br /></td></tr>
<tr class="separator:gac96d3ca37a435874de22a76838a8cf54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaefe2e343a74a84bd43b588218ecc09a3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gaefe2e343a74a84bd43b588218ecc09a3">af_get_scalar</a> (void *output_value, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gaefe2e343a74a84bd43b588218ecc09a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get first element from an array.  <a href="group__c__api__mat.htm#gaefe2e343a74a84bd43b588218ecc09a3">More...</a><br /></td></tr>
<tr class="separator:gaefe2e343a74a84bd43b588218ecc09a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a96147e5f8a7b6037405defdd7e190dd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96147e5f8a7b6037405defdd7e190dd8">&#9670;&nbsp;</a></span>ASSIGN <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASSIGN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">OP</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> array_proxy &amp;a);         \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a);               \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">double</span> &amp;a);              \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <a class="code" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;a);             \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <a class="code" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;a);              \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;a);               \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;a);                 \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> &amp;a);            \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;a);                \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">char</span> &amp;a);                \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> &amp;a);       \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">long</span>  &amp;a);               \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> &amp;a);       \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>  &amp;a);          \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> &amp;a);</div><div class="ttc" id="namespaceaf_htm_a63e29e484b92e217fe817fe78abc4f5f"><div class="ttname"><a href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">af::cfloat</a></div><div class="ttdeci">af::af_cfloat cfloat</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00044">complex.h:44</a></div></div>
<div class="ttc" id="group__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer. </div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
<div class="ttc" id="namespaceaf_htm_acd654c72624253fcd7fd88fe5298aa9a"><div class="ttname"><a href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">af::cdouble</a></div><div class="ttdeci">af::af_cdouble cdouble</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00045">complex.h:45</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l00972">972</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>

</div>
</div>
<a id="a96147e5f8a7b6037405defdd7e190dd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96147e5f8a7b6037405defdd7e190dd8">&#9670;&nbsp;</a></span>ASSIGN <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASSIGN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">OP</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">short</span> &amp;a);               \</div><div class="line">            array_proxy&amp; <span class="keyword">operator</span> OP(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> &amp;a);</div></div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l00972">972</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>

</div>
</div>
<a id="a96147e5f8a7b6037405defdd7e190dd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96147e5f8a7b6037405defdd7e190dd8">&#9670;&nbsp;</a></span>ASSIGN <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASSIGN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">OP</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="array_8h.htm#a3024a14587b6373c2e2a3fe65f2b8b12">ASSIGN_</a>(OP)                                                                       \</div><div class="line">          array&amp; OP(<span class="keyword">const</span> <span class="keywordtype">short</span>  &amp;val);               \</div><div class="line">          array&amp; OP(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> &amp;val);</div><div class="ttc" id="array_8h_htm_a3024a14587b6373c2e2a3fe65f2b8b12"><div class="ttname"><a href="array_8h.htm#a3024a14587b6373c2e2a3fe65f2b8b12">ASSIGN_</a></div><div class="ttdeci">#define ASSIGN_(OP2)</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00954">array.h:954</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l00972">972</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>

</div>
</div>
<a id="a3024a14587b6373c2e2a3fe65f2b8b12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3024a14587b6373c2e2a3fe65f2b8b12">&#9670;&nbsp;</a></span>ASSIGN_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASSIGN_</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">OP2</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; OP2(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;val);                                                     \</div><div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">double</span> &amp;val);               \</div><div class="line">        array&amp; OP2(<span class="keyword">const</span> <a class="code" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;val);              \</div><div class="line">        array&amp; OP2(<span class="keyword">const</span> <a class="code" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;val);               \</div><div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">float</span> &amp;val);                \</div><div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;val);                  \</div><div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> &amp;val);             \</div><div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">bool</span> &amp;val);                 \</div><div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">char</span> &amp;val);                 \</div><div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> &amp;val);        \</div><div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">long</span>  &amp;val);                \</div><div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> &amp;val);        \</div><div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>  &amp;val);           \</div><div class="line">        array&amp; OP2(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> &amp;val);</div><div class="ttc" id="namespaceaf_htm_a63e29e484b92e217fe817fe78abc4f5f"><div class="ttname"><a href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">af::cfloat</a></div><div class="ttdeci">af::af_cfloat cfloat</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00044">complex.h:44</a></div></div>
<div class="ttc" id="group__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer. </div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
<div class="ttc" id="namespaceaf_htm_acd654c72624253fcd7fd88fe5298aa9a"><div class="ttname"><a href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">af::cdouble</a></div><div class="ttdeci">af::af_cdouble cdouble</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00045">complex.h:45</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l00954">954</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>

</div>
</div>
<a id="a6d8256045dabd15534382126773e729d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d8256045dabd15534382126773e729d">&#9670;&nbsp;</a></span>BIN_OP</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BIN_OP</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">OP</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="array_8h.htm#a2c8e67e88a0a2815d1253276803deef4">BIN_OP_</a>(OP)                                                                                                       \</div><div class="line">        AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <span class="keywordtype">short</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);            \</div><div class="line">        AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);   \</div><div class="line">        AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">short</span>&amp; rhs);            \</div><div class="line">        AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&amp; rhs);</div><div class="ttc" id="array_8h_htm_a2c8e67e88a0a2815d1253276803deef4"><div class="ttname"><a href="array_8h.htm#a2c8e67e88a0a2815d1253276803deef4">BIN_OP_</a></div><div class="ttdeci">#define BIN_OP_(OP)</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l01104">array.h:1104</a></div></div>
<div class="ttc" id="group__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer. </div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01134">1134</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>

</div>
</div>
<a id="a2c8e67e88a0a2815d1253276803deef4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c8e67e88a0a2815d1253276803deef4">&#9670;&nbsp;</a></span>BIN_OP_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BIN_OP_</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">OP</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);                                                                 \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);                \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <span class="keywordtype">int</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);                 \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <span class="keywordtype">unsigned</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);            \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <span class="keywordtype">char</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);                \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);       \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);                \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);       \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);           \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);  \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);              \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);               \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);              \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);             \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; rhs);                \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">int</span>&amp; rhs);                 \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span>&amp; rhs);            \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">char</span>&amp; rhs);                \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>&amp; rhs);       \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">long</span>&amp; rhs);                \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>&amp; rhs);       \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; rhs);           \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; rhs);  \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; rhs);              \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">float</span>&amp; rhs);               \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a>&amp; rhs);              \</div><div class="line">    AFAPI <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> OP (<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a>&amp; rhs);</div><div class="ttc" id="namespaceaf_htm_a63e29e484b92e217fe817fe78abc4f5f"><div class="ttname"><a href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">af::cfloat</a></div><div class="ttdeci">af::af_cfloat cfloat</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00044">complex.h:44</a></div></div>
<div class="ttc" id="defines_8h_htm_ab23e67549eba2cfbaf0eb5f88f947e48"><div class="ttname"><a href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a></div><div class="ttdeci">#define AFAPI</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00038">defines.h:38</a></div></div>
<div class="ttc" id="group__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer. </div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
<div class="ttc" id="namespaceaf_htm_acd654c72624253fcd7fd88fe5298aa9a"><div class="ttname"><a href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">af::cdouble</a></div><div class="ttdeci">af::af_cdouble cdouble</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00045">complex.h:45</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l01104">1104</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
