<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>ArrayFire binary installation instructions</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('installing.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ArrayFire binary installation instructions </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>Installing ArrayFire couldn't be easier. We ship installers for Windows, OSX, and Linux. Although you could <a href="https://github.com/arrayfire/arrayfire">build ArrayFire from source</a>, we suggest using our pre-compiled binaries as they include the Intel Math Kernel Library to accelerate linear algebra functions.</p>
<p>Please note that although our download page requires a valid login, registration is free and downloading ArrayFire is also free. We request your contact information so that we may notify you of software updates and occasionally collect user feedback about our library.</p>
<p>In general, the installation process for ArrayFire looks like this:</p>
<ol type="1">
<li>Install prerequisites</li>
<li><a href="http://arrayfire.com/download/">Download</a> the ArrayFire installer for your operating system</li>
<li>Install ArrayFire</li>
<li>Test the installation</li>
<li><a href="#GettingHelp">Where to go for help?</a></li>
</ol>
<p>Below you will find instructions for</p>
<ul>
<li><a href="#Windows">Windows</a></li>
<li>Linux including<ul>
<li><a href="#Debian">Debian 8</a></li>
<li><a href="#Ubuntu">Ubuntu 14.04 and later</a></li>
<li><a href="#RPM-distros">RedHat, Fedora, and CentOS</a></li>
</ul>
</li>
<li><a href="#OSX">Mac OSX (.sh and brew)</a></li>
</ul>
<h1><a class="anchor" id="Windows"></a> Windows</h1>
<p>If you wish to use CUDA or OpenCL please ensure that you have also installed support for these technologies from your video card vendor's website.</p>
<p>Next <a href="http://arrayfire.com/download/">download</a> and run the ArrayFire installer. After it has completed, you need to add ArrayFire to the path for all users.</p>
<ol type="1">
<li>Open Advanced System Settings:<ul>
<li>Windows 8: Move the Mouse pointer to the bottom right corner of the screen, Right click, choose System. Then click "Advanced System Settings"</li>
<li>Windows 7: Open the Start Menu and Right Click on "Computer". Then choose Properties and click "Advanced System Settings"</li>
</ul>
</li>
<li>In Advanced System Settings window, click on Advanced tab</li>
<li>Click on Environment Variables, then under System Variables, find PATH, and click on it.</li>
<li>In edit mode, append AF_PATH%/lib. NOTE: Ensure that there is a semi-colon separating AF_PATH%/lib from any existing content (e.g. EXISTING_PATHS;AF_PATH%/lib;) otherwise other software may not function correctly.</li>
</ol>
<p>Finally, verify that the path addition worked correctly. You can do this by:</p>
<ol type="1">
<li>Open Visual Studio 2013. Open the HelloWorld solution which is located at <code>AF_PATH%/examples/helloworld/helloworld.exe</code>.</li>
<li>Build and run the helloworld example. Be sure to, select the platform/configuration of your choice using the platform drop-down (the options are CPU, CUDA, and OpenCL) and Solution Configuration drop down (options of Release and Debug) menus. Run the helloworld example</li>
</ol>
<h1>Linux</h1>
<h2><a class="anchor" id="Debian"></a> Debian 8</h2>
<p>First install the prerequisite packages: </p><pre class="fragment"># Prerequisite packages:
apt-get install libfreeimage-dev libatlas3gf-base libfftw3-dev libglew-dev libglewmx-dev libglfw3-dev cmake

# Enable GPU support (OpenCL):
apt-get install ocl-icd-libopencl1
</pre><p>If you wish to use CUDA, please <a href="https://developer.nvidia.com/cuda-zone">download the latest version of CUDA</a> and install it on your system.</p>
<p>Next <a href="http://arrayfire.com/download/">download</a> ArrayFire. After you have the file, run the installer. </p><pre class="fragment">./arrayfire_*_Linux_x86_64.sh --exclude-subdir --prefix=/usr/local
</pre><h2><a class="anchor" id="RPM-distros"></a> RedHat, Fedora, and CentOS</h2>
<p>First install the prerequisite packages: </p><pre class="fragment"># Install prerequiste packages
yum install freeimage atlas fftw libGLEW libGLEWmx glfw cmake
</pre><p>On Centos and Redhat the <code>glfw</code> package is outdated and you will need to compile it from source. Please <a href="https://github.com/arrayfire/arrayfire/wiki/GLFW-for-ArrayFire">these instructions</a>.</p>
<p>If you wish to use CUDA, please <a href="https://developer.nvidia.com/cuda-downloads">download the latest version of CUDA</a> and install it on your system.</p>
<p>Next <a href="http://arrayfire.com/download/">download</a> ArrayFire. After you have the file, run the installer. </p><pre class="fragment">./arrayfire_*_Linux_x86_64.sh --exclude-subdir --prefix=/usr/local
</pre><h2><a class="anchor" id="Ubuntu"></a> Ubuntu 14.04 and later</h2>
<p>First install the prerequisite packages: </p><pre class="fragment"># Prerequisite packages:
sudo apt-get install libfreeimage-dev libatlas3gf-base libfftw3-dev cmake
</pre><p>Ubuntu 14.04 will not have the libglfw3-dev package in its repositories. You can either build the library from source (following the instructions listed) or install the library from a PPA as follows:</p>
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;sudo apt-add repository ppa:keithw/glfw3</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;sudo apt-get update</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;sudo apt-get install glfw3</div>
</div><!-- fragment --><p>After this point, the installation should proceed identically to Ubuntu 14.10 or newer.</p>
<p>If your system has a CUDA GPU, we suggest downloading the latest drivers from NVIDIA in the form of a Debian package and installing using the package manager. At present, CUDA downloads can be found on the <a href="https://developer.nvidia.com/cuda-downloads">NVIDIA CUDA download page</a> Follow NVIDIA's instructions for getting CUDA set up.</p>
<p>If you wish to use OpenCL, simply install the OpenCL ICD loader along with any drivers required for your hardware. </p><pre class="fragment"># Enable GPU support (OpenCL):
apt-get install ocl-icd-libopencl1
</pre><h3>Special instructions for Tegra K1</h3>
<p>If you are using ArrayFire on the Tegra K1 also install these packages: </p><pre class="fragment">sudo apt-get install libatlas3gf-base libatlas-dev libfftw3-dev liblapacke-dev
</pre><p>In addition to these packages, you will need to compile GLFW3 from source using the instructions above.</p>
<p>Finally, <a href="http://arrayfire.com/download/">download</a> ArrayFire. After you have the file, run the installer using: </p><pre class="fragment">./arrayfire_*_Linux_x86_64.sh --exclude-subdir --prefix=/usr/local
</pre><h1><a class="anchor" id="OSX"></a> Mac OSX</h1>
<p>On OSX there are several dependencies that are not integrated into the operating system. The ArrayFire installer automatically satisfies these dependencies using <a href="http://brew.sh/">Homebrew</a>. If you don't have Homebrew installed on your system, the ArrayFire installer will ask you do to so.</p>
<p>Simply <a href="http://arrayfire.com/download">download</a> the ArrayFire installer and double-click it to carry out the installation.</p>
<p>ArrayFire can also be installed through Homebrew directly using <code>brew install arrayfire</code>; however, it will not include MKL acceleration of linear algebra functions.</p>
<h2>Testing installation</h2>
<p>After ArrayFire is installed, you can build the example programs as follows: </p><pre class="fragment">cp -r /usr/local/share/ArrayFire/examples .
cd examples
mkdir build
cd build
cmake ..
make
</pre><h2><a class="anchor" id="GettingHelp"></a> Getting help</h2>
<ul>
<li>Google Groups: <a href="https://groups.google.com/forum/#!forum/arrayfire-users">https://groups.google.com/forum/#!forum/arrayfire-users</a></li>
<li>ArrayFire Services: <a href="http://arrayfire.com/consulting/">Consulting</a> | <a href="http://arrayfire.com/support/">Support</a> | <a href="http://arrayfire.com/training/">Training</a></li>
<li>ArrayFire Blogs: <a href="http://arrayfire.com/blog/">http://arrayfire.com/blog/</a></li>
<li>Email: <a href="#" onclick="location.href='mai'+'lto:'+'tec'+'hn'+'ica'+'l@'+'arr'+'ay'+'fir'+'e.'+'com'; return false;">techn<span style="display: none;">.nosp@m.</span>ical<span style="display: none;">.nosp@m.</span>@arra<span style="display: none;">.nosp@m.</span>yfir<span style="display: none;">.nosp@m.</span>e.com</a> </li>
</ul>
</div></div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
