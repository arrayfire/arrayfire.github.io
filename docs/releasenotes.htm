<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Release Notes</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('releasenotes.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">Release Notes </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><h1>v3.5.1 </h1>
<h2>Improvements </h2>
<ul>
<li>Relaxed <code><a class="el" href="group__image__func__unwrap.htm#gabd48af39af6bb17efb70747cc132ad60" title="C++ Interface wrapper for unwrap. ">af::unwrap()</a></code> function's arguments. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1853">1</a></sup></li>
<li>Changed behavior of <a class="el" href="group__method__mat.htm#ga29f6176f393aeead43be9556c4fde3c0" title="Get the size of the array in memory. ">af::array::allocated()</a> to specify memory allocated. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1877">1</a></sup></li>
<li>Removed restriction on the nubmer of bins for <code><a class="el" href="group__image__func__histogram.htm#gafb93ba76739ef18b3698e39c7768c90a" title="C++ Interface for histogram. ">af::histogram()</a></code> on CUDA and OpenCL kernels. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1895">1</a></sup></li>
</ul>
<h2>Performance </h2>
<ul>
<li>Improved JIT performance. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1864">1</a></sup></li>
<li>Improved CPU element-wise operation performance. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1890">1</a></sup></li>
<li>Improved regions performance using texture objects. <sup> <a href="https://github.com/arrayfire/arrayfire/pull/1903">1</a></sup></li>
</ul>
<h2>Bug fixes </h2>
<ul>
<li>Fixed overflow issues in mean. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1849">1</a></sup></li>
<li>Fixed memory leak when chaining indexing operations. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1879">1</a></sup></li>
<li>Fixed bug in array assignment when using an empty array to index. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1897">1</a></sup></li>
<li>Fixed bug with <code><a class="el" href="group__blas__func__matmul.htm#ga63306b6ed967bd1055086db862fe885b" title="Matrix multiply of two arrays. ">af::matmul()</a></code> which occured when its RHS argument was an indexed vector. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1883">1</a></sup></li>
<li>Fixed bug deadlock bug when sparse array was used with a JIT Array. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1889">1</a></sup></li>
<li>Fixed pixel tests for FAST kernels. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1891">1</a></sup></li>
<li>Fixed <code><a class="el" href="group__data__func__replace.htm#ga13a51c418de0201102413f05aae45ccd">af::replace</a></code> so that it is now copy-on-write. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1892">1</a></sup></li>
<li>Fixed launch configuration issues in CUDA JIT. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1893">1</a></sup></li>
<li>Fixed segfaults and "Pure Virtual Call" error warnings when exiting on Windows. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1899">1</a> <a href="https://github.com/arrayfire/arrayfire/pull/1924">2</a></sup></li>
<li>Workaround for <code>clEnqueueReadBuffer</code> bug on OSX. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1888">1</a></sup></li>
</ul>
<h2>Build </h2>
<ul>
<li>Fixed issues when compiling with GCC 7.1. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1872">1</a></sup> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1876">2</a></sup></li>
<li>Eliminated unnecessary Boost dependency from CPU and CUDA backends. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1857">1</a></sup></li>
</ul>
<h2>Misc </h2>
<ul>
<li>Updated support links to point to Slack instead of Gitter. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1905">1</a></sup></li>
</ul>
<h1>v3.5.0 </h1>
<h2>Major Updates </h2>
<ul>
<li>ArrayFire now supports threaded applications. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1706">1</a></sup></li>
<li>Added Canny edge detector. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1743">1</a></sup></li>
<li>Added Sparse-Dense arithmetic operations. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1696">1</a></sup></li>
</ul>
<h2>Features </h2>
<ul>
<li>ArrayFire Threading<ul>
<li><a class="el" href="classaf_1_1array.htm">af::array</a> can be read by multiple threads</li>
<li>All ArrayFire functions can be executed concurrently by multiple threads</li>
<li>Threads can operate on different devices to simplify Muli-device workloads</li>
</ul>
</li>
<li>New Canny edge detector function, <a class="el" href="group__image__func__canny.htm#gae7b79d6b508a72d1ae2edf8ce408783e">af::canny()</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1743">1</a></sup><ul>
<li>Can automatically calculate high threshold with <code>AF_CANNY_THRESHOLD_AUTO_OTSU</code></li>
<li>Supports both L1 and L2 Norms to calculate gradients</li>
</ul>
</li>
<li>New tuned OpenCL BLAS backend, <a href="https://github.com/arrayfire/arrayfire/pull/1727">CLBlast</a>.</li>
</ul>
<h2>Improvements </h2>
<ul>
<li>Converted CUDA JIT to use <a href="http://docs.nvidia.com/cuda/nvrtc/index.html">NVRTC</a> instead of <a href="http://docs.nvidia.com/cuda/nvvm-ir-spec/index.html">NVVM</a>.</li>
<li>Performance improvements in <a class="el" href="group__manip__func__reorder.htm#ga72dd90d34aa18b85d9c944f62a2a48b9">af::reorder()</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1766">1</a></sup></li>
<li>Performance improvements in array::scalar&lt;T&gt;(). <sup><a href="https://github.com/arrayfire/arrayfire/pull/1809">1</a></sup></li>
<li>Improved unified backend performance. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1770">1</a></sup></li>
<li>ArrayFire now depends on Forge v1.0. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1800">1</a></sup></li>
<li>Can now specify the FFT plan cache size using the <a class="el" href="namespaceaf.htm#af4be4eadea7bc6db08b4d8faf7820d64">af::setFFTPlanCacheSize()</a> function.</li>
<li>Get the number of physical bytes allocated by the memory manager <code><a class="el" href="internal_8h.htm#ac29771bd43822cf0a67a69995d5c6a7c">af_get_allocated_bytes()</a></code>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1630">1</a></sup></li>
<li><a class="el" href="group__blas__func__dot.htm#ga7190a102305150a074d022c152988b1a">af::dot()</a> can now return a scalar value to the host. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1628">1</a></sup></li>
</ul>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed improper release of default Mersenne random engine. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1716">1</a></sup></li>
<li>Fixed <a class="el" href="group__random__func__randu.htm#gabe9a79d7b21f0a8fb7ace6920ead4772">af::randu()</a> and <a class="el" href="group__random__func__randn.htm#ga2e9602d5bcc87204842b634816afa8a4">af::randn()</a> ranges for floating point types. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1784">1</a></sup></li>
<li>Fixed assignment bug in CPU backend. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1765">1</a></sup></li>
<li>Fixed complex (<code>c32</code>,<code>c64</code>) multiplication in OpenCL convolution kernels. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1816">1</a></sup></li>
<li>Fixed inconsistent behavior with <a class="el" href="group__data__func__replace.htm#ga13a51c418de0201102413f05aae45ccd">af::replace()</a> and replace_scalar(). <sup><a href="https://github.com/arrayfire/arrayfire/pull/1773">1</a></sup></li>
<li>Fixed memory leak in <a class="el" href="group__signal__func__fir.htm#ga2a850e69775eede4709e0d607bba240b">af_fir()</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1765">1</a></sup></li>
<li>Fixed memory leaks in <a class="el" href="group__arith__func__cast.htm#gab0cb307d6f9019ac8cbbbe9b8a4d6b9b">af_cast</a> for sparse arrays. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1826">1</a></sup></li>
<li>Fixing correctness of <a class="el" href="group__arith__func__pow.htm#ga0f28be1a9c8b176a78c4a47f483e7fc6">af_pow</a> for complex numbers by using Cartesian form. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1765">1</a></sup></li>
<li>Corrected <a class="el" href="group__data__func__select.htm#ga43cfc7e96eb2e8ee019820aaa6aa15a8">af::select()</a> with indexing in CUDA and OpenCL backends. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1731">1</a></sup></li>
<li>Workaround for VS2015 compiler ternary bug. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1771">1</a></sup></li>
<li>Fixed memory corruption in <code>cuda::findPlan()</code>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1793">1</a></sup></li>
<li>Argument checks in <a class="el" href="group__sparse__func__create.htm#ga42c5cf729a232c1cbbcfe0f664f3b986">af_create_sparse_array</a> avoids inputs of type int64. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1747">1</a></sup></li>
<li>Fixed issue with indexing an array with a step size != 1. <sup><a href="https://github.com/arrayfire/arrayfire/issues/1846">1</a></sup></li>
</ul>
<h2>Build fixes </h2>
<ul>
<li>On OSX, utilize new GLFW package from the brew package manager. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1720">1</a></sup> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1775">2</a></sup></li>
<li>Fixed CUDA PTX names generated by CMake v3.7. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1689">1</a></sup></li>
<li>Support <code>gcc</code> &gt; 5.x for CUDA. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1708">1</a></sup></li>
</ul>
<h2>Examples </h2>
<ul>
<li>New genetic algorithm example. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1695">1</a></sup></li>
</ul>
<h2>Documentation </h2>
<ul>
<li>Updated <code><a class="el" href="README_8md.htm">README.md</a></code> to improve readability and formatting. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1726">1</a></sup></li>
<li>Updated <code><a class="el" href="README_8md.htm">README.md</a></code> to mention Julia and Nim wrappers. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1714">1</a></sup></li>
<li>Improved installation instructions - <code><a class="el" href="install_8md.htm">docs/pages/install.md</a></code>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1740">1</a></sup></li>
</ul>
<h2>Miscellaneous </h2>
<ul>
<li>A few improvements for ROCm support. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1710">1</a></sup></li>
<li>Removed CUDA 6.5 support. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1687">1</a></sup></li>
</ul>
<h2>Known issues </h2>
<ul>
<li>Windows<ul>
<li>The Windows NVIDIA driver version <code>37x.xx</code> contains a bug which causes <code>fftconvolve_opencl</code> to fail. Upgrade or downgrade to a different version of the driver to avoid this failure.</li>
<li>The following tests fail on Windows with NVIDIA hardware: <code>threading_cuda</code>,<code>qr_dense_opencl</code>, <code>solve_dense_opencl</code>.</li>
</ul>
</li>
<li>macOS<ul>
<li>The Accelerate framework, used by the CPU backend on macOS, leverages Intel graphics cards (Iris) when there are no discrete GPUs available. This OpenCL implementation is known to give incorrect results on the following tests: <code>lu_dense_{cpu,opencl}</code>, <code>solve_dense_{cpu,opencl}</code>, <code>inverse_dense_{cpu,opencl}</code>.</li>
<li>Certain tests intermittently fail on macOS with NVIDIA GPUs apparently due to inconsistent driver behavior: <code>fft_large_cuda</code> and <code>svd_dense_cuda</code>.</li>
<li>The following tests are currently failing on macOS with AMD GPUs: <code>cholesky_dense_opencl</code> and <code>scan_by_key_opencl</code>.</li>
</ul>
</li>
</ul>
<h1>v3.4.2 </h1>
<h2>Deprecation Announcement </h2>
<p>This release supports CUDA 6.5 and higher. The next ArrayFire relase will support CUDA 7.0 and higher, dropping support for CUDA 6.5. Reasons for no longer supporting CUDA 6.5 include:</p>
<ul>
<li>CUDA 7.0 NVCC supports the C++11 standard (whereas CUDA 6.5 does not), which is used by ArrayFire's CPU and OpenCL backends.</li>
<li>Very few ArrayFire users still use CUDA 6.5.</li>
</ul>
<p>As a result, the older Jetson TK1 / Tegra K1 will no longer be supported in the next ArrayFire release. The newer Jetson TX1 / Tegra X1 will continue to have full capability with ArrayFire.</p>
<h2>Docker </h2>
<ul>
<li><a href="https://github.com/arrayfire/arrayfire-docker">ArrayFire has been Dockerized</a>.</li>
</ul>
<h2>Improvements </h2>
<ul>
<li>Implemented sparse storage format conversions between <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa33553814922263702c5a95695c988d8b">AF_STORAGE_CSR</a> and <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa3798241f7c7fb19df683b868bdb089a4">AF_STORAGE_COO</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1642">1</a></sup><ul>
<li>Directly convert between <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa3798241f7c7fb19df683b868bdb089a4">AF_STORAGE_COO</a> &lt;&ndash;&gt; <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa33553814922263702c5a95695c988d8b">AF_STORAGE_CSR</a> using the <a class="el" href="group__sparse__func__convert__to.htm#ga552d3a90dae9d2c6646a991100688162">af::sparseConvertTo()</a> function.</li>
<li><a class="el" href="group__sparse__func__convert__to.htm#ga552d3a90dae9d2c6646a991100688162">af::sparseConvertTo()</a> now also supports converting to dense.</li>
</ul>
</li>
<li>Added cast support for <a class="el" href="group__sparse__func.htm">sparse arrays</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1653">1</a></sup><ul>
<li>Casting only changes the values array and the type. The row and column index arrays are not changed.</li>
</ul>
</li>
<li>Reintroduced automated computation of chart axes limits for graphics functions. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1639">1</a></sup><ul>
<li>The axes limits will always be the minimum/maximum of the current and new limit.</li>
<li>The user can still set limits from API calls. If the user sets a limit from the API call, then the automatic limit setting will be disabled.</li>
</ul>
</li>
<li>Using <code>boost::scoped_array</code> instead of <code>boost::scoped_ptr</code> when managing array resources. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1637">1</a></sup></li>
<li>Internal performance improvements to getInfo() by using <code>const</code> references to avoid unnecessary copying of <code>ArrayInfo</code> objects. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1665">1</a></sup></li>
<li>Added support for scalar <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container. ">af::array</a> inputs for <a class="el" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9" title="C++ Interface for convolution any(one through three) dimensional signals. ">af::convolve()</a> and <a class="el" href="group__set__mat.htm">set functions</a>. <sup><a href="https://github.com/arrayfire/arrayfire/issues/1660">1</a></sup> <sup><a href="https://github.com/arrayfire/arrayfire/issues/1675">2</a></sup> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1668">3</a></sup></li>
<li>Performance fixes in <a class="el" href="group__signal__func__fft__convolve.htm#ga711d2440b2d954215a02d90ac8952af8" title="C++ Interface for FFT-based convolution any(one through three) dimensional signals. ">af::fftConvolve()</a> kernels. <sup><a href="https://github.com/arrayfire/arrayfire/issues/1679">1</a></sup> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1680">2</a></sup></li>
</ul>
<h2>Build </h2>
<ul>
<li>Support for Visual Studio 2015 compilation. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1632">1</a></sup> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1640">2</a></sup></li>
<li>Fixed <code>FindCBLAS.cmake</code> when PkgConfig is used. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1657">1</a></sup></li>
</ul>
<h2>Bug fixes </h2>
<ul>
<li>Fixes to JIT when tree is large. <sup><a href="https://github.com/arrayfire/arrayfire/issues/1646">1</a></sup> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1638">2</a></sup></li>
<li>Fixed indexing bug when converting dense to sparse <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container. ">af::array</a> as <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa3798241f7c7fb19df683b868bdb089a4">AF_STORAGE_COO</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1642">1</a></sup></li>
<li>Fixed <a class="el" href="group__image__func__bilateral.htm#ga2ee5156a2d3a51a55f36a797d1274605" title="C++ Interface for bilateral filter. ">af::bilateral()</a> OpenCL kernel compilation on OS X. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1638">1</a></sup></li>
<li>Fixed memory leak in <a class="el" href="group__image__func__regions.htm#gaa4c7144b6fde68c99d7e9c9ae3336abe" title="C++ Interface for getting regions in an image. ">af::regions()</a> (CPU) and <a class="el" href="group__image__func__rgb2ycbcr.htm#ga4f0faf8297515d78ce3050c0405ff689" title="C++ Interface for converting RGB to YCbCr. ">af::rgb2ycbcr()</a>. <sup><a href="https://github.com/arrayfire/arrayfire/issues/1664">1</a></sup> <sup><a href="https://github.com/arrayfire/arrayfire/issues/1664">2</a></sup> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1666">3</a></sup></li>
</ul>
<h2>Installers </h2>
<ul>
<li>Major OS X installer fixes. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1629">1</a></sup><ul>
<li>Fixed installation scripts.</li>
<li>Fixed installation symlinks for libraries.</li>
</ul>
</li>
<li>Windows installer now ships with more pre-built examples.</li>
</ul>
<h2>Examples </h2>
<ul>
<li>Added <a class="el" href="group__lapack__factor__func__cholesky.htm#gac1d4ac4de57dea4841cb11c5e6865792" title="C++ Interface for in place cholesky decomposition. ">af::choleskyInPlace()</a> calls to <code>cholesky.cpp</code> example. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1671">1</a></sup></li>
</ul>
<h2>Documentation </h2>
<ul>
<li>Added <code>u8</code> as supported data type in <code><a class="el" href="getting__started_8md.htm">getting_started.md</a></code>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1661">1</a></sup></li>
<li>Fixed typos. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1652">1</a></sup></li>
</ul>
<h2>CUDA 8 on OSX </h2>
<ul>
<li><a href="https://developer.nvidia.com/cuda-toolkit">CUDA 8.0.55</a> supports Xcode 8. <sup><a href="https://github.com/arrayfire/arrayfire/issues/1664">1</a></sup></li>
</ul>
<h2>Known Issues </h2>
<ul>
<li>Known failures with CUDA 6.5. These include all functions that use sorting. As a result, sparse storage format conversion between <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa3798241f7c7fb19df683b868bdb089a4">AF_STORAGE_COO</a> and <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa33553814922263702c5a95695c988d8b">AF_STORAGE_CSR</a> has been disabled for CUDA 6.5.</li>
</ul>
<h1>v3.4.1 </h1>
<h2>Installers </h2>
<ul>
<li>Installers for Linux, OS X and Windows<ul>
<li>CUDA backend now uses <a href="https://developer.nvidia.com/cuda-toolkit">CUDA 8.0</a>.</li>
<li>Uses <a href="https://software.intel.com/en-us/intel-mkl">Intel MKL 2017</a>.</li>
<li>CUDA Compute 2.x (Fermi) is no longer compiled into the library.</li>
</ul>
</li>
<li>Installer for OS X<ul>
<li>The libraries shipping in the OS X Installer are now compiled with Apple Clang v7.3.1 (previously v6.1.0).</li>
<li>The OS X version used is 10.11.6 (previously 10.10.5).</li>
</ul>
</li>
<li>Installer for Jetson TX1 / Tegra X1<ul>
<li>Requires <a href="https://developer.nvidia.com/embedded/jetpack">JetPack for L4T 2.3</a> (containing Linux for Tegra r24.2 for TX1).</li>
<li>CUDA backend now uses <a href="https://developer.nvidia.com/cuda-toolkit">CUDA 8.0</a> 64-bit.</li>
<li>Using CUDA's cusolver instead of CPU fallback.</li>
<li>Uses OpenBLAS for CPU BLAS.</li>
<li>All ArrayFire libraries are now 64-bit.</li>
</ul>
</li>
</ul>
<h2>Improvements </h2>
<ul>
<li>Add <a class="el" href="group__sparse__func.htm">sparse array</a> support to <a class="el" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">af::eval()</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1598">1</a></sup></li>
<li>Add OpenCL-CPU fallback support for sparse <a class="el" href="group__blas__func__matmul.htm#ga63306b6ed967bd1055086db862fe885b">af::matmul()</a> when running on a unified memory device. Uses MKL Sparse BLAS.</li>
<li>When using CUDA libdevice, pick the correct compute version based on device. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1612">1</a></sup></li>
<li>OpenCL FFT now also supports prime factors 7, 11 and 13. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1383">1</a></sup> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1619">2</a></sup></li>
</ul>
<h2>Bug Fixes </h2>
<ul>
<li>Allow CUDA libdevice to be detected from custom directory.</li>
<li>Fix <code>aarch64</code> detection on Jetson TX1 64-bit OS. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1593">1</a></sup></li>
<li>Add missing definition of <code>af_set_fft_plan_cache_size</code> in unified backend. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1591">1</a></sup></li>
<li>Fix intial values for <a class="el" href="group__reduce__func__min.htm#ga2b1287d1babb569d28bc6ee1c8e8e1ea">af::min()</a> and <a class="el" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">af::max()</a> operations. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1594">1</a></sup> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1595">2</a></sup></li>
<li>Fix distance calculation in <a class="el" href="group__cv__func__nearest__neighbour.htm#ga8839ead81cbcd6b433822205713bfe79">af::nearestNeighbour</a> for CUDA and OpenCL backend. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1596">1</a></sup> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1595">2</a></sup></li>
<li>Fix OpenCL bug where scalars where are passed incorrectly to compile options. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1595">1</a></sup></li>
<li>Fix bug in <a class="el" href="group__gfx__func__draw.htm#ga1cdb8c3205d70d8feaddd8c30245393f">af::Window::surface()</a> with respect to dimensions and ranges. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1604">1</a></sup></li>
<li>Fix possible double free corruption in <a class="el" href="group__index__func__assign.htm#ga3b201c3114941b6f8d0e344afcd18457">af_assign_seq()</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1605">1</a></sup></li>
<li>Add missing eval for key in <a class="el" href="group__scan__func__scanbykey.htm#ga881c15b2d5ae0dea679eb3fd700ad681">af::scanByKey</a> in CPU backend. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1605">1</a></sup></li>
<li>Fixed creation of sparse values array using <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa3798241f7c7fb19df683b868bdb089a4">AF_STORAGE_COO</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1620">1</a></sup> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1621">1</a></sup></li>
</ul>
<h2>Examples </h2>
<ul>
<li>Add a <a class="el" href="benchmarks_2cg_8cpp-example.htm">Conjugate Gradient solver example</a> to demonstrate sparse and dense matrix operations. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1599">1</a></sup></li>
</ul>
<h2>CUDA Backend </h2>
<ul>
<li>When using <a href="https://developer.nvidia.com/cuda-toolkit">CUDA 8.0</a>, compute 2.x are no longer in default compute list.<ul>
<li>This follows <a href="https://developer.nvidia.com/cuda-toolkit">CUDA 8.0</a> deprecating computes 2.x.</li>
<li>Default computes for CUDA 8.0 will be 30, 50, 60.</li>
</ul>
</li>
<li>When using CUDA pre-8.0, the default selection remains 20, 30, 50.</li>
<li>CUDA backend now uses <code>-arch=sm_30</code> for PTX compilation as default.<ul>
<li>Unless compute 2.0 is enabled.</li>
</ul>
</li>
</ul>
<h2>Known Issues </h2>
<ul>
<li><a class="el" href="group__lapack__factor__func__lu.htm#gafdec123882c86755b3ce260d6abb36ec">af::lu()</a> on CPU is known to give incorrect results when built run on OS X 10.11 or 10.12 and compiled with Accelerate Framework. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1617">1</a></sup><ul>
<li>Since the OS X Installer libraries uses MKL rather than Accelerate Framework, this issue does not affect those libraries.</li>
</ul>
</li>
</ul>
<h1>v3.4.0 </h1>
<h2>Major Updates </h2>
<ul>
<li><a class="el" href="group__sparse__func.htm">Sparse Matrix and BLAS</a>. <sup><a href="https://github.com/arrayfire/arrayfire/issues/821">1</a> <a href="https://github.com/arrayfire/arrayfire/pull/1319">2</a></sup></li>
<li>Faster JIT for CUDA and OpenCL. <sup><a href="https://github.com/arrayfire/arrayfire/issues/1472">1</a> <a href="https://github.com/arrayfire/arrayfire/pull/1462">2</a></sup></li>
<li>Support for <a class="el" href="classaf_1_1randomEngine.htm">random number generator engines</a>. <sup><a href="https://github.com/arrayfire/arrayfire/issues/868">1</a> <a href="https://github.com/arrayfire/arrayfire/pull/1551">2</a></sup></li>
<li>Improvements to graphics. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1555">1</a> <a href="https://github.com/arrayfire/arrayfire/pull/1566">2</a></sup></li>
</ul>
<h2>Features </h2>
<ul>
<li><b><a class="el" href="group__sparse__func.htm">Sparse Matrix and BLAS</a></b> <sup><a href="https://github.com/arrayfire/arrayfire/issues/821">1</a> <a href="https://github.com/arrayfire/arrayfire/pull/1319">2</a></sup><ul>
<li>Support for <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa33553814922263702c5a95695c988d8b">CSR</a> and <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa3798241f7c7fb19df683b868bdb089a4">COO</a> <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600f">storage types</a>.</li>
<li>Sparse-Dense Matrix Multiplication and Matrix-Vector Multiplication as a part of <a class="el" href="group__blas__func__matmul.htm#ga63306b6ed967bd1055086db862fe885b" title="Matrix multiply of two arrays. ">af::matmul()</a> using <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa33553814922263702c5a95695c988d8b">AF_STORAGE_CSR</a> format for sparse.</li>
<li>Conversion to and from <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fac99c819e628693aed3c422d0656519c2">dense</a> matrix to <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa33553814922263702c5a95695c988d8b">CSR</a> and <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600fa3798241f7c7fb19df683b868bdb089a4">COO</a> <a class="el" href="defines_8h.htm#a75e1422a62a43dc1ce727ccfb850600f">storage types</a>.</li>
</ul>
</li>
<li><b>Faster JIT</b> <sup><a href="https://github.com/arrayfire/arrayfire/issues/1472">1</a> <a href="https://github.com/arrayfire/arrayfire/pull/1462">2</a></sup><ul>
<li>Performance improvements for CUDA and OpenCL JIT functions.</li>
<li>Support for evaluating multiple outputs in a single kernel. See <a class="el" href="group__method__mat.htm#ga01195c59132e1b0af7655075ba770581" title="Evaluate any JIT expressions to generate data for the array. ">af::array::eval()</a> for more.</li>
</ul>
</li>
<li><b><a class="el" href="classaf_1_1randomEngine.htm">Random Number Generation</a></b> <sup><a href="https://github.com/arrayfire/arrayfire/issues/868">1</a> <a href="https://github.com/arrayfire/arrayfire/pull/1551">2</a></sup><ul>
<li><a class="el" href="classaf_1_1randomEngine.htm" title="A random number generator class. ">af::randomEngine()</a>: A random engine class to handle setting the [type](af_random_type) and seed for random number generator engines.</li>
<li>Supported engine types are (<a class="el" href="defines_8h.htm#a82a3bf91d6dd04661c63632d0fbf4934">af_random_engine_type</a>):<ul>
<li><a href="http://www.thesalmons.org/john/random123/">Philox</a></li>
<li><a href="http://www.thesalmons.org/john/random123/">Threefry</a></li>
<li><a href="http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MTGP/">Mersenne Twister</a></li>
</ul>
</li>
</ul>
</li>
<li><b>Graphics</b> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1555">1</a> <a href="https://github.com/arrayfire/arrayfire/pull/1566">2</a></sup><ul>
<li>Using <a href="https://github.com/arrayfire/forge/releases/tag/v0.9.0">Forge v0.9.0</a></li>
<li><a class="el" href="group__gfx__func__draw.htm#ga6d3904749d501e6ee607566dc3e1ecc8">Vector Field</a> plotting functionality. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1566">1</a></sup></li>
<li>Removed <a href="http://glew.sourceforge.net/">GLEW</a> and replaced with <a href="https://github.com/cginternals/glbinding">glbinding</a>.<ul>
<li>Removed usage of GLEW after support for MX (multithreaded) was dropped in v2.0. <sup><a href="https://github.com/arrayfire/arrayfire/issues/1540">1</a></sup></li>
</ul>
</li>
<li>Multiple overlays on the same window are now possible.<ul>
<li>Overlays support for same type of object (2D/3D)</li>
<li>Supported by <a class="el" href="group__gfx__func__draw.htm#gaed2e96201d07c5f90e430632de5e26f1" title="Renders the input arrays as a 2D or 3D plot to the window. ">af::Window::plot</a>, <a class="el" href="group__gfx__func__draw.htm#gafd7d94aa8f5fd37fee0662a4906a38d7" title="Renders the input array as a histogram to the window. ">af::Window::hist</a>, <a class="el" href="group__gfx__func__draw.htm#ga1cdb8c3205d70d8feaddd8c30245393f" title="Renders the input arrays as a 3D surface plot to the window. ">af::Window::surface</a>, <a class="el" href="group__gfx__func__draw.htm#ga6d3904749d501e6ee607566dc3e1ecc8" title="Renders the input arrays as a 2D or 3D vector field plot to the window. ">af::Window::vectorField</a>.</li>
</ul>
</li>
<li>New API to set axes limits for graphs.<ul>
<li>Draw calls do not automatically compute the limits. This is now under user control.</li>
<li><a class="el" href="group__gfx__func__window.htm#ga1277bb007f5f2845eac09ead91ad36d2" title="Setup the axes limits for a 2D histogram/plot/vector field. ">af::Window::setAxesLimits</a> can be used to set axes limits automatically or manually.</li>
<li><a class="el" href="group__gfx__func__window.htm#ga2ec0dd422af7a5a0e3894045dfd37b4a" title="Setup the axes titles for a plot/surface/vector field. ">af::Window::setAxesTitles</a> can be used to set axes titles.</li>
</ul>
</li>
<li>New API for plot and scatter:<ul>
<li><a class="el" href="group__gfx__func__draw.htm#gaed2e96201d07c5f90e430632de5e26f1" title="Renders the input arrays as a 2D or 3D plot to the window. ">af::Window::plot()</a> and <a class="el" href="group__gfx__func__draw.htm#gaf95ec84f9788b42fd443c9523792e4a4" title="Renders the input arrays as a 2D or 3D scatter-plot to the window. ">af::Window::scatter()</a> now can handle 2D and 3D and determine appropriate order.</li>
<li><a class="el" href="group__gfx__func__draw.htm#gaca0392f183fd41f862212d27921f1136" title="C Interface wrapper for drawing an array as a 2D or 3D plot. ">af_draw_plot_nd()</a></li>
<li><a class="el" href="group__gfx__func__draw.htm#ga6d447cda6c8fdcde33257b284a46acd4" title="C Interface wrapper for drawing an array as a 2D plot. ">af_draw_plot_2d()</a></li>
<li><a class="el" href="group__gfx__func__draw.htm#gab4daba1d60682cbef7f3bdf6ab2e83a2" title="C Interface wrapper for drawing an array as a 3D plot. ">af_draw_plot_3d()</a></li>
<li><a class="el" href="group__gfx__func__draw.htm#ga9991b93681e0c18693a5464458781d22" title="C Interface wrapper for drawing an array as a plot. ">af_draw_scatter_nd()</a></li>
<li><a class="el" href="group__gfx__func__draw.htm#ga79417722c69883e7a91282b138288010" title="C Interface wrapper for drawing an array as a 2D plot. ">af_draw_scatter_2d()</a></li>
<li><a class="el" href="group__gfx__func__draw.htm#ga2b3d0dd690ebcba4c4dbb09cdcaed304" title="C Interface wrapper for drawing an array as a 3D plot. ">af_draw_scatter_3d()</a></li>
</ul>
</li>
</ul>
</li>
<li><b>New <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpolation methods</a></b> <sup><a href="https://github.com/arrayfire/arrayfire/issues/1562">1</a></sup><ul>
<li>Applies to<ul>
<li><a class="el" href="group__transform__func__resize.htm#ga017b9370e3e287693519de5b59fcc8ff">af::resize()</a></li>
<li><a class="el" href="group__transform__func__transform.htm#ga3677c5a534ca50a9c8a2611fe0728fd8">af::transform()</a></li>
<li><a class="el" href="group__signal__func__approx1.htm#ga18117f73cee98f0859f8439607f7f962">af::approx1()</a></li>
<li><a class="el" href="group__signal__func__approx2.htm#gad6a825755f97f59536faab99ed6e0c2d">af::approx2()</a></li>
</ul>
</li>
</ul>
</li>
<li><b>Support for <a class="el" href="group__mathfunc__mat.htm">complex mathematical functions</a></b> <sup><a href="https://github.com/arrayfire/arrayfire/issues/1507">1</a></sup><ul>
<li>Add complex support for <a class="el" href="group__trig__mat.htm">Trigonometric functions</a>, <a class="el" href="group__arith__func__sqrt.htm#ga25c678d4cd9e0702bbc93e11d7d516a8">af::sqrt()</a>, <a class="el" href="group__arith__func__log.htm#gaf15f1af67e62541e0322f4c94acd0293">af::log()</a>.</li>
</ul>
</li>
<li><b><a class="el" href="group__image__func__medfilt.htm#ga3ed06c96f5e336e4cc60d001dc5cdd89" title="C++ Interface for median filter. ">af::medfilt1()</a>: Median filter for 1-d signals</b> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1479">1</a></sup></li>
<li><b>Generalized scan functions: <a class="el" href="group__scan__func__scan.htm">scan</a> and <a class="el" href="group__scan__func__scanbykey.htm">scanByKey</a></b><ul>
<li>Now supports inclusive or exclusive scans</li>
<li>Supports binary operations defined by <a class="el" href="defines_8h.htm#a4de0054ea1c296a55a79691c21f19c6c">af_binary_op</a>. <sup><a href="https://github.com/arrayfire/arrayfire/issues/388">1</a></sup></li>
</ul>
</li>
<li><b><a class="el" href="group__moments__mat.htm">Image Moments</a> functions</b> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1453">1</a></sup></li>
<li><b>Add <a class="el" href="namespaceaf.htm#aee762e36f152a4ee58d3d14619b009d3" title="Get the size of the type represented by an af_dtype enum. ">af::getSizeOf()</a> function for <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a></b> <sup><a href="https://github.com/arrayfire/arrayfire/pull/1404">1</a></sup></li>
<li><b>Explicitly extantiate <a class="el" href="group__device__func__device.htm#ga93c855ccd22d37cf90d32aef5ac75030">af::array::device()</a> for `void *</b> <sup><a href="https://github.com/arrayfire/arrayfire/issues/1503">1</a></sup></li>
</ul>
<h2>Bug Fixes </h2>
<ul>
<li>Fixes to edge-cases in <a class="el" href="group__morph__mat.htm">Morphological Operations</a>. <sup><a href="https://github.com/arrayfire/arrayfire/issues/1564">1</a></sup></li>
<li>Makes JIT tree size consistent between devices. <sup><a href="https://github.com/arrayfire/arrayfire/issues/1457">1</a></sup></li>
<li>Delegate higher-dimension in <a class="el" href="group__convolve__mat.htm">Convolutions</a> to correct dimensions. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1445">1</a></sup></li>
<li>Indexing fixes with C++11. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1426">1</a> <a href="https://github.com/arrayfire/arrayfire/pull/1426">2</a></sup></li>
<li>Handle empty arrays as inputs in various functions. <sup><a href="https://github.com/arrayfire/arrayfire/issues/799">1</a></sup></li>
<li>Fix bug when single element input to <a class="el" href="group__stat__func__median.htm#ga20441bd881f48caa47a1fbe6f066d377" title="C++ Interface for median. ">af::median</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1423">1</a></sup></li>
<li>Fix bug in calculation of time from <a class="el" href="namespaceaf.htm#a9ffb3ceefb515e1778cf8c4d5e29db59">af::timeit()</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1414">1</a></sup></li>
<li>Fix bug in floating point numbers in <a class="el" href="classaf_1_1seq.htm" title="seq is used to create seq for indexing af::array ">af::seq</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1404">1</a></sup></li>
<li>Fixes for OpenCL graphics interop on NVIDIA devices. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1408/commits/e1f16e6">1</a></sup></li>
<li>Fix bug when compiling large kernels for AMD devices. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1465">1</a></sup></li>
<li>Fix bug in <a class="el" href="group__image__func__bilateral.htm#ga2ee5156a2d3a51a55f36a797d1274605" title="C++ Interface for bilateral filter. ">af::bilateral</a> when shared memory is over the limit. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1478">1</a></sup></li>
<li>Fix bug in kernel header compilation tool <code>bin2cpp</code>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1544">1</a></sup></li>
<li>Fix inital values for <a class="el" href="group__morph__mat.htm">Morphological Operations</a> functions. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1547">1</a></sup></li>
<li>Fix bugs in <a class="el" href="group__cv__func__homography.htm#ga47d0b44239fc6e59575a165a752c9329" title="C++ Interface for Homography estimation. ">af::homography()</a> CPU and OpenCL kernels. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1584">1</a></sup></li>
<li>Fix bug in CPU TNJ. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1587">1</a></sup></li>
</ul>
<h2>Improvements </h2>
<ul>
<li>CUDA 8 and compute 6.x(Pascal) support, current installer ships with CUDA 7.5. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1432">1</a> <a href="https://github.com/arrayfire/arrayfire/pull/1487">2</a> <a href="https://github.com/arrayfire/arrayfire/pull/1539">3</a></sup></li>
<li>User controlled FFT plan caching. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1448">1</a></sup></li>
<li>CUDA performance improvements for <a class="el" href="group__image__func__wrap.htm">wrap</a>, <a class="el" href="group__image__func__unwrap.htm">unwrap</a> and <a class="el" href="group__approx__mat.htm">Interpolation and approximation</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1411">1</a></sup></li>
<li>Fallback for CUDA-OpenGL interop when no devices does not support OpenGL. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1415">1</a></sup></li>
<li>Additional forms of batching with the <a class="el" href="group__transform__func__transform.htm">transform</a> functions. <a href="https://github.com/arrayfire/arrayfire/pull/1412">New behavior defined here</a>. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1412">1</a></sup></li>
<li>Update to OpenCL2 headers. <sup><a href="https://github.com/arrayfire/arrayfire/issues/1344">1</a></sup></li>
<li>Support for integration with external OpenCL contexts. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1140">1</a></sup></li>
<li>Performance improvements to interal copy in CPU Backend. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1440">1</a></sup></li>
<li>Performance improvements to <a class="el" href="group__data__func__select.htm#ga43cfc7e96eb2e8ee019820aaa6aa15a8">af::select</a> and <a class="el" href="group__data__func__replace.htm#ga13a51c418de0201102413f05aae45ccd">af::replace</a> CUDA kernels. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1587">1</a></sup></li>
<li>Enable OpenCL-CPU offload by default for devices with Unified Host Memory. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1521">1</a></sup><ul>
<li>To disable, use the environment variable <code>AF_OPENCL_CPU_OFFLOAD=0</code>.</li>
</ul>
</li>
</ul>
<h2>Build </h2>
<ul>
<li>Compilation speedups. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1526">1</a></sup></li>
<li>Build fixes with MKL. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1526">1</a></sup></li>
<li>Error message when CMake CUDA Compute Detection fails. <sup><a href="https://github.com/arrayfire/arrayfire/issues/1535">1</a></sup></li>
<li>Several CMake build issues with Xcode generator fixed. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1493">1</a> <a href="https://github.com/arrayfire/arrayfire/pull/1499">2</a></sup></li>
<li>Fix multiple OpenCL definitions at link time. <sup><a href="https://github.com/arrayfire/arrayfire/issues/1429">1</a></sup></li>
<li>Fix lapacke detection in CMake. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1423">1</a></sup></li>
<li>Update build tags of<ul>
<li><a href="https://github.com/clMathLibraries/clBLAS">clBLAS</a></li>
<li><a href="https://github.com/clMathLibraries/clFFT">clFFT</a></li>
<li><a href="https://github.com/boostorg/compute">Boost.Compute</a></li>
<li><a href="https://github.com/arrayfire/forge">Forge</a></li>
<li><a href="https://github.com/cginternals/glbinding">glbinding</a></li>
</ul>
</li>
<li>Fix builds with GCC 6.1.1 and GCC 5.3.0. <sup><a href="https://github.com/arrayfire/arrayfire/pull/1409">1</a></sup></li>
</ul>
<h2>Installers </h2>
<ul>
<li>All installers now ship with ArrayFire libraries build with MKL 2016.</li>
<li>All installers now ship with Forge development files and examples included.</li>
<li>CUDA Compute 2.0 has been removed from the installers. Please contact us directly if you have a special need.</li>
</ul>
<h2>Examples </h2>
<ul>
<li>Added <a class="el" href="graphics_2field_8cpp-example.htm">example simulating gravity</a> for demonstration of vector field.</li>
<li>Improvements to <a class="el" href="financial_2black_scholes_options_8cpp-example.htm">financial/black_scholes_options.cpp</a> example.</li>
<li>Improvements to <a class="el" href="graphics_2gravity_sim_8cpp-example.htm">graphics/gravity_sim.cpp</a> example.</li>
<li>Fix graphics examples to use <a class="el" href="group__gfx__func__window.htm#ga1277bb007f5f2845eac09ead91ad36d2" title="Setup the axes limits for a 2D histogram/plot/vector field. ">af::Window::setAxesLimits</a> and <a class="el" href="group__gfx__func__window.htm#ga2ec0dd422af7a5a0e3894045dfd37b4a" title="Setup the axes titles for a plot/surface/vector field. ">af::Window::setAxesTitles</a> functions.</li>
</ul>
<h2>Documentation &amp; Licensing </h2>
<ul>
<li><a href="http://arrayfire.com/trademark-policy">ArrayFire copyright and trademark policy</a></li>
<li>Fixed grammar in license.</li>
<li>Add license information for glbinding.</li>
<li>Remove license infomation for GLEW.</li>
<li>Random123 now applies to all backends.</li>
<li>Random number functions are now under <a class="el" href="group__random__mat.htm">Random Number Generation</a>.</li>
</ul>
<h2>Deprecations </h2>
<p>The following functions have been deprecated and may be modified or removed permanently from future versions of ArrayFire.</p><ul>
<li><a class="el" href="group__gfx__func__draw.htm#ga8e04ec129034e9fe769f3e6b14cd087f">af::Window::plot3()</a>: Use <a class="el" href="group__gfx__func__draw.htm#gaed2e96201d07c5f90e430632de5e26f1">af::Window::plot</a> instead.</li>
<li><a class="el" href="group__gfx__func__draw.htm#gada090c398764cbe1475bdb1a1e31b85a">af_draw_plot()</a>: Use <a class="el" href="group__gfx__func__draw.htm#gaca0392f183fd41f862212d27921f1136">af_draw_plot_nd</a> or <a class="el" href="group__gfx__func__draw.htm#ga6d447cda6c8fdcde33257b284a46acd4">af_draw_plot_2d</a> instead.</li>
<li><a class="el" href="group__gfx__func__draw.htm#gab7a96f606051867f0734aaacedc1e275">af_draw_plot3()</a>: Use <a class="el" href="group__gfx__func__draw.htm#gaca0392f183fd41f862212d27921f1136">af_draw_plot_nd</a> or <a class="el" href="group__gfx__func__draw.htm#gab4daba1d60682cbef7f3bdf6ab2e83a2">af_draw_plot_3d</a> instead.</li>
<li><a class="el" href="group__gfx__func__draw.htm#ga3bbfbe1b60741a259d2146b3ab50ace3">af::Window::scatter3()</a>: Use <a class="el" href="group__gfx__func__draw.htm#gaf95ec84f9788b42fd443c9523792e4a4">af::Window::scatter</a> instead.</li>
<li><a class="el" href="group__gfx__func__draw.htm#ga2ef3c95d1a0ce0ed4fe003ed53808ca2">af_draw_scatter()</a>: Use <a class="el" href="group__gfx__func__draw.htm#ga9991b93681e0c18693a5464458781d22">af_draw_scatter_nd</a> or <a class="el" href="group__gfx__func__draw.htm#ga79417722c69883e7a91282b138288010">af_draw_scatter_2d</a> instead.</li>
<li><a class="el" href="group__gfx__func__draw.htm#ga764410fbdf0cd60c7044c77e36fb2577">af_draw_scatter3()</a>: Use <a class="el" href="group__gfx__func__draw.htm#ga9991b93681e0c18693a5464458781d22">af_draw_scatter_nd</a> or <a class="el" href="group__gfx__func__draw.htm#ga2b3d0dd690ebcba4c4dbb09cdcaed304">af_draw_scatter_3d</a> instead.</li>
</ul>
<h2>Known Issues </h2>
<p>Certain CUDA functions are known to be broken on Tegra K1. The following ArrayFire tests are currently failing:</p><ul>
<li>assign_cuda</li>
<li>harris_cuda</li>
<li>homography_cuda</li>
<li>median_cuda</li>
<li>orb_cudasort_cuda</li>
<li>sort_by_key_cuda</li>
<li>sort_index_cuda</li>
</ul>
<h1>v3.3.2 </h1>
<h2>Improvements </h2>
<ul>
<li>Family of <a class="el" href="group__sort__mat.htm">Sort</a> functions now support <a href="https://github.com/arrayfire/arrayfire/pull/1373">higher order dimensions</a>.</li>
<li>Improved performance of batched sort on dim 0 for all <a class="el" href="group__sort__mat.htm">Sort</a> functions.</li>
<li><a class="el" href="group__stat__func__median.htm">Median</a> now also supports higher order dimensions.</li>
</ul>
<h2>Bug Fixes </h2>
<ul>
<li>Fixes to <a href="https://github.com/arrayfire/arrayfire/issues/1352">error handling</a> in C++ API for binary functions.</li>
<li>Fixes to <a href="https://github.com/arrayfire/arrayfire/issues/1350">external OpenCL context management</a>.</li>
<li>Fixes to <a href="https://github.com/arrayfire/arrayfire/issues/1360">JPEG_GREYSCALE</a> for FreeImage versions &lt;= 3.154.</li>
<li>Fixed for <a href="https://github.com/arrayfire/arrayfire/issues/1386">non-float inputs</a> to <a class="el" href="group__image__func__rgb2gray.htm#ga8a4d6c8e00646611caa7194a65769eda">af::rgb2gray()</a>.</li>
</ul>
<h2>Build </h2>
<ul>
<li><a href="https://github.com/arrayfire/arrayfire/issues/1378">Disable CPU Async</a> when building with GCC &lt; 4.8.4.</li>
<li>Add option to <a href="https://github.com/arrayfire/arrayfire/issues/1369">disable CPUID</a> from CMake.</li>
<li>More verbose message when <a href="https://github.com/arrayfire/arrayfire/issues/1362">CUDA Compute Detection fails</a>.</li>
<li>Print message to use <a href="https://github.com/arrayfire/arrayfire/issues/1363">CUDA library stub</a> from CUDA Toolkit if CUDA Library is not found from default paths.</li>
<li><a href="https://github.com/arrayfire/arrayfire/pull/1385">Build Fixes</a> on Windows.<ul>
<li>For compiling tests our of source.</li>
<li>For compiling ArrayFire with static MKL.</li>
</ul>
</li>
<li><a href="https://github.com/arrayfire/arrayfire/pull/1368">Exclude &lt;sys/sysctl.h&gt;</a> when building on GNU Hurd.</li>
<li>Add <a href="https://github.com/arrayfire/arrayfire/pull/1389">manual CMake options</a> to build DEB and RPM packages.</li>
</ul>
<h2>Documentation </h2>
<ul>
<li>Fixed documentation for <a class="el" href="group__data__func__replace.htm#ga13a51c418de0201102413f05aae45ccd">af::replace()</a>.</li>
<li>Fixed images in <a class="el" href="using_on_osx.htm">Using on OSX</a> page.</li>
</ul>
<h2>Installer </h2>
<ul>
<li>Linux x64 installers will now be compiled with GCC 4.9.2.</li>
<li>OSX installer gives better error messages on brew failures and now includes link to <a href="https://github.com/arrayfire/arrayfire/wiki/Fixing-Common-OS-X-Installer-Failures">Fixing OS X Installer Failures</a> for brew installation failures.</li>
</ul>
<h1>v3.3.1 </h1>
<h2>Bug Fixes </h2>
<ul>
<li>Fixes to <a class="el" href="group__device__func__device.htm#ga93c855ccd22d37cf90d32aef5ac75030">af::array::device()</a><ul>
<li>CPU Backend: <a href="https://github.com/arrayfire/arrayfire/issues/1316">evaluate arrays</a> before returning pointer with asynchronous calls in CPU backend.</li>
<li>OpenCL Backend: <a href="https://github.com/arrayfire/arrayfire/issues/1324">fix segfaults</a> when requested for device pointers on empty arrays.</li>
</ul>
</li>
<li>Fixed <a class="el" href="group__arith__func__mod.htm#ga5d7b2765f4b08919b5329c18ab6be5a1">af::array::operator%()</a> from using <a href="https://github.com/arrayfire/arrayfire/issues/1318">rem to mod</a>.</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1321">array destruction</a> when backends are switched in Unified API.</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1331">indexing</a> after <a class="el" href="group__manip__func__moddims.htm#ga382a69ec85a6beea79e95aeaef591073">af::moddims()</a> is called.</li>
<li>Fixes FFT calls for CUDA and OpenCL backends when used on <a href="https://github.com/arrayfire/arrayfire/issues/1332">multiple devices</a>.</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/commit/32965ef">unresolved external</a> for some functions from <a class="el" href="classaf_1_1array_1_1array__proxy.htm">af::array::array_proxy</a> class.</li>
</ul>
<h2>Build </h2>
<ul>
<li>CMake compiles files in alphabetical order.</li>
<li>CMake fixes for BLAS and LAPACK on some Linux distributions.</li>
</ul>
<h2>Improvements </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1323">OpenCL FFT performance</a> regression.</li>
<li><a class="el" href="group__device__func__device.htm#ga93c855ccd22d37cf90d32aef5ac75030">af::array::device()</a> on OpenCL backend <a href="https://github.com/arrayfire/arrayfire/issues/1311">returns</a> <code>cl_mem</code> instead of <code>(void*)cl::Buffer*</code>.</li>
<li>In Unified backend, <a href="https://github.com/arrayfire/arrayfire/issues/1312">load versioned libraries</a> at runtime.</li>
</ul>
<h2>Documentation </h2>
<ul>
<li>Reorganized, cleaner README file.</li>
<li>Replaced non-free lena image in assets with free-to-distribute lena image.</li>
</ul>
<h1>v3.3.0 </h1>
<h2>Major Updates </h2>
<ul>
<li>CPU backend supports aysnchronous execution.</li>
<li>Performance improvements to OpenCL BLAS and FFT functions.</li>
<li>Improved performance of memory manager.</li>
<li>Improvements to visualization functions.</li>
<li>Improved sorted order for OpenCL devices.</li>
<li>Integration with external OpenCL projects.</li>
</ul>
<h2>Features </h2>
<ul>
<li><a class="el" href="namespaceaf.htm#a0556249ae4e347c3494fac0de98e2cdb">af::getActiveBackend()</a>: Returns the current backend being used.</li>
<li><a href="https://github.com/arrayfire/arrayfire/pull/1116">Scatter plot</a> added to graphics.</li>
<li><a class="el" href="group__transform__func__transform.htm#ga3677c5a534ca50a9c8a2611fe0728fd8">af::transform()</a> now supports perspective transformation matrices.</li>
<li><a class="el" href="group__device__func__info__string.htm#ga73ee21947f018445ea720036c1edfb69">af::infoString()</a>: Returns <code><a class="el" href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info()</a></code> as a string.</li>
<li><a class="el" href="group__device__func__mem.htm#ga64f2598efae63032e3f9d20841f6abeb">af::printMemInfo()</a>: Print a table showing information about buffer from the memory manager<ul>
<li>The <a class="el" href="macros_8h.htm#af5e9c364379ead9f305de7ddd1bba87e">AF_MEM_INFO</a> macro prints numbers and total sizes of all buffers (requires including <a class="el" href="macros_8h.htm">af/macros.h</a>)</li>
</ul>
</li>
<li><a class="el" href="group__device__func__alloc__host.htm#ga73fc5021d9626b65a22e1edd3e1384b1">af::allocHost()</a>: Allocates memory on host.</li>
<li><a class="el" href="group__device__func__free__host.htm#ga0cc924b1055eee26851be4cd7bedee44">af::freeHost()</a>: Frees host side memory allocated by arrayfire.</li>
<li>OpenCL functions can now use CPU implementation.<ul>
<li>Currently limited to Unified Memory devices (CPU and On-board Graphics).</li>
<li>Functions: <a class="el" href="group__blas__func__matmul.htm#ga63306b6ed967bd1055086db862fe885b" title="Matrix multiply of two arrays. ">af::matmul()</a> and all <a class="el" href="group__linalg__mat.htm">LAPACK</a> functions.</li>
<li>Takes advantage of optimized libraries such as MKL without doing memory copies.</li>
<li>Use the environment variable <code>AF_OPENCL_CPU_OFFLOAD=1</code> to take advantage of this feature.</li>
</ul>
</li>
<li>Functions specific to OpenCL backend.<ul>
<li><a class="el" href="group__opencl__mat.htm#ga52c81b7227b95ce05c3e8b8efed3a9dc">afcl::addDevice()</a>: Adds an external device and context to ArrayFire's device manager.</li>
<li><a class="el" href="group__opencl__mat.htm#ga410026dc3d7b5e8b779c3505578cb097">afcl::deleteDevice()</a>: Removes an external device and context from ArrayFire's device manager.</li>
<li><a class="el" href="group__opencl__mat.htm#ga37969cfa49416bbdb25910d15c454d01">afcl::setDevice()</a>: Sets an external device and context from ArrayFire's device manager.</li>
<li><a class="el" href="group__opencl__mat.htm#ga9f00565eb14e9cc9bf9568bac2072d70">afcl::getDeviceType()</a>: Gets the device type of the current device.</li>
<li><a class="el" href="group__opencl__mat.htm#ga9c5a70a03d0d0bb31b4e7e5a0598752a">afcl::getPlatform()</a>: Gets the platform of the current device.</li>
</ul>
</li>
<li><a class="el" href="group__internal__func__create.htm#ga1f26a132406721522f1dc45939c16a38">af::createStridedArray()</a> allows <a href="https://github.com/arrayfire/arrayfire/issues/1177">array creation user-defined strides</a> and device pointer.</li>
<li><a href="https://github.com/arrayfire/arrayfire/issues/1131">Expose functions</a> that provide information about memory layout of Arrays.<ul>
<li><a class="el" href="group__internal__func__strides.htm#ga0965272516636da9304f7b7e181312ac">af::getStrides()</a>: Gets the strides for each dimension of the array.</li>
<li><a class="el" href="group__internal__func__offset.htm#gaab0e18ce8a2173c02c97e5c351723ea4">af::getOffset()</a>: Gets the offsets for each dimension of the array.</li>
<li><a class="el" href="namespaceaf.htm#a6b9055a482a20849c790617f3587b19f">af::getRawPtr()</a>: Gets raw pointer to the location of the array on device.</li>
<li><a class="el" href="group__internal__func__linear.htm#ga35d497b1aa8c6f2a843ab3b1212bb49f">af::isLinear()</a>: Returns true if all elements in the array are contiguous.</li>
<li><a class="el" href="group__internal__func__owner.htm#gae1c42a165ae7b6be86727cf6321a69c8">af::isOwner()</a>: Returns true if the array owns the raw pointer, false if it is a sub-array.</li>
<li><a class="el" href="group__internal__func__strides.htm#ga0965272516636da9304f7b7e181312ac">af::getStrides()</a>: Gets the strides of the array.</li>
<li><a class="el" href="group__internal__func__strides.htm#ga0965272516636da9304f7b7e181312ac">af::getStrides()</a>: Gets the strides of the array.</li>
</ul>
</li>
<li><a class="el" href="group__unified__func__getdeviceid.htm#ga0f2a7abff377e69c1f85cfb8d2f5deee">af::getDeviceId()</a>: Gets the device id on which the array resides.</li>
<li><a class="el" href="group__imageio__func__available.htm#gafcda529bb752c9f4466b7bd345caf370">af::isImageIOAvailable()</a>: Returns true if ArrayFire was compiled with Freeimage enabled</li>
<li><a class="el" href="group__lapack__ops__func__norm.htm#gad5d8d522712fa6039cae0dfdc00aad74">af::isLAPACKAvailable()</a>: Returns true if ArrayFire was compiled with LAPACK functions enabled</li>
</ul>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/1251">errors when using 3D / 4D arrays</a> in select and replace</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/1238">JIT errors on AMD devices</a> for OpenCL backend.</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/1229">imageio bugs</a> for 16 bit images.</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/1228">bugs when loading and storing images</a> natively.</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/615">bug in FFT for NVIDIA GPUs</a> when using OpenCL backend.</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/1241">bug when using external context</a> with OpenCL backend.</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1269">memory leak</a> in <a class="el" href="group__stat__func__median.htm#ga82b3d518bb7838eb6795af4a92c08b92">af_median_all()</a>.</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/1274">memory leaks and performance</a> in graphics functions.</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1275">bugs when indexing followed by moddims</a>.</li>
<li><a class="el" href="util_8h.htm#a547633192d5c0b58a0f424daa63da93e">af_get_revision()</a> now returns actual commit rather than AF_REVISION.</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1282">releasing arrays</a> when using different backends.</li>
<li>OS X OpenCL: <a class="el" href="group__linalg__mat.htm">LAPACK functions</a> on CPU devices use OpenCL offload (previously threw errors).</li>
<li><a href="https://github.com/arrayfire/arrayfire/pull/1287">Add support for 32-bit integer image types</a> in Image IO.</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1300">set operations for row vectors</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1243">bugs</a> in <a class="el" href="group__image__func__mean__shift.htm#gaa903c45b57c62e3b0023092b5b3e0bd9">af::meanShift()</a> and <a class="el" href="group__cv__func__orb.htm#ga174060bf74dfc2fce8db125d0d6b036d" title="C++ Interface for ORB feature descriptor. ">af::orb()</a>.</li>
</ul>
<h2>Improvements </h2>
<ul>
<li>Optionally <a href="https://github.com/arrayfire/arrayfire/pull/1221">offload BLAS and LAPACK</a> functions to CPU implementations to improve performance.</li>
<li>Performance improvements to the memory manager.</li>
<li>Error messages are now more detailed.</li>
<li>Improved sorted order for OpenCL devices.</li>
<li>JIT heuristics can now be tweaked using environment variables. See <a class="el" href="configuring_environment.htm">Environment Variables</a> tutorial.</li>
<li>Add <code>BUILD_&lt;BACKEND&gt;</code> <a href="https://github.com/arrayfire/arrayfire/issues/1286">options to examples and tests</a> to toggle backends when compiling independently.</li>
</ul>
<h2>Examples </h2>
<ul>
<li>New visualization <a class="el" href="graphics_2gravity_sim_8cpp-example.htm">example simulating gravity</a>.</li>
</ul>
<h2>Build </h2>
<ul>
<li>Support for Intel <code>icc</code> compiler</li>
<li>Support to compile with Intel MKL as a BLAS and LAPACK provider</li>
<li>Tests are now available for building as standalone (like examples)</li>
<li>Tests can now be built as a single file for each backend</li>
<li>Better handling of NONFREE build options</li>
<li><a href="https://github.com/arrayfire/arrayfire/pull/1292">Searching for GLEW in CMake default paths</a></li>
<li>Fixes for compiling with MKL on OSX.</li>
</ul>
<h2>Installers </h2>
<ul>
<li>Improvements to OSX Installer<ul>
<li>CMake config files are now installed with libraries</li>
<li>Independent options for installing examples and documentation components</li>
</ul>
</li>
</ul>
<h2>Deprecations </h2>
<ul>
<li><code>af_lock_device_arr</code> is now deprecated to be removed in v4.0.0. Use <a class="el" href="group__device__func__mem.htm#ga825e21412e9c8e3609c759f8106fd384">af_lock_array()</a> instead.</li>
<li><code>af_unlock_device_arr</code> is now deprecated to be removed in v4.0.0. use <a class="el" href="group__device__func__mem.htm#ga07151f8b3d69c1afe3cbd860fd98c36f">af_unlock_array()</a> instead.</li>
</ul>
<h2>Documentation </h2>
<ul>
<li>Fixes to documentation for <a class="el" href="group__cv__func__match__template.htm#ga1877e7a99d609e27a878c51d9a48ba8f">matchTemplate()</a>.</li>
<li>Improved documentation for deviceInfo.</li>
<li>Fixes to documentation for <a class="el" href="group__arith__func__exp.htm#ga9ddbaf0852fbf988400b9677705b2a00">exp()</a>.</li>
</ul>
<h2>Known Issues </h2>
<ul>
<li><a href="https://github.com/arrayfire/arrayfire/issues/1246">Solve OpenCL fails on NVIDIA Maxwell devices</a> for f32 and c32 when M &gt; N and K % 4 is 1 or 2.</li>
</ul>
<h1>v3.2.2 </h1>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/1145">memory leak</a> in CUDA Random number generators</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1157">bug</a> in <a class="el" href="group__data__func__select.htm#ga43cfc7e96eb2e8ee019820aaa6aa15a8">af::select()</a> and <a class="el" href="group__data__func__replace.htm#ga13a51c418de0201102413f05aae45ccd">af::replace()</a> tests</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1164">exception</a> thrown when printing empty arrays with <a class="el" href="group__print__func__print.htm#ga66791369fe71d867943da676a15afe3a">af::print()</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1170">bug</a> in CPU random number generation. Changed the generator to <a href="http://en.cppreference.com/w/cpp/numeric/random">mt19937</a></li>
<li>Fixed exception handling (internal)<ul>
<li><a href="https://github.com/arrayfire/arrayfire/issues/1188">Exceptions</a> now show function, short file name and line number</li>
<li>Added <a href="https://github.com/arrayfire/arrayfire/issues/1186">AF_RETURN_ERROR</a> macro to handle returning errors.</li>
<li>Removed THROW macro, and renamed AF_THROW_MSG to AF_THROW_ERR.</li>
</ul>
</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/commit/9459c6">bug</a> in <a class="el" href="group__data__func__identity.htm#gafd8247e22fdb50218926d5d9391fa678">af::identity()</a> that may have affected CUDA Compute 5.2 cards</li>
</ul>
<h2>Build </h2>
<ul>
<li>Added a <a href="https://github.com/arrayfire/arrayfire/issues/1193">MIN_BUILD_TIME</a> option to build with minimum optimization compiler flags resulting in faster compile times</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1143">issue</a> in CBLAS detection by CMake</li>
<li>Fixed tests failing for builds without optional components <a href="https://github.com/arrayfire/arrayfire/issues/1143">FreeImage</a> and <a href="https://github.com/arrayfire/arrayfire/issues/1167">LAPACK</a></li>
<li>Added a <a href="https://github.com/arrayfire/arrayfire/issues/1192">test</a> for unified backend</li>
<li>Only <a href="https://github.com/arrayfire/arrayfire/issues/1192">info and backend tests</a> are now built for unified backend</li>
<li><a href="https://github.com/arrayfire/arrayfire/issues/1199">Sort tests</a> execution alphabetically</li>
<li>Fixed compilation flags and errors in tests and examples</li>
<li><a href="https://github.com/arrayfire/arrayfire/commit/2287c5">Moved AF_REVISION and AF_COMPILER_STR</a> into src/backend. This is because as revision is updated with every commit, entire ArrayFire would have to be rebuilt in the old code.<ul>
<li>v3.3 will add a <a class="el" href="util_8h.htm#a547633192d5c0b58a0f424daa63da93e" title="Get the revision (commit) information of the library. ">af_get_revision()</a> function to get the revision string.</li>
</ul>
</li>
<li><a href="https://github.com/arrayfire/arrayfire/pull/1158">Clean up examples</a><ul>
<li>Remove getchar for Windows (this will be handled by the installer)</li>
<li>Other miscellaneous code cleanup</li>
<li>Fixed bug in <a class="el" href="graphics_2plot3_8cpp-example.htm">plot3.cpp</a> example</li>
</ul>
</li>
<li><a href="https://github.com/arrayfire/arrayfire/commit/35f0fc2">Rename</a> clBLAS/clFFT external project suffix from external -&gt; ext</li>
<li><a href="https://github.com/arrayfire/arrayfire/pull/1197">Add OpenBLAS</a> as a lapack/lapacke alternative</li>
</ul>
<h2>Improvements </h2>
<ul>
<li>Added <a class="el" href="macros_8h.htm#af5e9c364379ead9f305de7ddd1bba87e">AF_MEM_INFO</a> macro to print memory info from ArrayFire's memory manager (<a href="https://github.com/arrayfire/arrayfire/issues/1172">cross issue</a>)</li>
<li>Added <a href="https://github.com/arrayfire/arrayfire/issues/1184">additional paths</a> for searching for <code>libaf*</code> for Unified backend on unix-style OS.<ul>
<li>Note: This still requires dependencies such as forge, CUDA, NVVM etc to be in <code>LD_LIBRARY_PATH</code> as described in <a class="el" href="unifiedbackend.htm">Unified Backend</a></li>
</ul>
</li>
<li><a href="https://github.com/arrayfire/arrayfire/commit/ed0373f">Create streams</a> for devices only when required in CUDA Backend</li>
</ul>
<h2>Documentation </h2>
<ul>
<li><a href="https://github.com/arrayfire/arrayfire/commit/9d218a5">Hide scrollbars</a> appearing for pre and code styles</li>
<li>Fix <a href="https://github.com/arrayfire/arrayfire/commit/ac09f91">documentation</a> for <a class="el" href="group__data__func__replace.htm#ga13a51c418de0201102413f05aae45ccd">af::replace</a></li>
<li>Add <a href="https://github.com/arrayfire/arrayfire/commit/4e06483">code sample</a> for converting the output of <a class="el" href="group__unified__func__getavailbackends.htm#ga32fc807a8d4680987a915362573c1a2c">af::getAvailableBackends()</a> into bools</li>
<li>Minor fixes in documentation</li>
</ul>
<h1>v3.2.1 </h1>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/1136">bug</a> in <a class="el" href="group__cv__func__homography.htm#ga47d0b44239fc6e59575a165a752c9329" title="C++ Interface for Homography estimation. ">homography()</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1135">bug</a> in behavior of <a class="el" href="group__device__func__device.htm#ga93c855ccd22d37cf90d32aef5ac75030">af::array::device()</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1129">bug</a> when indexing with span along trailing dimension</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1127">bug</a> when indexing in <a class="el" href="page_gfor.htm#gfor">GFor</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1122">bug</a> in CPU information fetching</li>
<li>Fixed compilation <a href="https://github.com/arrayfire/arrayfire/issues/1117">bug</a> in unified backend caused by missing link library</li>
<li>Add <a href="https://github.com/arrayfire/arrayfire/pull/1114">missing symbol</a> for <a class="el" href="group__gfx__func__draw.htm#gaaee14e457272b2cd1bd4ed1228370229" title="C Interface wrapper for drawing array&#39;s as a surface. ">af_draw_surface()</a></li>
</ul>
<h2>Build </h2>
<ul>
<li>Tests can now be used as a <a href="https://github.com/arrayfire/arrayfire/pull/1120">standalone project</a><ul>
<li>Tests can now be built using pre-compiled libraries</li>
<li>Similar to how the examples are built</li>
</ul>
</li>
<li>The install target now installs the examples source irrespective of the BUILD_EXAMPLES value<ul>
<li>Examples are not built if BUILD_EXAMPLES is off</li>
</ul>
</li>
</ul>
<h2>Documentation </h2>
<ul>
<li>HTML documentation is now <a href="https://github.com/arrayfire/arrayfire/pull/1109">built and installed</a> in docs/html</li>
<li>Added documentation for <a class="el" href="classaf_1_1seq.htm">af::seq</a> class</li>
<li>Updated <a class="el" href="matrixmanipulation.htm">Matrix Manipulation</a> tutorial</li>
<li>Examples list is now generated by CMake<ul>
<li><a href="examples.htm">Examples</a> are now listed as dir/example.cpp</li>
</ul>
</li>
<li>Removed dummy groups used for indexing documentation (affcted doxygen &lt; 1.8.9)</li>
</ul>
<h1>v3.2.0 </h1>
<h2>Major Updates </h2>
<ul>
<li>Added Unified backend<ul>
<li>Allows switching backends at runtime</li>
<li>Read <a class="el" href="unifiedbackend.htm">Unified Backend</a> for more.</li>
</ul>
</li>
<li>Support for 16-bit integers (<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a98085990ff18bf438d3c839ea4c80bb4">s16</a> and <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5ae817c8a85914a5f150f2739df6b76c57">u16</a>)<ul>
<li>All functions that support 32-bit interger types (<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a1bd64190677c261a61c640017dbaddf1">s32</a>, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a05ef7b967bac0eef5d9712a6803b9f1a">u32</a>), now also support 16-bit interger types</li>
</ul>
</li>
</ul>
<h2>Function Additions </h2>
<ul>
<li>Unified Backend<ul>
<li><a class="el" href="group__unified__func__setbackend.htm#ga7e0fad1f134b0421811ee3a4ce47e987">setBackend()</a> - Sets a backend as active</li>
<li><a class="el" href="group__unified__func__getbackendcount.htm#gababf68f4656053dd14028760d5bae165">getBackendCount()</a> - Gets the number of backends available for use</li>
<li><a class="el" href="group__unified__func__getavailbackends.htm#ga32fc807a8d4680987a915362573c1a2c">getAvailableBackends()</a> - Returns information about available backends</li>
<li><a class="el" href="group__unified__func__getbackendid.htm#gad8c046f25b043ce89a25c3fa8b79c898">getBackendId()</a> - Gets the backend enum for an array</li>
</ul>
</li>
<li>Vision<ul>
<li><a class="el" href="group__cv__func__homography.htm#ga47d0b44239fc6e59575a165a752c9329">homography()</a> - Homography estimation</li>
<li><a class="el" href="group__cv__func__sift.htm#ga5b5826848e54066a2b7b73a97b41ba58">gloh()</a> - GLOH Descriptor for SIFT</li>
</ul>
</li>
<li>Image Processing<ul>
<li><a class="el" href="group__imageio__func__load.htm#ga006c246a48ff0a8b707264713890069e">loadImageNative()</a> - Load an image as native data without modification</li>
<li><a class="el" href="group__imageio__func__save.htm#ga069f3a3b77fe83e8e3356569eb8a396d">saveImageNative()</a> - Save an image without modifying data or type</li>
</ul>
</li>
<li>Graphics<ul>
<li><a class="el" href="group__gfx__func__draw.htm#ga8e04ec129034e9fe769f3e6b14cd087f">af::Window::plot3()</a> - 3-dimensional line plot</li>
<li><a class="el" href="group__gfx__func__draw.htm#ga1cdb8c3205d70d8feaddd8c30245393f">af::Window::surface()</a> - 3-dimensional curve plot</li>
</ul>
</li>
<li>Indexing<ul>
<li><a class="el" href="group__index__func__index.htm#ga3e10cf2a97a2880b5872ec658af4169f">af_create_indexers()</a></li>
<li><a class="el" href="group__index__func__index.htm#gae109f51eb0b4fcfcbf5d10c737355f40">af_set_array_indexer()</a></li>
<li><a class="el" href="group__index__func__index.htm#gaec0df3f1ee8624870f6bec55f6ec4bad">af_set_seq_indexer()</a></li>
<li><a class="el" href="group__index__func__index.htm#ga84fa7d63b756329b02d03cc56c65f699">af_set_seq_param_indexer()</a></li>
<li><a class="el" href="group__index__func__index.htm#gac382e89701583a173935262e741d4c7d">af_release_indexers()</a></li>
</ul>
</li>
<li>CUDA Backend Specific<ul>
<li><a class="el" href="group__cuda__mat.htm#ga6178cfc0ae2dbc311e9462d67d0f6c32">setNativeId()</a> - Set the CUDA device with given native id as active<ul>
<li>ArrayFire uses a modified order for devices. The native id for a device can be retreived using <code>nvidia-smi</code></li>
</ul>
</li>
</ul>
</li>
<li>OpenCL Backend Specific<ul>
<li><a class="el" href="group__opencl__mat.htm#ga242cc7dc5dcebc9e695e4fc3faebb91e">setDeviceId()</a> - Set the OpenCL device using the <code>clDeviceId</code></li>
</ul>
</li>
</ul>
<h2>Other Improvements </h2>
<ul>
<li>Added <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a> and <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a> support for <a class="el" href="group__arith__func__isnan.htm#ga4b90a8cd14248f578e509d69a94aa1b1">isNaN()</a>, <a class="el" href="group__arith__func__isinf.htm#ga2addd7560b8192f272c51304e87e5535">isInf()</a> and <a class="el" href="group__arith__func__iszero.htm#ga2ab8f0f1ceac74e3385c08938b7c0c6a">iszero()</a></li>
<li>Added CPU information for <code>x86</code> and <code>x86_64</code> architectures in CPU backend's <a class="el" href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">info()</a></li>
<li>Batch support for <a class="el" href="group__signal__func__approx1.htm#ga18117f73cee98f0859f8439607f7f962">approx1()</a> and <a class="el" href="group__signal__func__approx2.htm#gad6a825755f97f59536faab99ed6e0c2d">approx2()</a><ul>
<li>Now can be used with gfor as well</li>
</ul>
</li>
<li>Added <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a2fb596fb851c71689624894525c069e4">s64</a> and <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a1b18b7885e1360b6696142284b4b4928">u64</a> support to:<ul>
<li><a class="el" href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">sort()</a> (along with sort index and sort by key)</li>
<li><a class="el" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">setUnique()</a>, <a class="el" href="group__set__func__union.htm#gaa793c080cfa2c5ed7f422479e8e0bfe3">setUnion()</a>, <a class="el" href="group__set__func__intersect.htm#gae4549aee29c563edfb0b4a444fbf9200">setIntersect()</a></li>
<li><a class="el" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve()</a> and <a class="el" href="group__signal__func__fft__convolve.htm#ga711d2440b2d954215a02d90ac8952af8">fftConvolve()</a></li>
<li><a class="el" href="group__image__func__histogram.htm#gafb93ba76739ef18b3698e39c7768c90a">histogram()</a> and <a class="el" href="group__image__func__histequal.htm#ga0c09893b2ba7a63663a1893bc5d87e47">histEqual()</a></li>
<li><a class="el" href="group__index__func__index.htm#gac7bb6cefab347540526b1ac2584d006e">lookup()</a></li>
<li><a class="el" href="group__stat__func__mean.htm#ga551de2061646e8d73aade26a27b53e39">mean()</a></li>
</ul>
</li>
<li>Added <a class="el" href="macros_8h.htm#acdc2d26f4e456a7d46b9fc04ed4c71d8">AF_MSG</a> macro</li>
</ul>
<h2>Build Improvements </h2>
<ul>
<li>Submodules update is now automatically called if not cloned recursively</li>
<li><a href="https://github.com/arrayfire/arrayfire/issues/766">Fixes for compilation</a> on Visual Studio 2015</li>
<li>Option to use <a href="https://github.com/arrayfire/arrayfire/pull/1053">fallback to CPU LAPACK</a> for linear algebra functions in case of CUDA 6.5 or older versions.</li>
</ul>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/1096">memory leak</a> in <a class="el" href="group__cv__func__susan.htm#ga409460e2cee9f7df388aa5cffd98419f">susan()</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/commit/144a2db">failing test</a> in <a class="el" href="group__data__func__lower.htm#ga3217e07693fdd099fc9acc9065e0a66e">lower()</a> and <a class="el" href="group__data__func__upper.htm#ga724c96cef1c7ae0e9e6ce8ba33ac3eaa">upper()</a> for CUDA compute 53</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1092">bug</a> in CUDA for indexing out of bounds</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/commit/6975da8">dims check</a> in <a class="el" href="group__data__func__iota.htm#ga8f7c55a54d1f93e55340f59b61662f29">iota()</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/commit/7fc3856">out-of-bounds access</a> in <a class="el" href="group__cv__func__sift.htm#ga0a0eb54eea99248c9e8c3983c9765a11">sift()</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/commit/5e88e4a">memory allocation</a> in <a class="el" href="group__cv__func__fast.htm#ga5d7fdd9aa86cfce28efd828569e5b7da">fast()</a> OpenCL</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/994">memory leak</a> in image I/O functions</li>
<li><a class="el" href="group__cv__func__dog.htm#gad88909b00e2ad8fe1c4e7da62f3b67b6">dog()</a> now returns float-point type arrays</li>
</ul>
<h2>Documentation Updates </h2>
<ul>
<li>Improved tutorials documentation<ul>
<li>More detailed Using on <a class="el" href="using_on_linux.htm">Linux</a>, <a class="el" href="using_on_osx.htm">OSX</a>, <a class="el" href="using_on_windows.htm">Windows</a> pages.</li>
</ul>
</li>
<li>Added return type information for functions that return different type arrays</li>
</ul>
<h2>New Examples </h2>
<ul>
<li>Graphics<ul>
<li><a class="el" href="graphics_2plot3_8cpp-example.htm">Plot3</a></li>
<li><a class="el" href="graphics_2surface_8cpp-example.htm">Surface</a></li>
</ul>
</li>
<li><a class="el" href="pde_2swe_8cpp-example.htm">Shallow Water Equation</a></li>
<li><a class="el" href="unified_2basic_8cpp-example.htm">Basic</a> as a Unified backend example</li>
</ul>
<h2>Installers </h2>
<ul>
<li>All installers now include the Unified backend and corresponding CMake files</li>
<li>Visual Studio projects include Unified in the Platform Configurations</li>
<li>Added installer for Jetson TX1</li>
<li>SIFT and GLOH do not ship with the installers as SIFT is protected by patents that do not allow commercial distribution without licensing.</li>
</ul>
<h1>v3.1.3 </h1>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1042">bugs</a> in various OpenCL kernels without offset additions</li>
<li>Remove ARCH_32 and ARCH_64 flags</li>
<li>Fix <a href="https://github.com/arrayfire/arrayfire/issues/1040">missing symbols</a> when freeimage is not found</li>
<li>Use CUDA driver version for Windows</li>
<li>Improvements to SIFT</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1045">memory leak</a> in median</li>
<li>Fixes for Windows compilation when not using MKL <a href="https://github.com/arrayfire/arrayfire/issues/1047">#1047</a></li>
<li>Fixed for building without LAPACK</li>
</ul>
<h2>Other </h2>
<ul>
<li>Documentation: Fixed documentation for select and replace</li>
<li>Documentation: Fixed documentation for af_isnan</li>
</ul>
<h1>v3.1.2 </h1>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/commit/4698f12">bug</a> in assign that was causing test to fail</li>
<li>Fixed bug in convolve. Frequency condition now depends on kernel size only</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1005">bug</a> in indexed reductions for complex type in OpenCL backend</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1006">bug</a> in kernel name generation in ireduce for OpenCL backend</li>
<li>Fixed non-linear to linear indices in ireduce</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1011">bug</a> in reductions for small arrays</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1010">bug</a> in histogram for indexed arrays</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1015">compiler error</a> CPUID for non-compliant devices</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1008">failing tests</a> on i386 platforms</li>
<li>Add missing AFAPI</li>
</ul>
<h2>Other </h2>
<ul>
<li>Documentation: Added missing examples and other corrections</li>
<li>Documentation: Fixed warnings in documentation building</li>
<li>Installers: Send error messages to log file in OSX Installer</li>
</ul>
<h1>v3.1.1 </h1>
<h2>Installers </h2>
<ul>
<li>CUDA backend now depends on CUDA 7.5 toolkit</li>
<li>OpenCL backend now require OpenCL 1.2 or greater</li>
</ul>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/981">bug</a> in reductions after indexing</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/976">bug</a> in indexing when using reverse indices</li>
</ul>
<h2>Build </h2>
<ul>
<li><code>cmake</code> now includes <code>PKG_CONFIG</code> in the search path for CBLAS and LAPACKE libraries</li>
<li><a class="el" href="financial_2heston_model_8cpp-example.htm">heston_model.cpp</a> example now builds with the default ArrayFire cmake files after installation</li>
</ul>
<h2>Other </h2>
<ul>
<li>Fixed bug in <a class="el" href="image_processing_2image_editing_8cpp-example.htm">image_editing.cpp</a></li>
</ul>
<h1>v3.1.0 </h1>
<h2>Function Additions </h2>
<ul>
<li>Computer Vision Functions<ul>
<li><a class="el" href="group__cv__func__nearest__neighbour.htm#ga8839ead81cbcd6b433822205713bfe79">nearestNeighbour()</a> - Nearest Neighbour with SAD, SSD and SHD distances</li>
<li><a class="el" href="group__cv__func__harris.htm#ga21429404b11dc3bf6324c111901cc1c7">harris()</a> - Harris Corner Detector</li>
<li><a class="el" href="group__cv__func__susan.htm#ga409460e2cee9f7df388aa5cffd98419f">susan()</a> - Susan Corner Detector</li>
<li><a class="el" href="group__cv__func__sift.htm#ga0a0eb54eea99248c9e8c3983c9765a11">sift()</a> - Scale Invariant Feature Transform (SIFT)<ul>
<li>Method and apparatus for identifying scale invariant features"
          "in an image and use of same for locating an object in an image," David"
          "G. Lowe, US Patent 6,711,293 (March 23, 2004). Provisional application"
          "filed March 8, 1999. Asignee: The University of British Columbia. For"
          "further details, contact David Lowe (<a href="#" onclick="location.href='mai'+'lto:'+'low'+'e@'+'cs.'+'ub'+'c.c'+'a'; return false;">lowe@<span style="display: none;">.nosp@m.</span>cs.u<span style="display: none;">.nosp@m.</span>bc.ca</a>) or the"
          "University-Industry Liaison Office of the University of British"
          "Columbia.")</li>
<li>SIFT is available for compiling but does not ship with ArrayFire hosted installers/pre-built libraries</li>
</ul>
</li>
<li><a class="el" href="group__cv__func__dog.htm#gad88909b00e2ad8fe1c4e7da62f3b67b6">dog()</a> - Difference of Gaussians</li>
</ul>
</li>
<li>Image Processing Functions<ul>
<li><a class="el" href="group__image__func__ycbcr2rgb.htm#gaa2fee1bce8855e7072a306ed75636d84">ycbcr2rgb()</a> and <a class="el" href="group__image__func__rgb2ycbcr.htm#ga4f0faf8297515d78ce3050c0405ff689">rgb2ycbcr()</a> - RGB &lt;-&gt;YCbCr color space conversion</li>
<li><a class="el" href="group__image__func__wrap.htm#ga06a40cc4907e646437d7729823a8054d">wrap()</a> and <a class="el" href="group__image__func__unwrap.htm#gabd48af39af6bb17efb70747cc132ad60">unwrap()</a> Wrap and Unwrap</li>
<li><a class="el" href="group__image__func__sat.htm#ga9bf5c159ddb82689b454f686a7549f22">sat()</a> - Summed Area Tables</li>
<li><a class="el" href="group__imagemem__func__load.htm#ga7b5c4ca71bcd2605eabfc99c8d8c4255">loadImageMem()</a> and <a class="el" href="group__imagemem__func__save.htm#ga91c1530357e06794121de654ac926773">saveImageMem()</a> - Load and Save images to/from memory<ul>
<li><a class="el" href="defines_8h.htm#a46734de80dcc107a0732d8ec7c977d6f">af_image_format</a> - Added imageFormat (af_image_format) enum</li>
</ul>
</li>
</ul>
</li>
<li>Array &amp; Data Handling<ul>
<li><a class="el" href="group__index__func__index.htm#ga25f470817062b23ad3f74347ea44b17c">copy()</a> - Copy</li>
<li>array::lock() and array::unlock() - Lock and Unlock</li>
<li><a class="el" href="group__data__func__select.htm#ga43cfc7e96eb2e8ee019820aaa6aa15a8">select()</a> and <a class="el" href="group__data__func__replace.htm#ga13a51c418de0201102413f05aae45ccd">replace()</a> - Select and Replace</li>
<li>Get array reference count (af_get_data_ref_count)</li>
</ul>
</li>
<li>Signal Processing<ul>
<li><a class="el" href="group__signal__func__fft.htm#ga7d171d51c68b8280a0219ab42170f46d">fftInPlace()</a> - 1D in place FFT</li>
<li><a class="el" href="group__signal__func__fft2.htm#gaec63a9c53a998da227197d206f2608b1">fft2InPlace()</a> - 2D in place FFT</li>
<li><a class="el" href="group__signal__func__fft3.htm#gab170f1ee7198643436c50b782c9fb312">fft3InPlace()</a> - 3D in place FFT</li>
<li><a class="el" href="group__signal__func__ifft.htm#ga5cee5baba1961e509d4235dcd80c4073">ifftInPlace()</a> - 1D in place Inverse FFT</li>
<li><a class="el" href="group__signal__func__ifft2.htm#gab43fda5cc7981bd91f089731f634ec51">ifft2InPlace()</a> - 2D in place Inverse FFT</li>
<li><a class="el" href="group__signal__func__ifft3.htm#ga133593d11131b304a3692048355f78e7">ifft3InPlace()</a> - 3D in place Inverse FFT</li>
<li><a class="el" href="group__signal__func__fft__r2c.htm#gaecfef8da267bdc9bddb802badf0d1da3">fftR2C()</a> - Real to complex FFT</li>
<li><a class="el" href="group__signal__func__fft__c2r.htm#ga01fa22566a246623a7378960e4ac06a3">fftC2R()</a> - Complex to Real FFT</li>
</ul>
</li>
<li>Linear Algebra<ul>
<li><a class="el" href="group__lapack__factor__func__svd.htm#gab016ef45fce266ab9545054bea1cb6b7">svd()</a> and <a class="el" href="group__lapack__factor__func__svd.htm#gaab551c4f09090010669e3906988ac8a1">svdInPlace()</a> - Singular Value Decomposition</li>
</ul>
</li>
<li>Other operations<ul>
<li><a class="el" href="namespaceaf.htm#a83c8f1181fc87c30d649f3f1eb26a860">sigmoid()</a> - Sigmoid</li>
<li>Sum (with option to replace NaN values)</li>
<li>Product (with option to replace NaN values)</li>
</ul>
</li>
<li>Graphics<ul>
<li>Window::setSize() - Window resizing using Forge API</li>
</ul>
</li>
<li>Utility<ul>
<li>Allow users to set print precision (print, af_print_array_gen)</li>
<li><a class="el" href="group__stream__func__save.htm#gaf0d3dfb49f4f2aaac7a46222817ed48f">saveArray()</a> and <a class="el" href="group__stream__func__read.htm#gaf78aa8f367fbd6f408e90f0851e0557a">readArray()</a> - Stream arrays to binary files</li>
<li><a class="el" href="group__print__func__tostring.htm#gac268e4935efa88b80d1be6ccaa6a9093">toString()</a> - toString function returns the array and data as a string</li>
</ul>
</li>
<li>CUDA specific functionality<ul>
<li><a class="el" href="group__cuda__mat.htm#gaec1dc4c2aa935dc61889f23248c8450d">getStream()</a> - Returns default CUDA stream ArrayFire uses for the current device</li>
<li><a class="el" href="group__cuda__mat.htm#ga59b163ea391ea856a25693e2567b0ce5">getNativeId()</a> - Returns native id of the CUDA device</li>
</ul>
</li>
</ul>
<h2>Improvements </h2>
<ul>
<li>dot<ul>
<li>Allow complex inputs with conjugate option</li>
</ul>
</li>
<li>AF_INTERP_LOWER interpolation<ul>
<li>For resize, rotate and transform based functions</li>
</ul>
</li>
<li>64-bit integer support<ul>
<li>For reductions, random, iota, range, diff1, diff2, accum, join, shift and tile</li>
</ul>
</li>
<li>convolve<ul>
<li>Support for non-overlapping batched convolutions</li>
</ul>
</li>
<li>Complex Arrays<ul>
<li>Fix binary ops on complex inputs of mixed types</li>
<li>Complex type support for exp</li>
</ul>
</li>
<li>tile<ul>
<li>Performance improvements by using JIT when possible.</li>
</ul>
</li>
<li>Add AF_API_VERSION macro<ul>
<li>Allows disabling of API to maintain consistency with previous versions</li>
</ul>
</li>
<li>Other Performance Improvements<ul>
<li>Use reference counting to reduce unnecessary copies</li>
</ul>
</li>
<li>CPU Backend<ul>
<li>Device properties for CPU</li>
<li>Improved performance when all buffers are indexed linearly</li>
</ul>
</li>
<li>CUDA Backend<ul>
<li>Use streams in CUDA (no longer using default stream)</li>
<li>Using async cudaMem ops</li>
<li>Add 64-bit integer support for JIT functions</li>
<li>Performance improvements for CUDA JIT for non-linear 3D and 4D arrays</li>
</ul>
</li>
<li>OpenCL Backend<ul>
<li>Improve compilation times for OpenCL backend</li>
<li>Performance improvements for non-linear JIT kernels on OpenCL</li>
<li>Improved shared memory load/store in many OpenCL kernels (PR 933)</li>
<li>Using cl.hpp v1.2.7</li>
</ul>
</li>
</ul>
<h2>Bug Fixes </h2>
<ul>
<li>Common<ul>
<li>Fix compatibility of c32/c64 arrays when operating with scalars</li>
<li>Fix median for all values of an array</li>
<li>Fix double free issue when indexing (30cbbc7)</li>
<li>Fix <a href="https://github.com/arrayfire/arrayfire/issues/901">bug</a> in rank</li>
<li>Fix default values for scale throwing exception</li>
<li>Fix conjg raising exception on real input</li>
<li>Fix bug when using conjugate transpose for vector input</li>
<li>Fix issue with const input for array_proxy::get()</li>
</ul>
</li>
<li>CPU Backend<ul>
<li>Fix randn generating same sequence for multiple calls</li>
<li>Fix setSeed for randu</li>
<li>Fix casting to and from complex</li>
<li>Check NULL values when allocating memory</li>
<li>Fix <a href="https://github.com/arrayfire/arrayfire/issues/923">offset issue</a> for CPU element-wise operations</li>
</ul>
</li>
</ul>
<h2>New Examples </h2>
<ul>
<li>Match Template</li>
<li>Susan</li>
<li>Heston Model (contributed by Michael Nowotny)</li>
</ul>
<h2>Installer </h2>
<ul>
<li>Fixed bug in automatic detection of ArrayFire when using with CMake in Windows</li>
<li>The Linux libraries are now compiled with static version of FreeImage</li>
</ul>
<h2>Known Issues </h2>
<ul>
<li>OpenBlas can cause issues with QR factorization in CPU backend</li>
<li>FreeImage older than 3.10 can cause issues with loadImageMem and saveImageMem</li>
<li>OpenCL backend issues on OSX<ul>
<li>AMD GPUs not supported because of driver issues</li>
<li>Intel CPUs not supported</li>
<li>Linear algebra functions do not work on Intel GPUs.</li>
</ul>
</li>
<li>Stability and correctness issues with open source OpenCL implementations such as Beignet, GalliumCompute.</li>
</ul>
<h1>v3.0.2 </h1>
<h2>Bug Fixes </h2>
<ul>
<li>Added missing symbols from the compatible API</li>
<li>Fixed a bug affecting corner rows and elements in <a class="el" href="group__calc__func__grad.htm#ga3be29ad2f4958dcc01f9135da52753f8">grad()</a></li>
<li>Fixed linear interpolation bugs affecting large images in the following:<ul>
<li><a class="el" href="group__signal__func__approx1.htm#ga18117f73cee98f0859f8439607f7f962">approx1()</a></li>
<li><a class="el" href="group__signal__func__approx2.htm#gad6a825755f97f59536faab99ed6e0c2d">approx2()</a></li>
<li><a class="el" href="group__transform__func__resize.htm#ga017b9370e3e287693519de5b59fcc8ff">resize()</a></li>
<li><a class="el" href="group__transform__func__rotate.htm#ga6555d91c01571c362ebd3bace76d21ea">rotate()</a></li>
<li><a class="el" href="group__transform__func__scale.htm#ga60a399365ffc65ab2ffde4052903a4b3">scale()</a></li>
<li><a class="el" href="group__transform__func__skew.htm#ga89a39e12b8c619e33de409d4a9a787f6">skew()</a></li>
<li><a class="el" href="group__transform__func__transform.htm#ga3677c5a534ca50a9c8a2611fe0728fd8">transform()</a></li>
</ul>
</li>
</ul>
<h2>Documentation </h2>
<ul>
<li>Added missing documentation for <a class="el" href="group__data__func__constant.htm#ga3c58da8ca31ae6c871379aeb587b8b0d">constant()</a></li>
<li>Added missing documentation for <code>array::scalar()</code></li>
<li>Added supported input types for functions in <code><a class="el" href="arith_8h.htm">arith.h</a></code></li>
</ul>
<h1>v3.0.1 </h1>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed header to work in Visual Studio 2015</li>
<li>Fixed a bug in batched mode for FFT based convolutions</li>
<li>Fixed graphics issues on OSX</li>
<li>Fixed various bugs in visualization functions</li>
</ul>
<h2>Other improvements </h2>
<ul>
<li>Improved fractal example</li>
<li>New OSX installer</li>
<li>Improved Windows installer<ul>
<li>Default install path has been changed</li>
</ul>
</li>
<li>Fixed bug in machine learning examples</li>
</ul>
<p><br />
</p>
<h1>v3.0.0 </h1>
<h2>Major Updates </h2>
<ul>
<li>ArrayFire is now open source</li>
<li>Major changes to the visualization library</li>
<li>Introducing handle based C API</li>
<li>New backend: CPU fallback available for systems without GPUs</li>
<li>Dense linear algebra functions available for all backends</li>
<li>Support for 64 bit integers</li>
</ul>
<h2>Function Additions </h2>
<ul>
<li>Data generation functions<ul>
<li><a class="el" href="group__data__func__range.htm#ga3789475e962b4c31e07c1c3bdab8498b">range()</a></li>
<li><a class="el" href="group__data__func__iota.htm#ga8f7c55a54d1f93e55340f59b61662f29">iota()</a></li>
</ul>
</li>
<li>Computer Vision Algorithms<ul>
<li>features()<ul>
<li>A data structure to hold features</li>
</ul>
</li>
<li><a class="el" href="group__cv__func__fast.htm#ga5d7fdd9aa86cfce28efd828569e5b7da" title="C++ Interface for FAST feature detector. ">fast()</a><ul>
<li>FAST feature detector</li>
</ul>
</li>
<li><a class="el" href="group__cv__func__orb.htm#ga174060bf74dfc2fce8db125d0d6b036d" title="C++ Interface for ORB feature descriptor. ">orb()</a><ul>
<li>ORB A feature descriptor extractor</li>
</ul>
</li>
</ul>
</li>
<li>Image Processing<ul>
<li><a class="el" href="group__signal__func__convolve1.htm#ga72a117436a82ed5fe593fe7072c01968" title="C++ Interface for convolution on one dimensional signals. ">convolve1()</a>, <a class="el" href="group__signal__func__convolve2.htm#ga0aec29b4d4c9cf4412420b91c96ffe6c" title="C++ Interface for convolution on two dimensional signals. ">convolve2()</a>, <a class="el" href="group__signal__func__convolve3.htm#ga612982eb8719085e327ca764e4f728d6" title="C++ Interface for convolution on three dimensional signals. ">convolve3()</a><ul>
<li>Specialized versions of <a class="el" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9" title="C++ Interface for convolution any(one through three) dimensional signals. ">convolve()</a> to enable better batch support</li>
</ul>
</li>
<li>fftconvolve1(), fftconvolve2(), fftconvolve3()<ul>
<li>Convolutions in frequency domain to support larger kernel sizes</li>
</ul>
</li>
<li><a class="el" href="group__signal__func__fft.htm#ga6e082e788e1085ae5e39794ddade9913" title="C++ Interface for fast fourier transform on any(1d, 2d, 3d) dimensional signals. ">dft()</a>, <a class="el" href="group__signal__func__fft.htm#ga9e03a61224c7b9d217b0099ce1d5be3a" title="C++ Interface for inverse fast fourier transform on any(1d, 2d, 3d) dimensional signals. ">idft()</a><ul>
<li>Unified functions for calling multi dimensional ffts.</li>
</ul>
</li>
<li><a class="el" href="group__cv__func__match__template.htm#ga1877e7a99d609e27a878c51d9a48ba8f" title="C++ Interface for image template matching. ">matchTemplate()</a><ul>
<li>Match a kernel in an image</li>
</ul>
</li>
<li><a class="el" href="group__image__func__sobel.htm#ga6c098aec0c9768f8264a95eb00deda3a" title="C++ Interface for extracting sobel gradients. ">sobel()</a><ul>
<li>Get sobel gradients of an image</li>
</ul>
</li>
<li><a class="el" href="group__image__func__rgb2hsv.htm#gaef09b6891d44dfaaf2389ae05e722d0e" title="C++ Interface for converting RGB to HSV. ">rgb2hsv()</a>, <a class="el" href="group__image__func__hsv2rgb.htm#gaad07af8a0414ebad470796f1775ecadc" title="C++ Interface for converting HSV to RGB. ">hsv2rgb()</a>, <a class="el" href="group__image__func__rgb2gray.htm#ga8a4d6c8e00646611caa7194a65769eda" title="C++ Interface for RGB to gray conversion. ">rgb2gray()</a>, <a class="el" href="group__image__func__gray2rgb.htm#ga7d39aa4eb8c126a5f4b5d66c7147f131" title="C++ Interface for gray to RGB conversion. ">gray2rgb()</a><ul>
<li>Explicit function calls to colorspace conversions</li>
</ul>
</li>
<li>erode3d(), dilate3d()<ul>
<li>Explicit erode and dilate calls for image morphing</li>
</ul>
</li>
</ul>
</li>
<li>Linear Algebra<ul>
<li><a class="el" href="group__blas__func__matmul.htm#gadf90230a67ea7a0b4697511dd978b9c7" title="Matrix multiply of two arrays. ">matmulNT()</a>, <a class="el" href="group__blas__func__matmul.htm#ga6655d7913b35d7e59f7c8560a5368fbc" title="Matrix multiply of two arrays. ">matmulTN()</a>, <a class="el" href="group__blas__func__matmul.htm#ga7f3e5a6f282ea2c2c32886c95694bb88" title="Matrix multiply of two arrays. ">matmulTT()</a><ul>
<li>Specialized versions of <a class="el" href="group__blas__func__matmul.htm#ga63306b6ed967bd1055086db862fe885b" title="Matrix multiply of two arrays. ">matmul()</a> for transposed inputs</li>
</ul>
</li>
<li><a class="el" href="group__lapack__factor__func__lu.htm#gae42d8e18ff303b659fda897409bc5702" title="C++ Interface for in place LU decomposition. ">luInPlace()</a>, <a class="el" href="group__lapack__factor__func__cholesky.htm#gac1d4ac4de57dea4841cb11c5e6865792" title="C++ Interface for in place cholesky decomposition. ">choleskyInPlace()</a>, <a class="el" href="group__lapack__factor__func__qr.htm#gaea212c00a2f241d64c0aa73d9b78e158" title="C++ Interface for QR decomposition. ">qrInPlace()</a><ul>
<li>In place factorizations to improve memory requirements</li>
</ul>
</li>
<li><a class="el" href="group__lapack__solve__lu__func__gen.htm#gafb8e3d9894bfe9ef0d21380212637250" title="C++ Interface for solving a system of equations. ">solveLU()</a><ul>
<li>Specialized solve routines to improve performance</li>
</ul>
</li>
<li>OpenCL backend now Linear Algebra functions</li>
</ul>
</li>
<li>Other functions<ul>
<li><a class="el" href="group__index__func__index.htm#gac7bb6cefab347540526b1ac2584d006e" title="Lookup the values of input array based on index. ">lookup()</a> - lookup indices from a table</li>
<li><a class="el" href="namespaceaf.htm#aa0eb9e160f5be4b95234543e5c47934b">batchFunc()</a> - helper function to perform batch operations</li>
</ul>
</li>
<li>Visualization functions<ul>
<li>Support for multiple windows</li>
<li>window.hist()<ul>
<li>Visualize the output of the histogram</li>
</ul>
</li>
</ul>
</li>
<li>C API<ul>
<li>Removed old pointer based C API</li>
<li>Introducing handle base C API</li>
<li>Just In Time compilation available in C API</li>
<li>C API has feature parity with C++ API</li>
<li>bessel functions removed</li>
<li>cross product functions removed</li>
<li>Kronecker product functions removed</li>
</ul>
</li>
</ul>
<h2>Performance Improvements </h2>
<ul>
<li>Improvements across the board for OpenCL backend</li>
</ul>
<h2>API Changes </h2>
<ul>
<li><code>print</code> is now <a class="el" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print()</a></li>
<li>seq(): The step parameter is now the third input<ul>
<li>seq(start, step, end) changed to seq(start, end, step)</li>
</ul>
</li>
<li><a class="el" href="gfor_8h.htm#a6d6cd11d53daad217fd0b92f5a7ceec6">gfor()</a>: The iterator now needs to be seq()</li>
</ul>
<h2>Deprecated Function APIs </h2>
<p>Deprecated APIs are in <a class="el" href="compatible_8h.htm">af/compatible.h</a></p>
<ul>
<li><a class="el" href="group__device__func__count.htm#gab45892c9c9c04c16de267daa44c8700e" title="Gets the number of devices. ">devicecount()</a> changed to <a class="el" href="group__device__func__count.htm#gac3c8750da69ee883fd14c0a8290e45f1" title="Gets the number of devices. ">getDeviceCount()</a></li>
<li><a class="el" href="group__device__func__set.htm#ga1cab0f8de2817b155b77fcf29238dbc7" title="Sets the current device. ">deviceset()</a> changed to <a class="el" href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7" title="Sets the current device. ">setDevice()</a></li>
<li><a class="el" href="group__device__func__get.htm#gab11c53af3ef51c39da455ed024de97b5" title="Gets the current device ID. ">deviceget()</a> changed to <a class="el" href="group__device__func__get.htm#ga4dfe3f90475b735384f8b28cf2b19a11" title="Gets the current device ID. ">getDevice()</a></li>
<li><a class="el" href="group__imageio__func__load.htm#ga188e0daa67545fea545fc7bc3feea875" title="C++ Interface for loading an image. ">loadimage()</a> changed to <a class="el" href="group__imageio__func__load.htm#ga8bcf01ffa60bc513856d98b8a63bb12a" title="C++ Interface for loading an image. ">loadImage()</a></li>
<li><a class="el" href="group__imageio__func__save.htm#ga2b0f060d7fb7bc4ca397f4ca82190fb2" title="C++ Interface for saving an image. ">saveimage()</a> changed to <a class="el" href="group__imageio__func__save.htm#gae2e1e9354b0d29c4749ac368efd78b19" title="C++ Interface for saving an image. ">saveImage()</a></li>
<li><a class="el" href="group__image__func__gauss.htm#ga340e55dad18edc59e9387dcf99d5ab78" title="Creates a Gaussian Kernel. ">gaussiankernel()</a> changed to <a class="el" href="group__image__func__gauss.htm#gaa5de1866bc1bf50bf5fe3cb26d4e410d" title="C++ Interface for generating gausian kernels. ">gaussianKernel()</a></li>
<li><a class="el" href="group__reduce__func__all__true.htm#gac53f164f6bb650ba54a64e27a41e3b19" title="C++ Interface for checking if all values in an array are true. ">alltrue()</a> changed to <a class="el" href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b" title="C++ Interface for checking all true values in an array. ">allTrue()</a></li>
<li><a class="el" href="group__reduce__func__any__true.htm#gaf7184d594b1b6af7bdd01322cc795a4a" title="C++ Interface for checking if all values in an array are true. ">anytrue()</a> changed to <a class="el" href="group__reduce__func__any__true.htm#gafe4c8f22bbfa4288696f2a133b1b619e" title="C++ Interface for checking any true values in an array. ">anyTrue()</a></li>
<li><a class="el" href="group__set__func__unique.htm#gac33fd89ba6a7582753232c007ff135bf" title="C++ Interface for getting unique values. ">setunique()</a> changed to <a class="el" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6" title="C++ Interface for getting unique values. ">setUnique()</a></li>
<li><a class="el" href="group__set__func__union.htm#ga91f6dd436ea57421a689ddc27ca3fd47" title="C++ Interface for performing union of two arrays. ">setunion()</a> changed to <a class="el" href="group__set__func__union.htm#gaa793c080cfa2c5ed7f422479e8e0bfe3" title="C++ Interface for performing union of two arrays. ">setUnion()</a></li>
<li><a class="el" href="group__set__func__intersect.htm#ga367d3f862af46bc86ef5e08f7a29f104" title="C++ Interface for performing intersect of two arrays. ">setintersect()</a> changed to <a class="el" href="group__set__func__intersect.htm#gae4549aee29c563edfb0b4a444fbf9200" title="C++ Interface for performing intersect of two arrays. ">setIntersect()</a></li>
<li><a class="el" href="group__image__func__histequal.htm#gae1c0d4f649c35fa3a9d2e2d9e21c318c" title="C++ Interface for histogram equalization. ">histequal()</a> changed to <a class="el" href="group__image__func__histequal.htm#ga0c09893b2ba7a63663a1893bc5d87e47" title="C++ Interface for histogram equalization. ">histEqual()</a></li>
<li><a class="el" href="group__image__func__colorspace.htm#gac2f08cedb760f97f069b4ccbb6d48ea8" title="C++ Interface wrapper for colorspace conversion. ">colorspace()</a> changed to <a class="el" href="group__image__func__colorspace.htm#ga9dabba47b9390faacf8fb146605339b0" title="C++ Interface wrapper for colorspace conversion. ">colorSpace()</a></li>
<li><a class="el" href="namespaceaf.htm#a53c4f9a4b5440458bffe355803514c90" title="Image Filtering. ">filter()</a> deprecated. Use <a class="el" href="group__signal__func__convolve1.htm#ga72a117436a82ed5fe593fe7072c01968" title="C++ Interface for convolution on one dimensional signals. ">convolve1()</a> and <a class="el" href="group__signal__func__convolve2.htm#ga0aec29b4d4c9cf4412420b91c96ffe6c" title="C++ Interface for convolution on two dimensional signals. ">convolve2()</a></li>
<li><a class="el" href="group__reduce__func__product.htm#ga34aef3ce04c7d24da8a55655d9ea2e23" title="C++ Interface for product of elements in an array. ">mul()</a> changed to <a class="el" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3" title="C++ Interface for product of elements in an array. ">product()</a></li>
<li><a class="el" href="group__device__func__prop.htm#ga93d4e3752f68699295e351888559dcf5" title="Gets the information about device and platform as strings. ">deviceprop()</a> changed to deviceProp()</li>
</ul>
<h2>Known Issues </h2>
<ul>
<li>OpenCL backend issues on OSX<ul>
<li>AMD GPUs not supported because of driver issues</li>
<li>Intel CPUs not supported</li>
<li>Linear algebra functions do not work on Intel GPUs.</li>
</ul>
</li>
<li>Stability and correctness issues with open source OpenCL implementations such as Beignet, GalliumCompute. </li>
</ul>
</div></div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
