<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>Release Notes</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('releasenotes.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">Release Notes </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><h1>v3.2.2 </h1>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/1145">memory leak</a> in CUDA Random number generators</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1157">bug</a> in <a class="el" href="group__data__func__select.htm#ga43cfc7e96eb2e8ee019820aaa6aa15a8">af::select()</a> and <a class="el" href="group__data__func__replace.htm#ga13a51c418de0201102413f05aae45ccd">af::replace()</a> tests</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1164">exception</a> thrown when printing empty arrays with <a class="el" href="group__print__func__print.htm#ga66791369fe71d867943da676a15afe3a">af::print()</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1170">bug</a> in CPU random number generation. Changed the generator to <a href="http://en.cppreference.com/w/cpp/numeric/random">mt19937</a></li>
<li>Fixed exception handling (internal)<ul>
<li><a href="https://github.com/arrayfire/arrayfire/issues/1188">Exceptions</a> now show function, short file name and line number</li>
<li>Added <a href="https://github.com/arrayfire/arrayfire/issues/1186">AF_RETURN_ERROR</a> macro to handle returning errors.</li>
<li>Removed THROW macro, and renamed AF_THROW_MSG to AF_THROW_ERR.</li>
</ul>
</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/commit/9459c6">bug</a> in <a class="el" href="group__data__func__identity.htm#gafd8247e22fdb50218926d5d9391fa678">af::identity()</a> that may have affected CUDA Compute 5.2 cards</li>
</ul>
<h2>Build </h2>
<ul>
<li>Added a <a href="https://github.com/arrayfire/arrayfire/issues/1193">MIN_BUILD_TIME</a> option to build with minimum optimization compiler flags resulting in faster compile times</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1143">issue</a> in CBLAS detection by CMake</li>
<li>Fixed tests failing for builds without optional components <a href="https://github.com/arrayfire/arrayfire/issues/1143">FreeImage</a> and <a href="https://github.com/arrayfire/arrayfire/issues/1167">LAPACK</a></li>
<li>Added a <a href="https://github.com/arrayfire/arrayfire/issues/1192">test</a> for unified backend</li>
<li>Only <a href="https://github.com/arrayfire/arrayfire/issues/1192">info and backend tests</a> are now built for unified backend</li>
<li><a href="https://github.com/arrayfire/arrayfire/issues/1199">Sort tests</a> execution alphabetically</li>
<li>Fixed compilation flags and errors in tests and examples</li>
<li><a href="https://github.com/arrayfire/arrayfire/commit/2287c5">Moved AF_REVISION and AF_COMPILER_STR</a> into src/backend. This is because as revision is updated with every commit, entire ArrayFire would have to be rebuilt in the old code.<ul>
<li>v3.3 will add a af_get_revision() function to get the revision string.</li>
</ul>
</li>
<li><a href="https://github.com/arrayfire/arrayfire/pull/1158">Clean up examples</a><ul>
<li>Remove getchar for Windows (this will be handled by the installer)</li>
<li>Other miscellaneous code cleanup</li>
<li>Fixed bug in <a class="el" href="graphics_2plot3_8cpp-example.htm">plot3.cpp</a> example</li>
</ul>
</li>
<li><a href="https://github.com/arrayfire/arrayfire/commit/35f0fc2">Rename</a> clBLAS/clFFT external project suffix from external -&gt; ext</li>
<li><a href="https://github.com/arrayfire/arrayfire/pull/1197">Add OpenBLAS</a> as a lapack/lapacke alternative</li>
</ul>
<h2>Improvements </h2>
<ul>
<li>Added <a class="el" href="macros_8h.htm#af5e9c364379ead9f305de7ddd1bba87e">AF_MEM_INFO</a> macro to print memory info from ArrayFire's memory manager (<a href="https://github.com/arrayfire/arrayfire/issues/1172">cross issue</a>)</li>
<li>Added <a href="https://github.com/arrayfire/arrayfire/issues/1184">additional paths</a> for searching for <code>libaf*</code> for Unified backend on unix-style OS.<ul>
<li>Note: This still requires dependencies such as forge, CUDA, NVVM etc to be in <code>LD_LIBRARY_PATH</code> as described in <a class="el" href="unifiedbackend.htm">Unified Backend</a></li>
</ul>
</li>
<li><a href="https://github.com/arrayfire/arrayfire/commit/ed0373f">Create streams</a> for devices only when required in CUDA Backend</li>
</ul>
<h2>Documentation </h2>
<ul>
<li><a href="https://github.com/arrayfire/arrayfire/commit/9d218a5">Hide scrollbars</a> appearing for pre and code styles</li>
<li>Fix <a href="https://github.com/arrayfire/arrayfire/commit/ac09f91">documentation</a> for <a class="el" href="group__data__func__replace.htm#ga13a51c418de0201102413f05aae45ccd">af::replace</a></li>
<li>Add <a href="https://github.com/arrayfire/arrayfire/commit/4e06483">code sample</a> for converting the output of <a class="el" href="group__unified__func__getavailbackends.htm#ga32fc807a8d4680987a915362573c1a2c">af::getAvailableBackends()</a> into bools</li>
<li>Minor fixes in documentation</li>
</ul>
<h1>v3.2.1 </h1>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/1136">bug</a> in <a class="el" href="group__cv__func__homography.htm#ga47d0b44239fc6e59575a165a752c9329" title="C++ Interface for Homography estimation. ">homography()</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1135">bug</a> in behavior of <a class="el" href="group__device__func__device.htm#ga93c855ccd22d37cf90d32aef5ac75030">af::array::device()</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1129">bug</a> when indexing with span along trailing dimension</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1127">bug</a> when indexing in <a class="el" href="page_gfor.htm#gfor">GFor</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1122">bug</a> in CPU information fetching</li>
<li>Fixed compilation <a href="https://github.com/arrayfire/arrayfire/issues/1117">bug</a> in unified backend caused by missing link library</li>
<li>Add <a href="https://github.com/arrayfire/arrayfire/pull/1114">missing symbol</a> for <a class="el" href="group__gfx__func__draw.htm#gaaee14e457272b2cd1bd4ed1228370229" title="C Interface wrapper for drawing arrayis as a surface. ">af_draw_surface()</a></li>
</ul>
<h2>Build </h2>
<ul>
<li>Tests can now be used as a <a href="https://github.com/arrayfire/arrayfire/pull/1120">standalone project</a><ul>
<li>Tests can now be built using pre-compiled libraries</li>
<li>Similar to how the examples are built</li>
</ul>
</li>
<li>The install target now installs the examples source irrespective of the BUILD_EXAMPLES value<ul>
<li>Examples are not built if BUILD_EXAMPLES is off</li>
</ul>
</li>
</ul>
<h2>Documentation </h2>
<ul>
<li>HTML documentation is now <a href="https://github.com/arrayfire/arrayfire/pull/1109">built and installed</a> in docs/html</li>
<li>Added documentation for <a class="el" href="classaf_1_1seq.htm">af::seq</a> class</li>
<li>Updated <a class="el" href="matrixmanipulation.htm">Matrix Manipulation</a> tutorial</li>
<li>Examples list is now generated by CMake<ul>
<li><a href="examples.htm">Examples</a> are now listed as dir/example.cpp</li>
</ul>
</li>
<li>Removed dummy groups used for indexing documentation (affcted doxygen &lt; 1.8.9)</li>
</ul>
<h1>v3.2.0 </h1>
<h2>Major Updates </h2>
<ul>
<li>Added Unified backend<ul>
<li>Allows switching backends at runtime</li>
<li>Read <a class="el" href="unifiedbackend.htm">Unified Backend</a> for more.</li>
</ul>
</li>
<li>Support for 16-bit integers (<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a98085990ff18bf438d3c839ea4c80bb4">s16</a> and <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5ae817c8a85914a5f150f2739df6b76c57">u16</a>)<ul>
<li>All functions that support 32-bit interger types (<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a1bd64190677c261a61c640017dbaddf1">s32</a>, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a05ef7b967bac0eef5d9712a6803b9f1a">u32</a>), now also support 16-bit interger types</li>
</ul>
</li>
</ul>
<h2>Function Additions </h2>
<ul>
<li>Unified Backend<ul>
<li><a class="el" href="group__unified__func__setbackend.htm#ga7e0fad1f134b0421811ee3a4ce47e987">setBackend()</a> - Sets a backend as active</li>
<li><a class="el" href="group__unified__func__getbackendcount.htm#gababf68f4656053dd14028760d5bae165">getBackendCount()</a> - Gets the number of backends available for use</li>
<li><a class="el" href="group__unified__func__getavailbackends.htm#ga32fc807a8d4680987a915362573c1a2c">getAvailableBackends()</a> - Returns information about available backends</li>
<li><a class="el" href="group__unified__func__getbackendid.htm#gad8c046f25b043ce89a25c3fa8b79c898">getBackendId()</a> - Gets the backend enum for an array</li>
</ul>
</li>
<li>Vision<ul>
<li><a class="el" href="group__cv__func__homography.htm#ga47d0b44239fc6e59575a165a752c9329">homography()</a> - Homography estimation</li>
<li><a class="el" href="group__cv__func__sift.htm#ga5b5826848e54066a2b7b73a97b41ba58">gloh()</a> - GLOH Descriptor for SIFT</li>
</ul>
</li>
<li>Image Processing<ul>
<li><a class="el" href="group__imageio__func__load.htm#ga006c246a48ff0a8b707264713890069e">loadImageNative()</a> - Load an image as native data without modification</li>
<li><a class="el" href="group__imageio__func__save.htm#ga069f3a3b77fe83e8e3356569eb8a396d">saveImageNative()</a> - Save an image without modifying data or type</li>
</ul>
</li>
<li>Graphics<ul>
<li><a class="el" href="group__gfx__func__draw.htm#ga8e04ec129034e9fe769f3e6b14cd087f">af::Window::plot3()</a> - 3-dimensional line plot</li>
<li><a class="el" href="group__gfx__func__draw.htm#ga1cdb8c3205d70d8feaddd8c30245393f">af::Window::surface()</a> - 3-dimensional curve plot</li>
</ul>
</li>
<li>Indexing<ul>
<li><a class="el" href="group__index__func__util.htm#ga3e10cf2a97a2880b5872ec658af4169f">af_create_indexers()</a></li>
<li><a class="el" href="group__index__func__util.htm#gae109f51eb0b4fcfcbf5d10c737355f40">af_set_array_indexer()</a></li>
<li><a class="el" href="group__index__func__util.htm#gaec0df3f1ee8624870f6bec55f6ec4bad">af_set_seq_indexer()</a></li>
<li><a class="el" href="group__index__func__util.htm#ga84fa7d63b756329b02d03cc56c65f699">af_set_seq_param_indexer()</a></li>
<li><a class="el" href="group__index__func__util.htm#gac382e89701583a173935262e741d4c7d">af_release_indexers()</a></li>
</ul>
</li>
<li>CUDA Backend Specific<ul>
<li><a class="el" href="group__cuda__mat.htm#ga6178cfc0ae2dbc311e9462d67d0f6c32">setNativeId()</a> - Set the CUDA device with given native id as active<ul>
<li>ArrayFire uses a modified order for devices. The native id for a device can be retreived using <code>nvidia-smi</code></li>
</ul>
</li>
</ul>
</li>
<li>OpenCL Backend Specific<ul>
<li><a class="el" href="group__opencl__mat.htm#ga242cc7dc5dcebc9e695e4fc3faebb91e">setDeviceId()</a> - Set the OpenCL device using the <code>clDeviceId</code></li>
</ul>
</li>
</ul>
<h2>Other Improvements </h2>
<ul>
<li>Added <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a> and <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a> support for <a class="el" href="group__arith__func__isnan.htm#ga4b90a8cd14248f578e509d69a94aa1b1">isNaN()</a>, <a class="el" href="group__arith__func__isinf.htm#ga2addd7560b8192f272c51304e87e5535">isInf()</a> and <a class="el" href="group__arith__func__iszero.htm#ga2ab8f0f1ceac74e3385c08938b7c0c6a">iszero()</a></li>
<li>Added CPU information for <code>x86</code> and <code>x86_64</code> architectures in CPU backend's <a class="el" href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">info()</a></li>
<li>Batch support for <a class="el" href="group__signal__func__approx1.htm#ga18117f73cee98f0859f8439607f7f962">approx1()</a> and <a class="el" href="group__signal__func__approx2.htm#gad6a825755f97f59536faab99ed6e0c2d">approx2()</a><ul>
<li>Now can be used with gfor as well</li>
</ul>
</li>
<li>Added <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a2fb596fb851c71689624894525c069e4">s64</a> and <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a1b18b7885e1360b6696142284b4b4928">u64</a> support to:<ul>
<li><a class="el" href="group__sort__func__sort.htm#ga8d1a62b3e41bfcdeef810a442869b42c">sort()</a> (along with sort index and sort by key)</li>
<li><a class="el" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">setUnique()</a>, <a class="el" href="group__set__func__union.htm#gaa793c080cfa2c5ed7f422479e8e0bfe3">setUnion()</a>, <a class="el" href="group__set__func__intersect.htm#gae4549aee29c563edfb0b4a444fbf9200">setIntersect()</a></li>
<li><a class="el" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve()</a> and <a class="el" href="group__signal__func__fft__convolve.htm#ga711d2440b2d954215a02d90ac8952af8">fftConvolve()</a></li>
<li><a class="el" href="group__image__func__histogram.htm#gafb93ba76739ef18b3698e39c7768c90a">histogram()</a> and <a class="el" href="group__image__func__histequal.htm#ga0c09893b2ba7a63663a1893bc5d87e47">histEqual()</a></li>
<li><a class="el" href="group__index__func__index.htm#gac7bb6cefab347540526b1ac2584d006e">lookup()</a></li>
<li><a class="el" href="group__stat__func__mean.htm#ga551de2061646e8d73aade26a27b53e39">mean()</a></li>
</ul>
</li>
<li>Added <a class="el" href="macros_8h.htm#acdc2d26f4e456a7d46b9fc04ed4c71d8">AF_MSG</a> macro</li>
</ul>
<h2>Build Improvements </h2>
<ul>
<li>Submodules update is now automatically called if not cloned recursively</li>
<li><a href="https://github.com/arrayfire/arrayfire/issues/766">Fixes for compilation</a> on Visual Studio 2015</li>
<li>Option to use <a href="https://github.com/arrayfire/arrayfire/pull/1053">fallback to CPU LAPACK</a> for linear algebra functions in case of CUDA 6.5 or older versions.</li>
</ul>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/1096">memory leak</a> in <a class="el" href="group__cv__func__susan.htm#ga409460e2cee9f7df388aa5cffd98419f">susan()</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/commit/144a2db">failing test</a> in <a class="el" href="group__data__func__lower.htm#ga3217e07693fdd099fc9acc9065e0a66e">lower()</a> and <a class="el" href="group__data__func__upper.htm#ga724c96cef1c7ae0e9e6ce8ba33ac3eaa">upper()</a> for CUDA compute 53</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1092">bug</a> in CUDA for indexing out of bounds</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/commit/6975da8">dims check</a> in <a class="el" href="group__data__func__iota.htm#ga8f7c55a54d1f93e55340f59b61662f29">iota()</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/commit/7fc3856">out-of-bounds access</a> in <a class="el" href="group__cv__func__sift.htm#ga0a0eb54eea99248c9e8c3983c9765a11">sift()</a></li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/commit/5e88e4a">memory allocation</a> in <a class="el" href="group__cv__func__fast.htm#ga5d7fdd9aa86cfce28efd828569e5b7da">fast()</a> OpenCL</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/pull/994">memory leak</a> in image I/O functions</li>
<li><a class="el" href="group__cv__func__dog.htm#gad88909b00e2ad8fe1c4e7da62f3b67b6">dog()</a> now returns float-point type arrays</li>
</ul>
<h2>Documentation Updates </h2>
<ul>
<li>Improved tutorials documentation<ul>
<li>More detailed Using on <a class="el" href="using_on_windows.htm">Linux</a>, <a class="el" href="using_on_windows.htm">OSX</a>, <a class="el" href="using_on_windows.htm">Windows</a> pages.</li>
</ul>
</li>
<li>Added return type information for functions that return different type arrays</li>
</ul>
<h2>New Examples </h2>
<ul>
<li>Graphics<ul>
<li><a class="el" href="graphics_2plot3_8cpp-example.htm">Plot3</a></li>
<li><a class="el" href="graphics_2surface_8cpp-example.htm">Surface</a></li>
</ul>
</li>
<li><a class="el" href="pde_2swe_8cpp-example.htm">Shallow Water Equation</a></li>
<li><a class="el" href="unified_2basic_8cpp-example.htm">Basic</a> as a Unified backend example</li>
</ul>
<h2>Installers </h2>
<ul>
<li>All installers now include the Unified backend and corresponding CMake files</li>
<li>Visual Studio projects include Unified in the Platform Configurations</li>
<li>Added installer for Jetson TX1</li>
<li>SIFT and GLOH do not ship with the installers as SIFT is protected by patents that do not allow commercial distribution without licensing.</li>
</ul>
<h1>v3.1.3 </h1>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1042">bugs</a> in various OpenCL kernels without offset additions</li>
<li>Remove ARCH_32 and ARCH_64 flags</li>
<li>Fix <a href="https://github.com/arrayfire/arrayfire/issues/1040">missing symbols</a> when freeimage is not found</li>
<li>Use CUDA driver version for Windows</li>
<li>Improvements to SIFT</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1045">memory leak</a> in median</li>
<li>Fixes for Windows compilation when not using MKL <a href="https://github.com/arrayfire/arrayfire/issues/1047">#1047</a></li>
<li>Fixed for building without LAPACK</li>
</ul>
<h2>Other </h2>
<ul>
<li>Documentation: Fixed documentation for select and replace</li>
<li>Documentation: Fixed documentation for af_isnan</li>
</ul>
<h1>v3.1.2 </h1>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/commit/4698f12">bug</a> in assign that was causing test to fail</li>
<li>Fixed bug in convolve. Frequency condition now depends on kernel size only</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1005">bug</a> in indexed reductions for complex type in OpenCL backend</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1006">bug</a> in kernel name generation in ireduce for OpenCL backend</li>
<li>Fixed non-linear to linear indices in ireduce</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1011">bug</a> in reductions for small arrays</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1010">bug</a> in histogram for indexed arrays</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1015">compiler error</a> CPUID for non-compliant devices</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/1008">failing tests</a> on i386 platforms</li>
<li>Add missing AFAPI</li>
</ul>
<h2>Other </h2>
<ul>
<li>Documentation: Added missing examples and other corrections</li>
<li>Documentation: Fixed warnings in documentation building</li>
<li>Installers: Send error messages to log file in OSX Installer</li>
</ul>
<h1>v3.1.1 </h1>
<h2>Installers </h2>
<ul>
<li>CUDA backend now depends on CUDA 7.5 toolkit</li>
<li>OpenCL backend now require OpenCL 1.2 or greater</li>
</ul>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/981">bug</a> in reductions after indexing</li>
<li>Fixed <a href="https://github.com/arrayfire/arrayfire/issues/976">bug</a> in indexing when using reverse indices</li>
</ul>
<h2>Build </h2>
<ul>
<li><code>cmake</code> now includes <code>PKG_CONFIG</code> in the search path for CBLAS and LAPACKE libraries</li>
<li><a class="el" href="financial_2heston_model_8cpp-example.htm">heston_model.cpp</a> example now builds with the default ArrayFire cmake files after installation</li>
</ul>
<h2>Other </h2>
<ul>
<li>Fixed bug in <a class="el" href="image_processing_2image_editing_8cpp-example.htm">image_editing.cpp</a></li>
</ul>
<h1>v3.1.0 </h1>
<h2>Function Additions </h2>
<ul>
<li>Computer Vision Functions<ul>
<li><a class="el" href="group__cv__func__nearest__neighbour.htm#ga8839ead81cbcd6b433822205713bfe79">nearestNeighbour()</a> - Nearest Neighbour with SAD, SSD and SHD distances</li>
<li><a class="el" href="group__cv__func__harris.htm#ga21429404b11dc3bf6324c111901cc1c7">harris()</a> - Harris Corner Detector</li>
<li><a class="el" href="group__cv__func__susan.htm#ga409460e2cee9f7df388aa5cffd98419f">susan()</a> - Susan Corner Detector</li>
<li><a class="el" href="group__cv__func__sift.htm#ga0a0eb54eea99248c9e8c3983c9765a11">sift()</a> - Scale Invariant Feature Transform (SIFT)<ul>
<li>Method and apparatus for identifying scale invariant features"
          "in an image and use of same for locating an object in an image," David"
          "G. Lowe, US Patent 6,711,293 (March 23, 2004). Provisional application"
          "filed March 8, 1999. Asignee: The University of British Columbia. For"
          "further details, contact David Lowe (<a href="#" onclick="location.href='mai'+'lto:'+'low'+'e@'+'cs.'+'ub'+'c.c'+'a'; return false;">lowe@<span style="display: none;">.nosp@m.</span>cs.u<span style="display: none;">.nosp@m.</span>bc.ca</a>) or the"
          "University-Industry Liaison Office of the University of British"
          "Columbia.")</li>
<li>SIFT is available for compiling but does not ship with ArrayFire hosted installers/pre-built libraries</li>
</ul>
</li>
<li><a class="el" href="group__cv__func__dog.htm#gad88909b00e2ad8fe1c4e7da62f3b67b6">dog()</a> - Difference of Gaussians</li>
</ul>
</li>
<li>Image Processing Functions<ul>
<li><a class="el" href="group__image__func__ycbcr2rgb.htm#gaa2fee1bce8855e7072a306ed75636d84">ycbcr2rgb()</a> and <a class="el" href="group__image__func__rgb2ycbcr.htm#ga4f0faf8297515d78ce3050c0405ff689">rgb2ycbcr()</a> - RGB &lt;-&gt;YCbCr color space conversion</li>
<li><a class="el" href="group__image__func__wrap.htm#ga06a40cc4907e646437d7729823a8054d">wrap()</a> and <a class="el" href="group__image__func__unwrap.htm#gabd48af39af6bb17efb70747cc132ad60">unwrap()</a> Wrap and Unwrap</li>
<li><a class="el" href="group__image__func__sat.htm#ga9bf5c159ddb82689b454f686a7549f22">sat()</a> - Summed Area Tables</li>
<li><a class="el" href="group__imagemem__func__load.htm#ga7b5c4ca71bcd2605eabfc99c8d8c4255">loadImageMem()</a> and <a class="el" href="group__imagemem__func__save.htm#ga91c1530357e06794121de654ac926773">saveImageMem()</a> - Load and Save images to/from memory<ul>
<li><a class="el" href="defines_8h.htm#a46734de80dcc107a0732d8ec7c977d6f">af_image_format</a> - Added imageFormat (af_image_format) enum</li>
</ul>
</li>
</ul>
</li>
<li>Array &amp; Data Handling<ul>
<li><a class="el" href="group__index__func__index.htm#ga25f470817062b23ad3f74347ea44b17c">copy()</a> - Copy</li>
<li>array::lock() and array::unlock() - Lock and Unlock</li>
<li><a class="el" href="group__data__func__select.htm#ga43cfc7e96eb2e8ee019820aaa6aa15a8">select()</a> and <a class="el" href="group__data__func__replace.htm#ga13a51c418de0201102413f05aae45ccd">replace()</a> - Select and Replace</li>
<li>Get array reference count (af_get_data_ref_count)</li>
</ul>
</li>
<li>Signal Processing<ul>
<li><a class="el" href="group__signal__func__fft.htm#ga7d171d51c68b8280a0219ab42170f46d">fftInPlace()</a> - 1D in place FFT</li>
<li><a class="el" href="group__signal__func__fft2.htm#gaec63a9c53a998da227197d206f2608b1">fft2InPlace()</a> - 2D in place FFT</li>
<li><a class="el" href="group__signal__func__fft3.htm#gab170f1ee7198643436c50b782c9fb312">fft3InPlace()</a> - 3D in place FFT</li>
<li><a class="el" href="group__signal__func__ifft.htm#ga5cee5baba1961e509d4235dcd80c4073">ifftInPlace()</a> - 1D in place Inverse FFT</li>
<li><a class="el" href="group__signal__func__ifft2.htm#gab43fda5cc7981bd91f089731f634ec51">ifft2InPlace()</a> - 2D in place Inverse FFT</li>
<li><a class="el" href="group__signal__func__ifft3.htm#ga133593d11131b304a3692048355f78e7">ifft3InPlace()</a> - 3D in place Inverse FFT</li>
<li><a class="el" href="group__signal__func__fft__r2c.htm#gaecfef8da267bdc9bddb802badf0d1da3">fftR2C()</a> - Real to complex FFT</li>
<li><a class="el" href="group__signal__func__fft__c2r.htm#ga01fa22566a246623a7378960e4ac06a3">fftC2R()</a> - Complex to Real FFT</li>
</ul>
</li>
<li>Linear Algebra<ul>
<li><a class="el" href="group__lapack__factor__func__svd.htm#gab016ef45fce266ab9545054bea1cb6b7">svd()</a> and <a class="el" href="group__lapack__factor__func__svd.htm#gaab551c4f09090010669e3906988ac8a1">svdInPlace()</a> - Singular Value Decomposition</li>
</ul>
</li>
<li>Other operations<ul>
<li><a class="el" href="namespaceaf.htm#a83c8f1181fc87c30d649f3f1eb26a860">sigmoid()</a> - Sigmoid</li>
<li>Sum (with option to replace NaN values)</li>
<li>Product (with option to replace NaN values)</li>
</ul>
</li>
<li>Graphics<ul>
<li>Window::setSize() - Window resizing using Forge API</li>
</ul>
</li>
<li>Utility<ul>
<li>Allow users to set print precision (print, af_print_array_gen)</li>
<li><a class="el" href="group__stream__func__save.htm#gaf0d3dfb49f4f2aaac7a46222817ed48f">saveArray()</a> and <a class="el" href="group__stream__func__read.htm#gaf78aa8f367fbd6f408e90f0851e0557a">readArray()</a> - Stream arrays to binary files</li>
<li><a class="el" href="group__print__func__tostring.htm#gac268e4935efa88b80d1be6ccaa6a9093">toString()</a> - toString function returns the array and data as a string</li>
</ul>
</li>
<li>CUDA specific functionality<ul>
<li><a class="el" href="group__cuda__mat.htm#gaec1dc4c2aa935dc61889f23248c8450d">getStream()</a> - Returns default CUDA stream ArrayFire uses for the current device</li>
<li><a class="el" href="group__cuda__mat.htm#ga59b163ea391ea856a25693e2567b0ce5">getNativeId()</a> - Returns native id of the CUDA device</li>
</ul>
</li>
</ul>
<h2>Improvements </h2>
<ul>
<li>dot<ul>
<li>Allow complex inputs with conjugate option</li>
</ul>
</li>
<li>AF_INTERP_LOWER interpolation<ul>
<li>For resize, rotate and transform based functions</li>
</ul>
</li>
<li>64-bit integer support<ul>
<li>For reductions, random, iota, range, diff1, diff2, accum, join, shift and tile</li>
</ul>
</li>
<li>convolve<ul>
<li>Support for non-overlapping batched convolutions</li>
</ul>
</li>
<li>Complex Arrays<ul>
<li>Fix binary ops on complex inputs of mixed types</li>
<li>Complex type support for exp</li>
</ul>
</li>
<li>tile<ul>
<li>Performance improvements by using JIT when possible.</li>
</ul>
</li>
<li>Add AF_API_VERSION macro<ul>
<li>Allows disabling of API to maintain consistency with previous versions</li>
</ul>
</li>
<li>Other Performance Improvements<ul>
<li>Use reference counting to reduce unnecessary copies</li>
</ul>
</li>
<li>CPU Backend<ul>
<li>Device properties for CPU</li>
<li>Improved performance when all buffers are indexed linearly</li>
</ul>
</li>
<li>CUDA Backend<ul>
<li>Use streams in CUDA (no longer using default stream)</li>
<li>Using async cudaMem ops</li>
<li>Add 64-bit integer support for JIT functions</li>
<li>Performance improvements for CUDA JIT for non-linear 3D and 4D arrays</li>
</ul>
</li>
<li>OpenCL Backend<ul>
<li>Improve compilation times for OpenCL backend</li>
<li>Performance improvements for non-linear JIT kernels on OpenCL</li>
<li>Improved shared memory load/store in many OpenCL kernels (PR 933)</li>
<li>Using cl.hpp v1.2.7</li>
</ul>
</li>
</ul>
<h2>Bug Fixes </h2>
<ul>
<li>Common<ul>
<li>Fix compatibility of c32/c64 arrays when operating with scalars</li>
<li>Fix median for all values of an array</li>
<li>Fix double free issue when indexing (30cbbc7)</li>
<li>Fix <a href="https://github.com/arrayfire/arrayfire/issues/901">bug</a> in rank</li>
<li>Fix default values for scale throwing exception</li>
<li>Fix conjg raising exception on real input</li>
<li>Fix bug when using conjugate transpose for vector input</li>
<li>Fix issue with const input for array_proxy::get()</li>
</ul>
</li>
<li>CPU Backend<ul>
<li>Fix randn generating same sequence for multiple calls</li>
<li>Fix setSeed for randu</li>
<li>Fix casting to and from complex</li>
<li>Check NULL values when allocating memory</li>
<li>Fix <a href="https://github.com/arrayfire/arrayfire/issues/923">offset issue</a> for CPU element-wise operations</li>
</ul>
</li>
</ul>
<h2>New Examples </h2>
<ul>
<li>Match Template</li>
<li>Susan</li>
<li>Heston Model (contributed by Michael Nowotny)</li>
</ul>
<h2>Installer </h2>
<ul>
<li>Fixed bug in automatic detection of ArrayFire when using with CMake in Windows</li>
<li>The Linux libraries are now compiled with static version of FreeImage</li>
</ul>
<h2>Known Issues </h2>
<ul>
<li>OpenBlas can cause issues with QR factorization in CPU backend</li>
<li>FreeImage older than 3.10 can cause issues with loadImageMem and saveImageMem</li>
<li>OpenCL backend issues on OSX<ul>
<li>AMD GPUs not supported because of driver issues</li>
<li>Intel CPUs not supported</li>
<li>Linear algebra functions do not work on Intel GPUs.</li>
</ul>
</li>
<li>Stability and correctness issues with open source OpenCL implementations such as Beignet, GalliumCompute.</li>
</ul>
<h1>v3.0.2 </h1>
<h2>Bug Fixes </h2>
<ul>
<li>Added missing symbols from the compatible API</li>
<li>Fixed a bug affecting corner rows and elements in <a class="el" href="group__calc__func__grad.htm#ga3be29ad2f4958dcc01f9135da52753f8">grad()</a></li>
<li>Fixed linear interpolation bugs affecting large images in the following:<ul>
<li><a class="el" href="group__signal__func__approx1.htm#ga18117f73cee98f0859f8439607f7f962">approx1()</a></li>
<li><a class="el" href="group__signal__func__approx2.htm#gad6a825755f97f59536faab99ed6e0c2d">approx2()</a></li>
<li><a class="el" href="group__transform__func__resize.htm#ga017b9370e3e287693519de5b59fcc8ff">resize()</a></li>
<li><a class="el" href="group__transform__func__rotate.htm#ga6555d91c01571c362ebd3bace76d21ea">rotate()</a></li>
<li><a class="el" href="group__transform__func__scale.htm#ga60a399365ffc65ab2ffde4052903a4b3">scale()</a></li>
<li><a class="el" href="group__transform__func__skew.htm#ga89a39e12b8c619e33de409d4a9a787f6">skew()</a></li>
<li><a class="el" href="group__transform__func__transform.htm#ga3677c5a534ca50a9c8a2611fe0728fd8">transform()</a></li>
</ul>
</li>
</ul>
<h2>Documentation </h2>
<ul>
<li>Added missing documentation for <a class="el" href="group__data__func__constant.htm#ga3c58da8ca31ae6c871379aeb587b8b0d">constant()</a></li>
<li>Added missing documentation for <code>array::scalar()</code></li>
<li>Added supported input types for functions in <code><a class="el" href="arith_8h.htm">arith.h</a></code></li>
</ul>
<h1>v3.0.1 </h1>
<h2>Bug Fixes </h2>
<ul>
<li>Fixed header to work in Visual Studio 2015</li>
<li>Fixed a bug in batched mode for FFT based convolutions</li>
<li>Fixed graphics issues on OSX</li>
<li>Fixed various bugs in visualization functions</li>
</ul>
<h2>Other improvements </h2>
<ul>
<li>Improved fractal example</li>
<li>New OSX installer</li>
<li>Improved Windows installer<ul>
<li>Default install path has been changed</li>
</ul>
</li>
<li>Fixed bug in machine learning examples</li>
</ul>
<p><br />
</p>
<h1>v3.0.0 </h1>
<h2>Major Updates </h2>
<ul>
<li>ArrayFire is now open source</li>
<li>Major changes to the visualization library</li>
<li>Introducing handle based C API</li>
<li>New backend: CPU fallback available for systems without GPUs</li>
<li>Dense linear algebra functions available for all backends</li>
<li>Support for 64 bit integers</li>
</ul>
<h2>Function Additions </h2>
<ul>
<li>Data generation functions<ul>
<li><a class="el" href="group__data__func__range.htm#ga3789475e962b4c31e07c1c3bdab8498b">range()</a></li>
<li><a class="el" href="group__data__func__iota.htm#ga8f7c55a54d1f93e55340f59b61662f29">iota()</a></li>
</ul>
</li>
<li>Computer Vision Algorithms<ul>
<li>features()<ul>
<li>A data structure to hold features</li>
</ul>
</li>
<li><a class="el" href="group__cv__func__fast.htm#ga5d7fdd9aa86cfce28efd828569e5b7da" title="C++ Interface for FAST feature detector. ">fast()</a><ul>
<li>FAST feature detector</li>
</ul>
</li>
<li><a class="el" href="group__cv__func__orb.htm#ga174060bf74dfc2fce8db125d0d6b036d" title="C++ Interface for ORB feature descriptor. ">orb()</a><ul>
<li>ORB A feature descriptor extractor</li>
</ul>
</li>
</ul>
</li>
<li>Image Processing<ul>
<li><a class="el" href="group__signal__func__convolve1.htm#ga72a117436a82ed5fe593fe7072c01968" title="C++ Interface for convolution on one dimensional signals. ">convolve1()</a>, <a class="el" href="group__signal__func__convolve2.htm#ga0aec29b4d4c9cf4412420b91c96ffe6c" title="C++ Interface for convolution on two dimensional signals. ">convolve2()</a>, <a class="el" href="group__signal__func__convolve3.htm#ga612982eb8719085e327ca764e4f728d6" title="C++ Interface for convolution on three dimensional signals. ">convolve3()</a><ul>
<li>Specialized versions of <a class="el" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9" title="C++ Interface for convolution any(one through three) dimensional signals. ">convolve()</a> to enable better batch support</li>
</ul>
</li>
<li>fftconvolve1(), fftconvolve2(), fftconvolve3()<ul>
<li>Convolutions in frequency domain to support larger kernel sizes</li>
</ul>
</li>
<li><a class="el" href="group__signal__func__fft.htm#ga6e082e788e1085ae5e39794ddade9913" title="C++ Interface for fast fourier transform on any(1d, 2d, 3d) dimensional signals. ">dft()</a>, <a class="el" href="group__signal__func__fft.htm#ga9e03a61224c7b9d217b0099ce1d5be3a" title="C++ Interface for inverse fast fourier transform on any(1d, 2d, 3d) dimensional signals. ">idft()</a><ul>
<li>Unified functions for calling multi dimensional ffts.</li>
</ul>
</li>
<li><a class="el" href="group__cv__func__match__template.htm#ga1877e7a99d609e27a878c51d9a48ba8f" title="C++ Interface for image template matching. ">matchTemplate()</a><ul>
<li>Match a kernel in an image</li>
</ul>
</li>
<li><a class="el" href="group__image__func__sobel.htm#ga6c098aec0c9768f8264a95eb00deda3a" title="C++ Interface for extracting sobel gradients. ">sobel()</a><ul>
<li>Get sobel gradients of an image</li>
</ul>
</li>
<li><a class="el" href="group__image__func__rgb2hsv.htm#gaef09b6891d44dfaaf2389ae05e722d0e" title="C++ Interface for converting RGB to HSV. ">rgb2hsv()</a>, <a class="el" href="group__image__func__hsv2rgb.htm#gaad07af8a0414ebad470796f1775ecadc" title="C++ Interface for converting HSV to RGB. ">hsv2rgb()</a>, <a class="el" href="group__image__func__rgb2gray.htm#ga8a4d6c8e00646611caa7194a65769eda" title="C++ Interface for RGB to gray conversion. ">rgb2gray()</a>, <a class="el" href="group__image__func__gray2rgb.htm#ga7d39aa4eb8c126a5f4b5d66c7147f131" title="C++ Interface for gray to RGB conversion. ">gray2rgb()</a><ul>
<li>Explicit function calls to colorspace conversions</li>
</ul>
</li>
<li>erode3d(), dilate3d()<ul>
<li>Explicit erode and dilate calls for image morphing</li>
</ul>
</li>
</ul>
</li>
<li>Linear Algebra<ul>
<li><a class="el" href="group__blas__func__matmul.htm#gadf90230a67ea7a0b4697511dd978b9c7" title="Matrix multiply of two arrays. ">matmulNT()</a>, <a class="el" href="group__blas__func__matmul.htm#ga6655d7913b35d7e59f7c8560a5368fbc" title="Matrix multiply of two arrays. ">matmulTN()</a>, <a class="el" href="group__blas__func__matmul.htm#ga7f3e5a6f282ea2c2c32886c95694bb88" title="Matrix multiply of two arrays. ">matmulTT()</a><ul>
<li>Specialized versions of <a class="el" href="group__blas__func__matmul.htm#ga63306b6ed967bd1055086db862fe885b" title="Matrix multiply of two arrays. ">matmul()</a> for transposed inputs</li>
</ul>
</li>
<li><a class="el" href="group__lapack__factor__func__lu.htm#gae42d8e18ff303b659fda897409bc5702" title="C++ Interface for in place LU decomposition. ">luInPlace()</a>, <a class="el" href="group__lapack__factor__func__cholesky.htm#gac1d4ac4de57dea4841cb11c5e6865792" title="C++ Interface for in place cholesky decomposition. ">choleskyInPlace()</a>, <a class="el" href="group__lapack__factor__func__qr.htm#gaea212c00a2f241d64c0aa73d9b78e158" title="C++ Interface for QR decomposition. ">qrInPlace()</a><ul>
<li>In place factorizations to improve memory requirements</li>
</ul>
</li>
<li><a class="el" href="group__lapack__solve__lu__func__gen.htm#gafb8e3d9894bfe9ef0d21380212637250" title="C++ Interface for solving a system of equations. ">solveLU()</a><ul>
<li>Specialized solve routines to improve performance</li>
</ul>
</li>
<li>OpenCL backend now Linear Algebra functions</li>
</ul>
</li>
<li>Other functions<ul>
<li><a class="el" href="group__index__func__index.htm#gac7bb6cefab347540526b1ac2584d006e" title="Lookup the values of input array based on index. ">lookup()</a> - lookup indices from a table</li>
<li><a class="el" href="namespaceaf.htm#aa0eb9e160f5be4b95234543e5c47934b">batchFunc()</a> - helper function to perform batch operations</li>
</ul>
</li>
<li>Visualization functions<ul>
<li>Support for multiple windows</li>
<li>window.hist()<ul>
<li>Visualize the output of the histogram</li>
</ul>
</li>
</ul>
</li>
<li>C API<ul>
<li>Removed old pointer based C API</li>
<li>Introducing handle base C API</li>
<li>Just In Time compilation available in C API</li>
<li>C API has feature parity with C++ API</li>
<li>bessel functions removed</li>
<li>cross product functions removed</li>
<li>Kronecker product functions removed</li>
</ul>
</li>
</ul>
<h2>Performance Improvements </h2>
<ul>
<li>Improvements across the board for OpenCL backend</li>
</ul>
<h2>API Changes </h2>
<ul>
<li><code>print</code> is now <a class="el" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print()</a></li>
<li>seq(): The step parameter is now the third input<ul>
<li>seq(start, step, end) changed to seq(start, end, step)</li>
</ul>
</li>
<li><a class="el" href="gfor_8h.htm#a6d6cd11d53daad217fd0b92f5a7ceec6">gfor()</a>: The iterator now needs to be seq()</li>
</ul>
<h2>Deprecated Function APIs </h2>
<p>Deprecated APIs are in <a class="el" href="compatible_8h.htm">af/compatible.h</a></p>
<ul>
<li><a class="el" href="group__device__func__count.htm#gab45892c9c9c04c16de267daa44c8700e" title="Gets the number of devices. ">devicecount()</a> changed to <a class="el" href="group__device__func__count.htm#gac3c8750da69ee883fd14c0a8290e45f1" title="Gets the number of devices. ">getDeviceCount()</a></li>
<li><a class="el" href="group__device__func__set.htm#ga1cab0f8de2817b155b77fcf29238dbc7" title="Sets the current device. ">deviceset()</a> changed to <a class="el" href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7" title="Sets the current device. ">setDevice()</a></li>
<li><a class="el" href="group__device__func__get.htm#gab11c53af3ef51c39da455ed024de97b5" title="Gets the current device ID. ">deviceget()</a> changed to <a class="el" href="group__device__func__get.htm#ga4dfe3f90475b735384f8b28cf2b19a11" title="Gets the current device ID. ">getDevice()</a></li>
<li><a class="el" href="group__imageio__func__load.htm#ga188e0daa67545fea545fc7bc3feea875" title="C++ Interface for loading an image. ">loadimage()</a> changed to <a class="el" href="group__imageio__func__load.htm#ga8bcf01ffa60bc513856d98b8a63bb12a" title="C++ Interface for loading an image. ">loadImage()</a></li>
<li><a class="el" href="group__imageio__func__save.htm#ga2b0f060d7fb7bc4ca397f4ca82190fb2" title="C++ Interface for saving an image. ">saveimage()</a> changed to <a class="el" href="group__imageio__func__save.htm#gae2e1e9354b0d29c4749ac368efd78b19" title="C++ Interface for saving an image. ">saveImage()</a></li>
<li><a class="el" href="group__image__func__gauss.htm#ga340e55dad18edc59e9387dcf99d5ab78" title="Creates a Gaussian Kernel. ">gaussiankernel()</a> changed to <a class="el" href="group__image__func__gauss.htm#gaa5de1866bc1bf50bf5fe3cb26d4e410d" title="C++ Interface for generating gausian kernels. ">gaussianKernel()</a></li>
<li><a class="el" href="group__reduce__func__all__true.htm#gac53f164f6bb650ba54a64e27a41e3b19" title="C++ Interface for checking if all values in an array are true. ">alltrue()</a> changed to <a class="el" href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b" title="C++ Interface for checking all true values in an array. ">allTrue()</a></li>
<li><a class="el" href="group__reduce__func__any__true.htm#gaf7184d594b1b6af7bdd01322cc795a4a" title="C++ Interface for checking if all values in an array are true. ">anytrue()</a> changed to <a class="el" href="group__reduce__func__any__true.htm#gafe4c8f22bbfa4288696f2a133b1b619e" title="C++ Interface for checking any true values in an array. ">anyTrue()</a></li>
<li><a class="el" href="group__set__func__unique.htm#gac33fd89ba6a7582753232c007ff135bf" title="C++ Interface for getting unique values. ">setunique()</a> changed to <a class="el" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6" title="C++ Interface for getting unique values. ">setUnique()</a></li>
<li><a class="el" href="group__set__func__union.htm#ga91f6dd436ea57421a689ddc27ca3fd47" title="C++ Interface for performing union of two arrays. ">setunion()</a> changed to <a class="el" href="group__set__func__union.htm#gaa793c080cfa2c5ed7f422479e8e0bfe3" title="C++ Interface for performing union of two arrays. ">setUnion()</a></li>
<li><a class="el" href="group__set__func__intersect.htm#ga367d3f862af46bc86ef5e08f7a29f104" title="C++ Interface for performing intersect of two arrays. ">setintersect()</a> changed to <a class="el" href="group__set__func__intersect.htm#gae4549aee29c563edfb0b4a444fbf9200" title="C++ Interface for performing intersect of two arrays. ">setIntersect()</a></li>
<li><a class="el" href="group__image__func__histequal.htm#gae1c0d4f649c35fa3a9d2e2d9e21c318c" title="C++ Interface for histogram equalization. ">histequal()</a> changed to <a class="el" href="group__image__func__histequal.htm#ga0c09893b2ba7a63663a1893bc5d87e47" title="C++ Interface for histogram equalization. ">histEqual()</a></li>
<li><a class="el" href="group__image__func__colorspace.htm#gac2f08cedb760f97f069b4ccbb6d48ea8" title="C++ Interface wrapper for colorspace conversion. ">colorspace()</a> changed to <a class="el" href="group__image__func__colorspace.htm#ga9dabba47b9390faacf8fb146605339b0" title="C++ Interface wrapper for colorspace conversion. ">colorSpace()</a></li>
<li><a class="el" href="namespaceaf.htm#a53c4f9a4b5440458bffe355803514c90" title="Image Filtering. ">filter()</a> deprecated. Use <a class="el" href="group__signal__func__convolve1.htm#ga72a117436a82ed5fe593fe7072c01968" title="C++ Interface for convolution on one dimensional signals. ">convolve1()</a> and <a class="el" href="group__signal__func__convolve2.htm#ga0aec29b4d4c9cf4412420b91c96ffe6c" title="C++ Interface for convolution on two dimensional signals. ">convolve2()</a></li>
<li><a class="el" href="group__reduce__func__product.htm#ga34aef3ce04c7d24da8a55655d9ea2e23" title="C++ Interface for product of elements in an array. ">mul()</a> changed to <a class="el" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3" title="C++ Interface for product of elements in an array. ">product()</a></li>
<li><a class="el" href="group__device__func__prop.htm#ga93d4e3752f68699295e351888559dcf5">deviceprop()</a> changed to deviceProp()</li>
</ul>
<h2>Known Issues </h2>
<ul>
<li>OpenCL backend issues on OSX<ul>
<li>AMD GPUs not supported because of driver issues</li>
<li>Intel CPUs not supported</li>
<li>Linear algebra functions do not work on Intel GPUs.</li>
</ul>
</li>
<li>Stability and correctness issues with open source OpenCL implementations such as Beignet, GalliumCompute. </li>
</ul>
</div></div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
