<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: tile</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__manip__func__tile.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">tile<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__array__mat.htm">Functions to create and modify Arrays</a> &raquo; <a class="el" href="group__manip__mat.htm">Move and Reorder array content</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Repeat the contents of the input array along the specified dimensions.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga3548059d64e0cefc7fedb4ec28321d32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__manip__func__tile.htm#ga3548059d64e0cefc7fedb4ec28321d32">tile</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const unsigned x, const unsigned y=1, const unsigned z=1, const unsigned w=1)</td></tr>
<tr class="separator:ga3548059d64e0cefc7fedb4ec28321d32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ad03637a32c3c9999e34d565f1cb1b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__manip__func__tile.htm#ga4ad03637a32c3c9999e34d565f1cb1b4">tile</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;dims)</td></tr>
<tr class="separator:ga4ad03637a32c3c9999e34d565f1cb1b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3540329723c9876839e0c790075ab076"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__manip__func__tile.htm#ga3540329723c9876839e0c790075ab076">af_tile</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const unsigned x, const unsigned y, const unsigned z, const unsigned w)</td></tr>
<tr class="separator:ga3540329723c9876839e0c790075ab076"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Repeat the contents of the input array along the specified dimensions. </p>
<p>Creates copies of the input array and concatenates them with each other, such that the output array will have as many copies of the input array as the user specifies, along each dimension. In this sense, the output array is essentially a set of "tiles", where each copy of the input array (including the original) is a "tile" (hence the name of this function).</p>
<p>Given below are some examples. The input array looks like this:</p>
<div class="fragment"><div class="line">    <span class="keywordtype">float</span> hA[] = {0, 1, 2, 3, 4, 5};</div>
<div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> A(3, 2, hA);</div>
<div class="line">    <span class="comment">//  0.  3.</span></div>
<div class="line">    <span class="comment">//  1.  4.</span></div>
<div class="line">    <span class="comment">//  2.  5.</span></div>
</div><!-- fragment --><p> Here, the input array is tiled along the first dimenson, 2 times:</p>
<div class="fragment"><div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> B = <a class="code" href="group__manip__func__tile.htm#ga3548059d64e0cefc7fedb4ec28321d32">tile</a>(A, 2, 1);</div>
<div class="line">    <span class="comment">//  0.  3.</span></div>
<div class="line">    <span class="comment">//  1.  4.</span></div>
<div class="line">    <span class="comment">//  2.  5.</span></div>
<div class="line">    <span class="comment">//  0.  3.</span></div>
<div class="line">    <span class="comment">//  1.  4.</span></div>
<div class="line">    <span class="comment">//  2.  5.</span></div>
</div><!-- fragment --><p> Here, the input is tiled along the second dimension, 3 times:</p>
<div class="fragment"><div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> C = <a class="code" href="group__manip__func__tile.htm#ga3548059d64e0cefc7fedb4ec28321d32">tile</a>(A, 1, 3);</div>
<div class="line">    <span class="comment">//  0.  3.  0.  3.  0.  3.</span></div>
<div class="line">    <span class="comment">//  1.  4.  1.  4.  1.  4.</span></div>
<div class="line">    <span class="comment">//  2.  5.  2.  5.  2.  5.</span></div>
</div><!-- fragment --><p> Lastly, one can also tile along multiple dimensions simultaneously. Here, the input is tiled 2 times in the first dimension and 3 times in the second dimension:</p>
<div class="fragment"><div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> D = <a class="code" href="group__manip__func__tile.htm#ga3548059d64e0cefc7fedb4ec28321d32">tile</a>(A, 2, 3);</div>
<div class="line">    <span class="comment">//  0.  3.  0.  3.  0.  3.</span></div>
<div class="line">    <span class="comment">//  1.  4.  1.  4.  1.  4.</span></div>
<div class="line">    <span class="comment">//  2.  5.  2.  5.  2.  5.</span></div>
<div class="line">    <span class="comment">//  0.  3.  0.  3.  0.  3.</span></div>
<div class="line">    <span class="comment">//  1.  4.  1.  4.  1.  4.</span></div>
<div class="line">    <span class="comment">//  2.  5.  2.  5.  2.  5.</span></div>
</div><!-- fragment --><hr  />
 <h2 class="groupheader">Function Documentation</h2>
<a id="ga3540329723c9876839e0c790075ab076"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3540329723c9876839e0c790075ab076">&#9670;&nbsp;</a></span>af_tile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_tile </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>w</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>is the tiled version of the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>is the number of times <code>in</code> is copied along the first dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>is the number of times <code>in</code> is copied along the the second dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">z</td><td>is the number of times <code>in</code> is copied along the third dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">w</td><td>is the number of times <code>in</code> is copied along the fourth dimension</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>x</code>, <code>y</code>, <code>z</code>, and <code>w</code> includes the original in the count as well. Thus, if no duplicates are needed in a certain dimension, leave it as 1 (the default value for just one copy) </dd></dl>

</div>
</div>
<a id="ga4ad03637a32c3c9999e34d565f1cb1b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4ad03637a32c3c9999e34d565f1cb1b4">&#9670;&nbsp;</a></span>tile() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::tile </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;&#160;</td>
          <td class="paramname"><em>dims</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dims</td><td>specifies the number of times <code>in</code> is copied along each dimension </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The tiled version of the input array</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Each component of <code>dims</code> includes the original in the count as well. Thus, if no duplicates are needed in a certain dimension, leave it as 1 (the default value for just one copy) </dd></dl>

</div>
</div>
<a id="ga3548059d64e0cefc7fedb4ec28321d32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3548059d64e0cefc7fedb4ec28321d32">&#9670;&nbsp;</a></span>tile() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::tile </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>y</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>z</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>w</em> = <code>1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>is the number of times <code>in</code> is copied along the first dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>is the number of times <code>in</code> is copied along the the second dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">z</td><td>is the number of times <code>in</code> is copied along the third dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">w</td><td>is the number of times <code>in</code> is copied along the fourth dimension </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The tiled version of the input array</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>x</code>, <code>y</code>, <code>z</code>, and <code>w</code> includes the original in the count as well. Thus, if no duplicates are needed in a certain dimension, leave it as 1 (the default value for just one copy) </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="benchmarks_2cg_8cpp-example.htm#a17">benchmarks/cg.cpp</a>, <a class="el" href="computer_vision_2matching_8cpp-example.htm#a9">computer_vision/matching.cpp</a>, <a class="el" href="financial_2black_scholes_options_8cpp-example.htm#a9">financial/black_scholes_options.cpp</a>, <a class="el" href="getting_started_2vectorize_8cpp-example.htm#a8">getting_started/vectorize.cpp</a>, <a class="el" href="graphics_2conway_pretty_8cpp-example.htm#a8">graphics/conway_pretty.cpp</a>, <a class="el" href="graphics_2field_8cpp-example.htm#a5">graphics/field.cpp</a>, <a class="el" href="graphics_2gravity_sim_8cpp-example.htm#a13">graphics/gravity_sim.cpp</a>, <a class="el" href="image_processing_2filters_8cpp-example.htm#a6">image_processing/filters.cpp</a>, <a class="el" href="image_processing_2image_editing_8cpp-example.htm#a13">image_processing/image_editing.cpp</a>, <a class="el" href="machine_learning_2bagging_8cpp-example.htm#a6">machine_learning/bagging.cpp</a>, <a class="el" href="machine_learning_2deep_belief_net_8cpp-example.htm#a15">machine_learning/deep_belief_net.cpp</a>, <a class="el" href="machine_learning_2kmeans_8cpp-example.htm#a2">machine_learning/kmeans.cpp</a>, <a class="el" href="machine_learning_2knn_8cpp-example.htm#a6">machine_learning/knn.cpp</a>, <a class="el" href="machine_learning_2naive_bayes_8cpp-example.htm#a10">machine_learning/naive_bayes.cpp</a>, <a class="el" href="machine_learning_2rbm_8cpp-example.htm#a9">machine_learning/rbm.cpp</a>, and <a class="el" href="pde_2swe_8cpp-example.htm#a5">pde/swe.cpp</a>.</dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
<div class="ttc" id="agroup__manip__func__tile_htm_ga3548059d64e0cefc7fedb4ec28321d32"><div class="ttname"><a href="group__manip__func__tile.htm#ga3548059d64e0cefc7fedb4ec28321d32">af::tile</a></div><div class="ttdeci">AFAPI array tile(const array &amp;in, const unsigned x, const unsigned y=1, const unsigned z=1, const unsigned w=1)</div></div>
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
