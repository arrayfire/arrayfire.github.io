<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<title>var</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__stat__func__var.htm','');});
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">var<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">Complete List of ArrayFire Functions</a><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__stats__mat.htm">Statistics</a> &raquo;  &#124; <a class="el" href="group__basicstats__mat.htm">Basic statistics functions</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Find the variance of values in the input.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga413fdb917be8f5173f8b5650a181a120"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga413fdb917be8f5173f8b5650a181a120">var</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const bool isbiased=false, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:ga413fdb917be8f5173f8b5650a181a120"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance.  <a href="group__stat__func__var.htm#ga413fdb917be8f5173f8b5650a181a120">More...</a><br /></td></tr>
<tr class="separator:ga413fdb917be8f5173f8b5650a181a120"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad4405591505b482f9f40b697aca4be72"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#gad4405591505b482f9f40b697aca4be72">var</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;weights, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:gad4405591505b482f9f40b697aca4be72"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance of weighted inputs.  <a href="group__stat__func__var.htm#gad4405591505b482f9f40b697aca4be72">More...</a><br /></td></tr>
<tr class="separator:gad4405591505b482f9f40b697aca4be72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac726bf9890ba505b8433477e26c8854c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gac726bf9890ba505b8433477e26c8854c"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#gac726bf9890ba505b8433477e26c8854c">var</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const bool isbiased=false)</td></tr>
<tr class="memdesc:gac726bf9890ba505b8433477e26c8854c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance of all elements.  <a href="group__stat__func__var.htm#gac726bf9890ba505b8433477e26c8854c">More...</a><br /></td></tr>
<tr class="separator:gac726bf9890ba505b8433477e26c8854c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9532100bf99d1b9757250907b3d08917"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga9532100bf99d1b9757250907b3d08917"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga9532100bf99d1b9757250907b3d08917">var</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;weights)</td></tr>
<tr class="memdesc:ga9532100bf99d1b9757250907b3d08917"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance of all elements in weighted input.  <a href="group__stat__func__var.htm#ga9532100bf99d1b9757250907b3d08917">More...</a><br /></td></tr>
<tr class="separator:ga9532100bf99d1b9757250907b3d08917"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7782e8de146ef2e7816aa75448ef8648"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga7782e8de146ef2e7816aa75448ef8648">af_var</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const bool isbiased, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:ga7782e8de146ef2e7816aa75448ef8648"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance.  <a href="#ga7782e8de146ef2e7816aa75448ef8648">More...</a><br /></td></tr>
<tr class="separator:ga7782e8de146ef2e7816aa75448ef8648"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga06ad132cb12a5760c2058278456d041e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga06ad132cb12a5760c2058278456d041e">af_var_weighted</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> weights, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:ga06ad132cb12a5760c2058278456d041e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance of weighted input array.  <a href="#ga06ad132cb12a5760c2058278456d041e">More...</a><br /></td></tr>
<tr class="separator:ga06ad132cb12a5760c2058278456d041e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga59baa7e073507920910e1c32ae1d8432"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga59baa7e073507920910e1c32ae1d8432">af_var_all</a> (double *realVal, double *imagVal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const bool isbiased)</td></tr>
<tr class="memdesc:ga59baa7e073507920910e1c32ae1d8432"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance of all elements.  <a href="#ga59baa7e073507920910e1c32ae1d8432">More...</a><br /></td></tr>
<tr class="separator:ga59baa7e073507920910e1c32ae1d8432"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga26f83014829926e3112de3435a87ac1d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga26f83014829926e3112de3435a87ac1d">af_var_all_weighted</a> (double *realVal, double *imagVal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> weights)</td></tr>
<tr class="memdesc:ga26f83014829926e3112de3435a87ac1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance of all elements in weighted input.  <a href="#ga26f83014829926e3112de3435a87ac1d">More...</a><br /></td></tr>
<tr class="separator:ga26f83014829926e3112de3435a87ac1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Find the variance of values in the input. </p>
<p>This function performs the operation across all dimensions of the input array. </p><hr/>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga7782e8de146ef2e7816aa75448ef8648"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7782e8de146ef2e7816aa75448ef8648">&#9670;&nbsp;</a></span>af_var()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_var </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>isbiased</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for variance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the variance of the input array along dimension <code>dim</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isbiased</td><td>is boolean denoting Population variance (false) or Sample Variance (true) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the variance is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="ga59baa7e073507920910e1c32ae1d8432"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga59baa7e073507920910e1c32ae1d8432">&#9670;&nbsp;</a></span>af_var_all()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_var_all </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>realVal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>imagVal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>isbiased</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for variance of all elements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">realVal</td><td>will contain the real part of variance of the entire input array </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">imagVal</td><td>will contain the imaginary part of variance of the entire input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isbiased</td><td>is boolean denoting Population variance (false) or Sample Variance (true) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="ga26f83014829926e3112de3435a87ac1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga26f83014829926e3112de3435a87ac1d">&#9670;&nbsp;</a></span>af_var_all_weighted()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_var_all_weighted </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>realVal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>imagVal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>weights</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for variance of all elements in weighted input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">realVal</td><td>will contain the real part of variance of the entire weighted input array </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">imagVal</td><td>will contain the imaginary part of variance of the entire weighted input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights</td><td>is used to scale input <code>in</code> before getting variance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="ga06ad132cb12a5760c2058278456d041e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga06ad132cb12a5760c2058278456d041e">&#9670;&nbsp;</a></span>af_var_weighted()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_var_weighted </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for variance of weighted input array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the variance of the input array along dimension <code>dim</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights</td><td>is used to scale input <code>in</code> before getting variance </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the variance is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="ga413fdb917be8f5173f8b5650a181a120"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga413fdb917be8f5173f8b5650a181a120">&#9670;&nbsp;</a></span>var() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::var </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>isbiased</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for variance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isbiased</td><td>is boolean denoting Population variance (false) or Sample Variance (true) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the variance is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the variance of the input array along dimension <code>dim</code> </dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>dim</code> is -1 by default. -1 denotes the first non-singleton dimension. </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="machine_learning_2naive_bayes_8cpp-example.htm#a8">machine_learning/naive_bayes.cpp</a>.</dd>
</dl>
</div>
</div>
<a id="gad4405591505b482f9f40b697aca4be72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad4405591505b482f9f40b697aca4be72">&#9670;&nbsp;</a></span>var() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::var </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for variance of weighted inputs. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights</td><td>is used to scale input <code>in</code> before getting variance </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the variance is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the variance of the weighted input array along dimension <code>dim</code> </dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>dim</code> is -1 by default. -1 denotes the first non-singleton dimension. </dd></dl>

</div>
</div>
<a id="gac726bf9890ba505b8433477e26c8854c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac726bf9890ba505b8433477e26c8854c">&#9670;&nbsp;</a></span>var() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T af::var </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>isbiased</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for variance of all elements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isbiased</td><td>is boolean denoting Population variance (false) or Sample Variance (true) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>variance of the entire input array </dd></dl>

</div>
</div>
<a id="ga9532100bf99d1b9757250907b3d08917"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9532100bf99d1b9757250907b3d08917">&#9670;&nbsp;</a></span>var() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T af::var </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>weights</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for variance of all elements in weighted input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights</td><td>is used to scale input <code>in</code> before getting variance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>variance of the entire input array </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
