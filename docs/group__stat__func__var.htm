<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: var</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__stat__func__var.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">var<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__stats__mat.htm">Statistics</a> &raquo; <a class="el" href="group__basicstats__mat.htm">Basic statistics functions</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Find the variance of values in the input.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga15da39f142c646212b8e881bf14575e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga15da39f142c646212b8e881bf14575e9">var</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const bool isbiased=false, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:ga15da39f142c646212b8e881bf14575e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance.  <a href="group__stat__func__var.htm#ga15da39f142c646212b8e881bf14575e9">More...</a><br /></td></tr>
<tr class="separator:ga15da39f142c646212b8e881bf14575e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2be08efff9f8a0364db1da5965a09d99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga2be08efff9f8a0364db1da5965a09d99">var</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:ga2be08efff9f8a0364db1da5965a09d99"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance.  <a href="group__stat__func__var.htm#ga2be08efff9f8a0364db1da5965a09d99">More...</a><br /></td></tr>
<tr class="separator:ga2be08efff9f8a0364db1da5965a09d99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4816fc6ab68bc5e7273abbf6b32a2b1a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga4816fc6ab68bc5e7273abbf6b32a2b1a">var</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;weights, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim=-1)</td></tr>
<tr class="memdesc:ga4816fc6ab68bc5e7273abbf6b32a2b1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance of weighted inputs.  <a href="group__stat__func__var.htm#ga4816fc6ab68bc5e7273abbf6b32a2b1a">More...</a><br /></td></tr>
<tr class="separator:ga4816fc6ab68bc5e7273abbf6b32a2b1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga125d9bb2ab282cd6b9cec9f9fc763be4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga125d9bb2ab282cd6b9cec9f9fc763be4"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga125d9bb2ab282cd6b9cec9f9fc763be4">var</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const bool isbiased=false)</td></tr>
<tr class="memdesc:ga125d9bb2ab282cd6b9cec9f9fc763be4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance of all elements.  <a href="group__stat__func__var.htm#ga125d9bb2ab282cd6b9cec9f9fc763be4">More...</a><br /></td></tr>
<tr class="separator:ga125d9bb2ab282cd6b9cec9f9fc763be4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7a13eca3b692375397464ea35249bd72"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga7a13eca3b692375397464ea35249bd72"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga7a13eca3b692375397464ea35249bd72">var</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias)</td></tr>
<tr class="memdesc:ga7a13eca3b692375397464ea35249bd72"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance of all elements.  <a href="group__stat__func__var.htm#ga7a13eca3b692375397464ea35249bd72">More...</a><br /></td></tr>
<tr class="separator:ga7a13eca3b692375397464ea35249bd72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0cca5d8f3637b6a5cb60ed2830256c2b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga0cca5d8f3637b6a5cb60ed2830256c2b"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga0cca5d8f3637b6a5cb60ed2830256c2b">var</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;weights)</td></tr>
<tr class="memdesc:ga0cca5d8f3637b6a5cb60ed2830256c2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for variance of all elements in weighted input.  <a href="group__stat__func__var.htm#ga0cca5d8f3637b6a5cb60ed2830256c2b">More...</a><br /></td></tr>
<tr class="separator:ga0cca5d8f3637b6a5cb60ed2830256c2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7782e8de146ef2e7816aa75448ef8648"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga7782e8de146ef2e7816aa75448ef8648">af_var</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const bool isbiased, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:ga7782e8de146ef2e7816aa75448ef8648"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance.  <a href="group__stat__func__var.htm#ga7782e8de146ef2e7816aa75448ef8648">More...</a><br /></td></tr>
<tr class="separator:ga7782e8de146ef2e7816aa75448ef8648"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae80f87451f42050dc75bf18f543fc410"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#gae80f87451f42050dc75bf18f543fc410">af_var_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:gae80f87451f42050dc75bf18f543fc410"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance.  <a href="group__stat__func__var.htm#gae80f87451f42050dc75bf18f543fc410">More...</a><br /></td></tr>
<tr class="separator:gae80f87451f42050dc75bf18f543fc410"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga06ad132cb12a5760c2058278456d041e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga06ad132cb12a5760c2058278456d041e">af_var_weighted</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> weights, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim)</td></tr>
<tr class="memdesc:ga06ad132cb12a5760c2058278456d041e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance of weighted input array.  <a href="group__stat__func__var.htm#ga06ad132cb12a5760c2058278456d041e">More...</a><br /></td></tr>
<tr class="separator:ga06ad132cb12a5760c2058278456d041e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga59baa7e073507920910e1c32ae1d8432"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga59baa7e073507920910e1c32ae1d8432">af_var_all</a> (double *realVal, double *imagVal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const bool isbiased)</td></tr>
<tr class="memdesc:ga59baa7e073507920910e1c32ae1d8432"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance of all elements.  <a href="group__stat__func__var.htm#ga59baa7e073507920910e1c32ae1d8432">More...</a><br /></td></tr>
<tr class="separator:ga59baa7e073507920910e1c32ae1d8432"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad6a3ed0dd2e0b6878eb6538211c55f5b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#gad6a3ed0dd2e0b6878eb6538211c55f5b">af_var_all_v2</a> (double *realVal, double *imagVal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> bias)</td></tr>
<tr class="memdesc:gad6a3ed0dd2e0b6878eb6538211c55f5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance of all elements.  <a href="group__stat__func__var.htm#gad6a3ed0dd2e0b6878eb6538211c55f5b">More...</a><br /></td></tr>
<tr class="separator:gad6a3ed0dd2e0b6878eb6538211c55f5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga26f83014829926e3112de3435a87ac1d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stat__func__var.htm#ga26f83014829926e3112de3435a87ac1d">af_var_all_weighted</a> (double *realVal, double *imagVal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> weights)</td></tr>
<tr class="memdesc:ga26f83014829926e3112de3435a87ac1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for variance of all elements in weighted input.  <a href="group__stat__func__var.htm#ga26f83014829926e3112de3435a87ac1d">More...</a><br /></td></tr>
<tr class="separator:ga26f83014829926e3112de3435a87ac1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Find the variance of values in the input. </p>
<p >This function performs the operation across all dimensions of the input array. </p>
<hr  />
 <h2 class="groupheader">Function Documentation</h2>
<a id="ga7782e8de146ef2e7816aa75448ef8648" name="ga7782e8de146ef2e7816aa75448ef8648"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7782e8de146ef2e7816aa75448ef8648">&#9670;&#160;</a></span>af_var()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_var </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>isbiased</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for variance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the variance of the input array along dimension <code>dim</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isbiased</td><td>is boolean denoting Population variance (false) or Sample Variance (true) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the variance is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000025">Deprecated:</a></b></dt><dd>Use <a class="el" href="group__stat__func__var.htm#gae80f87451f42050dc75bf18f543fc410">af_var_v2</a> instead </dd></dl>

</div>
</div>
<a id="ga59baa7e073507920910e1c32ae1d8432" name="ga59baa7e073507920910e1c32ae1d8432"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga59baa7e073507920910e1c32ae1d8432">&#9670;&#160;</a></span>af_var_all()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_var_all </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>realVal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>imagVal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>isbiased</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for variance of all elements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">realVal</td><td>will contain the real part of variance of the entire input array </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">imagVal</td><td>will contain the imaginary part of variance of the entire input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isbiased</td><td>is boolean denoting Population variance (false) or Sample Variance (true) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000028">Deprecated:</a></b></dt><dd>Use <a class="el" href="group__stat__func__var.htm#gad6a3ed0dd2e0b6878eb6538211c55f5b">af_var_all_v2</a> instead </dd></dl>

</div>
</div>
<a id="gad6a3ed0dd2e0b6878eb6538211c55f5b" name="gad6a3ed0dd2e0b6878eb6538211c55f5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad6a3ed0dd2e0b6878eb6538211c55f5b">&#9670;&#160;</a></span>af_var_all_v2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_var_all_v2 </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>realVal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>imagVal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a>&#160;</td>
          <td class="paramname"><em>bias</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for variance of all elements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">realVal</td><td>will contain the real part of variance of the entire input array </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">imagVal</td><td>will contain the imaginary part of variance of the entire input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bias</td><td>The type of bias used for variance calculation. Takes of value of type <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="ga26f83014829926e3112de3435a87ac1d" name="ga26f83014829926e3112de3435a87ac1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga26f83014829926e3112de3435a87ac1d">&#9670;&#160;</a></span>af_var_all_weighted()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_var_all_weighted </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>realVal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>imagVal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>weights</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for variance of all elements in weighted input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">realVal</td><td>will contain the real part of variance of the entire weighted input array </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">imagVal</td><td>will contain the imaginary part of variance of the entire weighted input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights</td><td>is used to scale input <code>in</code> before getting variance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="gae80f87451f42050dc75bf18f543fc410" name="gae80f87451f42050dc75bf18f543fc410"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae80f87451f42050dc75bf18f543fc410">&#9670;&#160;</a></span>af_var_v2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_var_v2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a>&#160;</td>
          <td class="paramname"><em>bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for variance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the variance of the input array along dimension <code>dim</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bias</td><td>The type of bias used for variance calculation. Takes of value of type <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the variance is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="ga06ad132cb12a5760c2058278456d041e" name="ga06ad132cb12a5760c2058278456d041e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga06ad132cb12a5760c2058278456d041e">&#9670;&#160;</a></span>af_var_weighted()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_var_weighted </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for variance of weighted input array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the variance of the input array along dimension <code>dim</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights</td><td>is used to scale input <code>in</code> before getting variance </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the variance is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="ga7a13eca3b692375397464ea35249bd72" name="ga7a13eca3b692375397464ea35249bd72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7a13eca3b692375397464ea35249bd72">&#9670;&#160;</a></span>var() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T var </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a>&#160;</td>
          <td class="paramname"><em>bias</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for variance of all elements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bias</td><td>The type of bias used for variance calculation. Takes of value of type <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>variance of the <code>in</code> array </dd></dl>

</div>
</div>
<a id="ga2be08efff9f8a0364db1da5965a09d99" name="ga2be08efff9f8a0364db1da5965a09d99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2be08efff9f8a0364db1da5965a09d99">&#9670;&#160;</a></span>var() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> var </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a>&#160;</td>
          <td class="paramname"><em>bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for variance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bias</td><td>The type of bias used for variance calculation. Takes o value of type <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the variance is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the variance of the input array along dimension <code>dim</code> </dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>dim</code> is -1 by default. -1 denotes the first non-singleton dimension. </dd></dl>

</div>
</div>
<a id="ga0cca5d8f3637b6a5cb60ed2830256c2b" name="ga0cca5d8f3637b6a5cb60ed2830256c2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0cca5d8f3637b6a5cb60ed2830256c2b">&#9670;&#160;</a></span>var() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T var </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>weights</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for variance of all elements in weighted input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights</td><td>is used to scale input <code>in</code> before getting variance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>variance of the entire input array </dd></dl>

</div>
</div>
<a id="ga4816fc6ab68bc5e7273abbf6b32a2b1a" name="ga4816fc6ab68bc5e7273abbf6b32a2b1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4816fc6ab68bc5e7273abbf6b32a2b1a">&#9670;&#160;</a></span>var() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> var </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for variance of weighted inputs. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights</td><td>is used to scale input <code>in</code> before getting variance </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the variance is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the variance of the weighted input array along dimension <code>dim</code> </dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>dim</code> is -1 by default. -1 denotes the first non-singleton dimension. </dd></dl>

</div>
</div>
<a id="ga125d9bb2ab282cd6b9cec9f9fc763be4" name="ga125d9bb2ab282cd6b9cec9f9fc763be4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga125d9bb2ab282cd6b9cec9f9fc763be4">&#9670;&#160;</a></span>var() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T var </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>isbiased</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for variance of all elements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isbiased</td><td>is boolean denoting Population variance (false) or Sample Variance (true) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>variance of the entire input array</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000033">Deprecated:</a></b></dt><dd>Use <a class="el" href="group__stat__func__var.htm#ga15da39f142c646212b8e881bf14575e9">af::var</a> that takes <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> instead </dd></dl>

</div>
</div>
<a id="ga15da39f142c646212b8e881bf14575e9" name="ga15da39f142c646212b8e881bf14575e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga15da39f142c646212b8e881bf14575e9">&#9670;&#160;</a></span>var() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> var </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>isbiased</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>dim</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for variance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isbiased</td><td>is boolean denoting Population variance (false) or Sample Variance (true) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>the dimension along which the variance is extracted </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the variance of the input array along dimension <code>dim</code> </dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>dim</code> is -1 by default. -1 denotes the first non-singleton dimension.</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000030">Deprecated:</a></b></dt><dd>Use <a class="el" href="group__stat__func__var.htm#ga15da39f142c646212b8e881bf14575e9">af::var</a> that takes <a class="el" href="defines_8h.htm#aab89eedd894e64d37f6d57a743306ca6">af_var_bias</a> instead </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Wed Aug 30 2023 15:41:58 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
