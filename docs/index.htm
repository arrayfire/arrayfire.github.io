<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: Overview</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li class="current"><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('index.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="PageDoc"><div class="header">
  <div class="headertitle">
<div class="title">Overview </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p><a class="anchor" id="mainpage"></a></p>
<h1>About ArrayFire</h1>
<p>ArrayFire is a high performance software library for parallel computing with an easy-to-use API. Its array based function set makes parallel programming more accessible.</p>
<h1>Installing ArrayFire</h1>
<p>You can install ArrayFire using either a binary installer for Windows, OSX, or Linux or download it from source:</p>
<ul>
<li><a class="el" href="installing.htm">Binary installers for Windows, OSX, and Linux</a></li>
<li><a href="https://github.com/arrayfire/arrayfire">Build from source</a></li>
</ul>
<h1>Easy to use</h1>
<p>The <a class="el" href="classaf_1_1array.htm">array</a> object is beautifully simple.</p>
<p>Array-based notation effectively expresses computational algorithms in readable math-resembling notation. You <em>do not</em> need expertise in parallel programming to use ArrayFire.</p>
<p>A few lines of ArrayFire code accomplishes what can take 100s of complicated lines in CUDA or OpenCL kernels.</p>
<h1>ArrayFire is extensive!</h1>
<h3>Support for multiple domains</h3>
<p>ArrayFire contains <a class="el" href="group__arrayfire__func.htm">hundreds of functions</a> across various domains including:</p><ul>
<li><a class="el" href="group__vector__mat.htm">Vector Algorithms</a></li>
<li><a class="el" href="group__image__mat.htm">Image Processing</a></li>
<li><a class="el" href="group__cv__mat.htm">Computer Vision</a></li>
<li><a class="el" href="group__signal__mat.htm">Signal Processing</a></li>
<li><a class="el" href="group__linalg__mat.htm">Linear Algebra</a></li>
<li><a class="el" href="group__stats__mat.htm">Statistics</a></li>
<li>and more.</li>
</ul>
<p>Each function is hand-tuned by ArrayFire developers with all possible low-level optimizations.</p>
<h3>Support for various data types and sizes</h3>
<p>ArrayFire operates on common <a class="el" href="indexing.htm">data shapes and sizes</a>, including vectors, matrices, volumes, and</p>
<p>It supports common <a class="el" href="gettingstarted.htm#gettingstarted_datatypes">data types</a>, including single and double precision floating point values, complex numbers, booleans, and 32-bit signed and unsigned integers.</p>
<h3>Extending ArrayFire</h3>
<p>ArrayFire can be used as a stand-alone application or integrated with existing CUDA or OpenCL code. All ArrayFire <code>arrays</code> can be interchanged with other CUDA or OpenCL data structures.</p>
<h1>Code once, run anywhere!</h1>
<p>With support for x86, ARM, CUDA, and OpenCL devices, ArrayFire supports for a comprehensive list of devices.</p>
<p>Each ArrayFire installation comes with:</p><ul>
<li>a CUDA version (named 'libafcuda') for <a href="https://developer.nvidia.com/cuda-gpus">NVIDIA GPUs</a>,</li>
<li>an OpenCL version (named 'libafopencl') for <a href="http://www.khronos.org/conformance/adopters/conformant-products#opencl">OpenCL devices</a></li>
<li>a CPU version (named 'libafcpu') to fall back to when CUDA or OpenCL devices are not available.</li>
</ul>
<h1>ArrayFire is highly efficient</h1>
<h3>Vectorized and Batched Operations</h3>
<p>ArrayFire supports batched operations on N-dimensional arrays. Batch operations in ArrayFire are run in parallel ensuring an optimal usage of your CUDA or OpenCL device.</p>
<p>You can get the best performance out of ArrayFire using <a class="el" href="vectorization.htm">vectorization techniques</a>.</p>
<p>ArrayFire can also execute loop iterations in parallel with <a class="el" href="page_gfor.htm#gfor">the gfor function</a>.</p>
<h3>Just in Time compilation</h3>
<p>ArrayFire performs run-time analysis of your code to increase arithmetic intensity and memory throughput, while avoiding unnecessary temporary allocations. It has an awesome internal JIT compiler to make optimizations for you.</p>
<p>Read more about how <a href="http://arrayfire.com/performance-of-arrayfire-jit-code-generation/">ArrayFire JIT</a> can improve the performance in your application.</p>
<h1>Simple Example</h1>
<p>Here's a live example to let you see ArrayFire code. You create <a class="el" href="classaf_1_1array.htm">arrays</a> which reside on CUDA or OpenCL devices. Then you can use <a href="modules.htm">ArrayFire functions</a> on those <a class="el" href="classaf_1_1array.htm">arrays</a>.</p>
<div class="fragment"><div class="line"><span class="comment">// sample 40 million points on the GPU</span></div>
<div class="line"><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> x = <a class="code" href="group__random__func__randu.htm#gabe9a79d7b21f0a8fb7ace6920ead4772">randu</a>(20e6), y = <a class="code" href="group__random__func__randu.htm#gabe9a79d7b21f0a8fb7ace6920ead4772">randu</a>(20e6);</div>
<div class="line"><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> dist = <a class="code" href="group__arith__func__sqrt.htm#ga25c678d4cd9e0702bbc93e11d7d516a8">sqrt</a>(x * x + y * y);</div>
<div class="line"> </div>
<div class="line"><span class="comment">// pi is ratio of how many fell in the unit circle</span></div>
<div class="line"><span class="keywordtype">float</span> num_inside = sum&lt;float&gt;(dist &lt; 1);</div>
<div class="line"><span class="keywordtype">float</span> pi = 4.0 * num_inside / 20e6;</div>
<div class="line"><a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(pi);</div>
</div><!-- fragment --><h1>Product Support</h1>
<h3>Free Community Options</h3>
<ul>
<li><a href="https://groups.google.com/forum/#!forum/arrayfire-users">ArrayFire mailing list</a> (recommended)</li>
<li><a href="http://stackoverflow.com/questions/tagged/arrayfire">StackOverflow</a></li>
</ul>
<h3>Premium Support</h3>
<ul>
<li>Phone Support - available for purchase (<a href="#" onclick="location.href='mai'+'lto:'+'sal'+'es'+'@ar'+'ra'+'yfi'+'re'+'.co'+'m'; return false;">request a quote</a>)</li>
</ul>
<h3>Contact Us</h3>
<ul>
<li>If you need to contact us, visit our <a href="http://arrayfire.com/company/#contact">contact us page</a>.</li>
</ul>
<h3>Email</h3>
<ul>
<li>Engineering: <a href="#" onclick="location.href='mai'+'lto:'+'tec'+'hn'+'ica'+'l@'+'arr'+'ay'+'fir'+'e.'+'com'; return false;">techn<span style="display: none;">.nosp@m.</span>ical<span style="display: none;">.nosp@m.</span>@arra<span style="display: none;">.nosp@m.</span>yfir<span style="display: none;">.nosp@m.</span>e.com</a></li>
<li>Sales: <a href="#" onclick="location.href='mai'+'lto:'+'sal'+'es'+'@ar'+'ra'+'yfi'+'re'+'.co'+'m'; return false;">sales<span style="display: none;">.nosp@m.</span>@arr<span style="display: none;">.nosp@m.</span>ayfir<span style="display: none;">.nosp@m.</span>e.co<span style="display: none;">.nosp@m.</span>m</a></li>
</ul>
<h1>Citations and Acknowledgements</h1>
<p>If you redistribute ArrayFire, please follow the terms established in <a href="https://github.com/arrayfire/arrayfire/blob/master/LICENSE">the license</a>. If you wish to cite ArrayFire in an academic publication, please use the following reference:</p>
<p>Formatted: </p><pre class="fragment">Yalamanchili, P., Arshad, U., Mohammed, Z., Garigipati, P., Entschev, P.,
Kloppenborg, B., Malcolm, James and Melonakos, J. (2015).
ArrayFire - A high performance software library for parallel computing with an
easy-to-use API. Atlanta: AccelerEyes. Retrieved from https://github.com/arrayfire/arrayfire
</pre><p>BibTeX: </p><pre class="fragment">@misc{Yalamanchili2015,
abstract = {ArrayFire is a high performance software library for parallel computing with an easy-to-use API. Its array based function set makes parallel programming simple. ArrayFire's multiple backends (CUDA, OpenCL and native CPU) make it platform independent and highly portable. A few lines of code in ArrayFire can replace dozens of lines of parallel computing code, saving you valuable time and lowering development costs.},
address = {Atlanta},
author = {Yalamanchili, Pavan and Arshad, Umar and Mohammed, Zakiuddin and Garigipati, Pradeep and Entschev, Peter and Kloppenborg, Brian and Malcolm, James and Melonakos, John},
publisher = {AccelerEyes},
title = {{ArrayFire - A high performance software library for parallel computing with an easy-to-use API}},
url = {https://github.com/arrayfire/arrayfire},
year = {2015}
}
</pre><p>ArrayFire development is funded by ArrayFire LLC and several third parties, please see the list of <a href="https://github.com/arrayfire/arrayfire/blob/master/ACKNOWLEDGEMENTS.md">acknowledgements</a>. </p>
</div></div><!-- PageDoc -->
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="autil_8h_htm_a6de8e7f9eb3914d1cea66e55e7b791d3"><div class="ttname"><a href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a></div><div class="ttdeci">#define af_print(...)</div><div class="ttdef"><b>Definition:</b> <a href="util_8h_source.htm#l00149">util.h:148</a></div></div>
<div class="ttc" id="agroup__arith__func__sqrt_htm_ga25c678d4cd9e0702bbc93e11d7d516a8"><div class="ttname"><a href="group__arith__func__sqrt.htm#ga25c678d4cd9e0702bbc93e11d7d516a8">af::sqrt</a></div><div class="ttdeci">AFAPI array sqrt(const array &amp;in)</div><div class="ttdoc">C++ Interface for square root of input.</div></div>
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
<div class="ttc" id="agroup__random__func__randu_htm_gabe9a79d7b21f0a8fb7ace6920ead4772"><div class="ttname"><a href="group__random__func__randu.htm#gabe9a79d7b21f0a8fb7ace6920ead4772">af::randu</a></div><div class="ttdeci">AFAPI array randu(const dim4 &amp;dims, const dtype ty, randomEngine &amp;r)</div></div>
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
