<!-- HTML header for doxygen 1.9.3-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.3"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: cholesky</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
  <!--<td id="projectalign">
   <div id="projectname">ArrayFire<span id="projectnumber">&#160;3.8.1</span>
   </div>
   <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>-->
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.3 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__lapack__factor__func__cholesky.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">cholesky<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__linalg__mat.htm">Linear Algebra</a> &raquo; <a class="el" href="group__lapack__factor__mat.htm">Matrix factorizations and decompositions</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Perform Cholesky decomposition.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gad4a8bbe24dd91ab1f5fdbe5b70940f64"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__lapack__factor__func__cholesky.htm#gad4a8bbe24dd91ab1f5fdbe5b70940f64">cholesky</a> (<a class="el" href="classaf_1_1array.htm">array</a> &amp;out, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const bool is_upper=true)</td></tr>
<tr class="memdesc:gad4a8bbe24dd91ab1f5fdbe5b70940f64"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for cholesky decomposition.  <a href="group__lapack__factor__func__cholesky.htm#gad4a8bbe24dd91ab1f5fdbe5b70940f64">More...</a><br /></td></tr>
<tr class="separator:gad4a8bbe24dd91ab1f5fdbe5b70940f64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac1d4ac4de57dea4841cb11c5e6865792"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__lapack__factor__func__cholesky.htm#gac1d4ac4de57dea4841cb11c5e6865792">choleskyInPlace</a> (<a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const bool is_upper=true)</td></tr>
<tr class="memdesc:gac1d4ac4de57dea4841cb11c5e6865792"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for in place cholesky decomposition.  <a href="group__lapack__factor__func__cholesky.htm#gac1d4ac4de57dea4841cb11c5e6865792">More...</a><br /></td></tr>
<tr class="separator:gac1d4ac4de57dea4841cb11c5e6865792"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab9428b008330b309bb6359a6b1c474ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__lapack__factor__func__cholesky.htm#gab9428b008330b309bb6359a6b1c474ca">af_cholesky</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, int *info, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const bool is_upper)</td></tr>
<tr class="memdesc:gab9428b008330b309bb6359a6b1c474ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for cholesky decomposition.  <a href="group__lapack__factor__func__cholesky.htm#gab9428b008330b309bb6359a6b1c474ca">More...</a><br /></td></tr>
<tr class="separator:gab9428b008330b309bb6359a6b1c474ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad87cdbff216808d53640ddb9fb71d293"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__lapack__factor__func__cholesky.htm#gad87cdbff216808d53640ddb9fb71d293">af_cholesky_inplace</a> (int *info, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const bool is_upper)</td></tr>
<tr class="memdesc:gad87cdbff216808d53640ddb9fb71d293"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for in place cholesky decomposition.  <a href="group__lapack__factor__func__cholesky.htm#gad87cdbff216808d53640ddb9fb71d293">More...</a><br /></td></tr>
<tr class="separator:gad87cdbff216808d53640ddb9fb71d293"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Perform Cholesky decomposition. </p>
<p >This function decomposes a <a href="http://en.wikipedia.org/wiki/Positive-definite_matrix">positive definite</a> matrix <b>A</b> into two triangular matrices such that </p><pre class="fragment"> \f$A = L * U\f$

 \f$L = U^T\f$
</pre><p> Only one of <b>L</b> and <b>U</b> is stored to conserve space when solving linear equations.</p>
<p >This operation can be performed in ArrayFire using the following code snippet.</p>
<div class="fragment"><div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> out;</div>
<div class="line">    <a class="code hl_function" href="group__lapack__factor__func__cholesky.htm#gad4a8bbe24dd91ab1f5fdbe5b70940f64">cholesky</a>(out, in, is_upper);</div>
<div class="ttc" id="agroup__lapack__factor__func__cholesky_htm_gad4a8bbe24dd91ab1f5fdbe5b70940f64"><div class="ttname"><a href="group__lapack__factor__func__cholesky.htm#gad4a8bbe24dd91ab1f5fdbe5b70940f64">af::cholesky</a></div><div class="ttdeci">AFAPI int cholesky(array &amp;out, const array &amp;in, const bool is_upper=true)</div><div class="ttdoc">C++ Interface for cholesky decomposition.</div></div>
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
</div><!-- fragment --><p >When memory is a concern, users can perform Cholesky decomposition in place as shown below.</p>
<div class="fragment"><div class="line">    <a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> in2 = in.<a class="code hl_function" href="classaf_1_1array.htm#aa859f53b411dd3ab37c8c817b4352e07">copy</a>();</div>
<div class="line">    <a class="code hl_function" href="group__lapack__factor__func__cholesky.htm#gac1d4ac4de57dea4841cb11c5e6865792">choleskyInPlace</a>(in2, is_upper);</div>
<div class="ttc" id="aclassaf_1_1array_htm_aa859f53b411dd3ab37c8c817b4352e07"><div class="ttname"><a href="classaf_1_1array.htm#aa859f53b411dd3ab37c8c817b4352e07">af::array::copy</a></div><div class="ttdeci">array copy() const</div><div class="ttdoc">Perform deep copy of the array.</div></div>
<div class="ttc" id="agroup__lapack__factor__func__cholesky_htm_gac1d4ac4de57dea4841cb11c5e6865792"><div class="ttname"><a href="group__lapack__factor__func__cholesky.htm#gac1d4ac4de57dea4841cb11c5e6865792">af::choleskyInPlace</a></div><div class="ttdeci">AFAPI int choleskyInPlace(array &amp;in, const bool is_upper=true)</div><div class="ttdoc">C++ Interface for in place cholesky decomposition.</div></div>
</div><!-- fragment --><hr  />
 <h2 class="groupheader">Function Documentation</h2>
<a id="gab9428b008330b309bb6359a6b1c474ca" name="gab9428b008330b309bb6359a6b1c474ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab9428b008330b309bb6359a6b1c474ca">&#9670;&nbsp;</a></span>af_cholesky()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_cholesky </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>is_upper</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for cholesky decomposition. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>contains the triangular matrix. Multiply <code>out</code> with it conjugate transpose reproduces the input <code>in</code>. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">info</td><td>is <code>0</code> if cholesky decomposition passes, if not it returns the rank at which the decomposition failed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_upper</td><td>a boolean determining if <code>out</code> is upper or lower triangular</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>The input matrix <b>has</b> to be a positive definite matrix, if it is not zero, the cholesky decomposition functions return a non zero output. </dd></dl>

</div>
</div>
<a id="gad87cdbff216808d53640ddb9fb71d293" name="gad87cdbff216808d53640ddb9fb71d293"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad87cdbff216808d53640ddb9fb71d293">&#9670;&nbsp;</a></span>af_cholesky_inplace()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_cholesky_inplace </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>is_upper</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for in place cholesky decomposition. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">info</td><td>is <code>0</code> if cholesky decomposition passes, if not it returns the rank at which the decomposition failed. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">in</td><td>is the input matrix on entry. It contains the triangular matrix on exit. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_upper</td><td>a boolean determining if <code>in</code> is upper or lower triangular</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>The input matrix <b>has</b> to be a positive definite matrix, if it is not zero, the cholesky decomposition functions return a non zero output. </dd></dl>

</div>
</div>
<a id="gad4a8bbe24dd91ab1f5fdbe5b70940f64" name="gad4a8bbe24dd91ab1f5fdbe5b70940f64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad4a8bbe24dd91ab1f5fdbe5b70940f64">&#9670;&nbsp;</a></span>cholesky()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> int af::cholesky </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>is_upper</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for cholesky decomposition. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>contains the triangular matrix. Multiply <code>out</code> with its conjugate transpose reproduces the input <code>in</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_upper</td><td>a boolean determining if <code>out</code> is upper or lower triangular</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><code>0</code> if cholesky decomposition passes, if not it returns the rank at which the decomposition failed.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The input matrix <b>has</b> to be a positive definite matrix, if it is not zero, the cholesky decomposition functions return a non-zero output. </dd>
<dd>
This function is not supported in GFOR </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="lin_algebra_2cholesky_8cpp-example.htm#a9">lin_algebra/cholesky.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="gac1d4ac4de57dea4841cb11c5e6865792" name="gac1d4ac4de57dea4841cb11c5e6865792"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac1d4ac4de57dea4841cb11c5e6865792">&#9670;&nbsp;</a></span>choleskyInPlace()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> int af::choleskyInPlace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>is_upper</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for in place cholesky decomposition. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">in</td><td>is the input matrix on entry. It contains the triangular matrix on exit. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_upper</td><td>a boolean determining if <code>in</code> is upper or lower triangular</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><code>0</code> if cholesky decomposition passes, if not it returns the rank at which the decomposition failed.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The input matrix <b>has</b> to be a positive definite matrix, if it is not zero, the cholesky decomposition functions return a non-zero output. </dd>
<dd>
This function is not supported in GFOR </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="lin_algebra_2cholesky_8cpp-example.htm#a8">lin_algebra/cholesky.cpp</a>.</dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Thu Feb 24 2022 14:12:33 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.3 </li>
    </ul>
</div>
</body>
</html>
