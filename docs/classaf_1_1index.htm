<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>index Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classaf_1_1index.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">index Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Wrapper for af_index.  
 <a href="classaf_1_1index.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="index_8h_source.htm">index.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a149eb92716c1084a935e04a8d95f7347"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1index.htm#a149eb92716c1084a935e04a8d95f7347">index</a> ()</td></tr>
<tr class="memdesc:a149eb92716c1084a935e04a8d95f7347"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a149eb92716c1084a935e04a8d95f7347">More...</a><br /></td></tr>
<tr class="separator:a149eb92716c1084a935e04a8d95f7347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2ca18df5addbd81bb476477e822bf2e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1index.htm#aa2ca18df5addbd81bb476477e822bf2e">~index</a> ()</td></tr>
<tr class="separator:aa2ca18df5addbd81bb476477e822bf2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6e05022b3f52755fbdad4d7ac680d7f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1index.htm#ab6e05022b3f52755fbdad4d7ac680d7f">index</a> (const int idx)</td></tr>
<tr class="memdesc:ab6e05022b3f52755fbdad4d7ac680d7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implicit int converter.  <a href="#ab6e05022b3f52755fbdad4d7ac680d7f">More...</a><br /></td></tr>
<tr class="separator:ab6e05022b3f52755fbdad4d7ac680d7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09a23c678003d2ebc82873b54198481e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1index.htm#a09a23c678003d2ebc82873b54198481e">index</a> (const <a class="el" href="classaf_1_1seq.htm">af::seq</a> &amp;s0)</td></tr>
<tr class="memdesc:a09a23c678003d2ebc82873b54198481e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implicit seq converter.  <a href="#a09a23c678003d2ebc82873b54198481e">More...</a><br /></td></tr>
<tr class="separator:a09a23c678003d2ebc82873b54198481e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b8cbe8d9768c6e57b953f6e3c298b1b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1index.htm#a4b8cbe8d9768c6e57b953f6e3c298b1b">index</a> (const <a class="el" href="structaf__seq.htm">af_seq</a> &amp;s0)</td></tr>
<tr class="memdesc:a4b8cbe8d9768c6e57b953f6e3c298b1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implicit seq converter.  <a href="#a4b8cbe8d9768c6e57b953f6e3c298b1b">More...</a><br /></td></tr>
<tr class="separator:a4b8cbe8d9768c6e57b953f6e3c298b1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18866c96649b856448272fbe723bb330"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1index.htm#a18866c96649b856448272fbe723bb330">index</a> (const <a class="el" href="classaf_1_1array.htm">af::array</a> &amp;idx0)</td></tr>
<tr class="memdesc:a18866c96649b856448272fbe723bb330"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implicit int converter.  <a href="#a18866c96649b856448272fbe723bb330">More...</a><br /></td></tr>
<tr class="separator:a18866c96649b856448272fbe723bb330"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a538f1bf60d71a8ab134e2d377e04534b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1index.htm#a538f1bf60d71a8ab134e2d377e04534b">index</a> (const <a class="el" href="classaf_1_1index.htm">index</a> &amp;idx0)</td></tr>
<tr class="memdesc:a538f1bf60d71a8ab134e2d377e04534b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="#a538f1bf60d71a8ab134e2d377e04534b">More...</a><br /></td></tr>
<tr class="separator:a538f1bf60d71a8ab134e2d377e04534b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa67a60dc73ab95ff238e88a16b074862"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1index.htm#aa67a60dc73ab95ff238e88a16b074862">isspan</a> () const </td></tr>
<tr class="memdesc:aa67a60dc73ab95ff238e88a16b074862"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the <a class="el" href="classaf_1_1index.htm">af::index</a> represents a <a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">af::span</a> object.  <a href="#aa67a60dc73ab95ff238e88a16b074862">More...</a><br /></td></tr>
<tr class="separator:aa67a60dc73ab95ff238e88a16b074862"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac72aa08e915ad5ecc4bc646f62c94d41"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structaf__index__t.htm">af_index_t</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1index.htm#ac72aa08e915ad5ecc4bc646f62c94d41">get</a> () const </td></tr>
<tr class="memdesc:ac72aa08e915ad5ecc4bc646f62c94d41"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the underlying <a class="el" href="structaf__index__t.htm" title="Struct used while indexing af_array. ">af_index_t</a> object.  <a href="#ac72aa08e915ad5ecc4bc646f62c94d41">More...</a><br /></td></tr>
<tr class="separator:ac72aa08e915ad5ecc4bc646f62c94d41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8447f5f5e259a7043ef129e01246be1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1index.htm">index</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1index.htm#af8447f5f5e259a7043ef129e01246be1">operator=</a> (const <a class="el" href="classaf_1_1index.htm">index</a> &amp;idx0)</td></tr>
<tr class="memdesc:af8447f5f5e259a7043ef129e01246be1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns idx0 to this index.  <a href="#af8447f5f5e259a7043ef129e01246be1">More...</a><br /></td></tr>
<tr class="separator:af8447f5f5e259a7043ef129e01246be1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Wrapper for af_index. </p>
<p>This class is a wrapper for the af_index struct in the C interface. It allows implicit type conversion from valid indexing types like int, <a class="el" href="classaf_1_1seq.htm">af::seq</a>, <a class="el" href="structaf__seq.htm">af_seq</a>, and <a class="el" href="classaf_1_1array.htm">af::array</a>.</p>
<dl class="section note"><dt>Note</dt><dd>This is a helper class and does not necessarily need to be created explicitly. It is used in the operator() overloads to simplify the API. </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a149eb92716c1084a935e04a8d95f7347"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1index.htm">index</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>
<p>Equivalent to <a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">af::span</a> </p>

</div>
</div>
<a class="anchor" id="aa2ca18df5addbd81bb476477e822bf2e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classaf_1_1index.htm">index</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ab6e05022b3f52755fbdad4d7ac680d7f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1index.htm">index</a> </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Implicit int converter. </p>
<p>Indexes the <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container. ">af::array</a> at index <code>idx</code> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>is the id of the index</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd>indexing </dd></dl>

</div>
</div>
<a class="anchor" id="a09a23c678003d2ebc82873b54198481e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1index.htm">index</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1seq.htm">af::seq</a> &amp;&#160;</td>
          <td class="paramname"><em>s0</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Implicit seq converter. </p>
<p>Indexes the <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container. ">af::array</a> using an <a class="el" href="classaf_1_1seq.htm">af::seq</a> object</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s0</td><td>is the set of indices to parse</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd>indexing </dd></dl>

</div>
</div>
<a class="anchor" id="a4b8cbe8d9768c6e57b953f6e3c298b1b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1index.htm">index</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structaf__seq.htm">af_seq</a> &amp;&#160;</td>
          <td class="paramname"><em>s0</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Implicit seq converter. </p>
<p>Indexes the <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container. ">af::array</a> using an <a class="el" href="structaf__seq.htm">af_seq</a> object</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s0</td><td>is the set of indices to parse</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd>indexing </dd></dl>

</div>
</div>
<a class="anchor" id="a18866c96649b856448272fbe723bb330"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1index.htm">index</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">af::array</a> &amp;&#160;</td>
          <td class="paramname"><em>idx0</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Implicit int converter. </p>
<p>Indexes the <a class="el" href="classaf_1_1array.htm" title="A multi dimensional data container. ">af::array</a> using an <a class="el" href="classaf_1_1array.htm">af::array</a> object</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx0</td><td>is the set of indices to parse</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd>indexing </dd></dl>

</div>
</div>
<a class="anchor" id="a538f1bf60d71a8ab134e2d377e04534b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1index.htm">index</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1index.htm">index</a> &amp;&#160;</td>
          <td class="paramname"><em>idx0</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx0</td><td>is index to copy.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd>indexing </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ac72aa08e915ad5ecc4bc646f62c94d41"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structaf__index__t.htm">af_index_t</a>&amp; get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the underlying <a class="el" href="structaf__index__t.htm" title="Struct used while indexing af_array. ">af_index_t</a> object. </p>
<dl class="section return"><dt>Returns</dt><dd>the <a class="el" href="structaf__index__t.htm" title="Struct used while indexing af_array. ">af_index_t</a> represented by this object </dd></dl>

</div>
</div>
<a class="anchor" id="aa67a60dc73ab95ff238e88a16b074862"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool isspan </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if the <a class="el" href="classaf_1_1index.htm">af::index</a> represents a <a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">af::span</a> object. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the <a class="el" href="classaf_1_1index.htm" title="Wrapper for af_index. ">af::index</a> is an <a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">af::span</a> </dd></dl>

</div>
</div>
<a class="anchor" id="af8447f5f5e259a7043ef129e01246be1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1index.htm">index</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1index.htm">index</a> &amp;&#160;</td>
          <td class="paramname"><em>idx0</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assigns idx0 to this index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx0</td><td>is the index to be assigned to the /ref <a class="el" href="classaf_1_1index.htm" title="Wrapper for af_index. ">af::index</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference to this </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="index_8h_source.htm">index.h (2016-09-13 00:16:37 -0400, (build 10d9716))</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
