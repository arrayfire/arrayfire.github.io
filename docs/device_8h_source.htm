<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>device.h (2016-12-28 15:40:52 -0500, (build fff6156)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('device_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">device.h (2016-12-28 15:40:52 -0500, (build fff6156))</div>  </div>
</div><!--header-->
<div class="contents">
<a href="device_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*******************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2014, ArrayFire</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * All rights reserved.</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * This file is distributed under 3-clause BSD license.</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * The complete license agreement can be obtained at:</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> ********************************************************/</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="defines_8h.htm">af/defines.h</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceaf.htm">af</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">info</a>();</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="group__device__func__info__string.htm#ga73ee21947f018445ea720036c1edfb69">infoString</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> verbose = <span class="keyword">false</span>);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__device__func__prop.htm#gaa9eab56ddac21650581682912ea78293">deviceInfo</a>(<span class="keywordtype">char</span>* d_name, <span class="keywordtype">char</span>* d_platform, <span class="keywordtype">char</span> *d_toolkit, <span class="keywordtype">char</span>* d_compute);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">int</span> <a class="code" href="group__device__func__count.htm#gac3c8750da69ee883fd14c0a8290e45f1">getDeviceCount</a>();</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">int</span> <a class="code" href="group__device__func__get.htm#ga4dfe3f90475b735384f8b28cf2b19a11">getDevice</a>();</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">bool</span> <a class="code" href="group__device__func__dbl.htm#ga22ede4a4ca1aa4e5aefbde91afa1b626">isDoubleAvailable</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> device);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7">setDevice</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> device);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__device__func__sync.htm#ga8c5d51841cf4f2ddbdd6a3146cf2b390">sync</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> device = -1);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> *<a class="code" href="group__device__func__alloc.htm#ga5404b7af62d6f5b31d81791b5558ecce">alloc</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> elements, <span class="keyword">const</span> <a class="code" href="namespaceaf.htm#a448f59f3b863561e0fbe00f04dbeca1e">dtype</a> type);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="comment">//</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"></span>    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    T* <a class="code" href="group__device__func__alloc.htm#ga5404b7af62d6f5b31d81791b5558ecce">alloc</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> elements);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__device__func__free.htm#ga0ae826ba755d07ece21f2a9ba30ec35e">free</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *ptr);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> *<a class="code" href="group__device__func__pinned.htm#ga738a15e97dbd41d82230cafaa53436cc">pinned</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> elements, <span class="keyword">const</span> <a class="code" href="namespaceaf.htm#a448f59f3b863561e0fbe00f04dbeca1e">dtype</a> type);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    T* <a class="code" href="group__device__func__pinned.htm#ga738a15e97dbd41d82230cafaa53436cc">pinned</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> elements);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__device__func__free__pinned.htm#ga921d5597b54714eb9c84dca5d8ab0708">freePinned</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *ptr);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 33</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> *<a class="code" href="group__device__func__alloc__host.htm#ga73fc5021d9626b65a22e1edd3e1384b1">allocHost</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> elements, <span class="keyword">const</span> <a class="code" href="namespaceaf.htm#a448f59f3b863561e0fbe00f04dbeca1e">dtype</a> type);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 33</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> T* <a class="code" href="group__device__func__alloc__host.htm#ga73fc5021d9626b65a22e1edd3e1384b1">allocHost</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> elements);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 33</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="comment">//</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"></span>    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__device__func__free__host.htm#ga0cc924b1055eee26851be4cd7bedee44">freeHost</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *ptr);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="comment">//                          manager</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"></span>    <span class="comment">//                              manager</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"></span>    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__device__func__mem.htm#gae763d44f5c5cd80d4cf31fd044ee4e3d">deviceMemInfo</a>(<span class="keywordtype">size_t</span> *alloc_bytes, <span class="keywordtype">size_t</span> *alloc_buffers,</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                             <span class="keywordtype">size_t</span> *lock_bytes, <span class="keywordtype">size_t</span> *lock_buffers);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 33</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="comment">//</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment"></span>    <span class="comment">//</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment"></span>    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__device__func__mem.htm#ga64f2598efae63032e3f9d20841f6abeb">printMemInfo</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *msg = NULL, <span class="keyword">const</span> <span class="keywordtype">int</span> device_id = -1);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__device__func__mem.htm#ga2fa2d8f09a01b92e840c8149630246d6">deviceGC</a>();</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__device__func__mem.htm#ga9c79ca1f0e4dcf4168596d9602d7795c">setMemStepSize</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> size);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">size_t</span> <a class="code" href="group__device__func__mem.htm#ga779bdc65de61e76e066d2cda263a814e">getMemStepSize</a>();</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;}</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__info.htm#ga55e3054334c0fbc23676bc93a2bec066">af_info</a>();</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__info.htm#gacbdf7b79d778344d30deb77c06ac7367">af_init</a>();</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__info__string.htm#gacc0f17e14982d390284347d4dc82b461">af_info_string</a>(<span class="keywordtype">char</span>** str, <span class="keyword">const</span> <span class="keywordtype">bool</span> verbose);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__prop.htm#ga9ad045fab0fc6e4260a4d13881a1a5d9">af_device_info</a>(<span class="keywordtype">char</span>* d_name, <span class="keywordtype">char</span>* d_platform, <span class="keywordtype">char</span> *d_toolkit, <span class="keywordtype">char</span>* d_compute);</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__count.htm#ga0f163c809fb48e4cba530c6505f6e7b6">af_get_device_count</a>(<span class="keywordtype">int</span> *num_of_devices);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__dbl.htm#ga71b5811b21be7a6d5e7fc0087ddf91c1">af_get_dbl_support</a>(<span class="keywordtype">bool</span>* available, <span class="keyword">const</span> <span class="keywordtype">int</span> device);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__set.htm#ga19d551b544bf78de828d9524e6432ded">af_set_device</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> device);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__set.htm#ga54120b126cfcb1b0b3ee25e0fc66b8a4">af_get_device</a>(<span class="keywordtype">int</span> *device);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__sync.htm#ga9dbc7f1e99d70170ad567c480b6ddbde">af_sync</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> device);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__alloc.htm#ga230872718cdd26f96547aedbc71a4ab1">af_alloc_device</a>(<span class="keywordtype">void</span> **ptr, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> bytes);</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__free.htm#ga487df85b8baf088bee45357ab5c6741b">af_free_device</a>(<span class="keywordtype">void</span> *ptr);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__pinned.htm#ga0f8fd76dc179e7bd877e268a5579b215">af_alloc_pinned</a>(<span class="keywordtype">void</span> **ptr, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> bytes);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__free__pinned.htm#ga92ed71f45aa719b9be792afbab7415f2">af_free_pinned</a>(<span class="keywordtype">void</span> *ptr);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 33</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__alloc__host.htm#ga3218dbf32dc51436d9557cc73cda6579">af_alloc_host</a>(<span class="keywordtype">void</span> **ptr, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> bytes);</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 33</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__free__host.htm#ga3f1149a837a7ebbe8002d5d2244e3370">af_free_host</a>(<span class="keywordtype">void</span> *ptr);</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__construct__mat.htm#ga751d919b6bc62e4f78dba3b088d75d18">af_device_array</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, <span class="keyword">const</span> <span class="keywordtype">void</span> *data, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> ndims, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> * <span class="keyword">const</span> dims, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type);</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__mem.htm#gae633760aed4638f8a5ea333e0774ac84">af_device_mem_info</a>(<span class="keywordtype">size_t</span> *alloc_bytes, <span class="keywordtype">size_t</span> *alloc_buffers,</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                                    <span class="keywordtype">size_t</span> *lock_bytes, <span class="keywordtype">size_t</span> *lock_buffers);</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 33</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="comment">//</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment"></span>    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__mem.htm#ga7c928031579de47fe21594fd745e9188">af_print_mem_info</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *msg, <span class="keyword">const</span> <span class="keywordtype">int</span> device_id);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__mem.htm#ga182a33d34b3288c5cf5b88cd02468c56">af_device_gc</a>();</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__mem.htm#ga3be9c5ea9ee828868f5d906333a11499">af_set_mem_step_size</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> step_bytes);</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__mem.htm#ga4c04df1ae248a6a8aa0a28263323872a">af_get_mem_step_size</a>(<span class="keywordtype">size_t</span> *step_bytes);</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 33</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <a class="code" href="defines_8h.htm#ad034ea058031ed95e52d3bac1743640a">DEPRECATED</a>(<span class="stringliteral">&quot;Use af_lock_array instead&quot;</span>)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__mem.htm#gac2ad5089cbca1a6cca8d87d42279c6a8">af_lock_device_ptr</a>(<span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 33</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <a class="code" href="defines_8h.htm#ad034ea058031ed95e52d3bac1743640a">DEPRECATED</a>(<span class="stringliteral">&quot;Use af_unlock_array instead&quot;</span>)</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__mem.htm#ga39817b0ba24db34f00c20cc3a20df6d4">af_unlock_device_ptr</a>(<span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 33</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__mem.htm#ga825e21412e9c8e3609c759f8106fd384">af_lock_array</a>(<span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 33</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__mem.htm#ga07151f8b3d69c1afe3cbd860fd98c36f">af_unlock_array</a>(<span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__mem.htm#gab99cb6a3744802742c98714fc88fb991">af_is_locked_array</a>(<span class="keywordtype">bool</span> *res, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__device__func__mem.htm#ga58fda2d491cd27f31108e699b5aef506">af_get_device_ptr</a>(<span class="keywordtype">void</span> **ptr, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;}</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="group__device__func__alloc__host_htm_ga3218dbf32dc51436d9557cc73cda6579"><div class="ttname"><a href="group__device__func__alloc__host.htm#ga3218dbf32dc51436d9557cc73cda6579">af_alloc_host</a></div><div class="ttdeci">AFAPI af_err af_alloc_host(void **ptr, const dim_t bytes)</div></div>
<div class="ttc" id="group__device__func__free__pinned_htm_ga921d5597b54714eb9c84dca5d8ab0708"><div class="ttname"><a href="group__device__func__free__pinned.htm#ga921d5597b54714eb9c84dca5d8ab0708">af::freePinned</a></div><div class="ttdeci">AFAPI void freePinned(const void *ptr)</div><div class="ttdoc">Free pinned memory allocated by ArrayFire&amp;#39;s memory manager. </div></div>
<div class="ttc" id="namespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> algorithm.h:14</div></div>
<div class="ttc" id="group__device__func__sync_htm_ga9dbc7f1e99d70170ad567c480b6ddbde"><div class="ttname"><a href="group__device__func__sync.htm#ga9dbc7f1e99d70170ad567c480b6ddbde">af_sync</a></div><div class="ttdeci">AFAPI af_err af_sync(const int device)</div></div>
<div class="ttc" id="group__device__func__free__host_htm_ga0cc924b1055eee26851be4cd7bedee44"><div class="ttname"><a href="group__device__func__free__host.htm#ga0cc924b1055eee26851be4cd7bedee44">af::freeHost</a></div><div class="ttdeci">AFAPI void freeHost(const void *ptr)</div><div class="ttdoc">Free memory allocated internally by ArrayFire. </div></div>
<div class="ttc" id="group__device__func__info_htm_gacbdf7b79d778344d30deb77c06ac7367"><div class="ttname"><a href="group__device__func__info.htm#gacbdf7b79d778344d30deb77c06ac7367">af_init</a></div><div class="ttdeci">AFAPI af_err af_init()</div></div>
<div class="ttc" id="group__device__func__mem_htm_ga58fda2d491cd27f31108e699b5aef506"><div class="ttname"><a href="group__device__func__mem.htm#ga58fda2d491cd27f31108e699b5aef506">af_get_device_ptr</a></div><div class="ttdeci">AFAPI af_err af_get_device_ptr(void **ptr, const af_array arr)</div><div class="ttdoc">Get the device pointer and lock the buffer in memory manager. </div></div>
<div class="ttc" id="group__device__func__mem_htm_ga182a33d34b3288c5cf5b88cd02468c56"><div class="ttname"><a href="group__device__func__mem.htm#ga182a33d34b3288c5cf5b88cd02468c56">af_device_gc</a></div><div class="ttdeci">AFAPI af_err af_device_gc()</div><div class="ttdoc">Call the garbage collection routine. </div></div>
<div class="ttc" id="group__device__func__pinned_htm_ga738a15e97dbd41d82230cafaa53436cc"><div class="ttname"><a href="group__device__func__pinned.htm#ga738a15e97dbd41d82230cafaa53436cc">af::pinned</a></div><div class="ttdeci">AFAPI void * pinned(const size_t elements, const dtype type)</div><div class="ttdoc">Allocate pinned memory using ArrayFire&amp;#39;s memory manager. </div></div>
<div class="ttc" id="group__device__func__free_htm_ga487df85b8baf088bee45357ab5c6741b"><div class="ttname"><a href="group__device__func__free.htm#ga487df85b8baf088bee45357ab5c6741b">af_free_device</a></div><div class="ttdeci">AFAPI af_err af_free_device(void *ptr)</div><div class="ttdoc">This function will free a device pointer even if it has been previously locked. </div></div>
<div class="ttc" id="group__device__func__mem_htm_ga779bdc65de61e76e066d2cda263a814e"><div class="ttname"><a href="group__device__func__mem.htm#ga779bdc65de61e76e066d2cda263a814e">af::getMemStepSize</a></div><div class="ttdeci">AFAPI size_t getMemStepSize()</div><div class="ttdoc">Get the resolution of memory chunks. </div></div>
<div class="ttc" id="group__device__func__info_htm_ga1360e706b046b1c5b299bd6e689a0276"><div class="ttname"><a href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a></div><div class="ttdeci">AFAPI void info()</div></div>
<div class="ttc" id="group__device__func__mem_htm_gab99cb6a3744802742c98714fc88fb991"><div class="ttname"><a href="group__device__func__mem.htm#gab99cb6a3744802742c98714fc88fb991">af_is_locked_array</a></div><div class="ttdeci">AFAPI af_err af_is_locked_array(bool *res, const af_array arr)</div><div class="ttdoc">Query if the array has been locked by the user. </div></div>
<div class="ttc" id="group__device__func__set_htm_ga19d551b544bf78de828d9524e6432ded"><div class="ttname"><a href="group__device__func__set.htm#ga19d551b544bf78de828d9524e6432ded">af_set_device</a></div><div class="ttdeci">AFAPI af_err af_set_device(const int device)</div></div>
<div class="ttc" id="group__device__func__pinned_htm_ga0f8fd76dc179e7bd877e268a5579b215"><div class="ttname"><a href="group__device__func__pinned.htm#ga0f8fd76dc179e7bd877e268a5579b215">af_alloc_pinned</a></div><div class="ttdeci">AFAPI af_err af_alloc_pinned(void **ptr, const dim_t bytes)</div></div>
<div class="ttc" id="group__device__func__info__string_htm_gacc0f17e14982d390284347d4dc82b461"><div class="ttname"><a href="group__device__func__info__string.htm#gacc0f17e14982d390284347d4dc82b461">af_info_string</a></div><div class="ttdeci">AFAPI af_err af_info_string(char **str, const bool verbose)</div><div class="ttdoc">Gets the output of af_info() as a string. </div></div>
<div class="ttc" id="group__device__func__info_htm_ga55e3054334c0fbc23676bc93a2bec066"><div class="ttname"><a href="group__device__func__info.htm#ga55e3054334c0fbc23676bc93a2bec066">af_info</a></div><div class="ttdeci">AFAPI af_err af_info()</div></div>
<div class="ttc" id="group__device__func__mem_htm_ga07151f8b3d69c1afe3cbd860fd98c36f"><div class="ttname"><a href="group__device__func__mem.htm#ga07151f8b3d69c1afe3cbd860fd98c36f">af_unlock_array</a></div><div class="ttdeci">AFAPI af_err af_unlock_array(const af_array arr)</div><div class="ttdoc">Unlock device buffer in the memory manager. </div></div>
<div class="ttc" id="group__device__func__mem_htm_ga2fa2d8f09a01b92e840c8149630246d6"><div class="ttname"><a href="group__device__func__mem.htm#ga2fa2d8f09a01b92e840c8149630246d6">af::deviceGC</a></div><div class="ttdeci">AFAPI void deviceGC()</div><div class="ttdoc">Call the garbage collection function in the memory manager. </div></div>
<div class="ttc" id="group__device__func__alloc_htm_ga230872718cdd26f96547aedbc71a4ab1"><div class="ttname"><a href="group__device__func__alloc.htm#ga230872718cdd26f96547aedbc71a4ab1">af_alloc_device</a></div><div class="ttdeci">AFAPI af_err af_alloc_device(void **ptr, const dim_t bytes)</div><div class="ttdoc">This device memory returned by this function can only be freed using af_free_device. </div></div>
<div class="ttc" id="group__device__func__mem_htm_ga9c79ca1f0e4dcf4168596d9602d7795c"><div class="ttname"><a href="group__device__func__mem.htm#ga9c79ca1f0e4dcf4168596d9602d7795c">af::setMemStepSize</a></div><div class="ttdeci">AFAPI void setMemStepSize(const size_t size)</div><div class="ttdoc">Set the resolution of memory chunks. </div></div>
<div class="ttc" id="defines_8h_htm_a82b94dc53bbd100a0e8ca9dd356aaf4f"><div class="ttname"><a href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a></div><div class="ttdeci">af_err</div><div class="ttdef"><b>Definition:</b> defines.h:63</div></div>
<div class="ttc" id="group__device__func__free__host_htm_ga3f1149a837a7ebbe8002d5d2244e3370"><div class="ttname"><a href="group__device__func__free__host.htm#ga3f1149a837a7ebbe8002d5d2244e3370">af_free_host</a></div><div class="ttdeci">AFAPI af_err af_free_host(void *ptr)</div></div>
<div class="ttc" id="defines_8h_htm_ad034ea058031ed95e52d3bac1743640a"><div class="ttname"><a href="defines_8h.htm#ad034ea058031ed95e52d3bac1743640a">DEPRECATED</a></div><div class="ttdeci">#define DEPRECATED(msg)</div><div class="ttdef"><b>Definition:</b> defines.h:37</div></div>
<div class="ttc" id="defines_8h_htm"><div class="ttname"><a href="defines_8h.htm">defines.h</a></div></div>
<div class="ttc" id="group__device__func__info__string_htm_ga73ee21947f018445ea720036c1edfb69"><div class="ttname"><a href="group__device__func__info__string.htm#ga73ee21947f018445ea720036c1edfb69">af::infoString</a></div><div class="ttdeci">AFAPI const char * infoString(const bool verbose=false)</div></div>
<div class="ttc" id="group__device__func__alloc__host_htm_ga73fc5021d9626b65a22e1edd3e1384b1"><div class="ttname"><a href="group__device__func__alloc__host.htm#ga73fc5021d9626b65a22e1edd3e1384b1">af::allocHost</a></div><div class="ttdeci">AFAPI void * allocHost(const size_t elements, const dtype type)</div><div class="ttdoc">Allocate memory on host. </div></div>
<div class="ttc" id="defines_8h_htm_a7f026aa801b1fa6b85b0d992b414cccb"><div class="ttname"><a href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a></div><div class="ttdeci">long long dim_t</div><div class="ttdef"><b>Definition:</b> defines.h:50</div></div>
<div class="ttc" id="group__device__func__mem_htm_ga4c04df1ae248a6a8aa0a28263323872a"><div class="ttname"><a href="group__device__func__mem.htm#ga4c04df1ae248a6a8aa0a28263323872a">af_get_mem_step_size</a></div><div class="ttdeci">AFAPI af_err af_get_mem_step_size(size_t *step_bytes)</div><div class="ttdoc">Get the minimum memory chunk size. </div></div>
<div class="ttc" id="group__device__func__count_htm_ga0f163c809fb48e4cba530c6505f6e7b6"><div class="ttname"><a href="group__device__func__count.htm#ga0f163c809fb48e4cba530c6505f6e7b6">af_get_device_count</a></div><div class="ttdeci">AFAPI af_err af_get_device_count(int *num_of_devices)</div></div>
<div class="ttc" id="defines_8h_htm_ab23e67549eba2cfbaf0eb5f88f947e48"><div class="ttname"><a href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a></div><div class="ttdeci">#define AFAPI</div><div class="ttdef"><b>Definition:</b> defines.h:31</div></div>
<div class="ttc" id="group__device__func__mem_htm_ga64f2598efae63032e3f9d20841f6abeb"><div class="ttname"><a href="group__device__func__mem.htm#ga64f2598efae63032e3f9d20841f6abeb">af::printMemInfo</a></div><div class="ttdeci">AFAPI void printMemInfo(const char *msg=NULL, const int device_id=-1)</div><div class="ttdoc">Prints buffer details from the ArrayFire Device Manager. </div></div>
<div class="ttc" id="group__device__func__sync_htm_ga8c5d51841cf4f2ddbdd6a3146cf2b390"><div class="ttname"><a href="group__device__func__sync.htm#ga8c5d51841cf4f2ddbdd6a3146cf2b390">af::sync</a></div><div class="ttdeci">AFAPI void sync(const int device=-1)</div><div class="ttdoc">Blocks until the device is finished processing. </div></div>
<div class="ttc" id="group__device__func__free__pinned_htm_ga92ed71f45aa719b9be792afbab7415f2"><div class="ttname"><a href="group__device__func__free__pinned.htm#ga92ed71f45aa719b9be792afbab7415f2">af_free_pinned</a></div><div class="ttdeci">AFAPI af_err af_free_pinned(void *ptr)</div></div>
<div class="ttc" id="group__device__func__free_htm_ga0ae826ba755d07ece21f2a9ba30ec35e"><div class="ttname"><a href="group__device__func__free.htm#ga0ae826ba755d07ece21f2a9ba30ec35e">af::free</a></div><div class="ttdeci">AFAPI void free(const void *ptr)</div><div class="ttdoc">Free device memory allocated by ArrayFire&amp;#39;s memory manager. </div></div>
<div class="ttc" id="group__device__func__mem_htm_gac2ad5089cbca1a6cca8d87d42279c6a8"><div class="ttname"><a href="group__device__func__mem.htm#gac2ad5089cbca1a6cca8d87d42279c6a8">af_lock_device_ptr</a></div><div class="ttdeci">AFAPI af_err af_lock_device_ptr(const af_array arr)</div><div class="ttdoc">Lock the device buffer in the memory manager. </div></div>
<div class="ttc" id="group__device__func__mem_htm_ga3be9c5ea9ee828868f5d906333a11499"><div class="ttname"><a href="group__device__func__mem.htm#ga3be9c5ea9ee828868f5d906333a11499">af_set_mem_step_size</a></div><div class="ttdeci">AFAPI af_err af_set_mem_step_size(const size_t step_bytes)</div><div class="ttdoc">Set the minimum memory chunk size. </div></div>
<div class="ttc" id="group__device__func__dbl_htm_ga22ede4a4ca1aa4e5aefbde91afa1b626"><div class="ttname"><a href="group__device__func__dbl.htm#ga22ede4a4ca1aa4e5aefbde91afa1b626">af::isDoubleAvailable</a></div><div class="ttdeci">AFAPI bool isDoubleAvailable(const int device)</div><div class="ttdoc">Queries the current device for double precision floating point support. </div></div>
<div class="ttc" id="group__device__func__mem_htm_ga39817b0ba24db34f00c20cc3a20df6d4"><div class="ttname"><a href="group__device__func__mem.htm#ga39817b0ba24db34f00c20cc3a20df6d4">af_unlock_device_ptr</a></div><div class="ttdeci">AFAPI af_err af_unlock_device_ptr(const af_array arr)</div><div class="ttdoc">Unlock device buffer in the memory manager. </div></div>
<div class="ttc" id="group__device__func__prop_htm_gaa9eab56ddac21650581682912ea78293"><div class="ttname"><a href="group__device__func__prop.htm#gaa9eab56ddac21650581682912ea78293">af::deviceInfo</a></div><div class="ttdeci">AFAPI void deviceInfo(char *d_name, char *d_platform, char *d_toolkit, char *d_compute)</div><div class="ttdoc">Gets the information about device and platform as strings. </div></div>
<div class="ttc" id="group__construct__mat_htm_ga751d919b6bc62e4f78dba3b088d75d18"><div class="ttname"><a href="group__construct__mat.htm#ga751d919b6bc62e4f78dba3b088d75d18">af_device_array</a></div><div class="ttdeci">AFAPI af_err af_device_array(af_array *arr, const void *data, const unsigned ndims, const dim_t *const dims, const af_dtype type)</div><div class="ttdoc">Create array from device memory. </div></div>
<div class="ttc" id="group__device__func__set_htm_ga54120b126cfcb1b0b3ee25e0fc66b8a4"><div class="ttname"><a href="group__device__func__set.htm#ga54120b126cfcb1b0b3ee25e0fc66b8a4">af_get_device</a></div><div class="ttdeci">AFAPI af_err af_get_device(int *device)</div></div>
<div class="ttc" id="defines_8h_htm_a8e45f4aa3dbea6a7aa021dbc50a4a089"><div class="ttname"><a href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a></div><div class="ttdeci">void * af_array</div><div class="ttdef"><b>Definition:</b> defines.h:222</div></div>
<div class="ttc" id="group__device__func__alloc_htm_ga5404b7af62d6f5b31d81791b5558ecce"><div class="ttname"><a href="group__device__func__alloc.htm#ga5404b7af62d6f5b31d81791b5558ecce">af::alloc</a></div><div class="ttdeci">AFAPI void * alloc(const size_t elements, const dtype type)</div><div class="ttdoc">Allocates memory using ArrayFire&amp;#39;s memory manager. </div></div>
<div class="ttc" id="group__device__func__mem_htm_gae763d44f5c5cd80d4cf31fd044ee4e3d"><div class="ttname"><a href="group__device__func__mem.htm#gae763d44f5c5cd80d4cf31fd044ee4e3d">af::deviceMemInfo</a></div><div class="ttdeci">AFAPI void deviceMemInfo(size_t *alloc_bytes, size_t *alloc_buffers, size_t *lock_bytes, size_t *lock_buffers)</div><div class="ttdoc">Gets information about the memory manager. </div></div>
<div class="ttc" id="group__device__func__dbl_htm_ga71b5811b21be7a6d5e7fc0087ddf91c1"><div class="ttname"><a href="group__device__func__dbl.htm#ga71b5811b21be7a6d5e7fc0087ddf91c1">af_get_dbl_support</a></div><div class="ttdeci">AFAPI af_err af_get_dbl_support(bool *available, const int device)</div></div>
<div class="ttc" id="group__device__func__count_htm_gac3c8750da69ee883fd14c0a8290e45f1"><div class="ttname"><a href="group__device__func__count.htm#gac3c8750da69ee883fd14c0a8290e45f1">af::getDeviceCount</a></div><div class="ttdeci">AFAPI int getDeviceCount()</div><div class="ttdoc">Gets the number of devices. </div></div>
<div class="ttc" id="group__device__func__mem_htm_gae633760aed4638f8a5ea333e0774ac84"><div class="ttname"><a href="group__device__func__mem.htm#gae633760aed4638f8a5ea333e0774ac84">af_device_mem_info</a></div><div class="ttdeci">AFAPI af_err af_device_mem_info(size_t *alloc_bytes, size_t *alloc_buffers, size_t *lock_bytes, size_t *lock_buffers)</div><div class="ttdoc">Get memory information from the memory manager. </div></div>
<div class="ttc" id="group__device__func__mem_htm_ga7c928031579de47fe21594fd745e9188"><div class="ttname"><a href="group__device__func__mem.htm#ga7c928031579de47fe21594fd745e9188">af_print_mem_info</a></div><div class="ttdeci">AFAPI af_err af_print_mem_info(const char *msg, const int device_id)</div><div class="ttdoc">Prints buffer details from the ArrayFire Device Manager. </div></div>
<div class="ttc" id="defines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a></div><div class="ttdeci">af_dtype</div><div class="ttdef"><b>Definition:</b> defines.h:195</div></div>
<div class="ttc" id="group__device__func__prop_htm_ga9ad045fab0fc6e4260a4d13881a1a5d9"><div class="ttname"><a href="group__device__func__prop.htm#ga9ad045fab0fc6e4260a4d13881a1a5d9">af_device_info</a></div><div class="ttdeci">AFAPI af_err af_device_info(char *d_name, char *d_platform, char *d_toolkit, char *d_compute)</div><div class="ttdoc">Gets the information about device and platform as strings. </div></div>
<div class="ttc" id="group__device__func__mem_htm_ga825e21412e9c8e3609c759f8106fd384"><div class="ttname"><a href="group__device__func__mem.htm#ga825e21412e9c8e3609c759f8106fd384">af_lock_array</a></div><div class="ttdeci">AFAPI af_err af_lock_array(const af_array arr)</div><div class="ttdoc">Lock the device buffer in the memory manager. </div></div>
<div class="ttc" id="namespaceaf_htm_a448f59f3b863561e0fbe00f04dbeca1e"><div class="ttname"><a href="namespaceaf.htm#a448f59f3b863561e0fbe00f04dbeca1e">af::dtype</a></div><div class="ttdeci">af_dtype dtype</div><div class="ttdef"><b>Definition:</b> defines.h:468</div></div>
<div class="ttc" id="group__device__func__set_htm_gafbb906ca5b89ec43fdb0e3a14d1df1e7"><div class="ttname"><a href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7">af::setDevice</a></div><div class="ttdeci">AFAPI void setDevice(const int device)</div><div class="ttdoc">Sets the current device. </div></div>
<div class="ttc" id="group__device__func__get_htm_ga4dfe3f90475b735384f8b28cf2b19a11"><div class="ttname"><a href="group__device__func__get.htm#ga4dfe3f90475b735384f8b28cf2b19a11">af::getDevice</a></div><div class="ttdeci">AFAPI int getDevice()</div><div class="ttdoc">Gets the current device ID. </div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
