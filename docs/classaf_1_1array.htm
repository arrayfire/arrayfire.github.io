<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: array Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classaf_1_1array.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">array Class Reference<div class="ingroups"><a class="el" href="group__arrayfire__class.htm">ArrayFire Classes</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>A multi dimensional data container.  
 <a href="classaf_1_1array.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="array_8h_source.htm">array.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Intermediate data class.  <a href="classaf_1_1array_1_1array__proxy.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a45b3c2ad4eb3f366485b7408367c56b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1array.htm#a45b3c2ad4eb3f366485b7408367c56b5">set</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> tmp)</td></tr>
<tr class="memdesc:a45b3c2ad4eb3f366485b7408367c56b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the internal <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> object.  <a href="classaf_1_1array.htm#a45b3c2ad4eb3f366485b7408367c56b5">More...</a><br /></td></tr>
<tr class="separator:a45b3c2ad4eb3f366485b7408367c56b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fe5da06c007e62ef0f1a9f37e4f5d8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__paren.htm#ga9fe5da06c007e62ef0f1a9f37e4f5d8a">operator()</a> (const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s0)</td></tr>
<tr class="memdesc:ga9fe5da06c007e62ef0f1a9f37e4f5d8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">This operator returns a reference of the original array at a given coordinate.  <a href="group__array__mem__operator__paren.htm#ga9fe5da06c007e62ef0f1a9f37e4f5d8a">More...</a><br /></td></tr>
<tr class="separator:ga9fe5da06c007e62ef0f1a9f37e4f5d8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad339fd330407473c07631cb73c1068ea"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__paren.htm#gad339fd330407473c07631cb73c1068ea">operator()</a> (const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s0) const</td></tr>
<tr class="memdesc:gad339fd330407473c07631cb73c1068ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">This operator returns a reference of the original array at a given coordinate.  <a href="group__array__mem__operator__paren.htm#gad339fd330407473c07631cb73c1068ea">More...</a><br /></td></tr>
<tr class="separator:gad339fd330407473c07631cb73c1068ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad94516ed0fbbf6c7aad0bdee90d1de29"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__paren.htm#gad94516ed0fbbf6c7aad0bdee90d1de29">operator()</a> (const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s0, const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s1, const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s2=<a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>, const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s3=<a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>)</td></tr>
<tr class="memdesc:gad94516ed0fbbf6c7aad0bdee90d1de29"><td class="mdescLeft">&#160;</td><td class="mdescRight">This operator returns a reference of the original array at a given coordinate.  <a href="group__array__mem__operator__paren.htm#gad94516ed0fbbf6c7aad0bdee90d1de29">More...</a><br /></td></tr>
<tr class="separator:gad94516ed0fbbf6c7aad0bdee90d1de29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac05aef47c7537b2e9d00ad568e26c457"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__paren.htm#gac05aef47c7537b2e9d00ad568e26c457">operator()</a> (const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s0, const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s1, const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s2=<a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>, const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s3=<a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>) const</td></tr>
<tr class="memdesc:gac05aef47c7537b2e9d00ad568e26c457"><td class="mdescLeft">&#160;</td><td class="mdescRight">This operator returns a reference of the original array at a given coordinate.  <a href="group__array__mem__operator__paren.htm#gac05aef47c7537b2e9d00ad568e26c457">More...</a><br /></td></tr>
<tr class="separator:gac05aef47c7537b2e9d00ad568e26c457"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5822c6bdfbf4ff01f23c4417934b924c"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga5822c6bdfbf4ff01f23c4417934b924c">as</a> (<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> <a class="el" href="group__method__mat.htm#ga122667ba97054fbee7b1ff885bb3bfe4">type</a>) const</td></tr>
<tr class="memdesc:ga5822c6bdfbf4ff01f23c4417934b924c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts the array into another type.  <a href="group__method__mat.htm#ga5822c6bdfbf4ff01f23c4417934b924c">More...</a><br /></td></tr>
<tr class="separator:ga5822c6bdfbf4ff01f23c4417934b924c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ec8b3d923f76dab805bc55dc821be1d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1array.htm#a8ec8b3d923f76dab805bc55dc821be1d">~array</a> ()</td></tr>
<tr class="separator:a8ec8b3d923f76dab805bc55dc821be1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7fc1c437c072767fc8acea2b67469498"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga7fc1c437c072767fc8acea2b67469498">T</a> () const</td></tr>
<tr class="memdesc:ga7fc1c437c072767fc8acea2b67469498"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the transposed the array.  <a href="group__method__mat.htm#ga7fc1c437c072767fc8acea2b67469498">More...</a><br /></td></tr>
<tr class="separator:ga7fc1c437c072767fc8acea2b67469498"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga222cd421e1a99821609a17d54c9fc488"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga222cd421e1a99821609a17d54c9fc488">H</a> () const</td></tr>
<tr class="memdesc:ga222cd421e1a99821609a17d54c9fc488"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the conjugate-transpose of the current array.  <a href="group__method__mat.htm#ga222cd421e1a99821609a17d54c9fc488">More...</a><br /></td></tr>
<tr class="separator:ga222cd421e1a99821609a17d54c9fc488"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaedef821c349b4baef7c60b52c958f4fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__neg.htm#gaedef821c349b4baef7c60b52c958f4fc">operator-</a> () const</td></tr>
<tr class="memdesc:gaedef821c349b4baef7c60b52c958f4fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Negates the values of the array.  <a href="group__arith__func__neg.htm#gaedef821c349b4baef7c60b52c958f4fc">More...</a><br /></td></tr>
<tr class="separator:gaedef821c349b4baef7c60b52c958f4fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga17eb7b75d893bff8288eb80067d4be77"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__not.htm#ga17eb7b75d893bff8288eb80067d4be77">operator!</a> () const</td></tr>
<tr class="memdesc:ga17eb7b75d893bff8288eb80067d4be77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a not operation on the values of the array.  <a href="group__arith__func__not.htm#ga17eb7b75d893bff8288eb80067d4be77">More...</a><br /></td></tr>
<tr class="separator:ga17eb7b75d893bff8288eb80067d4be77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea718cb4ebc56f57330352f130385c89"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1array.htm#aea718cb4ebc56f57330352f130385c89">nonzeros</a> () const</td></tr>
<tr class="memdesc:aea718cb4ebc56f57330352f130385c89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the count of non-zero elements in the array.  <a href="classaf_1_1array.htm#aea718cb4ebc56f57330352f130385c89">More...</a><br /></td></tr>
<tr class="separator:aea718cb4ebc56f57330352f130385c89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0af0c6e3920cd67025211889c98807db"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1array.htm#a0af0c6e3920cd67025211889c98807db">lock</a> () const</td></tr>
<tr class="memdesc:a0af0c6e3920cd67025211889c98807db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Locks the device buffer in the memory manager.  <a href="classaf_1_1array.htm#a0af0c6e3920cd67025211889c98807db">More...</a><br /></td></tr>
<tr class="separator:a0af0c6e3920cd67025211889c98807db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43966e19963e4bcb7f7f9b5327ec732b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1array.htm#a43966e19963e4bcb7f7f9b5327ec732b">isLocked</a> () const</td></tr>
<tr class="memdesc:a43966e19963e4bcb7f7f9b5327ec732b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query if the array has been locked by the user.  <a href="classaf_1_1array.htm#a43966e19963e4bcb7f7f9b5327ec732b">More...</a><br /></td></tr>
<tr class="separator:a43966e19963e4bcb7f7f9b5327ec732b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc83498cc8bf3655094e2f4273861680"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1array.htm#abc83498cc8bf3655094e2f4273861680">unlock</a> () const</td></tr>
<tr class="memdesc:abc83498cc8bf3655094e2f4273861680"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unlocks the device buffer in the memory manager.  <a href="classaf_1_1array.htm#abc83498cc8bf3655094e2f4273861680">More...</a><br /></td></tr>
<tr class="separator:abc83498cc8bf3655094e2f4273861680"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga9cbcfcbf0173e1edaf4094bb36b34b31"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#ga9cbcfcbf0173e1edaf4094bb36b34b31">array</a> ()</td></tr>
<tr class="memdesc:ga9cbcfcbf0173e1edaf4094bb36b34b31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an uninitialized array (no data, undefined size)  <a href="group__construct__mat.htm#ga9cbcfcbf0173e1edaf4094bb36b34b31">More...</a><br /></td></tr>
<tr class="separator:ga9cbcfcbf0173e1edaf4094bb36b34b31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad34fcf3e619cabf1cd107f72c571f091"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#gad34fcf3e619cabf1cd107f72c571f091">array</a> (const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> handle)</td></tr>
<tr class="memdesc:gad34fcf3e619cabf1cd107f72c571f091"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an array from an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> handle.  <a href="group__construct__mat.htm#gad34fcf3e619cabf1cd107f72c571f091">More...</a><br /></td></tr>
<tr class="separator:gad34fcf3e619cabf1cd107f72c571f091"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacfba46b754d8e3e5371d9bc78e7ba766"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#gacfba46b754d8e3e5371d9bc78e7ba766">array</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in)</td></tr>
<tr class="memdesc:gacfba46b754d8e3e5371d9bc78e7ba766"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a copy to the <code>in</code> array.  <a href="group__construct__mat.htm#gacfba46b754d8e3e5371d9bc78e7ba766">More...</a><br /></td></tr>
<tr class="separator:gacfba46b754d8e3e5371d9bc78e7ba766"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga73cb9e2360cecbc511b87abf76b6d631"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#ga73cb9e2360cecbc511b87abf76b6d631">array</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty=<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>)</td></tr>
<tr class="memdesc:ga73cb9e2360cecbc511b87abf76b6d631"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate a one-dimensional array of a specified size with undefined contents.  <a href="group__construct__mat.htm#ga73cb9e2360cecbc511b87abf76b6d631">More...</a><br /></td></tr>
<tr class="separator:ga73cb9e2360cecbc511b87abf76b6d631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f0b51e20111680c7fe3c74d54c982dd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#ga1f0b51e20111680c7fe3c74d54c982dd">array</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty=<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>)</td></tr>
<tr class="memdesc:ga1f0b51e20111680c7fe3c74d54c982dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate a two-dimensional array of a specified size with undefined contents.  <a href="group__construct__mat.htm#ga1f0b51e20111680c7fe3c74d54c982dd">More...</a><br /></td></tr>
<tr class="separator:ga1f0b51e20111680c7fe3c74d54c982dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga69c9fa684e0b0beaf657ac1dc03afa56"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#ga69c9fa684e0b0beaf657ac1dc03afa56">array</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty=<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>)</td></tr>
<tr class="memdesc:ga69c9fa684e0b0beaf657ac1dc03afa56"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate a three-dimensional (3D) array of a specified size with undefined contents.  <a href="group__construct__mat.htm#ga69c9fa684e0b0beaf657ac1dc03afa56">More...</a><br /></td></tr>
<tr class="separator:ga69c9fa684e0b0beaf657ac1dc03afa56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6bc7bac9bb52349c198fa0861b5004b7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#ga6bc7bac9bb52349c198fa0861b5004b7">array</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim3, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty=<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>)</td></tr>
<tr class="memdesc:ga6bc7bac9bb52349c198fa0861b5004b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate a four-dimensional (4D) array of a specified size with undefined contents.  <a href="group__construct__mat.htm#ga6bc7bac9bb52349c198fa0861b5004b7">More...</a><br /></td></tr>
<tr class="separator:ga6bc7bac9bb52349c198fa0861b5004b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5686344bf8a49be5286892998d309619"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#ga5686344bf8a49be5286892998d309619">array</a> (const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;<a class="el" href="group__method__mat.htm#ga10d14b019693bc98f672ad7c4ac60bac">dims</a>, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty=<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>)</td></tr>
<tr class="memdesc:ga5686344bf8a49be5286892998d309619"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate an array of a specified size with undefined contents.  <a href="group__construct__mat.htm#ga5686344bf8a49be5286892998d309619">More...</a><br /></td></tr>
<tr class="separator:ga5686344bf8a49be5286892998d309619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c330c41d6e06b0dea9377ef02762c6f"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga8c330c41d6e06b0dea9377ef02762c6f"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#ga8c330c41d6e06b0dea9377ef02762c6f">array</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, const <a class="el" href="group__method__mat.htm#ga7fc1c437c072767fc8acea2b67469498">T</a> *pointer, <a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>)</td></tr>
<tr class="memdesc:ga8c330c41d6e06b0dea9377ef02762c6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a column vector on the device using a host/device pointer.  <a href="group__construct__mat.htm#ga8c330c41d6e06b0dea9377ef02762c6f">More...</a><br /></td></tr>
<tr class="separator:ga8c330c41d6e06b0dea9377ef02762c6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2ebe6a7b991fbe6231321138e79121c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gaa2ebe6a7b991fbe6231321138e79121c"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#gaa2ebe6a7b991fbe6231321138e79121c">array</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, const <a class="el" href="group__method__mat.htm#ga7fc1c437c072767fc8acea2b67469498">T</a> *pointer, <a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>)</td></tr>
<tr class="memdesc:gaa2ebe6a7b991fbe6231321138e79121c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a 2D array on the device using a host/device pointer.  <a href="group__construct__mat.htm#gaa2ebe6a7b991fbe6231321138e79121c">More...</a><br /></td></tr>
<tr class="separator:gaa2ebe6a7b991fbe6231321138e79121c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd3d95b130bdb2d7e713414687e6b15a"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gabd3d95b130bdb2d7e713414687e6b15a"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#gabd3d95b130bdb2d7e713414687e6b15a">array</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2, const <a class="el" href="group__method__mat.htm#ga7fc1c437c072767fc8acea2b67469498">T</a> *pointer, <a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>)</td></tr>
<tr class="memdesc:gabd3d95b130bdb2d7e713414687e6b15a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a 3D array on the device using a host/device pointer.  <a href="group__construct__mat.htm#gabd3d95b130bdb2d7e713414687e6b15a">More...</a><br /></td></tr>
<tr class="separator:gabd3d95b130bdb2d7e713414687e6b15a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa8fab98447367bc4eaf3d7bc61d8ff5"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gaaa8fab98447367bc4eaf3d7bc61d8ff5"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#gaaa8fab98447367bc4eaf3d7bc61d8ff5">array</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim3, const <a class="el" href="group__method__mat.htm#ga7fc1c437c072767fc8acea2b67469498">T</a> *pointer, <a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>)</td></tr>
<tr class="memdesc:gaaa8fab98447367bc4eaf3d7bc61d8ff5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a 4D array on the device using a host/device pointer.  <a href="group__construct__mat.htm#gaaa8fab98447367bc4eaf3d7bc61d8ff5">More...</a><br /></td></tr>
<tr class="separator:gaaa8fab98447367bc4eaf3d7bc61d8ff5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1144078b1596e7d29f57b1a0a1c9b1a8"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga1144078b1596e7d29f57b1a0a1c9b1a8"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#ga1144078b1596e7d29f57b1a0a1c9b1a8">array</a> (const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;<a class="el" href="group__method__mat.htm#ga10d14b019693bc98f672ad7c4ac60bac">dims</a>, const <a class="el" href="group__method__mat.htm#ga7fc1c437c072767fc8acea2b67469498">T</a> *pointer, <a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>)</td></tr>
<tr class="memdesc:ga1144078b1596e7d29f57b1a0a1c9b1a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an array of specified size on the device using a host/device pointer.  <a href="group__construct__mat.htm#ga1144078b1596e7d29f57b1a0a1c9b1a8">More...</a><br /></td></tr>
<tr class="separator:ga1144078b1596e7d29f57b1a0a1c9b1a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab65f7a320bb53cb1f25de25c685ec0a0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#gab65f7a320bb53cb1f25de25c685ec0a0">array</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;input, const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;<a class="el" href="group__method__mat.htm#ga10d14b019693bc98f672ad7c4ac60bac">dims</a>)</td></tr>
<tr class="memdesc:gab65f7a320bb53cb1f25de25c685ec0a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adjust the dimensions of an N-D array (fast).  <a href="group__construct__mat.htm#gab65f7a320bb53cb1f25de25c685ec0a0">More...</a><br /></td></tr>
<tr class="separator:gab65f7a320bb53cb1f25de25c685ec0a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4866e95e473b71b99ad842608744ac4f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__construct__mat.htm#ga4866e95e473b71b99ad842608744ac4f">array</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;input, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1=1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2=1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim3=1)</td></tr>
<tr class="memdesc:ga4866e95e473b71b99ad842608744ac4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adjust the dimensions of an N-D array (fast).  <a href="group__construct__mat.htm#ga4866e95e473b71b99ad842608744ac4f">More...</a><br /></td></tr>
<tr class="separator:ga4866e95e473b71b99ad842608744ac4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gaac57222501ff47f5d795503ac47c87e3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#gaac57222501ff47f5d795503ac47c87e3">get</a> ()</td></tr>
<tr class="memdesc:gaac57222501ff47f5d795503ac47c87e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">get the <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> handle  <a href="group__method__mat.htm#gaac57222501ff47f5d795503ac47c87e3">More...</a><br /></td></tr>
<tr class="separator:gaac57222501ff47f5d795503ac47c87e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae2b564347156aa7fd3908617a84ba3cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#gae2b564347156aa7fd3908617a84ba3cc">get</a> () const</td></tr>
<tr class="memdesc:gae2b564347156aa7fd3908617a84ba3cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">get the <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> handle  <a href="group__method__mat.htm#gae2b564347156aa7fd3908617a84ba3cc">More...</a><br /></td></tr>
<tr class="separator:gae2b564347156aa7fd3908617a84ba3cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga89f91cdf327a8b304589916db5bde3c2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga89f91cdf327a8b304589916db5bde3c2">elements</a> () const</td></tr>
<tr class="memdesc:ga89f91cdf327a8b304589916db5bde3c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the total number of elements across all dimensions of the array.  <a href="group__method__mat.htm#ga89f91cdf327a8b304589916db5bde3c2">More...</a><br /></td></tr>
<tr class="separator:ga89f91cdf327a8b304589916db5bde3c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga332e06d4340867375a5e415fc1befc1d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga332e06d4340867375a5e415fc1befc1d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="group__method__mat.htm#ga7fc1c437c072767fc8acea2b67469498">T</a> *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga332e06d4340867375a5e415fc1befc1d">host</a> () const</td></tr>
<tr class="memdesc:ga332e06d4340867375a5e415fc1befc1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy array data to host and return host pointer.  <a href="group__method__mat.htm#ga332e06d4340867375a5e415fc1befc1d">More...</a><br /></td></tr>
<tr class="separator:ga332e06d4340867375a5e415fc1befc1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5cc0f3c2307de6b82ede47c9b26da2d0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga5cc0f3c2307de6b82ede47c9b26da2d0">host</a> (void *ptr) const</td></tr>
<tr class="memdesc:ga5cc0f3c2307de6b82ede47c9b26da2d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy array data to existing host pointer.  <a href="group__method__mat.htm#ga5cc0f3c2307de6b82ede47c9b26da2d0">More...</a><br /></td></tr>
<tr class="separator:ga5cc0f3c2307de6b82ede47c9b26da2d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa70b253da2d32394c521a815f7627116"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gaa70b253da2d32394c521a815f7627116"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#gaa70b253da2d32394c521a815f7627116">write</a> (const <a class="el" href="group__method__mat.htm#ga7fc1c437c072767fc8acea2b67469498">T</a> *ptr, const size_t <a class="el" href="group__method__mat.htm#ga3b73c6479b9490ad49b8156e14473541">bytes</a>, <a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>)</td></tr>
<tr class="memdesc:gaa70b253da2d32394c521a815f7627116"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform deep copy from host/device pointer to an existing array.  <a href="group__method__mat.htm#gaa70b253da2d32394c521a815f7627116">More...</a><br /></td></tr>
<tr class="separator:gaa70b253da2d32394c521a815f7627116"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga122667ba97054fbee7b1ff885bb3bfe4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga122667ba97054fbee7b1ff885bb3bfe4">type</a> () const</td></tr>
<tr class="memdesc:ga122667ba97054fbee7b1ff885bb3bfe4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get array data type.  <a href="group__method__mat.htm#ga122667ba97054fbee7b1ff885bb3bfe4">More...</a><br /></td></tr>
<tr class="separator:ga122667ba97054fbee7b1ff885bb3bfe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga10d14b019693bc98f672ad7c4ac60bac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1dim4.htm">dim4</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga10d14b019693bc98f672ad7c4ac60bac">dims</a> () const</td></tr>
<tr class="memdesc:ga10d14b019693bc98f672ad7c4ac60bac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get dimensions of the array.  <a href="group__method__mat.htm#ga10d14b019693bc98f672ad7c4ac60bac">More...</a><br /></td></tr>
<tr class="separator:ga10d14b019693bc98f672ad7c4ac60bac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga83301f0006c5cb2de7b92b596b40b97b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga83301f0006c5cb2de7b92b596b40b97b">dims</a> (unsigned dim) const</td></tr>
<tr class="memdesc:ga83301f0006c5cb2de7b92b596b40b97b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get dimensions of the array.  <a href="group__method__mat.htm#ga83301f0006c5cb2de7b92b596b40b97b">More...</a><br /></td></tr>
<tr class="separator:ga83301f0006c5cb2de7b92b596b40b97b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf44710cddd99a7992a890b6096265041"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#gaf44710cddd99a7992a890b6096265041">numdims</a> () const</td></tr>
<tr class="memdesc:gaf44710cddd99a7992a890b6096265041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the number of dimensions of the array.  <a href="group__method__mat.htm#gaf44710cddd99a7992a890b6096265041">More...</a><br /></td></tr>
<tr class="separator:gaf44710cddd99a7992a890b6096265041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b73c6479b9490ad49b8156e14473541"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga3b73c6479b9490ad49b8156e14473541">bytes</a> () const</td></tr>
<tr class="memdesc:ga3b73c6479b9490ad49b8156e14473541"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the size of the array in bytes.  <a href="group__method__mat.htm#ga3b73c6479b9490ad49b8156e14473541">More...</a><br /></td></tr>
<tr class="separator:ga3b73c6479b9490ad49b8156e14473541"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8bc3e142a14a07815b29e230cefacd3e"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga8bc3e142a14a07815b29e230cefacd3e">allocated</a> () const</td></tr>
<tr class="memdesc:ga8bc3e142a14a07815b29e230cefacd3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the size of the array in memory.  <a href="group__method__mat.htm#ga8bc3e142a14a07815b29e230cefacd3e">More...</a><br /></td></tr>
<tr class="separator:ga8bc3e142a14a07815b29e230cefacd3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa859f53b411dd3ab37c8c817b4352e07"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#gaa859f53b411dd3ab37c8c817b4352e07">copy</a> () const</td></tr>
<tr class="memdesc:gaa859f53b411dd3ab37c8c817b4352e07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform deep copy of the array.  <a href="group__method__mat.htm#gaa859f53b411dd3ab37c8c817b4352e07">More...</a><br /></td></tr>
<tr class="separator:gaa859f53b411dd3ab37c8c817b4352e07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga02af51409898c251bb31665e41596057"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga02af51409898c251bb31665e41596057">isempty</a> () const</td></tr>
<tr class="memdesc:ga02af51409898c251bb31665e41596057"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true of the array is empty.  <a href="group__method__mat.htm#ga02af51409898c251bb31665e41596057">More...</a><br /></td></tr>
<tr class="separator:ga02af51409898c251bb31665e41596057"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga41966eaad67492044dc4757b843dbbac"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga41966eaad67492044dc4757b843dbbac">isscalar</a> () const</td></tr>
<tr class="memdesc:ga41966eaad67492044dc4757b843dbbac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true of the array contains only one value.  <a href="group__method__mat.htm#ga41966eaad67492044dc4757b843dbbac">More...</a><br /></td></tr>
<tr class="separator:ga41966eaad67492044dc4757b843dbbac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga237bd79e8bf4cb8ad0c6eb1f0a9aa3d9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga237bd79e8bf4cb8ad0c6eb1f0a9aa3d9">isvector</a> () const</td></tr>
<tr class="memdesc:ga237bd79e8bf4cb8ad0c6eb1f0a9aa3d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if only one of the array dimensions has more than one element.  <a href="group__method__mat.htm#ga237bd79e8bf4cb8ad0c6eb1f0a9aa3d9">More...</a><br /></td></tr>
<tr class="separator:ga237bd79e8bf4cb8ad0c6eb1f0a9aa3d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga99cd74de21bde89f497dac1c2e1b23f1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga99cd74de21bde89f497dac1c2e1b23f1">isrow</a> () const</td></tr>
<tr class="memdesc:ga99cd74de21bde89f497dac1c2e1b23f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if only the second dimension has more than one element.  <a href="group__method__mat.htm#ga99cd74de21bde89f497dac1c2e1b23f1">More...</a><br /></td></tr>
<tr class="separator:ga99cd74de21bde89f497dac1c2e1b23f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf5e12ba6e9d5b29ab276fb4271cb0764"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#gaf5e12ba6e9d5b29ab276fb4271cb0764">iscolumn</a> () const</td></tr>
<tr class="memdesc:gaf5e12ba6e9d5b29ab276fb4271cb0764"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if only the first dimension has more than one element.  <a href="group__method__mat.htm#gaf5e12ba6e9d5b29ab276fb4271cb0764">More...</a><br /></td></tr>
<tr class="separator:gaf5e12ba6e9d5b29ab276fb4271cb0764"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2e82c9d93b78f06278146e85a222604b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga2e82c9d93b78f06278146e85a222604b">iscomplex</a> () const</td></tr>
<tr class="memdesc:ga2e82c9d93b78f06278146e85a222604b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the array type is <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a> or <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a>.  <a href="group__method__mat.htm#ga2e82c9d93b78f06278146e85a222604b">More...</a><br /></td></tr>
<tr class="separator:ga2e82c9d93b78f06278146e85a222604b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae778ca527466663084f5797f23075603"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#gae778ca527466663084f5797f23075603">isreal</a> () const</td></tr>
<tr class="memdesc:gae778ca527466663084f5797f23075603"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the array type is neither <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a> nor <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a>.  <a href="group__method__mat.htm#gae778ca527466663084f5797f23075603">More...</a><br /></td></tr>
<tr class="separator:gae778ca527466663084f5797f23075603"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae1893dbf4e3ad0325a7cdff6bc5485f5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#gae1893dbf4e3ad0325a7cdff6bc5485f5">isdouble</a> () const</td></tr>
<tr class="memdesc:gae1893dbf4e3ad0325a7cdff6bc5485f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the array type is <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962">f64</a> or <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a>.  <a href="group__method__mat.htm#gae1893dbf4e3ad0325a7cdff6bc5485f5">More...</a><br /></td></tr>
<tr class="separator:gae1893dbf4e3ad0325a7cdff6bc5485f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga819cfdc18b093dce679d6b6c72d0110b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga819cfdc18b093dce679d6b6c72d0110b">issingle</a> () const</td></tr>
<tr class="memdesc:ga819cfdc18b093dce679d6b6c72d0110b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the array type is either <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a> nor <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a>.  <a href="group__method__mat.htm#ga819cfdc18b093dce679d6b6c72d0110b">More...</a><br /></td></tr>
<tr class="separator:ga819cfdc18b093dce679d6b6c72d0110b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3ce9ca2348ff15914295042744c734e7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga3ce9ca2348ff15914295042744c734e7">ishalf</a> () const</td></tr>
<tr class="memdesc:ga3ce9ca2348ff15914295042744c734e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the array type is <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5af4512c88801326ab48816bf6ece20d67">f16</a>.  <a href="group__method__mat.htm#ga3ce9ca2348ff15914295042744c734e7">More...</a><br /></td></tr>
<tr class="separator:ga3ce9ca2348ff15914295042744c734e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga26b61c0ea2dcb7aa91d21db31c0cf148"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga26b61c0ea2dcb7aa91d21db31c0cf148">isrealfloating</a> () const</td></tr>
<tr class="memdesc:ga26b61c0ea2dcb7aa91d21db31c0cf148"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the array type is <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5af4512c88801326ab48816bf6ece20d67">f16</a> <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a> or <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962">f64</a>.  <a href="group__method__mat.htm#ga26b61c0ea2dcb7aa91d21db31c0cf148">More...</a><br /></td></tr>
<tr class="separator:ga26b61c0ea2dcb7aa91d21db31c0cf148"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab33ad283445e5af655bf7e87bbab72e3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#gab33ad283445e5af655bf7e87bbab72e3">isfloating</a> () const</td></tr>
<tr class="memdesc:gab33ad283445e5af655bf7e87bbab72e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the array type is <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5af4512c88801326ab48816bf6ece20d67">f16</a> <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962">f64</a>, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a> or <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a>.  <a href="group__method__mat.htm#gab33ad283445e5af655bf7e87bbab72e3">More...</a><br /></td></tr>
<tr class="separator:gab33ad283445e5af655bf7e87bbab72e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b69d758673c8443bd0609685cb97615"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga4b69d758673c8443bd0609685cb97615">isinteger</a> () const</td></tr>
<tr class="memdesc:ga4b69d758673c8443bd0609685cb97615"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the array type is <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5afa33d5748ff04bcd920280e5a3b790c0">u8</a>, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a3734f496648357f310306becf43915b3">b8</a>, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a1bd64190677c261a61c640017dbaddf1">s32</a> <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a05ef7b967bac0eef5d9712a6803b9f1a">u32</a>, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a2fb596fb851c71689624894525c069e4">s64</a>, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a1b18b7885e1360b6696142284b4b4928">u64</a>, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a98085990ff18bf438d3c839ea4c80bb4">s16</a>, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5ae817c8a85914a5f150f2739df6b76c57">u16</a>.  <a href="group__method__mat.htm#ga4b69d758673c8443bd0609685cb97615">More...</a><br /></td></tr>
<tr class="separator:ga4b69d758673c8443bd0609685cb97615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75548d3af424a944fd62f0c897321311"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga75548d3af424a944fd62f0c897321311">isbool</a> () const</td></tr>
<tr class="memdesc:ga75548d3af424a944fd62f0c897321311"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the array type is <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a3734f496648357f310306becf43915b3">b8</a>.  <a href="group__method__mat.htm#ga75548d3af424a944fd62f0c897321311">More...</a><br /></td></tr>
<tr class="separator:ga75548d3af424a944fd62f0c897321311"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4c71baaa51ca6bc9403a2a9ef0c46d96"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga4c71baaa51ca6bc9403a2a9ef0c46d96">issparse</a> () const</td></tr>
<tr class="memdesc:ga4c71baaa51ca6bc9403a2a9ef0c46d96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the array is a sparse array.  <a href="group__method__mat.htm#ga4c71baaa51ca6bc9403a2a9ef0c46d96">More...</a><br /></td></tr>
<tr class="separator:ga4c71baaa51ca6bc9403a2a9ef0c46d96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a8d7156cd3c66a9ca9f0f2688ee9f72"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga6a8d7156cd3c66a9ca9f0f2688ee9f72">eval</a> () const</td></tr>
<tr class="memdesc:ga6a8d7156cd3c66a9ca9f0f2688ee9f72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate any JIT expressions to generate data for the array.  <a href="group__method__mat.htm#ga6a8d7156cd3c66a9ca9f0f2688ee9f72">More...</a><br /></td></tr>
<tr class="separator:ga6a8d7156cd3c66a9ca9f0f2688ee9f72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga048d77db849d74f18a13dabfd43ce55d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga048d77db849d74f18a13dabfd43ce55d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="group__method__mat.htm#ga7fc1c437c072767fc8acea2b67469498">T</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__method__mat.htm#ga048d77db849d74f18a13dabfd43ce55d">scalar</a> () const</td></tr>
<tr class="memdesc:ga048d77db849d74f18a13dabfd43ce55d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the first element of the array as a scalar.  <a href="group__method__mat.htm#ga048d77db849d74f18a13dabfd43ce55d">More...</a><br /></td></tr>
<tr class="separator:ga048d77db849d74f18a13dabfd43ce55d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gadadd8fc5a8adad8b3b833eb6a4244236"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gadadd8fc5a8adad8b3b833eb6a4244236"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="group__method__mat.htm#ga7fc1c437c072767fc8acea2b67469498">T</a> *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__device__mat.htm#gadadd8fc5a8adad8b3b833eb6a4244236">device</a> () const</td></tr>
<tr class="memdesc:gadadd8fc5a8adad8b3b833eb6a4244236"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the device pointer from the array and lock the buffer in memory manager.  <a href="group__device__mat.htm#gadadd8fc5a8adad8b3b833eb6a4244236">More...</a><br /></td></tr>
<tr class="separator:gadadd8fc5a8adad8b3b833eb6a4244236"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gab4b3d8fcff693a861c0748faf06fd65e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__row.htm#gab4b3d8fcff693a861c0748faf06fd65e">row</a> (int <a class="el" href="classaf_1_1index.htm">index</a>)</td></tr>
<tr class="memdesc:gab4b3d8fcff693a861c0748faf06fd65e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to a row.  <a href="group__array__mem__row.htm#gab4b3d8fcff693a861c0748faf06fd65e">More...</a><br /></td></tr>
<tr class="separator:gab4b3d8fcff693a861c0748faf06fd65e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d0184cfb1f00ed4b0ecb371f5cc4728"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__row.htm#ga9d0184cfb1f00ed4b0ecb371f5cc4728">row</a> (int <a class="el" href="classaf_1_1index.htm">index</a>) const</td></tr>
<tr class="memdesc:ga9d0184cfb1f00ed4b0ecb371f5cc4728"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to a row.  <a href="group__array__mem__row.htm#ga9d0184cfb1f00ed4b0ecb371f5cc4728">More...</a><br /></td></tr>
<tr class="separator:ga9d0184cfb1f00ed4b0ecb371f5cc4728"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacb5178c8a2361d0405cc34775e20c3af"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__row.htm#gacb5178c8a2361d0405cc34775e20c3af">rows</a> (int first, int last)</td></tr>
<tr class="memdesc:gacb5178c8a2361d0405cc34775e20c3af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to sequence of rows.  <a href="group__array__mem__row.htm#gacb5178c8a2361d0405cc34775e20c3af">More...</a><br /></td></tr>
<tr class="separator:gacb5178c8a2361d0405cc34775e20c3af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9cc36347482f44a204d053f9dd6d230c"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__row.htm#ga9cc36347482f44a204d053f9dd6d230c">rows</a> (int first, int last) const</td></tr>
<tr class="memdesc:ga9cc36347482f44a204d053f9dd6d230c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to sequence of rows.  <a href="group__array__mem__row.htm#ga9cc36347482f44a204d053f9dd6d230c">More...</a><br /></td></tr>
<tr class="separator:ga9cc36347482f44a204d053f9dd6d230c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gae54ff0116727d4f4f5f91306c609704e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__col.htm#gae54ff0116727d4f4f5f91306c609704e">col</a> (int <a class="el" href="classaf_1_1index.htm">index</a>)</td></tr>
<tr class="memdesc:gae54ff0116727d4f4f5f91306c609704e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to a col.  <a href="group__array__mem__col.htm#gae54ff0116727d4f4f5f91306c609704e">More...</a><br /></td></tr>
<tr class="separator:gae54ff0116727d4f4f5f91306c609704e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9d4458d899387af9befc15794eea8aa"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__col.htm#gae9d4458d899387af9befc15794eea8aa">col</a> (int <a class="el" href="classaf_1_1index.htm">index</a>) const</td></tr>
<tr class="memdesc:gae9d4458d899387af9befc15794eea8aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to a col.  <a href="group__array__mem__col.htm#gae9d4458d899387af9befc15794eea8aa">More...</a><br /></td></tr>
<tr class="separator:gae9d4458d899387af9befc15794eea8aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab4bddfa6cca59628b353964a71e8ec34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__col.htm#gab4bddfa6cca59628b353964a71e8ec34">cols</a> (int first, int last)</td></tr>
<tr class="memdesc:gab4bddfa6cca59628b353964a71e8ec34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to sequence of columns.  <a href="group__array__mem__col.htm#gab4bddfa6cca59628b353964a71e8ec34">More...</a><br /></td></tr>
<tr class="separator:gab4bddfa6cca59628b353964a71e8ec34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaabcf3442d37bcd62b586f352a8f5017d"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__col.htm#gaabcf3442d37bcd62b586f352a8f5017d">cols</a> (int first, int last) const</td></tr>
<tr class="memdesc:gaabcf3442d37bcd62b586f352a8f5017d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to sequence of columns.  <a href="group__array__mem__col.htm#gaabcf3442d37bcd62b586f352a8f5017d">More...</a><br /></td></tr>
<tr class="separator:gaabcf3442d37bcd62b586f352a8f5017d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga6bc9386479d36e426c205f3a761d6f0c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__slice.htm#ga6bc9386479d36e426c205f3a761d6f0c">slice</a> (int <a class="el" href="classaf_1_1index.htm">index</a>)</td></tr>
<tr class="memdesc:ga6bc9386479d36e426c205f3a761d6f0c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to a matrix in a volume.  <a href="group__array__mem__slice.htm#ga6bc9386479d36e426c205f3a761d6f0c">More...</a><br /></td></tr>
<tr class="separator:ga6bc9386479d36e426c205f3a761d6f0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4fc1362a4db0b4b4ac2a1b8452f4dea6"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__slice.htm#ga4fc1362a4db0b4b4ac2a1b8452f4dea6">slice</a> (int <a class="el" href="classaf_1_1index.htm">index</a>) const</td></tr>
<tr class="memdesc:ga4fc1362a4db0b4b4ac2a1b8452f4dea6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to a matrix in a volume.  <a href="group__array__mem__slice.htm#ga4fc1362a4db0b4b4ac2a1b8452f4dea6">More...</a><br /></td></tr>
<tr class="separator:ga4fc1362a4db0b4b4ac2a1b8452f4dea6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2164a9d0e38dd9e5b46d3763d77e5082"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__slice.htm#ga2164a9d0e38dd9e5b46d3763d77e5082">slices</a> (int first, int last)</td></tr>
<tr class="memdesc:ga2164a9d0e38dd9e5b46d3763d77e5082"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to a matrix in a volume.  <a href="group__array__mem__slice.htm#ga2164a9d0e38dd9e5b46d3763d77e5082">More...</a><br /></td></tr>
<tr class="separator:ga2164a9d0e38dd9e5b46d3763d77e5082"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacceb2e3736fd26549d8487785b9745ba"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__slice.htm#gacceb2e3736fd26549d8487785b9745ba">slices</a> (int first, int last) const</td></tr>
<tr class="memdesc:gacceb2e3736fd26549d8487785b9745ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to a matrix in a volume.  <a href="group__array__mem__slice.htm#gacceb2e3736fd26549d8487785b9745ba">More...</a><br /></td></tr>
<tr class="separator:gacceb2e3736fd26549d8487785b9745ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga11bf70061181a82e89b1a7eaf7769ec0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga11bf70061181a82e89b1a7eaf7769ec0">operator=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;val)</td></tr>
<tr class="memdesc:ga11bf70061181a82e89b1a7eaf7769ec0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#ga11bf70061181a82e89b1a7eaf7769ec0">More...</a><br /></td></tr>
<tr class="separator:ga11bf70061181a82e89b1a7eaf7769ec0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga931e4ca8864cfe4e27d98cd7ddd6a619"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga931e4ca8864cfe4e27d98cd7ddd6a619">operator=</a> (const double &amp;val)</td></tr>
<tr class="memdesc:ga931e4ca8864cfe4e27d98cd7ddd6a619"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#ga931e4ca8864cfe4e27d98cd7ddd6a619">More...</a><br /></td></tr>
<tr class="separator:ga931e4ca8864cfe4e27d98cd7ddd6a619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaffa8c05de1f925e1336fb21d75f64aae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#gaffa8c05de1f925e1336fb21d75f64aae">operator=</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;val)</td></tr>
<tr class="memdesc:gaffa8c05de1f925e1336fb21d75f64aae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#gaffa8c05de1f925e1336fb21d75f64aae">More...</a><br /></td></tr>
<tr class="separator:gaffa8c05de1f925e1336fb21d75f64aae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga608440521bd4699a0f37d1d080409138"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga608440521bd4699a0f37d1d080409138">operator=</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;val)</td></tr>
<tr class="memdesc:ga608440521bd4699a0f37d1d080409138"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#ga608440521bd4699a0f37d1d080409138">More...</a><br /></td></tr>
<tr class="separator:ga608440521bd4699a0f37d1d080409138"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae58cdf13cbf5185b459fe99089b33ac9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#gae58cdf13cbf5185b459fe99089b33ac9">operator=</a> (const float &amp;val)</td></tr>
<tr class="memdesc:gae58cdf13cbf5185b459fe99089b33ac9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#gae58cdf13cbf5185b459fe99089b33ac9">More...</a><br /></td></tr>
<tr class="separator:gae58cdf13cbf5185b459fe99089b33ac9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf6941f93c33646007143971eb59bc38c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#gaf6941f93c33646007143971eb59bc38c">operator=</a> (const int &amp;val)</td></tr>
<tr class="memdesc:gaf6941f93c33646007143971eb59bc38c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#gaf6941f93c33646007143971eb59bc38c">More...</a><br /></td></tr>
<tr class="separator:gaf6941f93c33646007143971eb59bc38c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad53beabb7c0a467e0d84b03cbf1ffa66"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#gad53beabb7c0a467e0d84b03cbf1ffa66">operator=</a> (const unsigned &amp;val)</td></tr>
<tr class="memdesc:gad53beabb7c0a467e0d84b03cbf1ffa66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#gad53beabb7c0a467e0d84b03cbf1ffa66">More...</a><br /></td></tr>
<tr class="separator:gad53beabb7c0a467e0d84b03cbf1ffa66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe2d303833ae638c8d2cdce663bd55b0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#gabe2d303833ae638c8d2cdce663bd55b0">operator=</a> (const bool &amp;val)</td></tr>
<tr class="memdesc:gabe2d303833ae638c8d2cdce663bd55b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#gabe2d303833ae638c8d2cdce663bd55b0">More...</a><br /></td></tr>
<tr class="separator:gabe2d303833ae638c8d2cdce663bd55b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae98b55159e92b2c951c4409bcd9e8c45"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#gae98b55159e92b2c951c4409bcd9e8c45">operator=</a> (const char &amp;val)</td></tr>
<tr class="memdesc:gae98b55159e92b2c951c4409bcd9e8c45"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#gae98b55159e92b2c951c4409bcd9e8c45">More...</a><br /></td></tr>
<tr class="separator:gae98b55159e92b2c951c4409bcd9e8c45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaec1f773ddab8fbe6b364bcf0c9b9bb9d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#gaec1f773ddab8fbe6b364bcf0c9b9bb9d">operator=</a> (const unsigned char &amp;val)</td></tr>
<tr class="memdesc:gaec1f773ddab8fbe6b364bcf0c9b9bb9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#gaec1f773ddab8fbe6b364bcf0c9b9bb9d">More...</a><br /></td></tr>
<tr class="separator:gaec1f773ddab8fbe6b364bcf0c9b9bb9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga18f01903cf3c944c48cfe63f8fc98fee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga18f01903cf3c944c48cfe63f8fc98fee">operator=</a> (const long &amp;val)</td></tr>
<tr class="memdesc:ga18f01903cf3c944c48cfe63f8fc98fee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#ga18f01903cf3c944c48cfe63f8fc98fee">More...</a><br /></td></tr>
<tr class="separator:ga18f01903cf3c944c48cfe63f8fc98fee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d878afc0a4a8987f44281c767f1847b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga9d878afc0a4a8987f44281c767f1847b">operator=</a> (const unsigned long &amp;val)</td></tr>
<tr class="memdesc:ga9d878afc0a4a8987f44281c767f1847b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#ga9d878afc0a4a8987f44281c767f1847b">More...</a><br /></td></tr>
<tr class="separator:ga9d878afc0a4a8987f44281c767f1847b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5141ac17955e80034b9d2f7137659906"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga5141ac17955e80034b9d2f7137659906">operator=</a> (const long long &amp;val)</td></tr>
<tr class="memdesc:ga5141ac17955e80034b9d2f7137659906"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#ga5141ac17955e80034b9d2f7137659906">More...</a><br /></td></tr>
<tr class="separator:ga5141ac17955e80034b9d2f7137659906"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga89b078f97145ef53f5beb0cb1da4237a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga89b078f97145ef53f5beb0cb1da4237a">operator=</a> (const unsigned long long &amp;val)</td></tr>
<tr class="separator:ga89b078f97145ef53f5beb0cb1da4237a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad7fa4cad7d5eb18d610ae13340c8c8cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#gad7fa4cad7d5eb18d610ae13340c8c8cc">operator=</a> (const short &amp;val)</td></tr>
<tr class="memdesc:gad7fa4cad7d5eb18d610ae13340c8c8cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignes the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__eq.htm#gad7fa4cad7d5eb18d610ae13340c8c8cc">More...</a><br /></td></tr>
<tr class="separator:gad7fa4cad7d5eb18d610ae13340c8c8cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga36bdf8d596c4ff96d21d03dd1dbf92d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__eq.htm#ga36bdf8d596c4ff96d21d03dd1dbf92d8">operator=</a> (const unsigned short &amp;val)</td></tr>
<tr class="separator:ga36bdf8d596c4ff96d21d03dd1dbf92d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga9ae2d9da5deeb1bd402c35972d1bab82"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#ga9ae2d9da5deeb1bd402c35972d1bab82">operator+=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;val)</td></tr>
<tr class="memdesc:ga9ae2d9da5deeb1bd402c35972d1bab82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#ga9ae2d9da5deeb1bd402c35972d1bab82">More...</a><br /></td></tr>
<tr class="separator:ga9ae2d9da5deeb1bd402c35972d1bab82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga59f906b1301dc3de347f423c9e28b72a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#ga59f906b1301dc3de347f423c9e28b72a">operator+=</a> (const double &amp;val)</td></tr>
<tr class="memdesc:ga59f906b1301dc3de347f423c9e28b72a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#ga59f906b1301dc3de347f423c9e28b72a">More...</a><br /></td></tr>
<tr class="separator:ga59f906b1301dc3de347f423c9e28b72a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae5d282cacb3516f5c2285237bc27e86a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#gae5d282cacb3516f5c2285237bc27e86a">operator+=</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;val)</td></tr>
<tr class="memdesc:gae5d282cacb3516f5c2285237bc27e86a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#gae5d282cacb3516f5c2285237bc27e86a">More...</a><br /></td></tr>
<tr class="separator:gae5d282cacb3516f5c2285237bc27e86a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga19ad3c1a22878b447658156f642fc380"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#ga19ad3c1a22878b447658156f642fc380">operator+=</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;val)</td></tr>
<tr class="memdesc:ga19ad3c1a22878b447658156f642fc380"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#ga19ad3c1a22878b447658156f642fc380">More...</a><br /></td></tr>
<tr class="separator:ga19ad3c1a22878b447658156f642fc380"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad25fc34435b14ead3f46af3edaba879e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#gad25fc34435b14ead3f46af3edaba879e">operator+=</a> (const float &amp;val)</td></tr>
<tr class="memdesc:gad25fc34435b14ead3f46af3edaba879e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#gad25fc34435b14ead3f46af3edaba879e">More...</a><br /></td></tr>
<tr class="separator:gad25fc34435b14ead3f46af3edaba879e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e0df738c5ef385098537c87325f11d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#ga9e0df738c5ef385098537c87325f11d4">operator+=</a> (const int &amp;val)</td></tr>
<tr class="memdesc:ga9e0df738c5ef385098537c87325f11d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#ga9e0df738c5ef385098537c87325f11d4">More...</a><br /></td></tr>
<tr class="separator:ga9e0df738c5ef385098537c87325f11d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga91a0d284d67e46b1eea9bfd0b1c72f34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#ga91a0d284d67e46b1eea9bfd0b1c72f34">operator+=</a> (const unsigned &amp;val)</td></tr>
<tr class="memdesc:ga91a0d284d67e46b1eea9bfd0b1c72f34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#ga91a0d284d67e46b1eea9bfd0b1c72f34">More...</a><br /></td></tr>
<tr class="separator:ga91a0d284d67e46b1eea9bfd0b1c72f34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc2396995c398ac5feb0c47a4e687740"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#gacc2396995c398ac5feb0c47a4e687740">operator+=</a> (const bool &amp;val)</td></tr>
<tr class="memdesc:gacc2396995c398ac5feb0c47a4e687740"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#gacc2396995c398ac5feb0c47a4e687740">More...</a><br /></td></tr>
<tr class="separator:gacc2396995c398ac5feb0c47a4e687740"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae450772dd0b5e4cb92b2f8917cee3bee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#gae450772dd0b5e4cb92b2f8917cee3bee">operator+=</a> (const char &amp;val)</td></tr>
<tr class="memdesc:gae450772dd0b5e4cb92b2f8917cee3bee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#gae450772dd0b5e4cb92b2f8917cee3bee">More...</a><br /></td></tr>
<tr class="separator:gae450772dd0b5e4cb92b2f8917cee3bee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d595592ac6552d51ca2f2f1c3e4c6d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#ga5d595592ac6552d51ca2f2f1c3e4c6d8">operator+=</a> (const unsigned char &amp;val)</td></tr>
<tr class="memdesc:ga5d595592ac6552d51ca2f2f1c3e4c6d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#ga5d595592ac6552d51ca2f2f1c3e4c6d8">More...</a><br /></td></tr>
<tr class="separator:ga5d595592ac6552d51ca2f2f1c3e4c6d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34a8f0a955e24b4485113374bfaac308"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#ga34a8f0a955e24b4485113374bfaac308">operator+=</a> (const long &amp;val)</td></tr>
<tr class="memdesc:ga34a8f0a955e24b4485113374bfaac308"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#ga34a8f0a955e24b4485113374bfaac308">More...</a><br /></td></tr>
<tr class="separator:ga34a8f0a955e24b4485113374bfaac308"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1fde10027ef98aff6ac5644528cc9cb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#ga1fde10027ef98aff6ac5644528cc9cb2">operator+=</a> (const unsigned long &amp;val)</td></tr>
<tr class="memdesc:ga1fde10027ef98aff6ac5644528cc9cb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#ga1fde10027ef98aff6ac5644528cc9cb2">More...</a><br /></td></tr>
<tr class="separator:ga1fde10027ef98aff6ac5644528cc9cb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f667620a46eaa18ce88258c5eed232d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#ga2f667620a46eaa18ce88258c5eed232d">operator+=</a> (const long long &amp;val)</td></tr>
<tr class="memdesc:ga2f667620a46eaa18ce88258c5eed232d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#ga2f667620a46eaa18ce88258c5eed232d">More...</a><br /></td></tr>
<tr class="separator:ga2f667620a46eaa18ce88258c5eed232d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c9e74b1eb2056b71d98f6844bdef276"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#ga8c9e74b1eb2056b71d98f6844bdef276">operator+=</a> (const unsigned long long &amp;val)</td></tr>
<tr class="separator:ga8c9e74b1eb2056b71d98f6844bdef276"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad68af056aa772697c2208d2f96cfb6a3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#gad68af056aa772697c2208d2f96cfb6a3">operator+=</a> (const short &amp;val)</td></tr>
<tr class="memdesc:gad68af056aa772697c2208d2f96cfb6a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__plus__eq.htm#gad68af056aa772697c2208d2f96cfb6a3">More...</a><br /></td></tr>
<tr class="separator:gad68af056aa772697c2208d2f96cfb6a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga72f2d805cb5a891e8dc2993edf22d096"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__plus__eq.htm#ga72f2d805cb5a891e8dc2993edf22d096">operator+=</a> (const unsigned short &amp;val)</td></tr>
<tr class="separator:ga72f2d805cb5a891e8dc2993edf22d096"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga6fe0f61a1ee69659deac464ea38565b1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#ga6fe0f61a1ee69659deac464ea38565b1">operator-=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;val)</td></tr>
<tr class="memdesc:ga6fe0f61a1ee69659deac464ea38565b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#ga6fe0f61a1ee69659deac464ea38565b1">More...</a><br /></td></tr>
<tr class="separator:ga6fe0f61a1ee69659deac464ea38565b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac85ddf0a4cd61e083851d5b98f0a8378"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#gac85ddf0a4cd61e083851d5b98f0a8378">operator-=</a> (const double &amp;val)</td></tr>
<tr class="memdesc:gac85ddf0a4cd61e083851d5b98f0a8378"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#gac85ddf0a4cd61e083851d5b98f0a8378">More...</a><br /></td></tr>
<tr class="separator:gac85ddf0a4cd61e083851d5b98f0a8378"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga771edbf67c4eb31c774a3981d8e99d08"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#ga771edbf67c4eb31c774a3981d8e99d08">operator-=</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;val)</td></tr>
<tr class="memdesc:ga771edbf67c4eb31c774a3981d8e99d08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#ga771edbf67c4eb31c774a3981d8e99d08">More...</a><br /></td></tr>
<tr class="separator:ga771edbf67c4eb31c774a3981d8e99d08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gade921b61aba23092f599dec2e18f0426"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#gade921b61aba23092f599dec2e18f0426">operator-=</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;val)</td></tr>
<tr class="memdesc:gade921b61aba23092f599dec2e18f0426"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#gade921b61aba23092f599dec2e18f0426">More...</a><br /></td></tr>
<tr class="separator:gade921b61aba23092f599dec2e18f0426"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga44b547e539dcbb1c4e5bd3f54f5ec423"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#ga44b547e539dcbb1c4e5bd3f54f5ec423">operator-=</a> (const float &amp;val)</td></tr>
<tr class="memdesc:ga44b547e539dcbb1c4e5bd3f54f5ec423"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#ga44b547e539dcbb1c4e5bd3f54f5ec423">More...</a><br /></td></tr>
<tr class="separator:ga44b547e539dcbb1c4e5bd3f54f5ec423"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf58393dc53bf2bcd0dd0efd4689950a1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#gaf58393dc53bf2bcd0dd0efd4689950a1">operator-=</a> (const int &amp;val)</td></tr>
<tr class="memdesc:gaf58393dc53bf2bcd0dd0efd4689950a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#gaf58393dc53bf2bcd0dd0efd4689950a1">More...</a><br /></td></tr>
<tr class="separator:gaf58393dc53bf2bcd0dd0efd4689950a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga70b105286bf582f433a3b3f3a5c2693b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#ga70b105286bf582f433a3b3f3a5c2693b">operator-=</a> (const unsigned &amp;val)</td></tr>
<tr class="memdesc:ga70b105286bf582f433a3b3f3a5c2693b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#ga70b105286bf582f433a3b3f3a5c2693b">More...</a><br /></td></tr>
<tr class="separator:ga70b105286bf582f433a3b3f3a5c2693b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabdd6a6173d98324001211a013bd63a36"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#gabdd6a6173d98324001211a013bd63a36">operator-=</a> (const bool &amp;val)</td></tr>
<tr class="memdesc:gabdd6a6173d98324001211a013bd63a36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#gabdd6a6173d98324001211a013bd63a36">More...</a><br /></td></tr>
<tr class="separator:gabdd6a6173d98324001211a013bd63a36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga37a6586fd9b75ac0d08a3b8ee4de25ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#ga37a6586fd9b75ac0d08a3b8ee4de25ff">operator-=</a> (const char &amp;val)</td></tr>
<tr class="memdesc:ga37a6586fd9b75ac0d08a3b8ee4de25ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#ga37a6586fd9b75ac0d08a3b8ee4de25ff">More...</a><br /></td></tr>
<tr class="separator:ga37a6586fd9b75ac0d08a3b8ee4de25ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga901f74ab9ed7854ee2d3e3b3b5d7e99b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#ga901f74ab9ed7854ee2d3e3b3b5d7e99b">operator-=</a> (const unsigned char &amp;val)</td></tr>
<tr class="memdesc:ga901f74ab9ed7854ee2d3e3b3b5d7e99b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#ga901f74ab9ed7854ee2d3e3b3b5d7e99b">More...</a><br /></td></tr>
<tr class="separator:ga901f74ab9ed7854ee2d3e3b3b5d7e99b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9ba6c7b92ef8eff5f0e4915f09721afc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#ga9ba6c7b92ef8eff5f0e4915f09721afc">operator-=</a> (const long &amp;val)</td></tr>
<tr class="memdesc:ga9ba6c7b92ef8eff5f0e4915f09721afc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#ga9ba6c7b92ef8eff5f0e4915f09721afc">More...</a><br /></td></tr>
<tr class="separator:ga9ba6c7b92ef8eff5f0e4915f09721afc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7555545c685d595fae059c547592ffcc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#ga7555545c685d595fae059c547592ffcc">operator-=</a> (const unsigned long &amp;val)</td></tr>
<tr class="memdesc:ga7555545c685d595fae059c547592ffcc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#ga7555545c685d595fae059c547592ffcc">More...</a><br /></td></tr>
<tr class="separator:ga7555545c685d595fae059c547592ffcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb26344e468fd21ad70d86b34b901ffa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#gadb26344e468fd21ad70d86b34b901ffa">operator-=</a> (const long long &amp;val)</td></tr>
<tr class="memdesc:gadb26344e468fd21ad70d86b34b901ffa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#gadb26344e468fd21ad70d86b34b901ffa">More...</a><br /></td></tr>
<tr class="separator:gadb26344e468fd21ad70d86b34b901ffa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c7b4fb72f7f22fe2f4c52ece6346705"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#ga8c7b4fb72f7f22fe2f4c52ece6346705">operator-=</a> (const unsigned long long &amp;val)</td></tr>
<tr class="separator:ga8c7b4fb72f7f22fe2f4c52ece6346705"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga16e92f9a1bc3eda6ae2313ba91120615"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#ga16e92f9a1bc3eda6ae2313ba91120615">operator-=</a> (const short &amp;val)</td></tr>
<tr class="memdesc:ga16e92f9a1bc3eda6ae2313ba91120615"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__minus__eq.htm#ga16e92f9a1bc3eda6ae2313ba91120615">More...</a><br /></td></tr>
<tr class="separator:ga16e92f9a1bc3eda6ae2313ba91120615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga728673e301d50394cac6c83ed7021e0f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__minus__eq.htm#ga728673e301d50394cac6c83ed7021e0f">operator-=</a> (const unsigned short &amp;val)</td></tr>
<tr class="separator:ga728673e301d50394cac6c83ed7021e0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga9f4753c29bb460fd6ae5889099cb824b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#ga9f4753c29bb460fd6ae5889099cb824b">operator*=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;val)</td></tr>
<tr class="memdesc:ga9f4753c29bb460fd6ae5889099cb824b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#ga9f4753c29bb460fd6ae5889099cb824b">More...</a><br /></td></tr>
<tr class="separator:ga9f4753c29bb460fd6ae5889099cb824b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga04794de43bb17d358b3830fee892687b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#ga04794de43bb17d358b3830fee892687b">operator*=</a> (const double &amp;val)</td></tr>
<tr class="memdesc:ga04794de43bb17d358b3830fee892687b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#ga04794de43bb17d358b3830fee892687b">More...</a><br /></td></tr>
<tr class="separator:ga04794de43bb17d358b3830fee892687b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae8d987a1552d9a83eaa0082ad679cb7a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#gae8d987a1552d9a83eaa0082ad679cb7a">operator*=</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;val)</td></tr>
<tr class="memdesc:gae8d987a1552d9a83eaa0082ad679cb7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#gae8d987a1552d9a83eaa0082ad679cb7a">More...</a><br /></td></tr>
<tr class="separator:gae8d987a1552d9a83eaa0082ad679cb7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c1dbed23f2c2729e76f0441e1ab0b17"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#ga9c1dbed23f2c2729e76f0441e1ab0b17">operator*=</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;val)</td></tr>
<tr class="memdesc:ga9c1dbed23f2c2729e76f0441e1ab0b17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#ga9c1dbed23f2c2729e76f0441e1ab0b17">More...</a><br /></td></tr>
<tr class="separator:ga9c1dbed23f2c2729e76f0441e1ab0b17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga493f244bb1ed7671fc39ec55834cae33"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#ga493f244bb1ed7671fc39ec55834cae33">operator*=</a> (const float &amp;val)</td></tr>
<tr class="memdesc:ga493f244bb1ed7671fc39ec55834cae33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#ga493f244bb1ed7671fc39ec55834cae33">More...</a><br /></td></tr>
<tr class="separator:ga493f244bb1ed7671fc39ec55834cae33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga323c213fa0173c2682fb8f84db7b926e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#ga323c213fa0173c2682fb8f84db7b926e">operator*=</a> (const int &amp;val)</td></tr>
<tr class="memdesc:ga323c213fa0173c2682fb8f84db7b926e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#ga323c213fa0173c2682fb8f84db7b926e">More...</a><br /></td></tr>
<tr class="separator:ga323c213fa0173c2682fb8f84db7b926e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafb227ba114c945b8762dc3bc32aad300"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#gafb227ba114c945b8762dc3bc32aad300">operator*=</a> (const unsigned &amp;val)</td></tr>
<tr class="memdesc:gafb227ba114c945b8762dc3bc32aad300"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#gafb227ba114c945b8762dc3bc32aad300">More...</a><br /></td></tr>
<tr class="separator:gafb227ba114c945b8762dc3bc32aad300"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae0e8dc2efb5e484815e3f634636f1008"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#gae0e8dc2efb5e484815e3f634636f1008">operator*=</a> (const bool &amp;val)</td></tr>
<tr class="memdesc:gae0e8dc2efb5e484815e3f634636f1008"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#gae0e8dc2efb5e484815e3f634636f1008">More...</a><br /></td></tr>
<tr class="separator:gae0e8dc2efb5e484815e3f634636f1008"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga988781f3e4918962793216414a82689b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#ga988781f3e4918962793216414a82689b">operator*=</a> (const char &amp;val)</td></tr>
<tr class="memdesc:ga988781f3e4918962793216414a82689b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#ga988781f3e4918962793216414a82689b">More...</a><br /></td></tr>
<tr class="separator:ga988781f3e4918962793216414a82689b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa58863bf44fd7500610f71388eae9174"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#gaa58863bf44fd7500610f71388eae9174">operator*=</a> (const unsigned char &amp;val)</td></tr>
<tr class="memdesc:gaa58863bf44fd7500610f71388eae9174"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#gaa58863bf44fd7500610f71388eae9174">More...</a><br /></td></tr>
<tr class="separator:gaa58863bf44fd7500610f71388eae9174"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga180e20c94d46a2cc9d5a9477711c7080"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#ga180e20c94d46a2cc9d5a9477711c7080">operator*=</a> (const long &amp;val)</td></tr>
<tr class="memdesc:ga180e20c94d46a2cc9d5a9477711c7080"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#ga180e20c94d46a2cc9d5a9477711c7080">More...</a><br /></td></tr>
<tr class="separator:ga180e20c94d46a2cc9d5a9477711c7080"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac1a2d3d06e55e93ebd5ac4e07f2b2c11"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#gac1a2d3d06e55e93ebd5ac4e07f2b2c11">operator*=</a> (const unsigned long &amp;val)</td></tr>
<tr class="memdesc:gac1a2d3d06e55e93ebd5ac4e07f2b2c11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#gac1a2d3d06e55e93ebd5ac4e07f2b2c11">More...</a><br /></td></tr>
<tr class="separator:gac1a2d3d06e55e93ebd5ac4e07f2b2c11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc5d464027d694ac5ea8928844cd12d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#gabc5d464027d694ac5ea8928844cd12d1">operator*=</a> (const long long &amp;val)</td></tr>
<tr class="memdesc:gabc5d464027d694ac5ea8928844cd12d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#gabc5d464027d694ac5ea8928844cd12d1">More...</a><br /></td></tr>
<tr class="separator:gabc5d464027d694ac5ea8928844cd12d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc72e64f43b29b7f577aaa5cd432e5f7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#gacc72e64f43b29b7f577aaa5cd432e5f7">operator*=</a> (const unsigned long long &amp;val)</td></tr>
<tr class="separator:gacc72e64f43b29b7f577aaa5cd432e5f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4aa6c81faf49ca99f9904c1b9948f37e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#ga4aa6c81faf49ca99f9904c1b9948f37e">operator*=</a> (const short &amp;val)</td></tr>
<tr class="memdesc:ga4aa6c81faf49ca99f9904c1b9948f37e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__multiply__eq.htm#ga4aa6c81faf49ca99f9904c1b9948f37e">More...</a><br /></td></tr>
<tr class="separator:ga4aa6c81faf49ca99f9904c1b9948f37e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9ad4aaeb24c10475482c2e3e7b6cdc2b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__multiply__eq.htm#ga9ad4aaeb24c10475482c2e3e7b6cdc2b">operator*=</a> (const unsigned short &amp;val)</td></tr>
<tr class="separator:ga9ad4aaeb24c10475482c2e3e7b6cdc2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gab856e9564b30bb3fb97fa7785892250f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#gab856e9564b30bb3fb97fa7785892250f">operator/=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;val)</td></tr>
<tr class="memdesc:gab856e9564b30bb3fb97fa7785892250f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#gab856e9564b30bb3fb97fa7785892250f">More...</a><br /></td></tr>
<tr class="separator:gab856e9564b30bb3fb97fa7785892250f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacde65596e0dca0e0a9400dd8c8ce6629"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#gacde65596e0dca0e0a9400dd8c8ce6629">operator/=</a> (const double &amp;val)</td></tr>
<tr class="memdesc:gacde65596e0dca0e0a9400dd8c8ce6629"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#gacde65596e0dca0e0a9400dd8c8ce6629">More...</a><br /></td></tr>
<tr class="separator:gacde65596e0dca0e0a9400dd8c8ce6629"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5b3865db145f814132e286d64a3b0a62"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#ga5b3865db145f814132e286d64a3b0a62">operator/=</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;val)</td></tr>
<tr class="memdesc:ga5b3865db145f814132e286d64a3b0a62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#ga5b3865db145f814132e286d64a3b0a62">More...</a><br /></td></tr>
<tr class="separator:ga5b3865db145f814132e286d64a3b0a62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf3291ea715aac58592719a1aedcfe240"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#gaf3291ea715aac58592719a1aedcfe240">operator/=</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;val)</td></tr>
<tr class="memdesc:gaf3291ea715aac58592719a1aedcfe240"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#gaf3291ea715aac58592719a1aedcfe240">More...</a><br /></td></tr>
<tr class="separator:gaf3291ea715aac58592719a1aedcfe240"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae869cac7cc8a1ed4e19b21b3f9ba7218"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#gae869cac7cc8a1ed4e19b21b3f9ba7218">operator/=</a> (const float &amp;val)</td></tr>
<tr class="memdesc:gae869cac7cc8a1ed4e19b21b3f9ba7218"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#gae869cac7cc8a1ed4e19b21b3f9ba7218">More...</a><br /></td></tr>
<tr class="separator:gae869cac7cc8a1ed4e19b21b3f9ba7218"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gace39001f0df1842d5d9b6670f9d914bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#gace39001f0df1842d5d9b6670f9d914bb">operator/=</a> (const int &amp;val)</td></tr>
<tr class="memdesc:gace39001f0df1842d5d9b6670f9d914bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#gace39001f0df1842d5d9b6670f9d914bb">More...</a><br /></td></tr>
<tr class="separator:gace39001f0df1842d5d9b6670f9d914bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2c026486bb890df4f80d3206d7a5be93"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#ga2c026486bb890df4f80d3206d7a5be93">operator/=</a> (const unsigned &amp;val)</td></tr>
<tr class="memdesc:ga2c026486bb890df4f80d3206d7a5be93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#ga2c026486bb890df4f80d3206d7a5be93">More...</a><br /></td></tr>
<tr class="separator:ga2c026486bb890df4f80d3206d7a5be93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafb16971a1f990c4eb55a0f9cba2c4bc6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#gafb16971a1f990c4eb55a0f9cba2c4bc6">operator/=</a> (const bool &amp;val)</td></tr>
<tr class="memdesc:gafb16971a1f990c4eb55a0f9cba2c4bc6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#gafb16971a1f990c4eb55a0f9cba2c4bc6">More...</a><br /></td></tr>
<tr class="separator:gafb16971a1f990c4eb55a0f9cba2c4bc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9089899d5d5be192c4503fb3e8b7c76a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#ga9089899d5d5be192c4503fb3e8b7c76a">operator/=</a> (const char &amp;val)</td></tr>
<tr class="memdesc:ga9089899d5d5be192c4503fb3e8b7c76a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#ga9089899d5d5be192c4503fb3e8b7c76a">More...</a><br /></td></tr>
<tr class="separator:ga9089899d5d5be192c4503fb3e8b7c76a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga68b18772c8fd83de4a61c0568f7e886d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#ga68b18772c8fd83de4a61c0568f7e886d">operator/=</a> (const unsigned char &amp;val)</td></tr>
<tr class="memdesc:ga68b18772c8fd83de4a61c0568f7e886d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#ga68b18772c8fd83de4a61c0568f7e886d">More...</a><br /></td></tr>
<tr class="separator:ga68b18772c8fd83de4a61c0568f7e886d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga17ab325267a303ca47d4630d356dfd13"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#ga17ab325267a303ca47d4630d356dfd13">operator/=</a> (const long &amp;val)</td></tr>
<tr class="memdesc:ga17ab325267a303ca47d4630d356dfd13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#ga17ab325267a303ca47d4630d356dfd13">More...</a><br /></td></tr>
<tr class="separator:ga17ab325267a303ca47d4630d356dfd13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3ece56e8cdcac0d772e68d6b9a8b90be"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#ga3ece56e8cdcac0d772e68d6b9a8b90be">operator/=</a> (const unsigned long &amp;val)</td></tr>
<tr class="memdesc:ga3ece56e8cdcac0d772e68d6b9a8b90be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#ga3ece56e8cdcac0d772e68d6b9a8b90be">More...</a><br /></td></tr>
<tr class="separator:ga3ece56e8cdcac0d772e68d6b9a8b90be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc087343a716470531fd834fa7f0ee82"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#gadc087343a716470531fd834fa7f0ee82">operator/=</a> (const long long &amp;val)</td></tr>
<tr class="memdesc:gadc087343a716470531fd834fa7f0ee82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#gadc087343a716470531fd834fa7f0ee82">More...</a><br /></td></tr>
<tr class="separator:gadc087343a716470531fd834fa7f0ee82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga031b97d389fcea6a5b20ac4b77ad38b2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#ga031b97d389fcea6a5b20ac4b77ad38b2">operator/=</a> (const unsigned long long &amp;val)</td></tr>
<tr class="separator:ga031b97d389fcea6a5b20ac4b77ad38b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafea9e18f43968573441b2e5d480dcc88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#gafea9e18f43968573441b2e5d480dcc88">operator/=</a> (const short &amp;val)</td></tr>
<tr class="memdesc:gafea9e18f43968573441b2e5d480dcc88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides the value(s) of val to the elements of the array.  <a href="group__array__mem__operator__divide__eq.htm#gafea9e18f43968573441b2e5d480dcc88">More...</a><br /></td></tr>
<tr class="separator:gafea9e18f43968573441b2e5d480dcc88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad746f23051f437177575d78e9c723d9c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__divide__eq.htm#gad746f23051f437177575d78e9c723d9c">operator/=</a> (const unsigned short &amp;val)</td></tr>
<tr class="separator:gad746f23051f437177575d78e9c723d9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A multi dimensional data container. </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="benchmarks_2blas_8cpp-example.htm#_a0">benchmarks/blas.cpp</a>, <a class="el" href="benchmarks_2cg_8cpp-example.htm#_a0">benchmarks/cg.cpp</a>, <a class="el" href="benchmarks_2fft_8cpp-example.htm#_a0">benchmarks/fft.cpp</a>, <a class="el" href="benchmarks_2pi_8cpp-example.htm#_a0">benchmarks/pi.cpp</a>, <a class="el" href="computer_vision_2fast_8cpp-example.htm#_a0">computer_vision/fast.cpp</a>, <a class="el" href="computer_vision_2harris_8cpp-example.htm#_a1">computer_vision/harris.cpp</a>, <a class="el" href="computer_vision_2matching_8cpp-example.htm#_a0">computer_vision/matching.cpp</a>, <a class="el" href="computer_vision_2susan_8cpp-example.htm#_a0">computer_vision/susan.cpp</a>, <a class="el" href="financial_2black_scholes_options_8cpp-example.htm#_a0">financial/black_scholes_options.cpp</a>, <a class="el" href="financial_2heston_model_8cpp-example.htm#_a0">financial/heston_model.cpp</a>, <a class="el" href="financial_2monte_carlo_options_8cpp-example.htm#_a2">financial/monte_carlo_options.cpp</a>, <a class="el" href="getting_started_2convolve_8cpp-example.htm#_a0">getting_started/convolve.cpp</a>, <a class="el" href="getting_started_2integer_8cpp-example.htm#_a2">getting_started/integer.cpp</a>, <a class="el" href="getting_started_2rainfall_8cpp-example.htm#_a2">getting_started/rainfall.cpp</a>, <a class="el" href="getting_started_2vectorize_8cpp-example.htm#_a0">getting_started/vectorize.cpp</a>, <a class="el" href="graphics_2conway_8cpp-example.htm#_a2">graphics/conway.cpp</a>, <a class="el" href="graphics_2conway_pretty_8cpp-example.htm#_a3">graphics/conway_pretty.cpp</a>, <a class="el" href="graphics_2field_8cpp-example.htm#_a3">graphics/field.cpp</a>, <a class="el" href="graphics_2fractal_8cpp-example.htm#_a1">graphics/fractal.cpp</a>, <a class="el" href="graphics_2gravity_sim_8cpp-example.htm#_a0">graphics/gravity_sim.cpp</a>, <a class="el" href="graphics_2histogram_8cpp-example.htm#_a2">graphics/histogram.cpp</a>, <a class="el" href="graphics_2plot2d_8cpp-example.htm#_a2">graphics/plot2d.cpp</a>, <a class="el" href="graphics_2plot3_8cpp-example.htm#_a2">graphics/plot3.cpp</a>, <a class="el" href="graphics_2surface_8cpp-example.htm#_a2">graphics/surface.cpp</a>, <a class="el" href="helloworld_2helloworld_8cpp-example.htm#_a2">helloworld/helloworld.cpp</a>, <a class="el" href="image_processing_2adaptive_thresholding_8cpp-example.htm#_a1">image_processing/adaptive_thresholding.cpp</a>, <a class="el" href="image_processing_2binary_thresholding_8cpp-example.htm#_a0">image_processing/binary_thresholding.cpp</a>, <a class="el" href="image_processing_2brain_segmentation_8cpp-example.htm#_a0">image_processing/brain_segmentation.cpp</a>, <a class="el" href="image_processing_2confidence_connected_components_8cpp-example.htm#_a0">image_processing/confidence_connected_components.cpp</a>, <a class="el" href="image_processing_2deconvolution_8cpp-example.htm#_a0">image_processing/deconvolution.cpp</a>, <a class="el" href="image_processing_2edge_8cpp-example.htm#_a0">image_processing/edge.cpp</a>, <a class="el" href="image_processing_2filters_8cpp-example.htm#_a0">image_processing/filters.cpp</a>, <a class="el" href="image_processing_2gradient_diffusion_8cpp-example.htm#_a0">image_processing/gradient_diffusion.cpp</a>, <a class="el" href="image_processing_2image_demo_8cpp-example.htm#_a0">image_processing/image_demo.cpp</a>, <a class="el" href="image_processing_2image_editing_8cpp-example.htm#_a0">image_processing/image_editing.cpp</a>, <a class="el" href="image_processing_2morphing_8cpp-example.htm#_a0">image_processing/morphing.cpp</a>, <a class="el" href="image_processing_2optical_flow_8cpp-example.htm#_a0">image_processing/optical_flow.cpp</a>, <a class="el" href="image_processing_2pyramids_8cpp-example.htm#_a0">image_processing/pyramids.cpp</a>, <a class="el" href="lin_algebra_2cholesky_8cpp-example.htm#_a2">lin_algebra/cholesky.cpp</a>, <a class="el" href="lin_algebra_2lu_8cpp-example.htm#_a2">lin_algebra/lu.cpp</a>, <a class="el" href="lin_algebra_2qr_8cpp-example.htm#_a2">lin_algebra/qr.cpp</a>, <a class="el" href="lin_algebra_2svd_8cpp-example.htm#_a2">lin_algebra/svd.cpp</a>, <a class="el" href="machine_learning_2bagging_8cpp-example.htm#_a0">machine_learning/bagging.cpp</a>, <a class="el" href="machine_learning_2deep_belief_net_8cpp-example.htm#_a0">machine_learning/deep_belief_net.cpp</a>, <a class="el" href="machine_learning_2geneticalgorithm_8cpp-example.htm#_a0">machine_learning/geneticalgorithm.cpp</a>, <a class="el" href="machine_learning_2kmeans_8cpp-example.htm#_a0">machine_learning/kmeans.cpp</a>, <a class="el" href="machine_learning_2knn_8cpp-example.htm#_a0">machine_learning/knn.cpp</a>, <a class="el" href="machine_learning_2logistic_regression_8cpp-example.htm#_a0">machine_learning/logistic_regression.cpp</a>, <a class="el" href="machine_learning_2naive_bayes_8cpp-example.htm#_a0">machine_learning/naive_bayes.cpp</a>, <a class="el" href="machine_learning_2neural_network_8cpp-example.htm#_a2">machine_learning/neural_network.cpp</a>, <a class="el" href="machine_learning_2perceptron_8cpp-example.htm#_a0">machine_learning/perceptron.cpp</a>, <a class="el" href="machine_learning_2rbm_8cpp-example.htm#_a0">machine_learning/rbm.cpp</a>, <a class="el" href="machine_learning_2softmax_regression_8cpp-example.htm#_a0">machine_learning/softmax_regression.cpp</a>, <a class="el" href="pde_2swe_8cpp-example.htm#_a1">pde/swe.cpp</a>, and <a class="el" href="unified_2basic_8cpp-example.htm#_a2">unified/basic.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="array_8h_source.htm#l00035">35</a> of file <a class="el" href="array_8h_source.htm">array.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8ec8b3d923f76dab805bc55dc821be1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ec8b3d923f76dab805bc55dc821be1d">&#9670;&nbsp;</a></span>~array()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classaf_1_1array.htm">array</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a43966e19963e4bcb7f7f9b5327ec732b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43966e19963e4bcb7f7f9b5327ec732b">&#9670;&nbsp;</a></span>isLocked()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool isLocked </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Query if the array has been locked by the user. </p>
<p>An array can be locked by the user by calling <code>arry.lock</code> or <code>arr.device</code> or <code>getRawPtr</code> function. </p>

</div>
</div>
<a id="a0af0c6e3920cd67025211889c98807db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0af0c6e3920cd67025211889c98807db">&#9670;&nbsp;</a></span>lock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lock </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Locks the device buffer in the memory manager. </p>
<p>This method can be called to take control of the device pointer from the memory manager. While a buffer is locked, the memory manager doesn't free the memory until <a class="el" href="classaf_1_1array.htm#abc83498cc8bf3655094e2f4273861680" title="Unlocks the device buffer in the memory manager.">unlock()</a> is invoked. </p>

</div>
</div>
<a id="aea718cb4ebc56f57330352f130385c89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea718cb4ebc56f57330352f130385c89">&#9670;&nbsp;</a></span>nonzeros()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int nonzeros </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the count of non-zero elements in the array. </p>
<p>For dense matrix, this is the same as count&lt;int&gt;(arr); </p>

</div>
</div>
<a id="a45b3c2ad4eb3f366485b7408367c56b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45b3c2ad4eb3f366485b7408367c56b5">&#9670;&nbsp;</a></span>set()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>tmp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Updates the internal <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> object. </p>
<dl class="section note"><dt>Note</dt><dd>This function will reduce the reference of the previous <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> object </dd></dl>

</div>
</div>
<a id="abc83498cc8bf3655094e2f4273861680"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc83498cc8bf3655094e2f4273861680">&#9670;&nbsp;</a></span>unlock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void unlock </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unlocks the device buffer in the memory manager. </p>
<p>This method can be called after called after calling <a class="el" href="classaf_1_1array.htm#a0af0c6e3920cd67025211889c98807db">array::lock()</a> Calling this method gives back the control of the device pointer to the memory manager. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="array_8h_source.htm">array.h (2020-02-12 15:19:32 -0500, (build fbea2aeb6))</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
