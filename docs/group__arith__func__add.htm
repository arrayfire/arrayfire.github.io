<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>add</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__arith__func__add.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">add<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">Complete List of ArrayFire Functions</a><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__mathfunc__mat.htm">Mathematical functions</a> &raquo;  &#124; <a class="el" href="group__arith__mat.htm">Arithmetic operations</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Addition of two inputs.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga1dfbee755fedd680f4476803ddfe06a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga1dfbee755fedd680f4476803ddfe06a7">af_add</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga1dfbee755fedd680f4476803ddfe06a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for adding arrays.  <a href="#ga1dfbee755fedd680f4476803ddfe06a7">More...</a><br /></td></tr>
<tr class="separator:ga1dfbee755fedd680f4476803ddfe06a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7d51866424616760656cfa16c4c8164d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga7d51866424616760656cfa16c4c8164d">operator+</a> (const array &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga7d51866424616760656cfa16c4c8164d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value.  <a href="group__arith__func__add.htm#ga7d51866424616760656cfa16c4c8164d">More...</a><br /></td></tr>
<tr class="separator:ga7d51866424616760656cfa16c4c8164d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab5ade0ae1a4acd12275f1c633dcbbe7d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gab5ade0ae1a4acd12275f1c633dcbbe7d">operator+</a> (const bool &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gab5ade0ae1a4acd12275f1c633dcbbe7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#gab5ade0ae1a4acd12275f1c633dcbbe7d">More...</a><br /></td></tr>
<tr class="separator:gab5ade0ae1a4acd12275f1c633dcbbe7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9aece7612ca2427aae1f213782aeadd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gae9aece7612ca2427aae1f213782aeadd">operator+</a> (const int &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gae9aece7612ca2427aae1f213782aeadd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#gae9aece7612ca2427aae1f213782aeadd">More...</a><br /></td></tr>
<tr class="separator:gae9aece7612ca2427aae1f213782aeadd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9cce7b588854c258e9189ecb9f2ce03e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga9cce7b588854c258e9189ecb9f2ce03e">operator+</a> (const unsigned &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9cce7b588854c258e9189ecb9f2ce03e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga9cce7b588854c258e9189ecb9f2ce03e">More...</a><br /></td></tr>
<tr class="separator:ga9cce7b588854c258e9189ecb9f2ce03e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f8bc9129631c592a336c0600e8c73bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga6f8bc9129631c592a336c0600e8c73bd">operator+</a> (const char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6f8bc9129631c592a336c0600e8c73bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga6f8bc9129631c592a336c0600e8c73bd">More...</a><br /></td></tr>
<tr class="separator:ga6f8bc9129631c592a336c0600e8c73bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga897c7a9cf03ee90ae67fd144c2f2eb78"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga897c7a9cf03ee90ae67fd144c2f2eb78">operator+</a> (const unsigned char &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga897c7a9cf03ee90ae67fd144c2f2eb78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga897c7a9cf03ee90ae67fd144c2f2eb78">More...</a><br /></td></tr>
<tr class="separator:ga897c7a9cf03ee90ae67fd144c2f2eb78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea6acff100e76e527bcefee639ef6701"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gaea6acff100e76e527bcefee639ef6701">operator+</a> (const long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gaea6acff100e76e527bcefee639ef6701"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#gaea6acff100e76e527bcefee639ef6701">More...</a><br /></td></tr>
<tr class="separator:gaea6acff100e76e527bcefee639ef6701"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1fc4d83fb1035827938137cdea422c90"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga1fc4d83fb1035827938137cdea422c90">operator+</a> (const unsigned long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga1fc4d83fb1035827938137cdea422c90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga1fc4d83fb1035827938137cdea422c90">More...</a><br /></td></tr>
<tr class="separator:ga1fc4d83fb1035827938137cdea422c90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6274f9aa218318bb264feb27c70892de"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga6274f9aa218318bb264feb27c70892de">operator+</a> (const long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga6274f9aa218318bb264feb27c70892de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga6274f9aa218318bb264feb27c70892de">More...</a><br /></td></tr>
<tr class="separator:ga6274f9aa218318bb264feb27c70892de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c06f6a8b9c5c0215e965b863eef85fb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga0c06f6a8b9c5c0215e965b863eef85fb">operator+</a> (const unsigned long long &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga0c06f6a8b9c5c0215e965b863eef85fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga0c06f6a8b9c5c0215e965b863eef85fb">More...</a><br /></td></tr>
<tr class="separator:ga0c06f6a8b9c5c0215e965b863eef85fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2913d86f98964937ddbcba7d0808bf18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga2913d86f98964937ddbcba7d0808bf18">operator+</a> (const double &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga2913d86f98964937ddbcba7d0808bf18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga2913d86f98964937ddbcba7d0808bf18">More...</a><br /></td></tr>
<tr class="separator:ga2913d86f98964937ddbcba7d0808bf18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga326647d60952d5295c695c89176fac06"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga326647d60952d5295c695c89176fac06">operator+</a> (const float &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga326647d60952d5295c695c89176fac06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga326647d60952d5295c695c89176fac06">More...</a><br /></td></tr>
<tr class="separator:ga326647d60952d5295c695c89176fac06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac552f3315930d7415c09c97c2b3f2958"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gac552f3315930d7415c09c97c2b3f2958">operator+</a> (const cfloat &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac552f3315930d7415c09c97c2b3f2958"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#gac552f3315930d7415c09c97c2b3f2958">More...</a><br /></td></tr>
<tr class="separator:gac552f3315930d7415c09c97c2b3f2958"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac69969f41036e361ed9d49c5a3bdab88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gac69969f41036e361ed9d49c5a3bdab88">operator+</a> (const cdouble &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gac69969f41036e361ed9d49c5a3bdab88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#gac69969f41036e361ed9d49c5a3bdab88">More...</a><br /></td></tr>
<tr class="separator:gac69969f41036e361ed9d49c5a3bdab88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaecc374522bf7cd68fd5e7e4d126dcd3e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gaecc374522bf7cd68fd5e7e4d126dcd3e">operator+</a> (const array &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gaecc374522bf7cd68fd5e7e4d126dcd3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#gaecc374522bf7cd68fd5e7e4d126dcd3e">More...</a><br /></td></tr>
<tr class="separator:gaecc374522bf7cd68fd5e7e4d126dcd3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga651d3b0fcb1919eed66723285bcb7b4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga651d3b0fcb1919eed66723285bcb7b4f">operator+</a> (const array &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga651d3b0fcb1919eed66723285bcb7b4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga651d3b0fcb1919eed66723285bcb7b4f">More...</a><br /></td></tr>
<tr class="separator:ga651d3b0fcb1919eed66723285bcb7b4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga341c8d6a5cc66ae022afcc3d3dfb6f64"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga341c8d6a5cc66ae022afcc3d3dfb6f64">operator+</a> (const array &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga341c8d6a5cc66ae022afcc3d3dfb6f64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga341c8d6a5cc66ae022afcc3d3dfb6f64">More...</a><br /></td></tr>
<tr class="separator:ga341c8d6a5cc66ae022afcc3d3dfb6f64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1a68170d5539199d256eab53a7189fd8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga1a68170d5539199d256eab53a7189fd8">operator+</a> (const array &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga1a68170d5539199d256eab53a7189fd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga1a68170d5539199d256eab53a7189fd8">More...</a><br /></td></tr>
<tr class="separator:ga1a68170d5539199d256eab53a7189fd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9dac331b228a90346da4013961b45b67"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga9dac331b228a90346da4013961b45b67">operator+</a> (const array &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga9dac331b228a90346da4013961b45b67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga9dac331b228a90346da4013961b45b67">More...</a><br /></td></tr>
<tr class="separator:ga9dac331b228a90346da4013961b45b67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac00a9d1547fcf4b5e2364f4cd750a30a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gac00a9d1547fcf4b5e2364f4cd750a30a">operator+</a> (const array &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:gac00a9d1547fcf4b5e2364f4cd750a30a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#gac00a9d1547fcf4b5e2364f4cd750a30a">More...</a><br /></td></tr>
<tr class="separator:gac00a9d1547fcf4b5e2364f4cd750a30a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga51dc6356169caef337018a87845e1ad9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga51dc6356169caef337018a87845e1ad9">operator+</a> (const array &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga51dc6356169caef337018a87845e1ad9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga51dc6356169caef337018a87845e1ad9">More...</a><br /></td></tr>
<tr class="separator:ga51dc6356169caef337018a87845e1ad9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c749b56395f90b9332f39b0c55dfa6f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga9c749b56395f90b9332f39b0c55dfa6f">operator+</a> (const array &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga9c749b56395f90b9332f39b0c55dfa6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga9c749b56395f90b9332f39b0c55dfa6f">More...</a><br /></td></tr>
<tr class="separator:ga9c749b56395f90b9332f39b0c55dfa6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad69db45bcef38ab4b9926bdec00175eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gad69db45bcef38ab4b9926bdec00175eb">operator+</a> (const array &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gad69db45bcef38ab4b9926bdec00175eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#gad69db45bcef38ab4b9926bdec00175eb">More...</a><br /></td></tr>
<tr class="separator:gad69db45bcef38ab4b9926bdec00175eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga20104a12db4cf98a1431d6d6a42e3a6e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga20104a12db4cf98a1431d6d6a42e3a6e">operator+</a> (const array &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga20104a12db4cf98a1431d6d6a42e3a6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga20104a12db4cf98a1431d6d6a42e3a6e">More...</a><br /></td></tr>
<tr class="separator:ga20104a12db4cf98a1431d6d6a42e3a6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga47faf6f861c03570696031a186efd18e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga47faf6f861c03570696031a186efd18e">operator+</a> (const array &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga47faf6f861c03570696031a186efd18e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga47faf6f861c03570696031a186efd18e">More...</a><br /></td></tr>
<tr class="separator:ga47faf6f861c03570696031a186efd18e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c928e3d0da10b8bb0c125db136031e8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga9c928e3d0da10b8bb0c125db136031e8">operator+</a> (const array &amp;lhs, const cfloat &amp;rhs)</td></tr>
<tr class="memdesc:ga9c928e3d0da10b8bb0c125db136031e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga9c928e3d0da10b8bb0c125db136031e8">More...</a><br /></td></tr>
<tr class="separator:ga9c928e3d0da10b8bb0c125db136031e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9a7f7489ddbf441efe7600e7c8d11feb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga9a7f7489ddbf441efe7600e7c8d11feb">operator+</a> (const array &amp;lhs, const cdouble &amp;rhs)</td></tr>
<tr class="memdesc:ga9a7f7489ddbf441efe7600e7c8d11feb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga9a7f7489ddbf441efe7600e7c8d11feb">More...</a><br /></td></tr>
<tr class="separator:ga9a7f7489ddbf441efe7600e7c8d11feb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9658862d87e0d735007520ef80e80acf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga9658862d87e0d735007520ef80e80acf">operator+</a> (const short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:ga9658862d87e0d735007520ef80e80acf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga9658862d87e0d735007520ef80e80acf">More...</a><br /></td></tr>
<tr class="separator:ga9658862d87e0d735007520ef80e80acf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gace86e46bcf50d7769092a8b692a24472"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#gace86e46bcf50d7769092a8b692a24472">operator+</a> (const unsigned short &amp;lhs, const array &amp;rhs)</td></tr>
<tr class="memdesc:gace86e46bcf50d7769092a8b692a24472"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#gace86e46bcf50d7769092a8b692a24472">More...</a><br /></td></tr>
<tr class="separator:gace86e46bcf50d7769092a8b692a24472"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6176eb436a3c41acd4cb5ac105fc2a04"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga6176eb436a3c41acd4cb5ac105fc2a04">operator+</a> (const array &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga6176eb436a3c41acd4cb5ac105fc2a04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga6176eb436a3c41acd4cb5ac105fc2a04">More...</a><br /></td></tr>
<tr class="separator:ga6176eb436a3c41acd4cb5ac105fc2a04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5178216ae5af9509d54f70646448bf77"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__add.htm#ga5178216ae5af9509d54f70646448bf77">operator+</a> (const array &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="memdesc:ga5178216ae5af9509d54f70646448bf77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two arrays or an array and a value. (const array&amp;, const array&amp;)  <a href="group__arith__func__add.htm#ga5178216ae5af9509d54f70646448bf77">More...</a><br /></td></tr>
<tr class="separator:ga5178216ae5af9509d54f70646448bf77"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Addition of two inputs. </p>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga1dfbee755fedd680f4476803ddfe06a7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>batch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for adding arrays. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain sum of <code>lhs</code> and <code>rhs</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>first input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>second input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">batch</td><td>specifies if operations need to be performed in batch mode </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
<a class="anchor" id="ga5178216ae5af9509d54f70646448bf77"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga6176eb436a3c41acd4cb5ac105fc2a04"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="gace86e46bcf50d7769092a8b692a24472"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga9658862d87e0d735007520ef80e80acf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga9a7f7489ddbf441efe7600e7c8d11feb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga9c928e3d0da10b8bb0c125db136031e8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga47faf6f861c03570696031a186efd18e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga20104a12db4cf98a1431d6d6a42e3a6e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="gad69db45bcef38ab4b9926bdec00175eb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga9c749b56395f90b9332f39b0c55dfa6f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga51dc6356169caef337018a87845e1ad9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="gac00a9d1547fcf4b5e2364f4cd750a30a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga9dac331b228a90346da4013961b45b67"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga1a68170d5539199d256eab53a7189fd8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga341c8d6a5cc66ae022afcc3d3dfb6f64"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga651d3b0fcb1919eed66723285bcb7b4f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="gaecc374522bf7cd68fd5e7e4d126dcd3e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="gac69969f41036e361ed9d49c5a3bdab88"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="gac552f3315930d7415c09c97c2b3f2958"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga326647d60952d5295c695c89176fac06"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga2913d86f98964937ddbcba7d0808bf18"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga0c06f6a8b9c5c0215e965b863eef85fb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga6274f9aa218318bb264feb27c70892de"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga1fc4d83fb1035827938137cdea422c90"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="gaea6acff100e76e527bcefee639ef6701"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga897c7a9cf03ee90ae67fd144c2f2eb78"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga6f8bc9129631c592a336c0600e8c73bd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga9cce7b588854c258e9189ecb9f2ce03e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="gae9aece7612ca2427aae1f213782aeadd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="gab5ade0ae1a4acd12275f1c633dcbbe7d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. (const array&amp;, const array&amp;) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> (const array&amp;, const array&amp;) </dd></dl>

</div>
</div>
<a class="anchor" id="ga7d51866424616760656cfa16c4c8164d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds two arrays or an array and a value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array which is the sum of the <code>lhs</code> and <code>rhs</code> </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
