<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: Rendering Functions</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__gfx__func__draw.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">Rendering Functions<div class="ingroups"><a class="el" href="group__graphics__func.htm">Graphics</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Rendering functions to draw images, plots etc.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaed174450be6db4dfa5ef65b7baccbe57"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gaed174450be6db4dfa5ef65b7baccbe57">image</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const char *title=NULL)</td></tr>
<tr class="memdesc:gaed174450be6db4dfa5ef65b7baccbe57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input array as an image to the window.  <a href="group__gfx__func__draw.htm#gaed174450be6db4dfa5ef65b7baccbe57">More...</a><br /></td></tr>
<tr class="separator:gaed174450be6db4dfa5ef65b7baccbe57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e04ec129034e9fe769f3e6b14cd087f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga8e04ec129034e9fe769f3e6b14cd087f">plot3</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const char *title=NULL)</td></tr>
<tr class="memdesc:ga8e04ec129034e9fe769f3e6b14cd087f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input array as an 3d line plot to the window.  <a href="group__gfx__func__draw.htm#ga8e04ec129034e9fe769f3e6b14cd087f">More...</a><br /></td></tr>
<tr class="separator:ga8e04ec129034e9fe769f3e6b14cd087f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed2e96201d07c5f90e430632de5e26f1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gaed2e96201d07c5f90e430632de5e26f1">plot</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const char *const title=NULL)</td></tr>
<tr class="memdesc:gaed2e96201d07c5f90e430632de5e26f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 2D or 3D plot to the window.  <a href="group__gfx__func__draw.htm#gaed2e96201d07c5f90e430632de5e26f1">More...</a><br /></td></tr>
<tr class="separator:gaed2e96201d07c5f90e430632de5e26f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ce8ee73bdd3f4eec7efb0ae099e68b8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga1ce8ee73bdd3f4eec7efb0ae099e68b8">plot</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;X, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;Y, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;Z, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga1ce8ee73bdd3f4eec7efb0ae099e68b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 3D plot to the window.  <a href="group__gfx__func__draw.htm#ga1ce8ee73bdd3f4eec7efb0ae099e68b8">More...</a><br /></td></tr>
<tr class="separator:ga1ce8ee73bdd3f4eec7efb0ae099e68b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e01736df3d805a5488c609e2573818b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga8e01736df3d805a5488c609e2573818b">plot</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;X, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;Y, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga8e01736df3d805a5488c609e2573818b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 2D plot to the window.  <a href="group__gfx__func__draw.htm#ga8e01736df3d805a5488c609e2573818b">More...</a><br /></td></tr>
<tr class="separator:ga8e01736df3d805a5488c609e2573818b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf95ec84f9788b42fd443c9523792e4a4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gaf95ec84f9788b42fd443c9523792e4a4">scatter</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af::markerType</a> marker=<a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02bae2f4782ee6ad84f167153787eb5ce1bc">AF_MARKER_POINT</a>, const char *const title=NULL)</td></tr>
<tr class="memdesc:gaf95ec84f9788b42fd443c9523792e4a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 2D or 3D scatter-plot to the window.  <a href="group__gfx__func__draw.htm#gaf95ec84f9788b42fd443c9523792e4a4">More...</a><br /></td></tr>
<tr class="separator:gaf95ec84f9788b42fd443c9523792e4a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabfc0b01364885bdf3ce39c6205dc0287"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gabfc0b01364885bdf3ce39c6205dc0287">scatter</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;X, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;Y, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;Z, const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af::markerType</a> marker=<a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02bae2f4782ee6ad84f167153787eb5ce1bc">AF_MARKER_POINT</a>, const char *const title=NULL)</td></tr>
<tr class="memdesc:gabfc0b01364885bdf3ce39c6205dc0287"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 3D scatter-plot to the window.  <a href="group__gfx__func__draw.htm#gabfc0b01364885bdf3ce39c6205dc0287">More...</a><br /></td></tr>
<tr class="separator:gabfc0b01364885bdf3ce39c6205dc0287"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga73406db589e5090c051baae0af175df9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga73406db589e5090c051baae0af175df9">scatter</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;X, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;Y, const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af::markerType</a> marker=<a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02bae2f4782ee6ad84f167153787eb5ce1bc">AF_MARKER_POINT</a>, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga73406db589e5090c051baae0af175df9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 2D scatter-plot to the window.  <a href="group__gfx__func__draw.htm#ga73406db589e5090c051baae0af175df9">More...</a><br /></td></tr>
<tr class="separator:ga73406db589e5090c051baae0af175df9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3bbfbe1b60741a259d2146b3ab50ace3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga3bbfbe1b60741a259d2146b3ab50ace3">scatter3</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;P, const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af::markerType</a> marker=<a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02bae2f4782ee6ad84f167153787eb5ce1bc">AF_MARKER_POINT</a>, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga3bbfbe1b60741a259d2146b3ab50ace3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 3D scatter-plot to the window.  <a href="group__gfx__func__draw.htm#ga3bbfbe1b60741a259d2146b3ab50ace3">More...</a><br /></td></tr>
<tr class="separator:ga3bbfbe1b60741a259d2146b3ab50ace3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd7d94aa8f5fd37fee0662a4906a38d7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gafd7d94aa8f5fd37fee0662a4906a38d7">hist</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;X, const double minval, const double maxval, const char *const title=NULL)</td></tr>
<tr class="memdesc:gafd7d94aa8f5fd37fee0662a4906a38d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input array as a histogram to the window.  <a href="group__gfx__func__draw.htm#gafd7d94aa8f5fd37fee0662a4906a38d7">More...</a><br /></td></tr>
<tr class="separator:gafd7d94aa8f5fd37fee0662a4906a38d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1cdb8c3205d70d8feaddd8c30245393f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga1cdb8c3205d70d8feaddd8c30245393f">surface</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;S, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga1cdb8c3205d70d8feaddd8c30245393f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 3D surface plot to the window.  <a href="group__gfx__func__draw.htm#ga1cdb8c3205d70d8feaddd8c30245393f">More...</a><br /></td></tr>
<tr class="separator:ga1cdb8c3205d70d8feaddd8c30245393f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d09aa253b391ce82104352b743bb18c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga2d09aa253b391ce82104352b743bb18c">surface</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;xVals, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;yVals, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;S, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga2d09aa253b391ce82104352b743bb18c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 3D surface plot to the window.  <a href="group__gfx__func__draw.htm#ga2d09aa253b391ce82104352b743bb18c">More...</a><br /></td></tr>
<tr class="separator:ga2d09aa253b391ce82104352b743bb18c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d3904749d501e6ee607566dc3e1ecc8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga6d3904749d501e6ee607566dc3e1ecc8">vectorField</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;points, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;directions, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga6d3904749d501e6ee607566dc3e1ecc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 2D or 3D vector field plot to the window.  <a href="group__gfx__func__draw.htm#ga6d3904749d501e6ee607566dc3e1ecc8">More...</a><br /></td></tr>
<tr class="separator:ga6d3904749d501e6ee607566dc3e1ecc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga429ca1fb5b9caa6648b869d2f3686b8f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga429ca1fb5b9caa6648b869d2f3686b8f">vectorField</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;xPoints, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;yPoints, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;zPoints, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;xDirs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;yDirs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;zDirs, const char *const title=NULL)</td></tr>
<tr class="memdesc:ga429ca1fb5b9caa6648b869d2f3686b8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 3D vector field plot to the window.  <a href="group__gfx__func__draw.htm#ga429ca1fb5b9caa6648b869d2f3686b8f">More...</a><br /></td></tr>
<tr class="separator:ga429ca1fb5b9caa6648b869d2f3686b8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2e113b2f1aef7426adc19dab2660133"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gaa2e113b2f1aef7426adc19dab2660133">vectorField</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;xPoints, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;yPoints, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;xDirs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;yDirs, const char *const title=NULL)</td></tr>
<tr class="memdesc:gaa2e113b2f1aef7426adc19dab2660133"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renders the input arrays as a 2D vector field plot to the window.  <a href="group__gfx__func__draw.htm#gaa2e113b2f1aef7426adc19dab2660133">More...</a><br /></td></tr>
<tr class="separator:gaa2e113b2f1aef7426adc19dab2660133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d43e196ca2748ca0b185e07db0be031"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga6d43e196ca2748ca0b185e07db0be031">af_draw_image</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:ga6d43e196ca2748ca0b185e07db0be031"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing an array as an image.  <a href="group__gfx__func__draw.htm#ga6d43e196ca2748ca0b185e07db0be031">More...</a><br /></td></tr>
<tr class="separator:ga6d43e196ca2748ca0b185e07db0be031"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada090c398764cbe1475bdb1a1e31b85a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gada090c398764cbe1475bdb1a1e31b85a">af_draw_plot</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> X, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> Y, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:gada090c398764cbe1475bdb1a1e31b85a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing an array as a plot.  <a href="group__gfx__func__draw.htm#gada090c398764cbe1475bdb1a1e31b85a">More...</a><br /></td></tr>
<tr class="separator:gada090c398764cbe1475bdb1a1e31b85a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab7a96f606051867f0734aaacedc1e275"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gab7a96f606051867f0734aaacedc1e275">af_draw_plot3</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> P, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:gab7a96f606051867f0734aaacedc1e275"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing an array as a plot.  <a href="group__gfx__func__draw.htm#gab7a96f606051867f0734aaacedc1e275">More...</a><br /></td></tr>
<tr class="separator:gab7a96f606051867f0734aaacedc1e275"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaca0392f183fd41f862212d27921f1136"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gaca0392f183fd41f862212d27921f1136">af_draw_plot_nd</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> P, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:gaca0392f183fd41f862212d27921f1136"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing an array as a 2D or 3D plot.  <a href="group__gfx__func__draw.htm#gaca0392f183fd41f862212d27921f1136">More...</a><br /></td></tr>
<tr class="separator:gaca0392f183fd41f862212d27921f1136"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d447cda6c8fdcde33257b284a46acd4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga6d447cda6c8fdcde33257b284a46acd4">af_draw_plot_2d</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> X, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> Y, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:ga6d447cda6c8fdcde33257b284a46acd4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing an array as a 2D plot.  <a href="group__gfx__func__draw.htm#ga6d447cda6c8fdcde33257b284a46acd4">More...</a><br /></td></tr>
<tr class="separator:ga6d447cda6c8fdcde33257b284a46acd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab4daba1d60682cbef7f3bdf6ab2e83a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gab4daba1d60682cbef7f3bdf6ab2e83a2">af_draw_plot_3d</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> X, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> Y, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> Z, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:gab4daba1d60682cbef7f3bdf6ab2e83a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing an array as a 3D plot.  <a href="group__gfx__func__draw.htm#gab4daba1d60682cbef7f3bdf6ab2e83a2">More...</a><br /></td></tr>
<tr class="separator:gab4daba1d60682cbef7f3bdf6ab2e83a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2ef3c95d1a0ce0ed4fe003ed53808ca2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga2ef3c95d1a0ce0ed4fe003ed53808ca2">af_draw_scatter</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> X, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> Y, const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a> marker, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:ga2ef3c95d1a0ce0ed4fe003ed53808ca2"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing an array as a plot.  <a href="group__gfx__func__draw.htm#ga2ef3c95d1a0ce0ed4fe003ed53808ca2">More...</a><br /></td></tr>
<tr class="separator:ga2ef3c95d1a0ce0ed4fe003ed53808ca2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga764410fbdf0cd60c7044c77e36fb2577"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga764410fbdf0cd60c7044c77e36fb2577">af_draw_scatter3</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> P, const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a> marker, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:ga764410fbdf0cd60c7044c77e36fb2577"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing an array as a plot.  <a href="group__gfx__func__draw.htm#ga764410fbdf0cd60c7044c77e36fb2577">More...</a><br /></td></tr>
<tr class="separator:ga764410fbdf0cd60c7044c77e36fb2577"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9991b93681e0c18693a5464458781d22"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga9991b93681e0c18693a5464458781d22">af_draw_scatter_nd</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> P, const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a> marker, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:ga9991b93681e0c18693a5464458781d22"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing an array as a plot.  <a href="group__gfx__func__draw.htm#ga9991b93681e0c18693a5464458781d22">More...</a><br /></td></tr>
<tr class="separator:ga9991b93681e0c18693a5464458781d22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga79417722c69883e7a91282b138288010"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga79417722c69883e7a91282b138288010">af_draw_scatter_2d</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> X, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> Y, const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a> marker, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:ga79417722c69883e7a91282b138288010"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing an array as a 2D plot.  <a href="group__gfx__func__draw.htm#ga79417722c69883e7a91282b138288010">More...</a><br /></td></tr>
<tr class="separator:ga79417722c69883e7a91282b138288010"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b3d0dd690ebcba4c4dbb09cdcaed304"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga2b3d0dd690ebcba4c4dbb09cdcaed304">af_draw_scatter_3d</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> X, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> Y, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> Z, const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a> marker, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:ga2b3d0dd690ebcba4c4dbb09cdcaed304"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing an array as a 3D plot.  <a href="group__gfx__func__draw.htm#ga2b3d0dd690ebcba4c4dbb09cdcaed304">More...</a><br /></td></tr>
<tr class="separator:ga2b3d0dd690ebcba4c4dbb09cdcaed304"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf1648ee35739c86116bfa9c22644dbd7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gaf1648ee35739c86116bfa9c22644dbd7">af_draw_hist</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> X, const double minval, const double maxval, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:gaf1648ee35739c86116bfa9c22644dbd7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing an array as a histogram.  <a href="group__gfx__func__draw.htm#gaf1648ee35739c86116bfa9c22644dbd7">More...</a><br /></td></tr>
<tr class="separator:gaf1648ee35739c86116bfa9c22644dbd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaee14e457272b2cd1bd4ed1228370229"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gaaee14e457272b2cd1bd4ed1228370229">af_draw_surface</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> xVals, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> yVals, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> S, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:gaaee14e457272b2cd1bd4ed1228370229"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing array's as a surface.  <a href="group__gfx__func__draw.htm#gaaee14e457272b2cd1bd4ed1228370229">More...</a><br /></td></tr>
<tr class="separator:gaaee14e457272b2cd1bd4ed1228370229"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d31a148578d749be4224e7119b386bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#ga2d31a148578d749be4224e7119b386bc">af_draw_vector_field_nd</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> points, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> directions, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:ga2d31a148578d749be4224e7119b386bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing array's as a 2D or 3D vector field.  <a href="group__gfx__func__draw.htm#ga2d31a148578d749be4224e7119b386bc">More...</a><br /></td></tr>
<tr class="separator:ga2d31a148578d749be4224e7119b386bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf2d3be32c1b6a9034a3bb851206b4b5a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gaf2d3be32c1b6a9034a3bb851206b4b5a">af_draw_vector_field_3d</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> xPoints, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> yPoints, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> zPoints, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> xDirs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> yDirs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> zDirs, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:gaf2d3be32c1b6a9034a3bb851206b4b5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing array's as a 3D vector field.  <a href="group__gfx__func__draw.htm#gaf2d3be32c1b6a9034a3bb851206b4b5a">More...</a><br /></td></tr>
<tr class="separator:gaf2d3be32c1b6a9034a3bb851206b4b5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa1a667e4d29ab089629acd5296f29a7b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gfx__func__draw.htm#gaa1a667e4d29ab089629acd5296f29a7b">af_draw_vector_field_2d</a> (const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a> wind, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> xPoints, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> yPoints, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> xDirs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> yDirs, const <a class="el" href="structaf__cell.htm">af_cell</a> *const props)</td></tr>
<tr class="memdesc:gaa1a667e4d29ab089629acd5296f29a7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for drawing array's as a 2D vector field.  <a href="group__gfx__func__draw.htm#gaa1a667e4d29ab089629acd5296f29a7b">More...</a><br /></td></tr>
<tr class="separator:gaa1a667e4d29ab089629acd5296f29a7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Rendering functions to draw images, plots etc. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="gaf1648ee35739c86116bfa9c22644dbd7" name="gaf1648ee35739c86116bfa9c22644dbd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf1648ee35739c86116bfa9c22644dbd7">&#9670;&#160;</a></span>af_draw_hist()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_hist </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>minval</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>maxval</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing an array as a histogram. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">X</td><td>is the data frequency <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">minval</td><td>is the value of the minimum data point of the array whose histogram(<code>X</code>) is going to be rendered. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">maxval</td><td>is the value of the maximum data point of the array whose histogram(<code>X</code>) is going to be rendered. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code> should be a vector. </dd></dl>

</div>
</div>
<a id="ga6d43e196ca2748ca0b185e07db0be031" name="ga6d43e196ca2748ca0b185e07db0be031"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6d43e196ca2748ca0b185e07db0be031">&#9670;&#160;</a></span>af_draw_image()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_image </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing an array as an image. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>in</code> should be 2d array or 3d array with 3 channels. </dd></dl>

</div>
</div>
<a id="gada090c398764cbe1475bdb1a1e31b85a" name="gada090c398764cbe1475bdb1a1e31b85a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gada090c398764cbe1475bdb1a1e31b85a">&#9670;&#160;</a></span>af_draw_plot()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_plot </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing an array as a plot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">X</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the x-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Y</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the y-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code> and <code>Y</code> should be vectors. </dd></dl>

</div>
</div>
<a id="gab7a96f606051867f0734aaacedc1e275" name="gab7a96f606051867f0734aaacedc1e275"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab7a96f606051867f0734aaacedc1e275">&#9670;&#160;</a></span>af_draw_plot3()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_plot3 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>P</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing an array as a plot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">P</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> or matrix with the xyz-values of the points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>P</code> should be a 3n x 1 vector or one of a 3xn or nx3 matrices. </dd></dl>

</div>
</div>
<a id="ga6d447cda6c8fdcde33257b284a46acd4" name="ga6d447cda6c8fdcde33257b284a46acd4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6d447cda6c8fdcde33257b284a46acd4">&#9670;&#160;</a></span>af_draw_plot_2d()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_plot_2d </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing an array as a 2D plot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">X</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the x-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Y</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the y-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code> and <code>Y</code> should be vectors. </dd></dl>

</div>
</div>
<a id="gab4daba1d60682cbef7f3bdf6ab2e83a2" name="gab4daba1d60682cbef7f3bdf6ab2e83a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab4daba1d60682cbef7f3bdf6ab2e83a2">&#9670;&#160;</a></span>af_draw_plot_3d()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_plot_3d </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>Z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing an array as a 3D plot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">X</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the x-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Y</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the y-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Z</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the z-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code>, <code>Y</code> and <code>Z</code> should be vectors. </dd></dl>

</div>
</div>
<a id="gaca0392f183fd41f862212d27921f1136" name="gaca0392f183fd41f862212d27921f1136"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaca0392f183fd41f862212d27921f1136">&#9670;&#160;</a></span>af_draw_plot_nd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_plot_nd </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>P</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing an array as a 2D or 3D plot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">P</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> or matrix with the xyz-values of the points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>in</code> must be 2d and of the form [n, order], where order is either 2 or 3. If order is 2, then chart is 2D and if order is 3, then chart is 3D. </dd></dl>

</div>
</div>
<a id="ga2ef3c95d1a0ce0ed4fe003ed53808ca2" name="ga2ef3c95d1a0ce0ed4fe003ed53808ca2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2ef3c95d1a0ce0ed4fe003ed53808ca2">&#9670;&#160;</a></span>af_draw_scatter()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_scatter </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a>&#160;</td>
          <td class="paramname"><em>marker</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing an array as a plot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">X</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the x-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Y</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the y-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">marker</td><td>is an <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a> enum specifying which marker to use in the scatter plot </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code> and <code>Y</code> should be vectors. </dd></dl>

</div>
</div>
<a id="ga764410fbdf0cd60c7044c77e36fb2577" name="ga764410fbdf0cd60c7044c77e36fb2577"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga764410fbdf0cd60c7044c77e36fb2577">&#9670;&#160;</a></span>af_draw_scatter3()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_scatter3 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>P</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a>&#160;</td>
          <td class="paramname"><em>marker</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing an array as a plot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">P</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> or matrix with the xyz-values of the points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">marker</td><td>is an <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a> enum specifying which marker to use in the scatter plot </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="ga79417722c69883e7a91282b138288010" name="ga79417722c69883e7a91282b138288010"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga79417722c69883e7a91282b138288010">&#9670;&#160;</a></span>af_draw_scatter_2d()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_scatter_2d </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a>&#160;</td>
          <td class="paramname"><em>marker</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing an array as a 2D plot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">X</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the x-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Y</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the y-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">marker</td><td>is an <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a> enum specifying which marker to use in the scatter plot </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code> and <code>Y</code> should be vectors. </dd></dl>

</div>
</div>
<a id="ga2b3d0dd690ebcba4c4dbb09cdcaed304" name="ga2b3d0dd690ebcba4c4dbb09cdcaed304"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2b3d0dd690ebcba4c4dbb09cdcaed304">&#9670;&#160;</a></span>af_draw_scatter_3d()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_scatter_3d </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>Z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a>&#160;</td>
          <td class="paramname"><em>marker</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing an array as a 3D plot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">X</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the x-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Y</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the y-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Z</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the z-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">marker</td><td>is an <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a> enum specifying which marker to use in the scatter plot </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code>, <code>Y</code> and <code>Z</code> should be vectors. </dd></dl>

</div>
</div>
<a id="ga9991b93681e0c18693a5464458781d22" name="ga9991b93681e0c18693a5464458781d22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9991b93681e0c18693a5464458781d22">&#9670;&#160;</a></span>af_draw_scatter_nd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_scatter_nd </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>P</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a>&#160;</td>
          <td class="paramname"><em>marker</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing an array as a plot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">P</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> or matrix with the xyz-values of the points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">marker</td><td>is an <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af_marker_type</a> enum specifying which marker to use in the scatter plot </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>in</code> must be 2d and of the form [n, order], where order is either 2 or 3. If order is 2, then chart is 2D and if order is 3, then chart is 3D. </dd></dl>

</div>
</div>
<a id="gaaee14e457272b2cd1bd4ed1228370229" name="gaaee14e457272b2cd1bd4ed1228370229"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaaee14e457272b2cd1bd4ed1228370229">&#9670;&#160;</a></span>af_draw_surface()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_surface </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>xVals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>yVals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing array's as a surface. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">xVals</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the x-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">yVals</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the y-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">S</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the z-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code> and <code>Y</code> should be vectors. <code>S</code> should be a 2D array </dd></dl>

</div>
</div>
<a id="gaa1a667e4d29ab089629acd5296f29a7b" name="gaa1a667e4d29ab089629acd5296f29a7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa1a667e4d29ab089629acd5296f29a7b">&#9670;&#160;</a></span>af_draw_vector_field_2d()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_vector_field_2d </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>xPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>yPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>xDirs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>yDirs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing array's as a 2D vector field. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">xPoints</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the x-axis points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">yPoints</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the y-axis points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">xDirs</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the x-axis directions </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">yDirs</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the y-axis directions </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>all the <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> inputs should be vectors and the same size </dd></dl>

</div>
</div>
<a id="gaf2d3be32c1b6a9034a3bb851206b4b5a" name="gaf2d3be32c1b6a9034a3bb851206b4b5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf2d3be32c1b6a9034a3bb851206b4b5a">&#9670;&#160;</a></span>af_draw_vector_field_3d()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_vector_field_3d </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>xPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>yPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>zPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>xDirs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>yDirs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>zDirs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing array's as a 3D vector field. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">xPoints</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the x-axis points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">yPoints</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the y-axis points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">zPoints</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the z-axis points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">xDirs</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the x-axis directions </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">yDirs</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the y-axis directions </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">zDirs</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the z-axis directions </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>all the <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> inputs should be vectors and the same size </dd></dl>

</div>
</div>
<a id="ga2d31a148578d749be4224e7119b386bc" name="ga2d31a148578d749be4224e7119b386bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2d31a148578d749be4224e7119b386bc">&#9670;&#160;</a></span>af_draw_vector_field_nd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_draw_vector_field_nd </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="graphics_8h.htm#a26c5fee9eb0878d07618fe3117d216d0">af_window</a>&#160;</td>
          <td class="paramname"><em>wind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>directions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structaf__cell.htm">af_cell</a> *const&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface wrapper for drawing array's as a 2D or 3D vector field. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wind</td><td>is the window handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">points</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">directions</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> with the directions </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">props</td><td>is structure <a class="el" href="structaf__cell.htm">af_cell</a> that has the properties that are used for the current rendering.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if rendering is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>points</code> and <code>directions</code> should have the same size and must be 2D. The number of rows (dim 0) determines are number of points and the number columns determines the type of plot. If the number of columns are 2, then the plot is 2D and if there are 3 columns, then the plot is 3D.</dd>
<dd>
all the <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> inputs should be vectors and the same size </dd></dl>

</div>
</div>
<a id="gafd7d94aa8f5fd37fee0662a4906a38d7" name="gafd7d94aa8f5fd37fee0662a4906a38d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafd7d94aa8f5fd37fee0662a4906a38d7">&#9670;&#160;</a></span>hist()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hist </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>minval</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>maxval</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input array as a histogram to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">X</td><td>is the data frequency <a class="el" href="classaf_1_1array.htm">array</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">minval</td><td>is the value of the minimum data point of the array whose histogram(<code>X</code>) is going to be rendered. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">maxval</td><td>is the value of the maximum data point of the array whose histogram(<code>X</code>) is going to be rendered. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code> should be a vector. </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="graphics_2histogram_8cpp-example.htm#a6">graphics/histogram.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="gaed174450be6db4dfa5ef65b7baccbe57" name="gaed174450be6db4dfa5ef65b7baccbe57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaed174450be6db4dfa5ef65b7baccbe57">&#9670;&#160;</a></span>image()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void image </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input array as an image to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>in</code> should be 2d array or 3d array with 3 channels. </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="computer_vision_2fast_8cpp-example.htm#a11">computer_vision/fast.cpp</a>, <a class="el" href="computer_vision_2harris_8cpp-example.htm#a8">computer_vision/harris.cpp</a>, <a class="el" href="computer_vision_2susan_8cpp-example.htm#a11">computer_vision/susan.cpp</a>, <a class="el" href="graphics_2conway_8cpp-example.htm#a7">graphics/conway.cpp</a>, <a class="el" href="graphics_2conway_pretty_8cpp-example.htm#a9">graphics/conway_pretty.cpp</a>, and <a class="el" href="graphics_2histogram_8cpp-example.htm#a7">graphics/histogram.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="gaed2e96201d07c5f90e430632de5e26f1" name="gaed2e96201d07c5f90e430632de5e26f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaed2e96201d07c5f90e430632de5e26f1">&#9670;&#160;</a></span>plot() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plot </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input arrays as a 2D or 3D plot to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>in</code> must be 2d and of the form [n, order], where order is either 2 or 3. If order is 2, then chart is 2D and if order is 3, then chart is 3D. </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="graphics_2plot2d_8cpp-example.htm#a8">graphics/plot2d.cpp</a>, and <a class="el" href="graphics_2plot3_8cpp-example.htm#a4">graphics/plot3.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="ga1ce8ee73bdd3f4eec7efb0ae099e68b8" name="ga1ce8ee73bdd3f4eec7efb0ae099e68b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1ce8ee73bdd3f4eec7efb0ae099e68b8">&#9670;&#160;</a></span>plot() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plot </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>Z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input arrays as a 3D plot to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">X</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the x-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Y</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the y-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Z</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the z-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code>, <code>Y</code> and <code>Z</code> should be vectors. </dd></dl>

</div>
</div>
<a id="ga8e01736df3d805a5488c609e2573818b" name="ga8e01736df3d805a5488c609e2573818b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8e01736df3d805a5488c609e2573818b">&#9670;&#160;</a></span>plot() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plot </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input arrays as a 2D plot to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">X</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the x-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Y</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the y-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code> and <code>Y</code> should be vectors. </dd></dl>

</div>
</div>
<a id="ga8e04ec129034e9fe769f3e6b14cd087f" name="ga8e04ec129034e9fe769f3e6b14cd087f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8e04ec129034e9fe769f3e6b14cd087f">&#9670;&#160;</a></span>plot3()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plot3 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input array as an 3d line plot to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>in</code> should be 1d array of size 3n or 2d array with (3 x n) or (n x 3) channels. </dd></dl>

</div>
</div>
<a id="gaf95ec84f9788b42fd443c9523792e4a4" name="gaf95ec84f9788b42fd443c9523792e4a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf95ec84f9788b42fd443c9523792e4a4">&#9670;&#160;</a></span>scatter() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void scatter </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af::markerType</a>&#160;</td>
          <td class="paramname"><em>marker</em> = <code><a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02bae2f4782ee6ad84f167153787eb5ce1bc">AF_MARKER_POINT</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input arrays as a 2D or 3D scatter-plot to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">marker</td><td>is an <a class="el" href="namespaceaf.htm#af32df3e457a9ab8750a8d7600c1edda9">markerType</a> enum specifying which marker to use in the scatter plot </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>in</code> must be 2d and of the form [n, order], where order is either 2 or 3. If order is 2, then chart is 2D and if order is 3, then chart is 3D. </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="graphics_2plot2d_8cpp-example.htm#a9">graphics/plot2d.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="ga73406db589e5090c051baae0af175df9" name="ga73406db589e5090c051baae0af175df9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga73406db589e5090c051baae0af175df9">&#9670;&#160;</a></span>scatter() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void scatter </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af::markerType</a>&#160;</td>
          <td class="paramname"><em>marker</em> = <code><a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02bae2f4782ee6ad84f167153787eb5ce1bc">AF_MARKER_POINT</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input arrays as a 2D scatter-plot to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">X</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the x-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Y</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the y-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">marker</td><td>is an <a class="el" href="namespaceaf.htm#af32df3e457a9ab8750a8d7600c1edda9">markerType</a> enum specifying which marker to use in the scatter plot </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code> and <code>Y</code> should be vectors. </dd></dl>

</div>
</div>
<a id="gabfc0b01364885bdf3ce39c6205dc0287" name="gabfc0b01364885bdf3ce39c6205dc0287"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabfc0b01364885bdf3ce39c6205dc0287">&#9670;&#160;</a></span>scatter() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void scatter </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>Z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af::markerType</a>&#160;</td>
          <td class="paramname"><em>marker</em> = <code><a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02bae2f4782ee6ad84f167153787eb5ce1bc">AF_MARKER_POINT</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input arrays as a 3D scatter-plot to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">X</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the x-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Y</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the y-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Z</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the z-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">marker</td><td>is an <a class="el" href="namespaceaf.htm#af32df3e457a9ab8750a8d7600c1edda9">markerType</a> enum specifying which marker to use in the scatter plot </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code>, <code>Y</code> and <code>Z</code> should be vectors. </dd></dl>

</div>
</div>
<a id="ga3bbfbe1b60741a259d2146b3ab50ace3" name="ga3bbfbe1b60741a259d2146b3ab50ace3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3bbfbe1b60741a259d2146b3ab50ace3">&#9670;&#160;</a></span>scatter3()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void scatter3 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>P</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02b">af::markerType</a>&#160;</td>
          <td class="paramname"><em>marker</em> = <code><a class="el" href="defines_8h.htm#ada5c8e0c0cea5e50765377715ff2c02bae2f4782ee6ad84f167153787eb5ce1bc">AF_MARKER_POINT</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input arrays as a 3D scatter-plot to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">P</td><td>is an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> or matrix with the xyz-values of the points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">marker</td><td>is an <a class="el" href="namespaceaf.htm#af32df3e457a9ab8750a8d7600c1edda9">markerType</a> enum specifying which marker to use in the scatter plot </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga1cdb8c3205d70d8feaddd8c30245393f" name="ga1cdb8c3205d70d8feaddd8c30245393f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1cdb8c3205d70d8feaddd8c30245393f">&#9670;&#160;</a></span>surface() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void surface </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input arrays as a 3D surface plot to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">S</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the z-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>S</code> should be a 2D array </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="graphics_2surface_8cpp-example.htm#a5">graphics/surface.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="ga2d09aa253b391ce82104352b743bb18c" name="ga2d09aa253b391ce82104352b743bb18c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2d09aa253b391ce82104352b743bb18c">&#9670;&#160;</a></span>surface() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void surface </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>xVals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>yVals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input arrays as a 3D surface plot to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">xVals</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the x-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">yVals</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the y-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">S</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the z-axis data points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>X</code> and <code>Y</code> should be vectors or 2D arrays <code>S</code> should be s 2D array </dd></dl>

</div>
</div>
<a id="ga6d3904749d501e6ee607566dc3e1ecc8" name="ga6d3904749d501e6ee607566dc3e1ecc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6d3904749d501e6ee607566dc3e1ecc8">&#9670;&#160;</a></span>vectorField() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vectorField </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>directions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input arrays as a 2D or 3D vector field plot to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">points</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">directions</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the directions at the points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><code>points</code> and <code>directions</code> should have the same size and must be 2D. The number of rows (dim 0) determines are number of points and the number columns determines the type of plot. If the number of columns are 2, then the plot is 2D and if there are 3 columns, then the plot is 3D. </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="graphics_2field_8cpp-example.htm#a9">graphics/field.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="gaa2e113b2f1aef7426adc19dab2660133" name="gaa2e113b2f1aef7426adc19dab2660133"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa2e113b2f1aef7426adc19dab2660133">&#9670;&#160;</a></span>vectorField() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vectorField </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>xPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>yPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>xDirs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>yDirs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input arrays as a 2D vector field plot to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">xPoints</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the x-coordinate points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">yPoints</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the y-coordinate points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">xDirs</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the x-coordinate directions at the points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">yDirs</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the y-coordinate directions at the points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>All the array inputs must be vectors and must have the size sizes. </dd></dl>

</div>
</div>
<a id="ga429ca1fb5b9caa6648b869d2f3686b8f" name="ga429ca1fb5b9caa6648b869d2f3686b8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga429ca1fb5b9caa6648b869d2f3686b8f">&#9670;&#160;</a></span>vectorField() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vectorField </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>xPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>yPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>zPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>xDirs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>yDirs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>zDirs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>title</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Renders the input arrays as a 3D vector field plot to the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">xPoints</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the x-coordinate points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">yPoints</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the y-coordinate points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">zPoints</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the z-coordinate points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">xDirs</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the x-coordinate directions at the points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">yDirs</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the y-coordinate directions at the points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">zDirs</td><td>is an <a class="el" href="classaf_1_1array.htm">array</a> with the z-coordinate directions at the points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>parameter is used when this function is called in grid mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>All the array inputs must be vectors and must have the size sizes. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Mon Sep 25 2023 12:35:28 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
