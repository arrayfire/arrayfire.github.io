<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: traits.hpp (2020-07-07 17:43:34 +0530, (build 218dd2c99)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('traits_8hpp_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">traits.hpp (2020-07-07 17:43:34 +0530, (build 218dd2c99))</div>  </div>
</div><!--header-->
<div class="contents">
<a href="traits_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*******************************************************</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2014, ArrayFire</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * https://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> ********************************************************/</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;complex&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="defines_8h.htm">af/defines.h</a>&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="complex_8h.htm">af/complex.h</a>&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="half_8h.htm">af/half.h</a>&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceaf.htm">af</a> {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="keyword">struct </span>dtype_traits;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">struct </span>dtype_traits&lt;float&gt; {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits.htm">   28</a></span>&#160;    };</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">float</span> base_type;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;float&quot;</span>; }</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01float_01_4.htm">   31</a></span>&#160;};</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01float_01_4.htm#a61dadd085c1777f559549e05962b2c9ea239fc1ff4808ac3a269e955300f1ebb0">   33</a></span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;<a class="code" href="namespaceaf.htm">af</a>::<a class="code" href="structaf_1_1af__cfloat.htm">cfloat</a>&gt; {</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01float_01_4.htm#a61dadd085c1777f559549e05962b2c9ea76dd72f7b11d120e5e23a53ab355005a">   35</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01float_01_4.htm#ac7c70160af90a73bfaff59055135c1ca">   36</a></span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a> ,</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01float_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">   37</a></span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    };</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">float</span> base_type;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;std::complex&lt;float&gt;&quot;</span>; }</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01af_1_1cfloat_01_4.htm">   41</a></span>&#160;};</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01af_1_1cfloat_01_4.htm#a726ca809ffd3d67ab4b8476646f26635a239fc1ff4808ac3a269e955300f1ebb0">   43</a></span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;std::<a class="code" href="group__arith__func__cplx.htm#gacd05fd9c3318ac14b9d6e3262a01a214">complex</a>&lt;float&gt; &gt; {</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01af_1_1cfloat_01_4.htm#a726ca809ffd3d67ab4b8476646f26635a76dd72f7b11d120e5e23a53ab355005a">   45</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01af_1_1cfloat_01_4.htm#ac7c70160af90a73bfaff59055135c1ca">   46</a></span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a> ,</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01af_1_1cfloat_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">   47</a></span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    };</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">float</span> base_type;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;std::complex&lt;float&gt;&quot;</span>; }</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01std_1_1complex_3_01float_01_4_01_4.htm">   51</a></span>&#160;};</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01std_1_1complex_3_01float_01_4_01_4.htm#a0411cd49bb5b71852cecd93bcbf0ca2da239fc1ff4808ac3a269e955300f1ebb0">   53</a></span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;double&gt; {</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01std_1_1complex_3_01float_01_4_01_4.htm#a0411cd49bb5b71852cecd93bcbf0ca2da76dd72f7b11d120e5e23a53ab355005a">   55</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01std_1_1complex_3_01float_01_4_01_4.htm#ac7c70160af90a73bfaff59055135c1ca">   56</a></span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962">f64</a> ,</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01std_1_1complex_3_01float_01_4_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">   57</a></span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    };</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">double</span> base_type;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;double&quot;</span>; }</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01double_01_4.htm">   61</a></span>&#160;};</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01double_01_4.htm#abed82baf7f470b522273a3e37c24c600a239fc1ff4808ac3a269e955300f1ebb0">   63</a></span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;<a class="code" href="namespaceaf.htm">af</a>::<a class="code" href="structaf_1_1af__cdouble.htm">cdouble</a>&gt; {</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01double_01_4.htm#abed82baf7f470b522273a3e37c24c600a76dd72f7b11d120e5e23a53ab355005a">   65</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01double_01_4.htm#ae4ed53f973f907cd804bb17d3f464934">   66</a></span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a> ,</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01double_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">   67</a></span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    };</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">double</span> base_type;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;std::complex&lt;double&gt;&quot;</span>; }</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01af_1_1cdouble_01_4.htm">   71</a></span>&#160;};</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01af_1_1cdouble_01_4.htm#ab04a0655cd1e3bcac5e8f48c18df1a57a239fc1ff4808ac3a269e955300f1ebb0">   73</a></span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;std::<a class="code" href="group__arith__func__cplx.htm#gacd05fd9c3318ac14b9d6e3262a01a214">complex</a>&lt;double&gt; &gt; {</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01af_1_1cdouble_01_4.htm#ab04a0655cd1e3bcac5e8f48c18df1a57a76dd72f7b11d120e5e23a53ab355005a">   75</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01af_1_1cdouble_01_4.htm#ae4ed53f973f907cd804bb17d3f464934">   76</a></span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a> ,</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01af_1_1cdouble_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">   77</a></span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    };</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">double</span> base_type;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;std::complex&lt;double&gt;&quot;</span>; }</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01std_1_1complex_3_01double_01_4_01_4.htm">   81</a></span>&#160;};</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01std_1_1complex_3_01double_01_4_01_4.htm#a385c44f6fb256e5716a2302a5b940388a239fc1ff4808ac3a269e955300f1ebb0">   83</a></span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;char&gt; {</div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01std_1_1complex_3_01double_01_4_01_4.htm#a385c44f6fb256e5716a2302a5b940388a76dd72f7b11d120e5e23a53ab355005a">   85</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01std_1_1complex_3_01double_01_4_01_4.htm#ae4ed53f973f907cd804bb17d3f464934">   86</a></span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a3734f496648357f310306becf43915b3">b8</a> ,</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01std_1_1complex_3_01double_01_4_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">   87</a></span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    };</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">char</span> base_type;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;char&quot;</span>; }</div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01char_01_4.htm">   91</a></span>&#160;};</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01char_01_4.htm#abc5c98fcc1211af2b80116dd6e0a035da239fc1ff4808ac3a269e955300f1ebb0">   93</a></span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;int&gt; {</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01char_01_4.htm#abc5c98fcc1211af2b80116dd6e0a035da76dd72f7b11d120e5e23a53ab355005a">   95</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01char_01_4.htm#ac71791eac7b22f0f1be8f244e25f9bb6">   96</a></span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a1bd64190677c261a61c640017dbaddf1">s32</a> ,</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01char_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">   97</a></span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    };</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">int</span> base_type;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;int&quot;</span>; }</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01int_01_4.htm">  101</a></span>&#160;};</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01int_01_4.htm#ac36f475ca5b446f4fde4c9b90bec77c8a239fc1ff4808ac3a269e955300f1ebb0">  103</a></span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;unsigned&gt; {</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01int_01_4.htm#ac36f475ca5b446f4fde4c9b90bec77c8a76dd72f7b11d120e5e23a53ab355005a">  105</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01int_01_4.htm#a43ebf81d3ef47ee178630f6f9cf2a622">  106</a></span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a05ef7b967bac0eef5d9712a6803b9f1a">u32</a> ,</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01int_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">  107</a></span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    };</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> base_type;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;uint&quot;</span>; }</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01_4.htm">  111</a></span>&#160;};</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01_4.htm#a05589fbab0657f08285ebdfe93f5ec9ea239fc1ff4808ac3a269e955300f1ebb0">  113</a></span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;unsigned char&gt; {</div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01_4.htm#a05589fbab0657f08285ebdfe93f5ec9ea76dd72f7b11d120e5e23a53ab355005a">  115</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01_4.htm#a7375e0216f69a628e1bb23f2b92adaec">  116</a></span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5afa33d5748ff04bcd920280e5a3b790c0">u8</a> ,</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">  117</a></span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    };</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> base_type;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;uchar&quot;</span>; }</div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01char_01_4.htm">  121</a></span>&#160;};</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01char_01_4.htm#a16af7b253440dadd46a80a4b9fddba4da239fc1ff4808ac3a269e955300f1ebb0">  123</a></span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;long long&gt; {</div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01char_01_4.htm#a16af7b253440dadd46a80a4b9fddba4da76dd72f7b11d120e5e23a53ab355005a">  125</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01char_01_4.htm#a861cc1b879fb88fe176ff17dc8034e7b">  126</a></span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a2fb596fb851c71689624894525c069e4">s64</a> ,</div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01char_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">  127</a></span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a2fb596fb851c71689624894525c069e4">s64</a></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    };</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> base_type;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;long&quot;</span>; }</div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01long_01long_01_4.htm">  131</a></span>&#160;};</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01long_01long_01_4.htm#aba01db17f4a2bfbc3db60dc172972a25a239fc1ff4808ac3a269e955300f1ebb0">  133</a></span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;unsigned long long&gt; {</div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01long_01long_01_4.htm#aba01db17f4a2bfbc3db60dc172972a25a76dd72f7b11d120e5e23a53ab355005a">  135</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01long_01long_01_4.htm#ab01a83f566aaac0ab749f894340093f3">  136</a></span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a1b18b7885e1360b6696142284b4b4928">u64</a> ,</div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01long_01long_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">  137</a></span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a1b18b7885e1360b6696142284b4b4928">u64</a></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    };</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> base_type;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;ulong&quot;</span>; }</div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01long_01long_01_4.htm">  141</a></span>&#160;};</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01long_01long_01_4.htm#aaf105ae5beaca1dee30ae54530691fcea239fc1ff4808ac3a269e955300f1ebb0">  143</a></span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 32</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01long_01long_01_4.htm#aaf105ae5beaca1dee30ae54530691fcea76dd72f7b11d120e5e23a53ab355005a">  145</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;short&gt; {</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01long_01long_01_4.htm#a24269bddcea837bb0e021874bff6f20f">  146</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01long_01long_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">  147</a></span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a98085990ff18bf438d3c839ea4c80bb4">s16</a> ,</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a98085990ff18bf438d3c839ea4c80bb4">s16</a></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    };</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">short</span> base_type;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;short&quot;</span>; }</div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01short_01_4.htm">  152</a></span>&#160;};</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01short_01_4.htm#a80155586fa275b28773c9b203f52cabaa239fc1ff4808ac3a269e955300f1ebb0">  154</a></span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 32</span></div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01short_01_4.htm#a80155586fa275b28773c9b203f52cabaa76dd72f7b11d120e5e23a53ab355005a">  156</a></span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01short_01_4.htm#a90f16bb485e83e4ede5a056db4116e56">  157</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;unsigned short&gt; {</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01short_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">  158</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5ae817c8a85914a5f150f2739df6b76c57">u16</a> ,</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5ae817c8a85914a5f150f2739df6b76c57">u16</a></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    };</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> base_type;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;ushort&quot;</span>; }</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01short_01_4.htm">  164</a></span>&#160;};</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01short_01_4.htm#a6b7b47dd702d9e331586d485013fd1eaa239fc1ff4808ac3a269e955300f1ebb0">  166</a></span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01short_01_4.htm#a6b7b47dd702d9e331586d485013fd1eaa76dd72f7b11d120e5e23a53ab355005a">  168</a></span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01short_01_4.htm#a3673dc9ac895b996ac60674d0ac65e1b">  169</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;<a class="code" href="structaf__half.htm">half</a>&gt; {</div>
<div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01unsigned_01short_01_4.htm#a9cebe55dbe28550ca05d90d6c8a47775">  170</a></span>&#160;    <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        af_type = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5af4512c88801326ab48816bf6ece20d67">f16</a> ,</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        ctype = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5af4512c88801326ab48816bf6ece20d67">f16</a></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    };</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keyword">typedef</span> <a class="code" href="structaf__half.htm">half</a> base_type;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* getName() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;half&quot;</span>; }</div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01half_01_4.htm">  176</a></span>&#160;};</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01half_01_4.htm#af9bdc3014f3d54c426b6d2df10de4960a239fc1ff4808ac3a269e955300f1ebb0">  178</a></span>&#160;}</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="structaf_1_1dtype__traits_3_01half_01_4.htm#af9bdc3014f3d54c426b6d2df10de4960a76dd72f7b11d120e5e23a53ab355005a">  180</a></span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="agroup__arith__func__cplx_htm_gacd05fd9c3318ac14b9d6e3262a01a214"><div class="ttname"><a href="group__arith__func__cplx.htm#gacd05fd9c3318ac14b9d6e3262a01a214">af::complex</a></div><div class="ttdeci">AFAPI array complex(const array &amp;real, const array &amp;imaginary)</div></div>
<div class="ttc" id="astructaf_1_1dtype__traits_htm"><div class="ttname"><a href="structaf_1_1dtype__traits.htm">af::dtype_traits</a></div><div class="ttdef"><b>Definition:</b> <a href="traits_8hpp_source.htm#l00028">traits.hpp:28</a></div></div>
<div class="ttc" id="ahalf_8h_htm"><div class="ttname"><a href="half_8h.htm">half.h</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a1b18b7885e1360b6696142284b4b4928"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a1b18b7885e1360b6696142284b4b4928">u64</a></div><div class="ttdeci">@ u64</div><div class="ttdoc">64-bit unsigned integral values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00222">defines.h:220</a></div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:15</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5afa33d5748ff04bcd920280e5a3b790c0"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5afa33d5748ff04bcd920280e5a3b790c0">u8</a></div><div class="ttdeci">@ u8</div><div class="ttdoc">8-bit unsigned integral values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00218">defines.h:218</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a3734f496648357f310306becf43915b3"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a3734f496648357f310306becf43915b3">b8</a></div><div class="ttdeci">@ b8</div><div class="ttdoc">8-bit boolean values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00215">defines.h:215</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962">f64</a></div><div class="ttdeci">@ f64</div><div class="ttdoc">64-bit complex floating point values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00213">defines.h:213</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5af4512c88801326ab48816bf6ece20d67"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5af4512c88801326ab48816bf6ece20d67">f16</a></div><div class="ttdeci">@ f16</div><div class="ttdoc">16-bit floating point value</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00230">defines.h:228</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a1bd64190677c261a61c640017dbaddf1"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a1bd64190677c261a61c640017dbaddf1">s32</a></div><div class="ttdeci">@ s32</div><div class="ttdoc">32-bit signed integral values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00216">defines.h:216</a></div></div>
<div class="ttc" id="acomplex_8h_htm"><div class="ttname"><a href="complex_8h.htm">complex.h</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a98085990ff18bf438d3c839ea4c80bb4"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a98085990ff18bf438d3c839ea4c80bb4">s16</a></div><div class="ttdeci">@ s16</div><div class="ttdoc">16-bit signed integral values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00225">defines.h:222</a></div></div>
<div class="ttc" id="astructaf__half_htm"><div class="ttname"><a href="structaf__half.htm">af_half</a></div><div class="ttdef"><b>Definition:</b> <a href="half_8h_source.htm#l00012">half.h:12</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5ae817c8a85914a5f150f2739df6b76c57"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5ae817c8a85914a5f150f2739df6b76c57">u16</a></div><div class="ttdeci">@ u16</div><div class="ttdoc">16-bit unsigned integral values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00228">defines.h:225</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a05ef7b967bac0eef5d9712a6803b9f1a"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a05ef7b967bac0eef5d9712a6803b9f1a">u32</a></div><div class="ttdeci">@ u32</div><div class="ttdoc">32-bit unsigned integral values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00217">defines.h:217</a></div></div>
<div class="ttc" id="astructaf_1_1af__cdouble_htm"><div class="ttname"><a href="structaf_1_1af__cdouble.htm">af::af_cdouble</a></div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00039">complex.h:39</a></div></div>
<div class="ttc" id="astructaf_1_1af__cfloat_htm"><div class="ttname"><a href="structaf_1_1af__cfloat.htm">af::af_cfloat</a></div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00031">complex.h:31</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a></div><div class="ttdeci">@ c64</div><div class="ttdoc">64-bit complex floating point values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00214">defines.h:214</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a></div><div class="ttdeci">@ c32</div><div class="ttdoc">32-bit complex floating point values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00212">defines.h:212</a></div></div>
<div class="ttc" id="adefines_8h_htm"><div class="ttname"><a href="defines_8h.htm">defines.h</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div><div class="ttdeci">@ f32</div><div class="ttdoc">32-bit floating point values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00211">defines.h:211</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a2fb596fb851c71689624894525c069e4"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a2fb596fb851c71689624894525c069e4">s64</a></div><div class="ttdeci">@ s64</div><div class="ttdoc">64-bit signed integral values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00219">defines.h:219</a></div></div>
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
