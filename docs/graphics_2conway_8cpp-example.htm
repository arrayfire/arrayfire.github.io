<!-- HTML header for doxygen 1.9.3-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.3"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: graphics/conway.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
  <!--<td id="projectalign">
   <div id="projectname">ArrayFire<span id="projectnumber">&#160;3.8.1</span>
   </div>
   <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>-->
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.3 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('graphics_2conway_8cpp-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle"><div class="title">graphics/conway.cpp</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/*******************************************************</span></div>
<div class="line"><span class="comment"> * Copyright (c) 2014, ArrayFire</span></div>
<div class="line"><span class="comment"> * All rights reserved.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><span class="comment"> ********************************************************/</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="arrayfire_8h.htm">arrayfire.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;cstdio&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span><a class="code hl_namespace" href="namespaceaf.htm">af</a>;</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">int</span> main(<span class="keywordtype">int</span>, <span class="keywordtype">char</span>**) {</div>
<div class="line">    <span class="keywordflow">try</span> {</div>
<div class="line">        <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> h_kernel[] = {1, 1, 1, 1, 0, 1, 1, 1, 1};</div>
<div class="line">        <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> reset        = 500;</div>
<div class="line">        <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> game_w = 128, game_h = 128;</div>
<div class="line"> </div>
<div class="line">        <a id="a0" name="a0"></a><a class="code hl_function" href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a>();</div>
<div class="line"> </div>
<div class="line">        std::cout &lt;&lt; <span class="stringliteral">&quot;This example demonstrates the Conway&#39;s Game of Life &quot;</span></div>
<div class="line">                     <span class="stringliteral">&quot;using ArrayFire&quot;</span></div>
<div class="line">                  &lt;&lt; std::endl</div>
<div class="line">                  &lt;&lt; <span class="stringliteral">&quot;There are 4 simple rules of Conways&#39;s Game of Life&quot;</span></div>
<div class="line">                  &lt;&lt; std::endl</div>
<div class="line">                  &lt;&lt; <span class="stringliteral">&quot;1. Any live cell with fewer than two live neighbours &quot;</span></div>
<div class="line">                     <span class="stringliteral">&quot;dies, as if caused by under-population.&quot;</span></div>
<div class="line">                  &lt;&lt; std::endl</div>
<div class="line">                  &lt;&lt; <span class="stringliteral">&quot;2. Any live cell with two or three live neighbours lives &quot;</span></div>
<div class="line">                     <span class="stringliteral">&quot;on to the next generation.&quot;</span></div>
<div class="line">                  &lt;&lt; std::endl</div>
<div class="line">                  &lt;&lt; <span class="stringliteral">&quot;3. Any live cell with more than three live neighbours &quot;</span></div>
<div class="line">                     <span class="stringliteral">&quot;dies, as if by overcrowding.&quot;</span></div>
<div class="line">                  &lt;&lt; std::endl</div>
<div class="line">                  &lt;&lt; <span class="stringliteral">&quot;4. Any dead cell with exactly three live neighbours &quot;</span></div>
<div class="line">                     <span class="stringliteral">&quot;becomes a live cell, as if by reproduction.&quot;</span></div>
<div class="line">                  &lt;&lt; std::endl</div>
<div class="line">                  &lt;&lt; <span class="stringliteral">&quot;Each white block in the visualization represents 1 alive &quot;</span></div>
<div class="line">                     <span class="stringliteral">&quot;cell, black space represents dead cells&quot;</span></div>
<div class="line">                  &lt;&lt; std::endl;</div>
<div class="line"> </div>
<div class="line">        <a id="_a1" name="_a1"></a><a class="code hl_class" href="classaf_1_1Window.htm">af::Window</a> myWindow(512, 512, <span class="stringliteral">&quot;Conway&#39;s Game of Life using ArrayFire&quot;</span>);</div>
<div class="line"> </div>
<div class="line">        <span class="keywordtype">int</span> frame_count = 0;</div>
<div class="line"> </div>
<div class="line">        <span class="comment">// Initialize the kernel array just once</span></div>
<div class="line">        <span class="keyword">const</span> <a id="_a2" name="_a2"></a><a class="code hl_class" href="classaf_1_1array.htm">af::array</a> kernel(3, 3, h_kernel, <a id="a3" name="a3"></a><a class="code hl_enumvalue" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>);</div>
<div class="line">        <a id="a4" name="a4"></a><a class="code hl_function" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> state;</div>
<div class="line">        state = (<a id="a5" name="a5"></a><a class="code hl_function" href="group__random__func__randu.htm#gabe9a79d7b21f0a8fb7ace6920ead4772">af::randu</a>(game_h, game_w, <a id="a6" name="a6"></a><a class="code hl_enumvalue" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>) &gt; 0.5).as(<a class="code hl_enumvalue" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line"> </div>
<div class="line">        <span class="keywordflow">while</span> (!myWindow.<a id="a7" name="a7"></a><a class="code hl_function" href="group__gfx__func__window.htm#ga46143fd6de3be9ab9951f140d3ae8c2f">close</a>()) {</div>
<div class="line">            myWindow.<a id="a8" name="a8"></a><a class="code hl_function" href="group__gfx__func__draw.htm#gaed174450be6db4dfa5ef65b7baccbe57">image</a>(state);</div>
<div class="line">            frame_count++;</div>
<div class="line"> </div>
<div class="line">            <span class="comment">// Generate a random starting state</span></div>
<div class="line">            <span class="keywordflow">if</span> (frame_count % reset == 0)</div>
<div class="line">                state = (<a class="code hl_function" href="group__random__func__randu.htm#gabe9a79d7b21f0a8fb7ace6920ead4772">af::randu</a>(game_h, game_w, <a class="code hl_enumvalue" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>) &gt; 0.5).as(<a class="code hl_enumvalue" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line"> </div>
<div class="line">            <span class="comment">// Convolve gets neighbors</span></div>
<div class="line">            <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> nHood = <a id="a9" name="a9"></a><a class="code hl_function" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve</a>(state, kernel);</div>
<div class="line"> </div>
<div class="line">            <span class="comment">// Generate conditions for life</span></div>
<div class="line">            <span class="comment">// state == 1 &amp;&amp; nHood &lt; 2 -&gt;&gt; state = 0</span></div>
<div class="line">            <span class="comment">// state == 1 &amp;&amp; nHood &gt; 3 -&gt;&gt; state = 0</span></div>
<div class="line">            <span class="comment">// else if state == 1 -&gt;&gt; state = 1</span></div>
<div class="line">            <span class="comment">// state == 0 &amp;&amp; nHood == 3 -&gt;&gt; state = 1</span></div>
<div class="line">            <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> C0 = (nHood == 2);</div>
<div class="line">            <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> C1 = (nHood == 3);</div>
<div class="line"> </div>
<div class="line">            <span class="comment">// Update state</span></div>
<div class="line">            state = state * C0 + C1;</div>
<div class="line">        }</div>
<div class="line">    } <span class="keywordflow">catch</span> (<a id="_a10" name="_a10"></a><a class="code hl_class" href="classaf_1_1exception.htm">af::exception</a>&amp; e) {</div>
<div class="line">        fprintf(stderr, <span class="stringliteral">&quot;%s\n&quot;</span>, e.<a id="a11" name="a11"></a><a class="code hl_function" href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">what</a>());</div>
<div class="line">        <span class="keywordflow">throw</span>;</div>
<div class="line">    }</div>
<div class="line">    <span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
<div class="ttc" id="aarrayfire_8h_htm"><div class="ttname"><a href="arrayfire_8h.htm">arrayfire.h</a></div></div>
<div class="ttc" id="aclassaf_1_1Window_htm"><div class="ttname"><a href="classaf_1_1Window.htm">af::Window</a></div><div class="ttdoc">Window object to render af::arrays.</div><div class="ttdef"><b>Definition:</b> <a href="graphics_8h_source.htm#l00037">graphics.h:37</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00037">array.h:37</a></div></div>
<div class="ttc" id="aclassaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00021">exception.h:22</a></div></div>
<div class="ttc" id="aclassaf_1_1exception_htm_aa884ff67408851f00e50cf971a4dfd05"><div class="ttname"><a href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">af::exception::what</a></div><div class="ttdeci">virtual const char * what() const</div><div class="ttdoc">Returns an error message for the exception in a string format.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00046">exception.h:46</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div><div class="ttdeci">@ f32</div><div class="ttdoc">32-bit floating point values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00211">defines.h:211</a></div></div>
<div class="ttc" id="adefines_8h_htm_ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba"><div class="ttname"><a href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a></div><div class="ttdeci">@ afHost</div><div class="ttdoc">Host pointer.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00235">defines.h:234</a></div></div>
<div class="ttc" id="agroup__device__func__info_htm_ga1360e706b046b1c5b299bd6e689a0276"><div class="ttname"><a href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a></div><div class="ttdeci">AFAPI void info()</div></div>
<div class="ttc" id="agroup__gfx__func__draw_htm_gaed174450be6db4dfa5ef65b7baccbe57"><div class="ttname"><a href="group__gfx__func__draw.htm#gaed174450be6db4dfa5ef65b7baccbe57">af::Window::image</a></div><div class="ttdeci">void image(const array &amp;in, const char *title=NULL)</div><div class="ttdoc">Renders the input array as an image to the window.</div></div>
<div class="ttc" id="agroup__gfx__func__window_htm_ga46143fd6de3be9ab9951f140d3ae8c2f"><div class="ttname"><a href="group__gfx__func__window.htm#ga46143fd6de3be9ab9951f140d3ae8c2f">af::Window::close</a></div><div class="ttdeci">bool close()</div><div class="ttdoc">Check if window is marked for close.</div></div>
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
<div class="ttc" id="agroup__random__func__randu_htm_gabe9a79d7b21f0a8fb7ace6920ead4772"><div class="ttname"><a href="group__random__func__randu.htm#gabe9a79d7b21f0a8fb7ace6920ead4772">af::randu</a></div><div class="ttdeci">AFAPI array randu(const dim4 &amp;dims, const dtype ty, randomEngine &amp;r)</div></div>
<div class="ttc" id="agroup__signal__func__convolve_htm_gae79b64c8b0d6a06309e8b67bf89cf6c9"><div class="ttname"><a href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">af::convolve</a></div><div class="ttdeci">AFAPI array convolve(const array &amp;signal, const array &amp;filter, const convMode mode=AF_CONV_DEFAULT, const convDomain domain=AF_CONV_AUTO)</div><div class="ttdoc">C++ Interface for convolution any(one through three) dimensional signals.</div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:15</a></div></div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Thu Feb 24 2022 14:12:32 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.3 </li>
    </ul>
</div>
</body>
</html>
