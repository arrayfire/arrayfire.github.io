<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<title>sift</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__cv__func__sift.htm','');});
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">sift<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">Complete List of ArrayFire Functions</a><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__cv__mat.htm">Computer Vision</a> &raquo;  &#124; <a class="el" href="group__featdescriptor__mat.htm">Feature descriptors</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>SIFT feature detector and descriptor extractor.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga0a0eb54eea99248c9e8c3983c9765a11"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cv__func__sift.htm#ga0a0eb54eea99248c9e8c3983c9765a11">sift</a> (<a class="el" href="classaf_1_1features.htm">features</a> &amp;feat, <a class="el" href="classaf_1_1array.htm">array</a> &amp;desc, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const unsigned n_layers=3, const float contrast_thr=0.04f, const float edge_thr=10.f, const float init_sigma=1.6f, const bool double_input=true, const float intensity_scale=0.00390625f, const float feature_ratio=0.05f)</td></tr>
<tr class="memdesc:ga0a0eb54eea99248c9e8c3983c9765a11"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for SIFT feature detector and descriptor.  <a href="group__cv__func__sift.htm#ga0a0eb54eea99248c9e8c3983c9765a11">More...</a><br /></td></tr>
<tr class="separator:ga0a0eb54eea99248c9e8c3983c9765a11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5b5826848e54066a2b7b73a97b41ba58"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cv__func__sift.htm#ga5b5826848e54066a2b7b73a97b41ba58">gloh</a> (<a class="el" href="classaf_1_1features.htm">features</a> &amp;feat, <a class="el" href="classaf_1_1array.htm">array</a> &amp;desc, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const unsigned n_layers=3, const float contrast_thr=0.04f, const float edge_thr=10.f, const float init_sigma=1.6f, const bool double_input=true, const float intensity_scale=0.00390625f, const float feature_ratio=0.05f)</td></tr>
<tr class="memdesc:ga5b5826848e54066a2b7b73a97b41ba58"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for SIFT feature detector and GLOH descriptor.  <a href="group__cv__func__sift.htm#ga5b5826848e54066a2b7b73a97b41ba58">More...</a><br /></td></tr>
<tr class="separator:ga5b5826848e54066a2b7b73a97b41ba58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8bae580e5cd79b8adab7346146a5824f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cv__func__sift.htm#ga8bae580e5cd79b8adab7346146a5824f">af_sift</a> (<a class="el" href="features_8h.htm#a294c8f0e20b10dfc4f4f18566dba06bc">af_features</a> *feat, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *desc, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const unsigned n_layers, const float contrast_thr, const float edge_thr, const float init_sigma, const bool double_input, const float intensity_scale, const float feature_ratio)</td></tr>
<tr class="memdesc:ga8bae580e5cd79b8adab7346146a5824f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for SIFT feature detector and descriptor.  <a href="#ga8bae580e5cd79b8adab7346146a5824f">More...</a><br /></td></tr>
<tr class="separator:ga8bae580e5cd79b8adab7346146a5824f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga963dd3ecc8c17ff286a6caaee498b49c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cv__func__sift.htm#ga963dd3ecc8c17ff286a6caaee498b49c">af_gloh</a> (<a class="el" href="features_8h.htm#a294c8f0e20b10dfc4f4f18566dba06bc">af_features</a> *feat, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *desc, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const unsigned n_layers, const float contrast_thr, const float edge_thr, const float init_sigma, const bool double_input, const float intensity_scale, const float feature_ratio)</td></tr>
<tr class="memdesc:ga963dd3ecc8c17ff286a6caaee498b49c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for SIFT feature detector and GLOH descriptor.  <a href="#ga963dd3ecc8c17ff286a6caaee498b49c">More...</a><br /></td></tr>
<tr class="separator:ga963dd3ecc8c17ff286a6caaee498b49c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>SIFT feature detector and descriptor extractor. </p>
<p>Detects features and extract descriptors using the Scale Invariant Feature Transform (SIFT), by David Lowe.</p>
<p>Lowe, D. G., "Distinctive Image Features from Scale-Invariant Keypoints", International Journal of Computer Vision, 60, 2, pp. 91-110, 2004.</p>
<p>WARNING: The SIFT algorithm is patented by the University of British Columbia, before using it, make sure you have the appropriate permission to do so. </p><hr/>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga963dd3ecc8c17ff286a6caaee498b49c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga963dd3ecc8c17ff286a6caaee498b49c">&#9670;&nbsp;</a></span>af_gloh()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_gloh </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="features_8h.htm#a294c8f0e20b10dfc4f4f18566dba06bc">af_features</a> *&#160;</td>
          <td class="paramname"><em>feat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>desc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>n_layers</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>contrast_thr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>edge_thr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>init_sigma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>double_input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>intensity_scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>feature_ratio</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for SIFT feature detector and GLOH descriptor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">feat</td><td>af_features object composed of arrays for x and y coordinates, score, orientation and size of selected features </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">desc</td><td>Nx272 array containing extracted GLOH descriptors, where N is the number of features found by SIFT </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>array containing a grayscale image (color images are not supported) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n_layers</td><td>number of layers per octave, the number of octaves is computed automatically according to the input image dimensions, the original SIFT paper suggests 3 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">contrast_thr</td><td>threshold used to filter out features that have low contrast, the original SIFT paper suggests 0.04 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">edge_thr</td><td>threshold used to filter out features that are too edge-like, the original SIFT paper suggests 10.0 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">init_sigma</td><td>the sigma value used to filter the input image at the first octave, the original SIFT paper suggests 1.6 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">double_input</td><td>if true, the input image dimensions will be doubled and the doubled image will be used for the first octave </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">intensity_scale</td><td>the inverse of the difference between the minimum and maximum grayscale intensity value, e.g.: if the ranges are 0-256, the proper intensity_scale value is 1/256, if the ranges are 0-1, the proper intensity-scale value is 1/1 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">feature_ratio</td><td>maximum ratio of features to detect, the maximum number of features is calculated by feature_ratio * in.elements(). The maximum number of features is not based on the score, instead, features detected after the limit is reached are discarded </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga8bae580e5cd79b8adab7346146a5824f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8bae580e5cd79b8adab7346146a5824f">&#9670;&nbsp;</a></span>af_sift()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_sift </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="features_8h.htm#a294c8f0e20b10dfc4f4f18566dba06bc">af_features</a> *&#160;</td>
          <td class="paramname"><em>feat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>desc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>n_layers</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>contrast_thr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>edge_thr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>init_sigma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>double_input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>intensity_scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>feature_ratio</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for SIFT feature detector and descriptor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">feat</td><td>af_features object composed of arrays for x and y coordinates, score, orientation and size of selected features </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">desc</td><td>Nx128 array containing extracted descriptors, where N is the number of features found by SIFT </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>array containing a grayscale image (color images are not supported) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n_layers</td><td>number of layers per octave, the number of octaves is computed automatically according to the input image dimensions, the original SIFT paper suggests 3 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">contrast_thr</td><td>threshold used to filter out features that have low contrast, the original SIFT paper suggests 0.04 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">edge_thr</td><td>threshold used to filter out features that are too edge-like, the original SIFT paper suggests 10.0 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">init_sigma</td><td>the sigma value used to filter the input image at the first octave, the original SIFT paper suggests 1.6 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">double_input</td><td>if true, the input image dimensions will be doubled and the doubled image will be used for the first octave </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">intensity_scale</td><td>the inverse of the difference between the minimum and maximum grayscale intensity value, e.g.: if the ranges are 0-256, the proper intensity_scale value is 1/256, if the ranges are 0-1, the proper intensity-scale value is 1/1 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">feature_ratio</td><td>maximum ratio of features to detect, the maximum number of features is calculated by feature_ratio * in.elements(). The maximum number of features is not based on the score, instead, features detected after the limit is reached are discarded </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga5b5826848e54066a2b7b73a97b41ba58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5b5826848e54066a2b7b73a97b41ba58">&#9670;&nbsp;</a></span>gloh()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void af::gloh </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classaf_1_1features.htm">features</a> &amp;&#160;</td>
          <td class="paramname"><em>feat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>desc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>n_layers</em> = <code>3</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>contrast_thr</em> = <code>0.04f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>edge_thr</em> = <code>10.f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>init_sigma</em> = <code>1.6f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>double_input</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>intensity_scale</em> = <code>0.00390625f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>feature_ratio</em> = <code>0.05f</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for SIFT feature detector and GLOH descriptor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">feat</td><td>features object composed of arrays for x and y coordinates, score, orientation and size of selected features </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">desc</td><td>Nx272 array containing extracted GLOH descriptors, where N is the number of features found by SIFT </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>array containing a grayscale image (color images are not supported) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n_layers</td><td>number of layers per octave, the number of octaves is computed automatically according to the input image dimensions, the original SIFT paper suggests 3 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">contrast_thr</td><td>threshold used to filter out features that have low contrast, the original SIFT paper suggests 0.04 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">edge_thr</td><td>threshold used to filter out features that are too edge-like, the original SIFT paper suggests 10.0 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">init_sigma</td><td>the sigma value used to filter the input image at the first octave, the original SIFT paper suggests 1.6 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">double_input</td><td>if true, the input image dimensions will be doubled and the doubled image will be used for the first octave </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">intensity_scale</td><td>the inverse of the difference between the minimum and maximum grayscale intensity value, e.g.: if the ranges are 0-256, the proper intensity_scale value is 1/256, if the ranges are 0-1, the proper intensity-scale value is 1/1 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">feature_ratio</td><td>maximum ratio of features to detect, the maximum number of features is calculated by feature_ratio * in.elements(). The maximum number of features is not based on the score, instead, features detected after the limit is reached are discarded </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga0a0eb54eea99248c9e8c3983c9765a11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0a0eb54eea99248c9e8c3983c9765a11">&#9670;&nbsp;</a></span>sift()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void af::sift </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classaf_1_1features.htm">features</a> &amp;&#160;</td>
          <td class="paramname"><em>feat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>desc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>n_layers</em> = <code>3</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>contrast_thr</em> = <code>0.04f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>edge_thr</em> = <code>10.f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>init_sigma</em> = <code>1.6f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>double_input</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>intensity_scale</em> = <code>0.00390625f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>feature_ratio</em> = <code>0.05f</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for SIFT feature detector and descriptor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">feat</td><td>features object composed of arrays for x and y coordinates, score, orientation and size of selected features </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">desc</td><td>Nx128 array containing extracted descriptors, where N is the number of features found by SIFT </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>array containing a grayscale image (color images are not supported) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n_layers</td><td>number of layers per octave, the number of octaves is computed automatically according to the input image dimensions, the original SIFT paper suggests 3 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">contrast_thr</td><td>threshold used to filter out features that have low contrast, the original SIFT paper suggests 0.04 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">edge_thr</td><td>threshold used to filter out features that are too edge-like, the original SIFT paper suggests 10.0 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">init_sigma</td><td>the sigma value used to filter the input image at the first octave, the original SIFT paper suggests 1.6 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">double_input</td><td>if true, the input image dimensions will be doubled and the doubled image will be used for the first octave </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">intensity_scale</td><td>the inverse of the difference between the minimum and maximum grayscale intensity value, e.g.: if the ranges are 0-256, the proper intensity_scale value is 1/256, if the ranges are 0-1, the proper intensity-scale value is 1/1 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">feature_ratio</td><td>maximum ratio of features to detect, the maximum number of features is calculated by feature_ratio * in.elements(). The maximum number of features is not based on the score, instead, features detected after the limit is reached are discarded </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.org']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
