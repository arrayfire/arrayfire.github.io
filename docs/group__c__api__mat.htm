<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: C API to manage arrays</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__c__api__mat.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">C API to manage arrays<div class="ingroups"><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__array__mat.htm">Functions to create and modify Arrays</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Create, release, copy, fetch-properties of <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaad4fc77f872217e7337cb53bfb623cf5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gaad4fc77f872217e7337cb53bfb623cf5">af_device_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, void *data, const unsigned ndims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const dims, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type)</td></tr>
<tr class="memdesc:gaad4fc77f872217e7337cb53bfb623cf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create array from device memory.  <a href="group__c__api__mat.htm#gaad4fc77f872217e7337cb53bfb623cf5">More...</a><br /></td></tr>
<tr class="separator:gaad4fc77f872217e7337cb53bfb623cf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga834be32357616d8ab735087c6f681858"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga834be32357616d8ab735087c6f681858">af_create_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, const void *const data, const unsigned ndims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const dims, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type)</td></tr>
<tr class="memdesc:ga834be32357616d8ab735087c6f681858"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> handle initialized with user defined data.  <a href="group__c__api__mat.htm#ga834be32357616d8ab735087c6f681858">More...</a><br /></td></tr>
<tr class="separator:ga834be32357616d8ab735087c6f681858"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b8f5cf6fce69aa1574544bc2d44d7d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga3b8f5cf6fce69aa1574544bc2d44d7d0">af_create_handle</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, const unsigned ndims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const dims, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type)</td></tr>
<tr class="memdesc:ga3b8f5cf6fce69aa1574544bc2d44d7d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create af_array handle.  <a href="group__c__api__mat.htm#ga3b8f5cf6fce69aa1574544bc2d44d7d0">More...</a><br /></td></tr>
<tr class="separator:ga3b8f5cf6fce69aa1574544bc2d44d7d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f8e4d3732b5fd4b91ad51eec634f7a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga0f8e4d3732b5fd4b91ad51eec634f7a2">af_copy_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga0f8e4d3732b5fd4b91ad51eec634f7a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deep copy an array to another.  <a href="group__c__api__mat.htm#ga0f8e4d3732b5fd4b91ad51eec634f7a2">More...</a><br /></td></tr>
<tr class="separator:ga0f8e4d3732b5fd4b91ad51eec634f7a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafef13633d184acc726ad9daca7a7bc99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gafef13633d184acc726ad9daca7a7bc99">af_write_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr, const void *data, const size_t bytes, <a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af_source</a> src)</td></tr>
<tr class="memdesc:gafef13633d184acc726ad9daca7a7bc99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy data from a C pointer (host/device) to an existing array.  <a href="group__c__api__mat.htm#gafef13633d184acc726ad9daca7a7bc99">More...</a><br /></td></tr>
<tr class="separator:gafef13633d184acc726ad9daca7a7bc99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6040dc6f0eb127402fbf62c1165f0b9d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga6040dc6f0eb127402fbf62c1165f0b9d">af_get_data_ptr</a> (void *data, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga6040dc6f0eb127402fbf62c1165f0b9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy data from an af_array to a C pointer.  <a href="group__c__api__mat.htm#ga6040dc6f0eb127402fbf62c1165f0b9d">More...</a><br /></td></tr>
<tr class="separator:ga6040dc6f0eb127402fbf62c1165f0b9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad6c58648ed0db398e170dabf045e8309"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gad6c58648ed0db398e170dabf045e8309">af_release_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gad6c58648ed0db398e170dabf045e8309"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reduce the reference count of the <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>.  <a href="group__c__api__mat.htm#gad6c58648ed0db398e170dabf045e8309">More...</a><br /></td></tr>
<tr class="separator:gad6c58648ed0db398e170dabf045e8309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ed45b3f881c0f6c80c5cf2af886dbab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga7ed45b3f881c0f6c80c5cf2af886dbab">af_retain_array</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga7ed45b3f881c0f6c80c5cf2af886dbab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> reference count.  <a href="group__c__api__mat.htm#ga7ed45b3f881c0f6c80c5cf2af886dbab">More...</a><br /></td></tr>
<tr class="separator:ga7ed45b3f881c0f6c80c5cf2af886dbab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34d9070b94c3bac673df7f13b9c718a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga34d9070b94c3bac673df7f13b9c718a2">af_get_data_ref_count</a> (int *use_count, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga34d9070b94c3bac673df7f13b9c718a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the reference count of <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>.  <a href="group__c__api__mat.htm#ga34d9070b94c3bac673df7f13b9c718a2">More...</a><br /></td></tr>
<tr class="separator:ga34d9070b94c3bac673df7f13b9c718a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9de141bfc5936741d2496f59c1bac777"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga9de141bfc5936741d2496f59c1bac777">af_eval</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga9de141bfc5936741d2496f59c1bac777"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate any expressions in the Array.  <a href="group__c__api__mat.htm#ga9de141bfc5936741d2496f59c1bac777">More...</a><br /></td></tr>
<tr class="separator:ga9de141bfc5936741d2496f59c1bac777"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e08f4cda2471a477d2fa91c2356f72c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga9e08f4cda2471a477d2fa91c2356f72c">af_eval_multiple</a> (const int num, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arrays)</td></tr>
<tr class="memdesc:ga9e08f4cda2471a477d2fa91c2356f72c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate multiple arrays together.  <a href="group__c__api__mat.htm#ga9e08f4cda2471a477d2fa91c2356f72c">More...</a><br /></td></tr>
<tr class="separator:ga9e08f4cda2471a477d2fa91c2356f72c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga869f5e9331e9e010345de2589add7bae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga869f5e9331e9e010345de2589add7bae">af_set_manual_eval_flag</a> (bool flag)</td></tr>
<tr class="memdesc:ga869f5e9331e9e010345de2589add7bae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Turn the manual eval flag on or off.  <a href="group__c__api__mat.htm#ga869f5e9331e9e010345de2589add7bae">More...</a><br /></td></tr>
<tr class="separator:ga869f5e9331e9e010345de2589add7bae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga890c476d90cb689f2835d2e4f74f5868"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga890c476d90cb689f2835d2e4f74f5868">af_get_manual_eval_flag</a> (bool *flag)</td></tr>
<tr class="memdesc:ga890c476d90cb689f2835d2e4f74f5868"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the manual eval flag.  <a href="group__c__api__mat.htm#ga890c476d90cb689f2835d2e4f74f5868">More...</a><br /></td></tr>
<tr class="separator:ga890c476d90cb689f2835d2e4f74f5868"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6845bbe4385a60a606b88f8130252c1f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga6845bbe4385a60a606b88f8130252c1f">af_get_elements</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *elems, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga6845bbe4385a60a606b88f8130252c1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the total number of elements across all dimensions of the array.  <a href="group__c__api__mat.htm#ga6845bbe4385a60a606b88f8130252c1f">More...</a><br /></td></tr>
<tr class="separator:ga6845bbe4385a60a606b88f8130252c1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0dda6898e1c0d9a43efb56cd6a988c9b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga0dda6898e1c0d9a43efb56cd6a988c9b">af_get_type</a> (<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> *type, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga0dda6898e1c0d9a43efb56cd6a988c9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of an array.  <a href="group__c__api__mat.htm#ga0dda6898e1c0d9a43efb56cd6a988c9b">More...</a><br /></td></tr>
<tr class="separator:ga0dda6898e1c0d9a43efb56cd6a988c9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8b90da50a532837d9763e301b2267348"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga8b90da50a532837d9763e301b2267348">af_get_dims</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d0, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d1, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d2, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d3, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga8b90da50a532837d9763e301b2267348"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the dimensions of an array.  <a href="group__c__api__mat.htm#ga8b90da50a532837d9763e301b2267348">More...</a><br /></td></tr>
<tr class="separator:ga8b90da50a532837d9763e301b2267348"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaefa019d932ff58c2a829ce87edddd2a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gaefa019d932ff58c2a829ce87edddd2a8">af_get_numdims</a> (unsigned *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gaefa019d932ff58c2a829ce87edddd2a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of dimensions of an array.  <a href="group__c__api__mat.htm#gaefa019d932ff58c2a829ce87edddd2a8">More...</a><br /></td></tr>
<tr class="separator:gaefa019d932ff58c2a829ce87edddd2a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga19c749e95314e1c77d816ad9952fb680"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga19c749e95314e1c77d816ad9952fb680">af_is_empty</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga19c749e95314e1c77d816ad9952fb680"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is empty.  <a href="group__c__api__mat.htm#ga19c749e95314e1c77d816ad9952fb680">More...</a><br /></td></tr>
<tr class="separator:ga19c749e95314e1c77d816ad9952fb680"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae3dfa6dc1c03c5efe7482bfc9c41266a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gae3dfa6dc1c03c5efe7482bfc9c41266a">af_is_scalar</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gae3dfa6dc1c03c5efe7482bfc9c41266a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is scalar, ie.  <a href="group__c__api__mat.htm#gae3dfa6dc1c03c5efe7482bfc9c41266a">More...</a><br /></td></tr>
<tr class="separator:gae3dfa6dc1c03c5efe7482bfc9c41266a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabbe3249a355293daabd5907d7df67c6a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gabbe3249a355293daabd5907d7df67c6a">af_is_row</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gabbe3249a355293daabd5907d7df67c6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is row vector.  <a href="group__c__api__mat.htm#gabbe3249a355293daabd5907d7df67c6a">More...</a><br /></td></tr>
<tr class="separator:gabbe3249a355293daabd5907d7df67c6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga184b5a5feb146f2a2a44fed36b35e435"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga184b5a5feb146f2a2a44fed36b35e435">af_is_column</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga184b5a5feb146f2a2a44fed36b35e435"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is a column vector.  <a href="group__c__api__mat.htm#ga184b5a5feb146f2a2a44fed36b35e435">More...</a><br /></td></tr>
<tr class="separator:ga184b5a5feb146f2a2a44fed36b35e435"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00a23c7dd281fdcdec10b8395e611154"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga00a23c7dd281fdcdec10b8395e611154">af_is_vector</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga00a23c7dd281fdcdec10b8395e611154"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is a vector.  <a href="group__c__api__mat.htm#ga00a23c7dd281fdcdec10b8395e611154">More...</a><br /></td></tr>
<tr class="separator:ga00a23c7dd281fdcdec10b8395e611154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd8a5edf6467340d0b40341be9f677e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gacd8a5edf6467340d0b40341be9f677e9">af_is_complex</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gacd8a5edf6467340d0b40341be9f677e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is complex type.  <a href="group__c__api__mat.htm#gacd8a5edf6467340d0b40341be9f677e9">More...</a><br /></td></tr>
<tr class="separator:gacd8a5edf6467340d0b40341be9f677e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafaa0c1597ef34a7320ed589f80fdce10"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gafaa0c1597ef34a7320ed589f80fdce10">af_is_real</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gafaa0c1597ef34a7320ed589f80fdce10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is real type.  <a href="group__c__api__mat.htm#gafaa0c1597ef34a7320ed589f80fdce10">More...</a><br /></td></tr>
<tr class="separator:gafaa0c1597ef34a7320ed589f80fdce10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb499641bfc02dfa56a75be9ba237e3f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gadb499641bfc02dfa56a75be9ba237e3f">af_is_double</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gadb499641bfc02dfa56a75be9ba237e3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is double precision type.  <a href="group__c__api__mat.htm#gadb499641bfc02dfa56a75be9ba237e3f">More...</a><br /></td></tr>
<tr class="separator:gadb499641bfc02dfa56a75be9ba237e3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1bd444b2c78a4f4731d4523a90200175"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga1bd444b2c78a4f4731d4523a90200175">af_is_single</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga1bd444b2c78a4f4731d4523a90200175"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is single precision type.  <a href="group__c__api__mat.htm#ga1bd444b2c78a4f4731d4523a90200175">More...</a><br /></td></tr>
<tr class="separator:ga1bd444b2c78a4f4731d4523a90200175"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga247a830d52f1cb2450369af3d8d8f2f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga247a830d52f1cb2450369af3d8d8f2f1">af_is_half</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga247a830d52f1cb2450369af3d8d8f2f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is 16 bit floating point type.  <a href="group__c__api__mat.htm#ga247a830d52f1cb2450369af3d8d8f2f1">More...</a><br /></td></tr>
<tr class="separator:ga247a830d52f1cb2450369af3d8d8f2f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f2b3e689d07f5135dfc1ee6cf9825a3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga6f2b3e689d07f5135dfc1ee6cf9825a3">af_is_realfloating</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga6f2b3e689d07f5135dfc1ee6cf9825a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is real floating point type.  <a href="group__c__api__mat.htm#ga6f2b3e689d07f5135dfc1ee6cf9825a3">More...</a><br /></td></tr>
<tr class="separator:ga6f2b3e689d07f5135dfc1ee6cf9825a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5eb0d277412a2beeffe7e7a9f89b98ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga5eb0d277412a2beeffe7e7a9f89b98ea">af_is_floating</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga5eb0d277412a2beeffe7e7a9f89b98ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is floating precision type.  <a href="group__c__api__mat.htm#ga5eb0d277412a2beeffe7e7a9f89b98ea">More...</a><br /></td></tr>
<tr class="separator:ga5eb0d277412a2beeffe7e7a9f89b98ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga768e8326a6aaa81c6543949afc781af2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#ga768e8326a6aaa81c6543949afc781af2">af_is_integer</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:ga768e8326a6aaa81c6543949afc781af2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is integer type.  <a href="group__c__api__mat.htm#ga768e8326a6aaa81c6543949afc781af2">More...</a><br /></td></tr>
<tr class="separator:ga768e8326a6aaa81c6543949afc781af2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafae10fc1378b72404120572e21ff5d27"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gafae10fc1378b72404120572e21ff5d27">af_is_bool</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gafae10fc1378b72404120572e21ff5d27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is bool type.  <a href="group__c__api__mat.htm#gafae10fc1378b72404120572e21ff5d27">More...</a><br /></td></tr>
<tr class="separator:gafae10fc1378b72404120572e21ff5d27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac96d3ca37a435874de22a76838a8cf54"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gac96d3ca37a435874de22a76838a8cf54">af_is_sparse</a> (bool *result, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gac96d3ca37a435874de22a76838a8cf54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an array is sparse.  <a href="group__c__api__mat.htm#gac96d3ca37a435874de22a76838a8cf54">More...</a><br /></td></tr>
<tr class="separator:gac96d3ca37a435874de22a76838a8cf54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaefe2e343a74a84bd43b588218ecc09a3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__c__api__mat.htm#gaefe2e343a74a84bd43b588218ecc09a3">af_get_scalar</a> (void *output_value, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr)</td></tr>
<tr class="memdesc:gaefe2e343a74a84bd43b588218ecc09a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get first element from an array.  <a href="group__c__api__mat.htm#gaefe2e343a74a84bd43b588218ecc09a3">More...</a><br /></td></tr>
<tr class="separator:gaefe2e343a74a84bd43b588218ecc09a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Create, release, copy, fetch-properties of <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga0f8e4d3732b5fd4b91ad51eec634f7a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0f8e4d3732b5fd4b91ad51eec634f7a2">&#9670;&nbsp;</a></span>af_copy_array()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_copy_array </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>arr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Deep copy an array to another. </p>

</div>
</div>
<a id="ga834be32357616d8ab735087c6f681858"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga834be32357616d8ab735087c6f681858">&#9670;&nbsp;</a></span>af_create_array()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_create_array </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>arr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *const&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>ndims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const&#160;</td>
          <td class="paramname"><em>dims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> handle initialized with user defined data. </p>
<p>This function will create an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> handle from the memory provided in <code>data</code>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">arr</td><td>The pointer to the returned object. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>The data which will be loaded into the array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ndims</td><td>The number of dimensions read from the <code>dims</code> parameter </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dims</td><td>A C pointer with <code>ndims</code> elements. Each value represents the size of that dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>The type of the <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> object</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation was a success </dd></dl>

</div>
</div>
<a id="ga3b8f5cf6fce69aa1574544bc2d44d7d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3b8f5cf6fce69aa1574544bc2d44d7d0">&#9670;&nbsp;</a></span>af_create_handle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_create_handle </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>arr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>ndims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const&#160;</td>
          <td class="paramname"><em>dims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create af_array handle. </p>
<p>To release the memory allocated by this call you would have to call <a class="el" href="group__c__api__mat.htm#gad6c58648ed0db398e170dabf045e8309">af_release_array</a> once your use of this <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> is complete.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">arr</td><td>The pointer to the retured object. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ndims</td><td>The number of dimensions read from the <code>dims</code> parameter </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dims</td><td>A C pointer with <code>ndims</code> elements. Each value represents the size of that dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>The type of the <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> object</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the operation was a success </dd></dl>

</div>
</div>
<a id="gaad4fc77f872217e7337cb53bfb623cf5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaad4fc77f872217e7337cb53bfb623cf5">&#9670;&nbsp;</a></span>af_device_array()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_device_array </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>arr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>ndims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const&#160;</td>
          <td class="paramname"><em>dims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create array from device memory. </p>

</div>
</div>
<a id="ga9de141bfc5936741d2496f59c1bac777"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9de141bfc5936741d2496f59c1bac777">&#9670;&nbsp;</a></span>af_eval()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_eval </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Evaluate any expressions in the Array. </p>

</div>
</div>
<a id="ga9e08f4cda2471a477d2fa91c2356f72c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9e08f4cda2471a477d2fa91c2356f72c">&#9670;&nbsp;</a></span>af_eval_multiple()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_eval_multiple </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>arrays</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Evaluate multiple arrays together. </p>

</div>
</div>
<a id="ga6040dc6f0eb127402fbf62c1165f0b9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6040dc6f0eb127402fbf62c1165f0b9d">&#9670;&nbsp;</a></span>af_get_data_ptr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_get_data_ptr </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy data from an af_array to a C pointer. </p>
<p>Needs to used in conjunction with the two functions above </p>

</div>
</div>
<a id="ga34d9070b94c3bac673df7f13b9c718a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga34d9070b94c3bac673df7f13b9c718a2">&#9670;&nbsp;</a></span>af_get_data_ref_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_get_data_ref_count </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>use_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the reference count of <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>. </p>

</div>
</div>
<a id="ga8b90da50a532837d9763e301b2267348"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8b90da50a532837d9763e301b2267348">&#9670;&nbsp;</a></span>af_get_dims()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_get_dims </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *&#160;</td>
          <td class="paramname"><em>d0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *&#160;</td>
          <td class="paramname"><em>d1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *&#160;</td>
          <td class="paramname"><em>d2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *&#160;</td>
          <td class="paramname"><em>d3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the dimensions of an array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">d0</td><td>is the output that contains the size of first dimension of <code>arr</code> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">d1</td><td>is the output that contains the size of second dimension of <code>arr</code> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">d2</td><td>is the output that contains the size of third dimension of <code>arr</code> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">d3</td><td>is the output that contains the size of fourth dimension of <code>arr</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="ga6845bbe4385a60a606b88f8130252c1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6845bbe4385a60a606b88f8130252c1f">&#9670;&nbsp;</a></span>af_get_elements()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_get_elements </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *&#160;</td>
          <td class="paramname"><em>elems</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the total number of elements across all dimensions of the array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">elems</td><td>is the output that contains number of elements of <code>arr</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="ga890c476d90cb689f2835d2e4f74f5868"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga890c476d90cb689f2835d2e4f74f5868">&#9670;&nbsp;</a></span>af_get_manual_eval_flag()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_get_manual_eval_flag </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the manual eval flag. </p>

</div>
</div>
<a id="gaefa019d932ff58c2a829ce87edddd2a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaefa019d932ff58c2a829ce87edddd2a8">&#9670;&nbsp;</a></span>af_get_numdims()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_get_numdims </td>
          <td>(</td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of dimensions of an array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is the output that contains the number of dims of <code>arr</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="gaefe2e343a74a84bd43b588218ecc09a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaefe2e343a74a84bd43b588218ecc09a3">&#9670;&nbsp;</a></span>af_get_scalar()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_get_scalar </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>output_value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get first element from an array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">output_value</td><td>is the element requested </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
<a id="ga0dda6898e1c0d9a43efb56cd6a988c9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0dda6898e1c0d9a43efb56cd6a988c9b">&#9670;&nbsp;</a></span>af_get_type()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_get_type </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> *&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the type of an array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">type</td><td>is the output that contains the type of <code>arr</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="gafae10fc1378b72404120572e21ff5d27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafae10fc1378b72404120572e21ff5d27">&#9670;&nbsp;</a></span>af_is_bool()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_bool </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is bool type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if arr is of <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a3734f496648357f310306becf43915b3">b8</a> type, otherwise false </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="ga184b5a5feb146f2a2a44fed36b35e435"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga184b5a5feb146f2a2a44fed36b35e435">&#9670;&nbsp;</a></span>af_is_column()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_column </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is a column vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if arr has dims [x 1 1 1], false otherwise </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="gacd8a5edf6467340d0b40341be9f677e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacd8a5edf6467340d0b40341be9f677e9">&#9670;&nbsp;</a></span>af_is_complex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_complex </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is complex type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if arr is of type <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a> or <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a>, otherwise false </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="gadb499641bfc02dfa56a75be9ba237e3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadb499641bfc02dfa56a75be9ba237e3f">&#9670;&nbsp;</a></span>af_is_double()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_double </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is double precision type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if arr is of type <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962">f64</a> or <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a>, otherwise false </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="ga19c749e95314e1c77d816ad9952fb680"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga19c749e95314e1c77d816ad9952fb680">&#9670;&nbsp;</a></span>af_is_empty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_empty </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is empty. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if elements of arr is 0, otherwise false </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="ga5eb0d277412a2beeffe7e7a9f89b98ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5eb0d277412a2beeffe7e7a9f89b98ea">&#9670;&nbsp;</a></span>af_is_floating()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_floating </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is floating precision type. </p>
<p>This is a combination of <a class="el" href="group__c__api__mat.htm#ga6f2b3e689d07f5135dfc1ee6cf9825a3">af_is_realfloating</a> and <a class="el" href="group__c__api__mat.htm#gacd8a5edf6467340d0b40341be9f677e9">af_is_complex</a></p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if arr is of type <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5af4512c88801326ab48816bf6ece20d67">f16</a> <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962">f64</a>, <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a> or <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a>, otherwise false </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="ga247a830d52f1cb2450369af3d8d8f2f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga247a830d52f1cb2450369af3d8d8f2f1">&#9670;&nbsp;</a></span>af_is_half()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_half </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is 16 bit floating point type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if arr is of type <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5af4512c88801326ab48816bf6ece20d67">f16</a> otherwise false </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="ga768e8326a6aaa81c6543949afc781af2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga768e8326a6aaa81c6543949afc781af2">&#9670;&nbsp;</a></span>af_is_integer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_integer </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is integer type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if arr is of integer types, otherwise false </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="gafaa0c1597ef34a7320ed589f80fdce10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafaa0c1597ef34a7320ed589f80fdce10">&#9670;&nbsp;</a></span>af_is_real()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_real </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is real type. </p>
<p>This is mutually exclusive to <a class="el" href="group__c__api__mat.htm#gacd8a5edf6467340d0b40341be9f677e9">af_is_complex</a></p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if arr is NOT <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a> or <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a>, otherwise false </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="ga6f2b3e689d07f5135dfc1ee6cf9825a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6f2b3e689d07f5135dfc1ee6cf9825a3">&#9670;&nbsp;</a></span>af_is_realfloating()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_realfloating </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is real floating point type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if arr is of type <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a> or <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962">f64</a>, otherwise false </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="gabbe3249a355293daabd5907d7df67c6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabbe3249a355293daabd5907d7df67c6a">&#9670;&nbsp;</a></span>af_is_row()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_row </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is row vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if arr has dims [1 x 1 1], false otherwise </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="gae3dfa6dc1c03c5efe7482bfc9c41266a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae3dfa6dc1c03c5efe7482bfc9c41266a">&#9670;&nbsp;</a></span>af_is_scalar()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_scalar </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is scalar, ie. </p>
<p>single element.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if elements of arr is 1, otherwise false </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="ga1bd444b2c78a4f4731d4523a90200175"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1bd444b2c78a4f4731d4523a90200175">&#9670;&nbsp;</a></span>af_is_single()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_single </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is single precision type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if arr is of type <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a> or <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a>, otherwise false </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="gac96d3ca37a435874de22a76838a8cf54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac96d3ca37a435874de22a76838a8cf54">&#9670;&nbsp;</a></span>af_is_sparse()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_sparse </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is sparse. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if arr is sparse, otherwise false </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="ga00a23c7dd281fdcdec10b8395e611154"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga00a23c7dd281fdcdec10b8395e611154">&#9670;&nbsp;</a></span>af_is_vector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_is_vector </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if an array is a vector. </p>
<p>A vector is any array that has exactly 1 dimension not equal to 1.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>is true if arr is a vector, false otherwise </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arr</td><td>is the input array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error codes </dd></dl>

</div>
</div>
<a id="gad6c58648ed0db398e170dabf045e8309"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad6c58648ed0db398e170dabf045e8309">&#9670;&nbsp;</a></span>af_release_array()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_release_array </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reduce the reference count of the <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>. </p>
<dl class="section note"><dt>Note</dt><dd>Zero initialized af_arrays can be accepted after version 3.7 </dd></dl>

</div>
</div>
<a id="ga7ed45b3f881c0f6c80c5cf2af886dbab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7ed45b3f881c0f6c80c5cf2af886dbab">&#9670;&nbsp;</a></span>af_retain_array()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_retain_array </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Increments an <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> reference count. </p>

</div>
</div>
<a id="ga869f5e9331e9e010345de2589add7bae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga869f5e9331e9e010345de2589add7bae">&#9670;&nbsp;</a></span>af_set_manual_eval_flag()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_set_manual_eval_flag </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Turn the manual eval flag on or off. </p>

</div>
</div>
<a id="gafef13633d184acc726ad9daca7a7bc99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafef13633d184acc726ad9daca7a7bc99">&#9670;&nbsp;</a></span>af_write_array()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_write_array </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>arr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t&#160;</td>
          <td class="paramname"><em>bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af_source</a>&#160;</td>
          <td class="paramname"><em>src</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy data from a C pointer (host/device) to an existing array. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
