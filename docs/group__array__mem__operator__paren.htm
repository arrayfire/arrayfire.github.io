<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: operator()</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__array__mem__operator__paren.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">operator()<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__array__mat.htm">Functions to create and modify Arrays</a> &raquo; <a class="el" href="group__index__mat.htm">Assignment &amp; Indexing operation on arrays</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Gets a reference to a set of elements.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga9fe5da06c007e62ef0f1a9f37e4f5d8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__paren.htm#ga9fe5da06c007e62ef0f1a9f37e4f5d8a">operator()</a> (const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s0)</td></tr>
<tr class="memdesc:ga9fe5da06c007e62ef0f1a9f37e4f5d8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">This operator returns a reference of the original array at a given coordinate.  <a href="group__array__mem__operator__paren.htm#ga9fe5da06c007e62ef0f1a9f37e4f5d8a">More...</a><br /></td></tr>
<tr class="separator:ga9fe5da06c007e62ef0f1a9f37e4f5d8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad339fd330407473c07631cb73c1068ea"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__paren.htm#gad339fd330407473c07631cb73c1068ea">operator()</a> (const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s0) const</td></tr>
<tr class="memdesc:gad339fd330407473c07631cb73c1068ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">This operator returns a reference of the original array at a given coordinate.  <a href="group__array__mem__operator__paren.htm#gad339fd330407473c07631cb73c1068ea">More...</a><br /></td></tr>
<tr class="separator:gad339fd330407473c07631cb73c1068ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad94516ed0fbbf6c7aad0bdee90d1de29"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__paren.htm#gad94516ed0fbbf6c7aad0bdee90d1de29">operator()</a> (const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s0, const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s1, const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s2=<a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>, const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s3=<a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>)</td></tr>
<tr class="memdesc:gad94516ed0fbbf6c7aad0bdee90d1de29"><td class="mdescLeft">&#160;</td><td class="mdescRight">This operator returns a reference of the original array at a given coordinate.  <a href="group__array__mem__operator__paren.htm#gad94516ed0fbbf6c7aad0bdee90d1de29">More...</a><br /></td></tr>
<tr class="separator:gad94516ed0fbbf6c7aad0bdee90d1de29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac05aef47c7537b2e9d00ad568e26c457"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__array__mem__operator__paren.htm#gac05aef47c7537b2e9d00ad568e26c457">operator()</a> (const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s0, const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s1, const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s2=<a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>, const <a class="el" href="classaf_1_1index.htm">index</a> &amp;s3=<a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>) const</td></tr>
<tr class="memdesc:gac05aef47c7537b2e9d00ad568e26c457"><td class="mdescLeft">&#160;</td><td class="mdescRight">This operator returns a reference of the original array at a given coordinate.  <a href="group__array__mem__operator__paren.htm#gac05aef47c7537b2e9d00ad568e26c457">More...</a><br /></td></tr>
<tr class="separator:gac05aef47c7537b2e9d00ad568e26c457"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Gets a reference to a set of elements. </p>
<div class="fragment"><div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> A = <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(seq(1, 9), 3, 3);</div>
<div class="line">    <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A);</div>
<div class="line">    <span class="comment">// 1.0000 4.0000 7.0000</span></div>
<div class="line">    <span class="comment">// 2.0000 5.0000 8.0000</span></div>
<div class="line">    <span class="comment">// 3.0000 6.0000 9.0000</span></div>
<div class="line"> </div>
<div class="line">    <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A(0));  <span class="comment">// first element</span></div>
<div class="line">    <span class="comment">// 1.0000</span></div>
<div class="line"> </div>
<div class="line">    <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A(0, 1));  <span class="comment">// first row, second column</span></div>
<div class="line">    <span class="comment">// 4.0000</span></div>
<div class="line"> </div>
<div class="line">    <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A(<a class="code" href="namespaceaf.htm#a923f02ce0a21b98935aaffd645f717e0">end</a>));  <span class="comment">// last element</span></div>
<div class="line">    <span class="comment">// 9.0000</span></div>
<div class="line"> </div>
<div class="line">    <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A(-1));  <span class="comment">// also last element</span></div>
<div class="line">    <span class="comment">// 9.0000</span></div>
<div class="line"> </div>
<div class="line">    <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A(<a class="code" href="namespaceaf.htm#a923f02ce0a21b98935aaffd645f717e0">end</a> - 1));  <span class="comment">// second-to-last element</span></div>
<div class="line">    <span class="comment">// 8.0000</span></div>
<div class="line"> </div>
<div class="line">    <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A(1, <a class="code" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>));  <span class="comment">// second row</span></div>
<div class="line">    <span class="comment">// 2.0000     5.0000     8.0000</span></div>
<div class="line"> </div>
<div class="line">    <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A.row(<a class="code" href="namespaceaf.htm#a923f02ce0a21b98935aaffd645f717e0">end</a>));  <span class="comment">// last row</span></div>
<div class="line">    <span class="comment">// 3.0000     6.0000     9.0000</span></div>
<div class="line"> </div>
<div class="line">    <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(A.cols(1, <a class="code" href="namespaceaf.htm#a923f02ce0a21b98935aaffd645f717e0">end</a>));  <span class="comment">// all but first column</span></div>
<div class="line">    <span class="comment">// 4.0000     7.0000</span></div>
<div class="line">    <span class="comment">// 5.0000     8.0000</span></div>
<div class="line">    <span class="comment">// 6.0000     9.0000</span></div>
<div class="line"> </div>
<div class="line">    <span class="keywordtype">float</span> b_host[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};</div>
<div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> b(10, 1, b_host);</div>
<div class="line">    <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(b(seq(3)));</div>
<div class="line">    <span class="comment">// 0.0000</span></div>
<div class="line">    <span class="comment">// 1.0000</span></div>
<div class="line">    <span class="comment">// 2.0000</span></div>
<div class="line"> </div>
<div class="line">    <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(b(seq(1, 7)));</div>
<div class="line">    <span class="comment">// 1.0000</span></div>
<div class="line">    <span class="comment">// 2.0000</span></div>
<div class="line">    <span class="comment">// 3.0000</span></div>
<div class="line">    <span class="comment">// 4.0000</span></div>
<div class="line">    <span class="comment">// 5.0000</span></div>
<div class="line">    <span class="comment">// 6.0000</span></div>
<div class="line">    <span class="comment">// 7.0000</span></div>
<div class="line"> </div>
<div class="line">    <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(b(seq(1, 7, 2)));</div>
<div class="line">    <span class="comment">// 1.0000</span></div>
<div class="line">    <span class="comment">// 3.0000</span></div>
<div class="line">    <span class="comment">// 5.0000</span></div>
<div class="line">    <span class="comment">// 7.0000</span></div>
<div class="line"> </div>
<div class="line">    <a class="code" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(b(seq(0, <a class="code" href="namespaceaf.htm#a923f02ce0a21b98935aaffd645f717e0">end</a>, 2)));</div>
<div class="line">    <span class="comment">// 0.0000</span></div>
<div class="line">    <span class="comment">// 2.0000</span></div>
<div class="line">    <span class="comment">// 4.0000</span></div>
<div class="line">    <span class="comment">// 6.0000</span></div>
<div class="line">    <span class="comment">// 8.0000</span></div>
</div><!-- fragment --><p> This operator returns a reference of the original array at a given coordinate. You can pass <a class="el" href="classaf_1_1seq.htm">af::seq</a>, <a class="el" href="classaf_1_1array.htm">af::array</a>, or an int as it's parameters. These references can be used for assignment or returning references to <a class="el" href="classaf_1_1array.htm">af::array</a> objects.</p>
<hr  />
 <h2 class="groupheader">Function Documentation</h2>
<a id="ga9fe5da06c007e62ef0f1a9f37e4f5d8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9fe5da06c007e62ef0f1a9f37e4f5d8a">&#9670;&nbsp;</a></span>operator()() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1index.htm">index</a> &amp;&#160;</td>
          <td class="paramname"><em>s0</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This operator returns a reference of the original array at a given coordinate. </p>
<p>You can pass <a class="el" href="classaf_1_1seq.htm">af::seq</a>, <a class="el" href="classaf_1_1array.htm">af::array</a>, or an int as its parameters. These references can be used for assignment or returning references to <a class="el" href="classaf_1_1array.htm">af::array</a> objects.</p>
<p>If the <a class="el" href="classaf_1_1array.htm">af::array</a> is a multi-dimensional array then this coordinate will treated as the data as a linear array.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s0</td><td>is sequence of linear indices</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to the array at the given index </dd></dl>

</div>
</div>
<a id="gad339fd330407473c07631cb73c1068ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad339fd330407473c07631cb73c1068ea">&#9670;&nbsp;</a></span>operator()() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1index.htm">index</a> &amp;&#160;</td>
          <td class="paramname"><em>s0</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This operator returns a reference of the original array at a given coordinate. </p>
<p>You can pass <a class="el" href="classaf_1_1seq.htm">af::seq</a>, <a class="el" href="classaf_1_1array.htm">af::array</a>, or an int as its parameters. These references can be used for assignment or returning references to <a class="el" href="classaf_1_1array.htm">af::array</a> objects.</p>
<p>If the <a class="el" href="classaf_1_1array.htm">af::array</a> is a multi-dimensional array then this coordinate will treated as the data as a linear array.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s0</td><td>is sequence of linear indices</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to the array at the given index </dd></dl>

</div>
</div>
<a id="gad94516ed0fbbf6c7aad0bdee90d1de29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad94516ed0fbbf6c7aad0bdee90d1de29">&#9670;&nbsp;</a></span>operator()() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1index.htm">index</a> &amp;&#160;</td>
          <td class="paramname"><em>s0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1index.htm">index</a> &amp;&#160;</td>
          <td class="paramname"><em>s1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1index.htm">index</a> &amp;&#160;</td>
          <td class="paramname"><em>s2</em> = <code><a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1index.htm">index</a> &amp;&#160;</td>
          <td class="paramname"><em>s3</em> = <code><a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This operator returns a reference of the original array at a given coordinate. </p>
<p>You can pass <a class="el" href="classaf_1_1seq.htm">af::seq</a>, <a class="el" href="classaf_1_1array.htm">af::array</a>, or an int as it's parameters. These references can be used for assignment or returning references to <a class="el" href="classaf_1_1array.htm">af::array</a> objects.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s0</td><td>is sequence of indices along the first dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s1</td><td>is sequence of indices along the second dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s2</td><td>is sequence of indices along the third dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s3</td><td>is sequence of indices along the fourth dimension</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to the array at the given index </dd></dl>

</div>
</div>
<a id="gac05aef47c7537b2e9d00ad568e26c457"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac05aef47c7537b2e9d00ad568e26c457">&#9670;&nbsp;</a></span>operator()() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1index.htm">index</a> &amp;&#160;</td>
          <td class="paramname"><em>s0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1index.htm">index</a> &amp;&#160;</td>
          <td class="paramname"><em>s1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1index.htm">index</a> &amp;&#160;</td>
          <td class="paramname"><em>s2</em> = <code><a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1index.htm">index</a> &amp;&#160;</td>
          <td class="paramname"><em>s3</em> = <code><a class="el" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This operator returns a reference of the original array at a given coordinate. </p>
<p>You can pass <a class="el" href="classaf_1_1seq.htm">af::seq</a>, <a class="el" href="classaf_1_1array.htm">af::array</a>, or an int as it's parameters. These references can be used for assignment or returning references to <a class="el" href="classaf_1_1array.htm">af::array</a> objects.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s0</td><td>is sequence of indices along the first dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s1</td><td>is sequence of indices along the second dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s2</td><td>is sequence of indices along the third dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s3</td><td>is sequence of indices along the fourth dimension</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to the array at the given index </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="autil_8h_htm_a6de8e7f9eb3914d1cea66e55e7b791d3"><div class="ttname"><a href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a></div><div class="ttdeci">#define af_print(...)</div><div class="ttdef"><b>Definition:</b> <a href="util_8h_source.htm#l00149">util.h:148</a></div></div>
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
<div class="ttc" id="anamespaceaf_htm_af5c1188f38105afaf8b3f383492a1c9f"><div class="ttname"><a href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">af::span</a></div><div class="ttdeci">AFAPI seq span</div><div class="ttdoc">A special value representing the entire axis of an af::array.</div></div>
<div class="ttc" id="anamespaceaf_htm_a923f02ce0a21b98935aaffd645f717e0"><div class="ttname"><a href="namespaceaf.htm#a923f02ce0a21b98935aaffd645f717e0">af::end</a></div><div class="ttdeci">AFAPI int end</div><div class="ttdoc">A special value representing the last value of an axis.</div></div>
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
