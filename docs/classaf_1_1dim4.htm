<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: dim4 Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classaf_1_1dim4.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">dim4 Class Reference<div class="ingroups"><a class="el" href="group__arrayfire__class.htm">ArrayFire Classes</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Generic object that represents size and shape.  
 <a href="classaf_1_1dim4.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="dim4_8hpp_source.htm">dim4.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ada5f9aa682b1081b22063de01b87fd0d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#ada5f9aa682b1081b22063de01b87fd0d">dim4</a> ()</td></tr>
<tr class="memdesc:ada5f9aa682b1081b22063de01b87fd0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor. Creates an invalid <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> object.  <a href="#ada5f9aa682b1081b22063de01b87fd0d">More...</a><br /></td></tr>
<tr class="separator:ada5f9aa682b1081b22063de01b87fd0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59a02ef75002a49157e94b1e4a293cac"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#a59a02ef75002a49157e94b1e4a293cac">dim4</a> (<a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> first, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> second=1, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> third=1, <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> fourth=1)</td></tr>
<tr class="memdesc:a59a02ef75002a49157e94b1e4a293cac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an new <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> given a set of dimension.  <a href="#a59a02ef75002a49157e94b1e4a293cac">More...</a><br /></td></tr>
<tr class="separator:a59a02ef75002a49157e94b1e4a293cac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39a2496160adc3278cdd8e42c6b9441a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#a39a2496160adc3278cdd8e42c6b9441a">dim4</a> (const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;other)</td></tr>
<tr class="memdesc:a39a2496160adc3278cdd8e42c6b9441a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="#a39a2496160adc3278cdd8e42c6b9441a">More...</a><br /></td></tr>
<tr class="separator:a39a2496160adc3278cdd8e42c6b9441a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e6a520a719614458fbfac22bf5a5859"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#a0e6a520a719614458fbfac22bf5a5859">dim4</a> (const unsigned <a class="el" href="classaf_1_1dim4.htm#a4fd9beb19aa35a30f19811786e99d426">ndims</a>, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const <a class="el" href="classaf_1_1dim4.htm#a5893a5aaf803937c81622366906c920e">dims</a>)</td></tr>
<tr class="memdesc:a0e6a520a719614458fbfac22bf5a5859"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> object from a C array of dim_t objects.  <a href="#a0e6a520a719614458fbfac22bf5a5859">More...</a><br /></td></tr>
<tr class="separator:a0e6a520a719614458fbfac22bf5a5859"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46bb9bbedc1152c064785294cb5070b7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#a46bb9bbedc1152c064785294cb5070b7">elements</a> ()</td></tr>
<tr class="memdesc:a46bb9bbedc1152c064785294cb5070b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements represented by this <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a>.  <a href="#a46bb9bbedc1152c064785294cb5070b7">More...</a><br /></td></tr>
<tr class="separator:a46bb9bbedc1152c064785294cb5070b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89f91cdf327a8b304589916db5bde3c2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#a89f91cdf327a8b304589916db5bde3c2">elements</a> () const</td></tr>
<tr class="memdesc:a89f91cdf327a8b304589916db5bde3c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements represented by this <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a>.  <a href="#a89f91cdf327a8b304589916db5bde3c2">More...</a><br /></td></tr>
<tr class="separator:a89f91cdf327a8b304589916db5bde3c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fd9beb19aa35a30f19811786e99d426"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#a4fd9beb19aa35a30f19811786e99d426">ndims</a> ()</td></tr>
<tr class="memdesc:a4fd9beb19aa35a30f19811786e99d426"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of axis whose values are greater than one.  <a href="#a4fd9beb19aa35a30f19811786e99d426">More...</a><br /></td></tr>
<tr class="separator:a4fd9beb19aa35a30f19811786e99d426"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b93d188681e312cd38e34c4583f6f04"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#a9b93d188681e312cd38e34c4583f6f04">ndims</a> () const</td></tr>
<tr class="memdesc:a9b93d188681e312cd38e34c4583f6f04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of axis whose values are greater than one.  <a href="#a9b93d188681e312cd38e34c4583f6f04">More...</a><br /></td></tr>
<tr class="separator:a9b93d188681e312cd38e34c4583f6f04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b7b53d0c9e39ca0dac903ae3bbd4392"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#a8b7b53d0c9e39ca0dac903ae3bbd4392">operator==</a> (const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;other) const</td></tr>
<tr class="memdesc:a8b7b53d0c9e39ca0dac903ae3bbd4392"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the two <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> represent the same shape.  <a href="#a8b7b53d0c9e39ca0dac903ae3bbd4392">More...</a><br /></td></tr>
<tr class="separator:a8b7b53d0c9e39ca0dac903ae3bbd4392"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a535940a4c59cecfbf219ef29a82fb61a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#a535940a4c59cecfbf219ef29a82fb61a">operator!=</a> (const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;other) const</td></tr>
<tr class="memdesc:a535940a4c59cecfbf219ef29a82fb61a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if two dim4s store different values.  <a href="#a535940a4c59cecfbf219ef29a82fb61a">More...</a><br /></td></tr>
<tr class="separator:a535940a4c59cecfbf219ef29a82fb61a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bcc6ebc135961faf84a58486284bf16"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#a0bcc6ebc135961faf84a58486284bf16">operator*=</a> (const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;other)</td></tr>
<tr class="memdesc:a0bcc6ebc135961faf84a58486284bf16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Element-wise multiplication of the <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> objects.  <a href="#a0bcc6ebc135961faf84a58486284bf16">More...</a><br /></td></tr>
<tr class="separator:a0bcc6ebc135961faf84a58486284bf16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7339bca453bd9c33c7a70622c67365d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#ae7339bca453bd9c33c7a70622c67365d">operator+=</a> (const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;other)</td></tr>
<tr class="memdesc:ae7339bca453bd9c33c7a70622c67365d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Element-wise addition of the <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> objects.  <a href="#ae7339bca453bd9c33c7a70622c67365d">More...</a><br /></td></tr>
<tr class="separator:ae7339bca453bd9c33c7a70622c67365d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbe8c9876223194ea5cae9580957f760"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#afbe8c9876223194ea5cae9580957f760">operator-=</a> (const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;other)</td></tr>
<tr class="memdesc:afbe8c9876223194ea5cae9580957f760"><td class="mdescLeft">&#160;</td><td class="mdescRight">Element-wise subtraction of the <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> objects.  <a href="#afbe8c9876223194ea5cae9580957f760">More...</a><br /></td></tr>
<tr class="separator:afbe8c9876223194ea5cae9580957f760"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2bc79e5bd7c5ba8523e9fe017015bca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#af2bc79e5bd7c5ba8523e9fe017015bca">operator[]</a> (const unsigned dim)</td></tr>
<tr class="memdesc:af2bc79e5bd7c5ba8523e9fe017015bca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the reference to the element at a give index.  <a href="#af2bc79e5bd7c5ba8523e9fe017015bca">More...</a><br /></td></tr>
<tr class="separator:af2bc79e5bd7c5ba8523e9fe017015bca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f7192f60ba1f0c6447f6bac6fe838fd"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#a2f7192f60ba1f0c6447f6bac6fe838fd">operator[]</a> (const unsigned dim) const</td></tr>
<tr class="memdesc:a2f7192f60ba1f0c6447f6bac6fe838fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the reference to the element at a give index.  <a href="#a2f7192f60ba1f0c6447f6bac6fe838fd">More...</a><br /></td></tr>
<tr class="separator:a2f7192f60ba1f0c6447f6bac6fe838fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfe9236f37131e50c17bfb81654c9efc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#acfe9236f37131e50c17bfb81654c9efc">get</a> ()</td></tr>
<tr class="memdesc:acfe9236f37131e50c17bfb81654c9efc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the underlying pointer to the <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> object.  <a href="#acfe9236f37131e50c17bfb81654c9efc">More...</a><br /></td></tr>
<tr class="separator:acfe9236f37131e50c17bfb81654c9efc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e9f81ea42436aadce68fe3f835cb49b"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#a7e9f81ea42436aadce68fe3f835cb49b">get</a> () const</td></tr>
<tr class="memdesc:a7e9f81ea42436aadce68fe3f835cb49b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the underlying pointer to the <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> object.  <a href="#a7e9f81ea42436aadce68fe3f835cb49b">More...</a><br /></td></tr>
<tr class="separator:a7e9f81ea42436aadce68fe3f835cb49b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a5893a5aaf803937c81622366906c920e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1dim4.htm#a5893a5aaf803937c81622366906c920e">dims</a> [4]</td></tr>
<tr class="separator:a5893a5aaf803937c81622366906c920e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Generic object that represents size and shape. </p>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="computer_vision_2matching_8cpp-example.htm#_a6">computer_vision/matching.cpp</a>, <a class="el" href="financial_2black_scholes_options_8cpp-example.htm#_a10">financial/black_scholes_options.cpp</a>, <a class="el" href="graphics_2fractal_8cpp-example.htm#_a3">graphics/fractal.cpp</a>, <a class="el" href="graphics_2gravity_sim_8cpp-example.htm#_a4">graphics/gravity_sim.cpp</a>, <a class="el" href="graphics_2surface_8cpp-example.htm#_a4">graphics/surface.cpp</a>, <a class="el" href="helloworld_2helloworld_8cpp-example.htm#_a11">helloworld/helloworld.cpp</a>, <a class="el" href="image_processing_2brain_segmentation_8cpp-example.htm#_a2">image_processing/brain_segmentation.cpp</a>, <a class="el" href="image_processing_2morphing_8cpp-example.htm#_a4">image_processing/morphing.cpp</a>, <a class="el" href="image_processing_2optical_flow_8cpp-example.htm#_a2">image_processing/optical_flow.cpp</a>, <a class="el" href="machine_learning_2geneticalgorithm_8cpp-example.htm#_a11">machine_learning/geneticalgorithm.cpp</a>, <a class="el" href="machine_learning_2rbm_8cpp-example.htm#_a18">machine_learning/rbm.cpp</a>, <a class="el" href="pde_2swe_8cpp-example.htm#_a7">pde/swe.cpp</a>, and <a class="el" href="unified_2basic_8cpp-example.htm#_a1">unified/basic.cpp</a>.</dd>
</dl>
<p class="definition">Definition at line <a class="el" href="dim4_8hpp_source.htm#l00025">25</a> of file <a class="el" href="dim4_8hpp_source.htm">dim4.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ada5f9aa682b1081b22063de01b87fd0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada5f9aa682b1081b22063de01b87fd0d">&#9670;&nbsp;</a></span>dim4() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1dim4.htm">dim4</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. Creates an invalid <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> object. </p>

</div>
</div>
<a id="a59a02ef75002a49157e94b1e4a293cac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59a02ef75002a49157e94b1e4a293cac">&#9670;&nbsp;</a></span>dim4() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1dim4.htm">dim4</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>first</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>second</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>third</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>fourth</em> = <code>1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates an new <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> given a set of dimension. </p>

</div>
</div>
<a id="a39a2496160adc3278cdd8e42c6b9441a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39a2496160adc3278cdd8e42c6b9441a">&#9670;&nbsp;</a></span>dim4() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1dim4.htm">dim4</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">other</td><td>The <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> that will be copied </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a0e6a520a719614458fbfac22bf5a5859"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e6a520a719614458fbfac22bf5a5859">&#9670;&nbsp;</a></span>dim4() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1dim4.htm">dim4</a> </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>ndims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const&#160;</td>
          <td class="paramname"><em>dims</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructs a <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> object from a C array of dim_t objects. </p>
<p>Creates a new <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> from a C array. If the C array is less than 4, all values past <code>ndims</code> will be assigned the value 1.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ndims</td><td>The number of elements in the C array. Must be less than 4 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dims</td><td>The values to assign to each element of <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a46bb9bbedc1152c064785294cb5070b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46bb9bbedc1152c064785294cb5070b7">&#9670;&nbsp;</a></span>elements() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> elements </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of elements represented by this <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a>. </p>

</div>
</div>
<a id="a89f91cdf327a8b304589916db5bde3c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89f91cdf327a8b304589916db5bde3c2">&#9670;&nbsp;</a></span>elements() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> elements </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of elements represented by this <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a>. </p>

</div>
</div>
<a id="acfe9236f37131e50c17bfb81654c9efc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acfe9236f37131e50c17bfb81654c9efc">&#9670;&nbsp;</a></span>get() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>* get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the underlying pointer to the <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> object. </p>

<p class="definition">Definition at line <a class="el" href="dim4_8hpp_source.htm#l00103">103</a> of file <a class="el" href="dim4_8hpp_source.htm">dim4.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="classaf_1_1dim4.htm#a5893a5aaf803937c81622366906c920e">dims</a>; }</div><div class="ttc" id="classaf_1_1dim4_htm_a5893a5aaf803937c81622366906c920e"><div class="ttname"><a href="classaf_1_1dim4.htm#a5893a5aaf803937c81622366906c920e">af::dim4::dims</a></div><div class="ttdeci">dim_t dims[4]</div><div class="ttdef"><b>Definition:</b> <a href="dim4_8hpp_source.htm#l00028">dim4.hpp:28</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7e9f81ea42436aadce68fe3f835cb49b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e9f81ea42436aadce68fe3f835cb49b">&#9670;&nbsp;</a></span>get() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>* get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the underlying pointer to the <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> object. </p>

<p class="definition">Definition at line <a class="el" href="dim4_8hpp_source.htm#l00106">106</a> of file <a class="el" href="dim4_8hpp_source.htm">dim4.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="classaf_1_1dim4.htm#a5893a5aaf803937c81622366906c920e">dims</a>; }</div><div class="ttc" id="classaf_1_1dim4_htm_a5893a5aaf803937c81622366906c920e"><div class="ttname"><a href="classaf_1_1dim4.htm#a5893a5aaf803937c81622366906c920e">af::dim4::dims</a></div><div class="ttdeci">dim_t dims[4]</div><div class="ttdef"><b>Definition:</b> <a href="dim4_8hpp_source.htm#l00028">dim4.hpp:28</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4fd9beb19aa35a30f19811786e99d426"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fd9beb19aa35a30f19811786e99d426">&#9670;&nbsp;</a></span>ndims() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> ndims </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of axis whose values are greater than one. </p>

</div>
</div>
<a id="a9b93d188681e312cd38e34c4583f6f04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b93d188681e312cd38e34c4583f6f04">&#9670;&nbsp;</a></span>ndims() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> ndims </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of axis whose values are greater than one. </p>

</div>
</div>
<a id="a535940a4c59cecfbf219ef29a82fb61a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a535940a4c59cecfbf219ef29a82fb61a">&#9670;&nbsp;</a></span>operator!=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if two dim4s store different values. </p>

</div>
</div>
<a id="a0bcc6ebc135961faf84a58486284bf16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bcc6ebc135961faf84a58486284bf16">&#9670;&nbsp;</a></span>operator*=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1dim4.htm">dim4</a>&amp; operator*= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Element-wise multiplication of the <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> objects. </p>

</div>
</div>
<a id="ae7339bca453bd9c33c7a70622c67365d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7339bca453bd9c33c7a70622c67365d">&#9670;&nbsp;</a></span>operator+=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1dim4.htm">dim4</a>&amp; operator+= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Element-wise addition of the <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> objects. </p>

</div>
</div>
<a id="afbe8c9876223194ea5cae9580957f760"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbe8c9876223194ea5cae9580957f760">&#9670;&nbsp;</a></span>operator-=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1dim4.htm">dim4</a>&amp; operator-= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Element-wise subtraction of the <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> objects. </p>

</div>
</div>
<a id="a8b7b53d0c9e39ca0dac903ae3bbd4392"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b7b53d0c9e39ca0dac903ae3bbd4392">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if the two <a class="el" href="classaf_1_1dim4.htm" title="Generic object that represents size and shape. ">dim4</a> represent the same shape. </p>

</div>
</div>
<a id="af2bc79e5bd7c5ba8523e9fe017015bca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2bc79e5bd7c5ba8523e9fe017015bca">&#9670;&nbsp;</a></span>operator[]() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&amp; operator[] </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>dim</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the reference to the element at a give index. </p>
<p>(Must be less than 4) </p>

</div>
</div>
<a id="a2f7192f60ba1f0c6447f6bac6fe838fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f7192f60ba1f0c6447f6bac6fe838fd">&#9670;&nbsp;</a></span>operator[]() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&amp; operator[] </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>dim</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the reference to the element at a give index. </p>
<p>(Must be less than 4) </p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a5893a5aaf803937c81622366906c920e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5893a5aaf803937c81622366906c920e">&#9670;&nbsp;</a></span>dims</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dims[4]</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="machine_learning_2rbm_8cpp-example.htm#a19">machine_learning/rbm.cpp</a>.</dd>
</dl>
<p class="definition">Definition at line <a class="el" href="dim4_8hpp_source.htm#l00028">28</a> of file <a class="el" href="dim4_8hpp_source.htm">dim4.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="dim4_8hpp_source.htm">dim4.hpp (2020-10-27 00:11:00 -0400, (build d99887ae))</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
