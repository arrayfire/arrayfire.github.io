<!-- HTML header for doxygen 1.9.3-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.3"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: convolve (Separable)</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
  <!--<td id="projectalign">
   <div id="projectname">ArrayFire<span id="projectnumber">&#160;3.8.1</span>
   </div>
   <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>-->
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.3 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__signal__func__convolve__sep.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">convolve (Separable)<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__signal__mat.htm">Signal Processing</a> &raquo; <a class="el" href="group__convolve__mat.htm">Convolutions</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Separable Convolution.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gae5e9f278ff9b46229184ca2adc144ece"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve__sep.htm#gae5e9f278ff9b46229184ca2adc144ece">convolve</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;col_filter, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;row_filter, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;signal, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">convMode</a> mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>)</td></tr>
<tr class="memdesc:gae5e9f278ff9b46229184ca2adc144ece"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for separable convolution on two dimensional signals.  <a href="group__signal__func__convolve__sep.htm#gae5e9f278ff9b46229184ca2adc144ece">More...</a><br /></td></tr>
<tr class="separator:gae5e9f278ff9b46229184ca2adc144ece"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeb6ba88155cf3ef29d93f97b147e372f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve__sep.htm#gaeb6ba88155cf3ef29d93f97b147e372f">af_convolve2_sep</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> col_filter, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> row_filter, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode)</td></tr>
<tr class="memdesc:gaeb6ba88155cf3ef29d93f97b147e372f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for separable convolution on two dimensional signals.  <a href="group__signal__func__convolve__sep.htm#gaeb6ba88155cf3ef29d93f97b147e372f">More...</a><br /></td></tr>
<tr class="separator:gaeb6ba88155cf3ef29d93f97b147e372f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Separable Convolution. </p>
<p >Separable Convolution is faster equivalent of the canonical 2D convolution with an additional prerequisite that the filter/kernel can be decomposed into two separate spatial vectors. A classic example of such separable kernels is sobel operator. Given below is decomposition of vertical gradient of sobel operator.</p>
<p >\( \begin{bmatrix} -1 &amp; 0 &amp; +1 \\ -2 &amp; 0 &amp; +2 \\ -1 &amp; 0 &amp; +1 \\ \end{bmatrix} \)</p>
<p >can be decomposed into two vectors shown below.</p>
<p >\( \begin{bmatrix} 1 \\ 2 \\ 1 \\ \end{bmatrix} \)</p>
<p >\( \begin{bmatrix} -1 &amp; 0 &amp; +1 \\ \end{bmatrix} \) </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="gaeb6ba88155cf3ef29d93f97b147e372f" name="gaeb6ba88155cf3ef29d93f97b147e372f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaeb6ba88155cf3ef29d93f97b147e372f">&#9670;&nbsp;</a></span>af_convolve2_sep()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_convolve2_sep </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>col_filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>row_filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>signal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a>&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for separable convolution on two dimensional signals. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>is convolved array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">col_filter</td><td>is filter that has to be applied along the coloumns </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">row_filter</td><td>is filter that has to be applied along the rows </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">signal</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>indicates if the convolution should be expanded or not(where output size equals input) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the convolution is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Separable convolution only supports two(ONE-to-ONE and MANY-to-ONE) batch modes from the ones described in the detailed description section. </dd></dl>

</div>
</div>
<a id="gae5e9f278ff9b46229184ca2adc144ece" name="gae5e9f278ff9b46229184ca2adc144ece"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae5e9f278ff9b46229184ca2adc144ece">&#9670;&nbsp;</a></span>convolve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::convolve </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>col_filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>row_filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>signal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">convMode</a>&#160;</td>
          <td class="paramname"><em>mode</em> = <code><a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for separable convolution on two dimensional signals. </p>
<div class="fragment"><div class="line">    <span class="comment">// vector&lt;dim4&gt; numDims;</span></div>
<div class="line">    <span class="comment">// vector&lt;vector&lt;float&gt; &gt; in;</span></div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> signal(numDims[0], &amp;(in[0].front()));</div>
<div class="line">    <span class="comment">// signal dims = [3 4 2 1]</span></div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> cFilter(numDims[1], &amp;(in[1].front()));</div>
<div class="line">    <span class="comment">// coloumn filter dims = [2 1 1 1]</span></div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> rFilter(numDims[2], &amp;(in[2].front()));</div>
<div class="line">    <span class="comment">// row filter dims = [3 1 1 1]</span></div>
<div class="line"> </div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> output = <a class="code hl_function" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve</a>(cFilter, rFilter, signal, <a class="code hl_enumvalue" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>);</div>
<div class="line">    <span class="comment">// output signal dims = [3 4 2 1] - same as input since &#39;expand = false&#39;</span></div>
<div class="line">    <span class="comment">// notice that the input signal is 3d array, therefore</span></div>
<div class="line">    <span class="comment">// batch mode will be automatically activated.</span></div>
<div class="line">    <span class="comment">// output will be 3d array with result of each 2d array convolution(with</span></div>
<div class="line">    <span class="comment">// same filter) stacked along the 3rd dimension</span></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00037">array.h:37</a></div></div>
<div class="ttc" id="adefines_8h_htm_ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48"><div class="ttname"><a href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a></div><div class="ttdeci">@ AF_CONV_DEFAULT</div><div class="ttdoc">Output of the convolution is the same size as input.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00305">defines.h:305</a></div></div>
<div class="ttc" id="agroup__signal__func__convolve_htm_gae79b64c8b0d6a06309e8b67bf89cf6c9"><div class="ttname"><a href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">af::convolve</a></div><div class="ttdeci">AFAPI array convolve(const array &amp;signal, const array &amp;filter, const convMode mode=AF_CONV_DEFAULT, const convDomain domain=AF_CONV_AUTO)</div><div class="ttdoc">C++ Interface for convolution any(one through three) dimensional signals.</div></div>
</div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">signal</td><td>is the input signal </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">col_filter</td><td>is the signal that shall be along coloumns </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">row_filter</td><td>is the signal that shall be along rows </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>indicates if the convolution should be expanded or not(where output size equals input) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the convolved array</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The default parameter of <code>domain</code>, <a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dbae105d11695ba3a2287e32c552d3567dd">AF_CONV_AUTO</a>, heuristically switches between frequency and spatial domain.</dd>
<dd>
Separable convolution only supports two(ONE-to-ONE and MANY-to-ONE) batch modes from the ones described in the detailed description section. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Thu Feb 24 2022 14:12:33 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.3 </li>
    </ul>
</div>
</body>
</html>
