<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: complex</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__arith__func__cplx.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">complex<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__mathfunc__mat.htm">Mathematical functions</a> &raquo; <a class="el" href="group__complex__mat.htm">Complex operations</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Create complex arrays.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga57e8010d6228c7c0d087acb88c77765f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#ga57e8010d6228c7c0d087acb88c77765f">af_cplx</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga57e8010d6228c7c0d087acb88c77765f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface to create a complex array from a single real array.  <a href="group__arith__func__cplx.htm#ga57e8010d6228c7c0d087acb88c77765f">More...</a><br /></td></tr>
<tr class="separator:ga57e8010d6228c7c0d087acb88c77765f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8119672eaa835b8d5c39b9a30b28030b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#ga8119672eaa835b8d5c39b9a30b28030b">af_cplx2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> real, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> imag, const bool batch)</td></tr>
<tr class="memdesc:ga8119672eaa835b8d5c39b9a30b28030b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface to create a complex array from two real arrays.  <a href="group__arith__func__cplx.htm#ga8119672eaa835b8d5c39b9a30b28030b">More...</a><br /></td></tr>
<tr class="separator:ga8119672eaa835b8d5c39b9a30b28030b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga44ff7fc2e3e8ed0489fe78b5d724d0f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#ga44ff7fc2e3e8ed0489fe78b5d724d0f8">complex</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in)</td></tr>
<tr class="memdesc:ga44ff7fc2e3e8ed0489fe78b5d724d0f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface to create a complex array from a single real array.  <a href="group__arith__func__cplx.htm#ga44ff7fc2e3e8ed0489fe78b5d724d0f8">More...</a><br /></td></tr>
<tr class="separator:ga44ff7fc2e3e8ed0489fe78b5d724d0f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga26aae98c96aa6b8fbf7ad2052e12d0b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#ga26aae98c96aa6b8fbf7ad2052e12d0b4">complex</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;real_, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;imag_)</td></tr>
<tr class="memdesc:ga26aae98c96aa6b8fbf7ad2052e12d0b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface to create a complex array from two real arrays.  <a href="group__arith__func__cplx.htm#ga26aae98c96aa6b8fbf7ad2052e12d0b4">More...</a><br /></td></tr>
<tr class="separator:ga26aae98c96aa6b8fbf7ad2052e12d0b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d957c17ce3875722a10b626c9b0b2d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#ga1d957c17ce3875722a10b626c9b0b2d9">complex</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;real_, const double imag_)</td></tr>
<tr class="memdesc:ga1d957c17ce3875722a10b626c9b0b2d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface to create a complex array from a single real array for the real component and a single scalar for each imaginary component.  <a href="group__arith__func__cplx.htm#ga1d957c17ce3875722a10b626c9b0b2d9">More...</a><br /></td></tr>
<tr class="separator:ga1d957c17ce3875722a10b626c9b0b2d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae033ce031ad7732d15a0fe42245a6e0f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#gae033ce031ad7732d15a0fe42245a6e0f">complex</a> (const double real_, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;imag_)</td></tr>
<tr class="memdesc:gae033ce031ad7732d15a0fe42245a6e0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface to create a complex array from a single scalar for each real component and a single real array for the imaginary component.  <a href="group__arith__func__cplx.htm#gae033ce031ad7732d15a0fe42245a6e0f">More...</a><br /></td></tr>
<tr class="separator:gae033ce031ad7732d15a0fe42245a6e0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Create complex arrays. </p>
<p >Complex arrays are created from any of the following four inputs:</p>
<ol type="1">
<li>a single real array, returning zeros for the imaginary component. See <code>array b</code> in the example.</li>
<li>two real arrays, one for the real component and one for the imaginary component. See <code>array c</code> in the example.</li>
<li>a single real array for the real component and a single scalar for each imaginary component. See <code>array d</code> in the example.</li>
<li>a single scalar for each real component and a single real array for the imaginary component. See <code>array e</code> in the example.</li>
</ol>
<p ><b>Examples:</b></p>
<div class="fragment"><div class="line"> </div>
<div class="line">    <span class="comment">// Create a, a 2x3 array</span></div>
<div class="line">    array a = iota(dim4(2, 3));  <span class="comment">// a = [0, 2, 4,</span></div>
<div class="line">                                 <span class="comment">//      1, 3, 5]</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Create b from a single real array, returning zeros for the imaginary</span></div>
<div class="line">    <span class="comment">// component</span></div>
<div class="line">    array b = complex(a);  <span class="comment">// b = [(0, 0), (2, 0), (4, 0),</span></div>
<div class="line">                           <span class="comment">//      (1, 0), (3, 0), (5, 0)]</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Create c from two real arrays, one for the real component and one for the</span></div>
<div class="line">    <span class="comment">// imaginary component</span></div>
<div class="line">    array c = complex(a, a);  <span class="comment">// c = [(0, 0), (2, 2), (4, 4),</span></div>
<div class="line">                              <span class="comment">//      (1, 1), (3, 3), (5, 5)]</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Create d from a single real array for the real component and a single</span></div>
<div class="line">    <span class="comment">// scalar for each imaginary component</span></div>
<div class="line">    array d = complex(a, 2);  <span class="comment">// d = [(0, 2), (2, 2), (4, 2),</span></div>
<div class="line">                              <span class="comment">//      (1, 2), (3, 2), (5, 2)]</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Create e from a single scalar for each real component and a single real</span></div>
<div class="line">    <span class="comment">// array for the imaginary component</span></div>
<div class="line">    array e = complex(2, a);  <span class="comment">// e = [(2, 0), (2, 2), (2, 4),</span></div>
<div class="line">                              <span class="comment">//      (2, 1), (2, 3), (2, 5)]</span></div>
<div class="line"> </div>
</div><!-- fragment --> <h2 class="groupheader">Function Documentation</h2>
<a id="ga57e8010d6228c7c0d087acb88c77765f" name="ga57e8010d6228c7c0d087acb88c77765f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga57e8010d6228c7c0d087acb88c77765f">&#9670;&#160;</a></span>af_cplx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_cplx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface to create a complex array from a single real array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>complex array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>real array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>, if function returns successfully, else an <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> code is given </dd></dl>

</div>
</div>
<a id="ga8119672eaa835b8d5c39b9a30b28030b" name="ga8119672eaa835b8d5c39b9a30b28030b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8119672eaa835b8d5c39b9a30b28030b">&#9670;&#160;</a></span>af_cplx2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_cplx2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>real</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>imag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>batch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface to create a complex array from two real arrays. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>complex array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">real</td><td>real array to be assigned as the real component of the returned complex array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">imag</td><td>real array to be assigned as the imaginary component of the returned complex array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">batch</td><td>batch mode </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>, if function returns successfully, else an <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> code is given </dd></dl>

</div>
</div>
<a id="ga44ff7fc2e3e8ed0489fe78b5d724d0f8" name="ga44ff7fc2e3e8ed0489fe78b5d724d0f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga44ff7fc2e3e8ed0489fe78b5d724d0f8">&#9670;&#160;</a></span>complex() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> complex </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface to create a complex array from a single real array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>input array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>complex array </dd></dl>

</div>
</div>
<a id="ga26aae98c96aa6b8fbf7ad2052e12d0b4" name="ga26aae98c96aa6b8fbf7ad2052e12d0b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga26aae98c96aa6b8fbf7ad2052e12d0b4">&#9670;&#160;</a></span>complex() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> complex </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>real_</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>imag_</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface to create a complex array from two real arrays. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">real_</td><td>input array to be assigned as the real component of the returned complex array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">imag_</td><td>input array to be assigned as the imaginary component of the returned complex array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>complex array </dd></dl>

</div>
</div>
<a id="ga1d957c17ce3875722a10b626c9b0b2d9" name="ga1d957c17ce3875722a10b626c9b0b2d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d957c17ce3875722a10b626c9b0b2d9">&#9670;&#160;</a></span>complex() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> complex </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>real_</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>imag_</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface to create a complex array from a single real array for the real component and a single scalar for each imaginary component. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">real_</td><td>input array to be assigned as the real component of the returned complex array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">imag_</td><td>single scalar to be assigned as the imaginary component of each value of the returned complex array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>complex array </dd></dl>

</div>
</div>
<a id="gae033ce031ad7732d15a0fe42245a6e0f" name="gae033ce031ad7732d15a0fe42245a6e0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae033ce031ad7732d15a0fe42245a6e0f">&#9670;&#160;</a></span>complex() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> complex </td>
          <td>(</td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>real_</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>imag_</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface to create a complex array from a single scalar for each real component and a single real array for the imaginary component. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">real_</td><td>single scalar to be assigned as the real component of each value of the returned complex array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">imag_</td><td>input array to be assigned as the imaginary component of the returned complex array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>complex array </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Mon Sep 25 2023 12:35:29 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
