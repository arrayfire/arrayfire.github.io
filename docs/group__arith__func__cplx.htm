<!-- HTML header for doxygen 1.9.3-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.3"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: complex</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
  <!--<td id="projectalign">
   <div id="projectname">ArrayFire<span id="projectnumber">&#160;3.8.1</span>
   </div>
   <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>-->
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.3 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__arith__func__cplx.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">complex<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__mathfunc__mat.htm">Mathematical functions</a> &raquo; <a class="el" href="group__complex__mat.htm">Complex operations</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>create complex arrays  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga085ebaa30bcf7a192508fdb2b7b7fe65"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#ga085ebaa30bcf7a192508fdb2b7b7fe65">af_cplx2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> real, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> imaginary, const bool batch)</td></tr>
<tr class="memdesc:ga085ebaa30bcf7a192508fdb2b7b7fe65"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for creating complex array from two input arrays.  <a href="group__arith__func__cplx.htm#ga085ebaa30bcf7a192508fdb2b7b7fe65">More...</a><br /></td></tr>
<tr class="separator:ga085ebaa30bcf7a192508fdb2b7b7fe65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga57e8010d6228c7c0d087acb88c77765f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#ga57e8010d6228c7c0d087acb88c77765f">af_cplx</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga57e8010d6228c7c0d087acb88c77765f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for creating complex array from real array.  <a href="group__arith__func__cplx.htm#ga57e8010d6228c7c0d087acb88c77765f">More...</a><br /></td></tr>
<tr class="separator:ga57e8010d6228c7c0d087acb88c77765f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd05fd9c3318ac14b9d6e3262a01a214"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#gacd05fd9c3318ac14b9d6e3262a01a214">complex</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;<a class="el" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;imaginary)</td></tr>
<tr class="memdesc:gacd05fd9c3318ac14b9d6e3262a01a214"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for creating complex array from two inputs.  <a href="group__arith__func__cplx.htm#gacd05fd9c3318ac14b9d6e3262a01a214">More...</a><br /></td></tr>
<tr class="separator:gacd05fd9c3318ac14b9d6e3262a01a214"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga02ee7133345244b724708132dd8faf0e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#ga02ee7133345244b724708132dd8faf0e">complex</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;<a class="el" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, const double imaginary)</td></tr>
<tr class="memdesc:ga02ee7133345244b724708132dd8faf0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for creating complex array from two inputs.  <a href="group__arith__func__cplx.htm#ga02ee7133345244b724708132dd8faf0e">More...</a><br /></td></tr>
<tr class="separator:ga02ee7133345244b724708132dd8faf0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5cfcb4636b00839b6c5339abc775ce35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#ga5cfcb4636b00839b6c5339abc775ce35">complex</a> (const double <a class="el" href="group__arith__func__real.htm#ga09209f0d8ffd557608fef6bade1689c9">real</a>, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;imaginary)</td></tr>
<tr class="memdesc:ga5cfcb4636b00839b6c5339abc775ce35"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for creating complex array from two inputs.  <a href="group__arith__func__cplx.htm#ga5cfcb4636b00839b6c5339abc775ce35">More...</a><br /></td></tr>
<tr class="separator:ga5cfcb4636b00839b6c5339abc775ce35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac69d45e56deddd6c0f2edb1d77f0cb63"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__cplx.htm#gac69d45e56deddd6c0f2edb1d77f0cb63">complex</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in)</td></tr>
<tr class="memdesc:gac69d45e56deddd6c0f2edb1d77f0cb63"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for creating complex array from real array.  <a href="group__arith__func__cplx.htm#gac69d45e56deddd6c0f2edb1d77f0cb63">More...</a><br /></td></tr>
<tr class="separator:gac69d45e56deddd6c0f2edb1d77f0cb63"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >create complex arrays </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga57e8010d6228c7c0d087acb88c77765f" name="ga57e8010d6228c7c0d087acb88c77765f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga57e8010d6228c7c0d087acb88c77765f">&#9670;&nbsp;</a></span>af_cplx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_cplx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for creating complex array from real array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain complex array created from real input <code>in</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is real array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
<a id="ga085ebaa30bcf7a192508fdb2b7b7fe65" name="ga085ebaa30bcf7a192508fdb2b7b7fe65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga085ebaa30bcf7a192508fdb2b7b7fe65">&#9670;&nbsp;</a></span>af_cplx2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_cplx2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>real</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>imaginary</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>batch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for creating complex array from two input arrays. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the complex array generated from inputs </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">real</td><td>is real array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">imaginary</td><td>is imaginary array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">batch</td><td>specifies if operations need to be performed in batch mode </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
<a id="gac69d45e56deddd6c0f2edb1d77f0cb63" name="gac69d45e56deddd6c0f2edb1d77f0cb63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac69d45e56deddd6c0f2edb1d77f0cb63">&#9670;&nbsp;</a></span>complex() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::complex </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for creating complex array from real array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is real array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>complex array from <code>in</code> </dd></dl>

</div>
</div>
<a id="gacd05fd9c3318ac14b9d6e3262a01a214" name="gacd05fd9c3318ac14b9d6e3262a01a214"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacd05fd9c3318ac14b9d6e3262a01a214">&#9670;&nbsp;</a></span>complex() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::complex </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>real</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>imaginary</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for creating complex array from two inputs. </p>
<p >Creates a complex number from two sets of inputs. The left hand side is the real part and the right hand side is the imaginary part. This function accepts two <a class="el" href="classaf_1_1array.htm">af::array</a> or one <a class="el" href="classaf_1_1array.htm">af::array</a> and a scalar as nputs.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">real</td><td>is real value(s) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">imaginary</td><td>is imaginary value(s) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>complex array from inputs </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="graphics_2fractal_8cpp-example.htm#a3">graphics/fractal.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="ga02ee7133345244b724708132dd8faf0e" name="ga02ee7133345244b724708132dd8faf0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga02ee7133345244b724708132dd8faf0e">&#9670;&nbsp;</a></span>complex() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::complex </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>real</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>imaginary</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for creating complex array from two inputs. </p>
<p >Creates a complex number from two sets of inputs. The left hand side is the real part and the right hand side is the imaginary part. This function accepts two <a class="el" href="classaf_1_1array.htm">af::array</a> or one <a class="el" href="classaf_1_1array.htm">af::array</a> and a scalar as nputs.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">real</td><td>is real value(s) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">imaginary</td><td>is imaginary value(s) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>complex array from inputs </dd></dl>

</div>
</div>
<a id="ga5cfcb4636b00839b6c5339abc775ce35" name="ga5cfcb4636b00839b6c5339abc775ce35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5cfcb4636b00839b6c5339abc775ce35">&#9670;&nbsp;</a></span>complex() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::complex </td>
          <td>(</td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>real</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>imaginary</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for creating complex array from two inputs. </p>
<p >Creates a complex number from two sets of inputs. The left hand side is the real part and the right hand side is the imaginary part. This function accepts two <a class="el" href="classaf_1_1array.htm">af::array</a> or one <a class="el" href="classaf_1_1array.htm">af::array</a> and a scalar as nputs.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">real</td><td>is real value(s) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">imaginary</td><td>is imaginary value(s) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>complex array from inputs </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Thu Feb 24 2022 14:12:33 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.3 </li>
    </ul>
</div>
</body>
</html>
