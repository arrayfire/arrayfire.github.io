<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: image_processing/pyramids.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('image_processing_2pyramids_8cpp-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle"><div class="title">image_processing/pyramids.cpp</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/*******************************************************</span></div>
<div class="line"><span class="comment"> * Copyright (c) 2014, ArrayFire</span></div>
<div class="line"><span class="comment"> * All rights reserved.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><span class="comment"> ********************************************************/</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="arrayfire_8h.htm">arrayfire.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;cstdlib&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span><a class="code hl_namespace" href="namespaceaf.htm">af</a>;</div>
<div class="line"> </div>
<div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">float</span> pyramid_kernel[] = {1,  4, 6,  4,  1,  4, 16, 24, 16,</div>
<div class="line">                                       4,  6, 24, 36, 24, 6, 4,  16, 24,</div>
<div class="line">                                       16, 4, 1,  4,  6,  4, 1};</div>
<div class="line"> </div>
<div class="line"><a id="_a0" name="_a0"></a><a class="code hl_class" href="classaf_1_1array.htm">array</a> pyramid(<span class="keyword">const</span> <a class="code hl_class" href="classaf_1_1array.htm">array</a>&amp; img, <span class="keyword">const</span> <span class="keywordtype">int</span> level, <span class="keyword">const</span> <span class="keywordtype">bool</span> sampling) {</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> pyr = img.<a id="a1" name="a1"></a><a class="code hl_function" href="classaf_1_1array.htm#aa859f53b411dd3ab37c8c817b4352e07">copy</a>();</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> kernel(5, 5, pyramid_kernel);</div>
<div class="line">    kernel = kernel / 256.f;</div>
<div class="line">    <span class="keywordflow">if</span> (sampling) {  <span class="comment">// Downsample</span></div>
<div class="line">        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; level; i++) {</div>
<div class="line">            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; pyr.<a id="a2" name="a2"></a><a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(2); j++)</div>
<div class="line">                pyr(span, span, j) = convolve(pyr(span, span, j), kernel);</div>
<div class="line">            pyr = pyr(<a id="_a3" name="_a3"></a><a class="code hl_class" href="classaf_1_1seq.htm">seq</a>(0, pyr.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(0) - 1, 2), <a class="code hl_class" href="classaf_1_1seq.htm">seq</a>(0, pyr.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(1) - 1, 2),</div>
<div class="line">                      span);</div>
<div class="line">        }</div>
<div class="line">    } <span class="keywordflow">else</span> {  <span class="comment">// Up sample</span></div>
<div class="line">        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; level; i++) {</div>
<div class="line">            <a class="code hl_class" href="classaf_1_1array.htm">array</a> tmp =</div>
<div class="line">                <a class="code hl_function" href="group__data__func__constant.htm#ga0db7363474e85542f16e4bbcf57fe842">constant</a>(0, pyr.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(0) * 2, pyr.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(1) * 2, pyr.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(2));</div>
<div class="line">            tmp(<a class="code hl_class" href="classaf_1_1seq.htm">seq</a>(0, 2 * pyr.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(0) - 1, 2), <a class="code hl_class" href="classaf_1_1seq.htm">seq</a>(0, 2 * pyr.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(1) - 1, 2),</div>
<div class="line">                span) = pyr;</div>
<div class="line">            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; pyr.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(2); j++)</div>
<div class="line">                tmp(span, span, j) = <a class="code hl_function" href="group__signal__func__convolve.htm#ga801b0f4a09a017ccb196fac3c0dc417b">convolve</a>(tmp(span, span, j), kernel * 4.f);</div>
<div class="line">            pyr = tmp;</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line">    <span class="keywordflow">return</span> pyr;</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> pyramids_demo() {</div>
<div class="line">    <a id="_a4" name="_a4"></a><a class="code hl_class" href="classaf_1_1Window.htm">af::Window</a> wnd_rgb(<span class="stringliteral">&quot;Image Pyramids - RGB Images&quot;</span>);</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1Window.htm">af::Window</a> wnd_gray(<span class="stringliteral">&quot;Image Pyramids - Grayscale Images&quot;</span>);</div>
<div class="line">    wnd_rgb.setPos(25, 25);</div>
<div class="line">    wnd_gray.setPos(150, 150);</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> img_rgb =</div>
<div class="line">        <a class="code hl_function" href="group__imageio__func__load.htm#ga5a57870c43a81ec21fcdb7a11bef20d4">loadImage</a>(ASSETS_DIR <span class="stringliteral">&quot;/examples/images/atlantis.png&quot;</span>, <span class="keyword">true</span>) /</div>
<div class="line">        255.f;  <span class="comment">// 3 channel RGB       [0-1]</span></div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> img_gray = <a class="code hl_function" href="group__image__func__colorspace.htm#gad2913948b841a2e14e2596e32d5dbc31">colorSpace</a>(img_rgb, <a id="a5" name="a5"></a><a class="code hl_enumvalue" href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0da2b379305db06eb19ff82ce7e85b7c4b1">AF_GRAY</a>, <a id="a6" name="a6"></a><a class="code hl_enumvalue" href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0dad9c37bf4beee3f07b8b1aa4b887244e6">AF_RGB</a>);</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> downc1 = pyramid(img_rgb, 1, <span class="keyword">true</span>);</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> downc2 = pyramid(img_rgb, 2, <span class="keyword">true</span>);</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> upc1   = pyramid(img_rgb, 1, <span class="keyword">false</span>);</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> upc2   = pyramid(img_rgb, 2, <span class="keyword">false</span>);</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> downg1 = pyramid(img_gray, 1, <span class="keyword">true</span>);</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> downg2 = pyramid(img_gray, 2, <span class="keyword">true</span>);</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> upg1   = pyramid(img_gray, 1, <span class="keyword">false</span>);</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> upg2   = pyramid(img_gray, 2, <span class="keyword">false</span>);</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">while</span> (!wnd_rgb.close() &amp;&amp; !wnd_gray.close()) {</div>
<div class="line">        wnd_rgb.grid(2, 3);</div>
<div class="line">        wnd_rgb(0, 0).image(img_rgb, <span class="stringliteral">&quot;color image&quot;</span>);</div>
<div class="line">        wnd_rgb(1, 0).image(downc1, <span class="stringliteral">&quot;downsample 1 level&quot;</span>);</div>
<div class="line">        wnd_rgb(0, 1).image(downc2, <span class="stringliteral">&quot;downsample 2 levels&quot;</span>);</div>
<div class="line">        wnd_rgb(1, 1).image(upc1, <span class="stringliteral">&quot;upsample 1 level&quot;</span>);</div>
<div class="line">        wnd_rgb(0, 2).image(upc2, <span class="stringliteral">&quot;upsample 2 level&quot;</span>);</div>
<div class="line">        wnd_rgb.show();</div>
<div class="line"> </div>
<div class="line">        wnd_gray.grid(2, 3);</div>
<div class="line">        wnd_gray(0, 0).image(img_gray, <span class="stringliteral">&quot;grayscale image&quot;</span>);</div>
<div class="line">        wnd_gray(1, 0).image(downg1, <span class="stringliteral">&quot;downsample 1 level&quot;</span>);</div>
<div class="line">        wnd_gray(0, 1).image(downg2, <span class="stringliteral">&quot;downsample 2 levels&quot;</span>);</div>
<div class="line">        wnd_gray(1, 1).image(upg1, <span class="stringliteral">&quot;upsample 1 level&quot;</span>);</div>
<div class="line">        wnd_gray(0, 2).image(upg2, <span class="stringliteral">&quot;upsample 2 level&quot;</span>);</div>
<div class="line">        wnd_gray.show();</div>
<div class="line">    }</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span>** argv) {</div>
<div class="line">    <span class="keywordtype">int</span> device = argc &gt; 1 ? atoi(argv[1]) : 0;</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">try</span> {</div>
<div class="line">        <a id="a7" name="a7"></a><a class="code hl_function" href="group__device__func__set.htm#gad7c36828c21e7efc06a067bbc47d8d3b">af::setDevice</a>(device);</div>
<div class="line">        <a id="a8" name="a8"></a><a class="code hl_function" href="group__device__func__info.htm#ga3e22b6ff6e0940bb31577bea2863ca27">af::info</a>();</div>
<div class="line">        printf(<span class="stringliteral">&quot;** ArrayFire Image Pyramids Demo **\n\n&quot;</span>);</div>
<div class="line">        pyramids_demo();</div>
<div class="line"> </div>
<div class="line">    } <span class="keywordflow">catch</span> (<a id="_a9" name="_a9"></a><a class="code hl_class" href="classaf_1_1exception.htm">af::exception</a>&amp; e) {</div>
<div class="line">        fprintf(stderr, <span class="stringliteral">&quot;%s\n&quot;</span>, e.<a id="a10" name="a10"></a><a class="code hl_function" href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">what</a>());</div>
<div class="line">        <span class="keywordflow">throw</span>;</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
<div class="ttc" id="aarrayfire_8h_htm"><div class="ttname"><a href="arrayfire_8h.htm">arrayfire.h</a></div></div>
<div class="ttc" id="aclassaf_1_1Window_htm"><div class="ttname"><a href="classaf_1_1Window.htm">af::Window</a></div><div class="ttdoc">Window object to render af::arrays.</div><div class="ttdef"><b>Definition:</b> <a href="graphics_8h_source.htm#l00037">graphics.h:37</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00037">array.h:37</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm_a10d14b019693bc98f672ad7c4ac60bac"><div class="ttname"><a href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">af::array::dims</a></div><div class="ttdeci">dim4 dims() const</div><div class="ttdoc">Get dimensions of the array.</div></div>
<div class="ttc" id="aclassaf_1_1array_htm_aa859f53b411dd3ab37c8c817b4352e07"><div class="ttname"><a href="classaf_1_1array.htm#aa859f53b411dd3ab37c8c817b4352e07">af::array::copy</a></div><div class="ttdeci">array copy() const</div><div class="ttdoc">Perform deep copy of the array.</div></div>
<div class="ttc" id="aclassaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00021">exception.h:22</a></div></div>
<div class="ttc" id="aclassaf_1_1exception_htm_aa884ff67408851f00e50cf971a4dfd05"><div class="ttname"><a href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">af::exception::what</a></div><div class="ttdeci">virtual const char * what() const</div><div class="ttdoc">Returns an error message for the exception in a string format.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00046">exception.h:46</a></div></div>
<div class="ttc" id="aclassaf_1_1seq_htm"><div class="ttname"><a href="classaf_1_1seq.htm">af::seq</a></div><div class="ttdoc">seq is used to create sequences for indexing af::array</div><div class="ttdef"><b>Definition:</b> <a href="seq_8h_source.htm#l00045">seq.h:46</a></div></div>
<div class="ttc" id="adefines_8h_htm_ae1e32be35ff02f167999723d77153f0da2b379305db06eb19ff82ce7e85b7c4b1"><div class="ttname"><a href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0da2b379305db06eb19ff82ce7e85b7c4b1">AF_GRAY</a></div><div class="ttdeci">@ AF_GRAY</div><div class="ttdoc">Grayscale.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00340">defines.h:340</a></div></div>
<div class="ttc" id="adefines_8h_htm_ae1e32be35ff02f167999723d77153f0dad9c37bf4beee3f07b8b1aa4b887244e6"><div class="ttname"><a href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0dad9c37bf4beee3f07b8b1aa4b887244e6">AF_RGB</a></div><div class="ttdeci">@ AF_RGB</div><div class="ttdoc">3-channel RGB</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00341">defines.h:341</a></div></div>
<div class="ttc" id="agroup__data__func__constant_htm_ga0db7363474e85542f16e4bbcf57fe842"><div class="ttname"><a href="group__data__func__constant.htm#ga0db7363474e85542f16e4bbcf57fe842">af::constant</a></div><div class="ttdeci">array constant(T val, const dim4 &amp;dims, const dtype ty=(af_dtype) dtype_traits&lt; T &gt;::ctype)</div><div class="ttdoc">C++ Interface to generate an array with elements set to a specified value.</div></div>
<div class="ttc" id="agroup__device__func__info_htm_ga3e22b6ff6e0940bb31577bea2863ca27"><div class="ttname"><a href="group__device__func__info.htm#ga3e22b6ff6e0940bb31577bea2863ca27">af::info</a></div><div class="ttdeci">AFAPI void info()</div></div>
<div class="ttc" id="agroup__device__func__set_htm_gad7c36828c21e7efc06a067bbc47d8d3b"><div class="ttname"><a href="group__device__func__set.htm#gad7c36828c21e7efc06a067bbc47d8d3b">af::setDevice</a></div><div class="ttdeci">AFAPI void setDevice(const int device)</div><div class="ttdoc">Sets the current device.</div></div>
<div class="ttc" id="agroup__image__func__colorspace_htm_gad2913948b841a2e14e2596e32d5dbc31"><div class="ttname"><a href="group__image__func__colorspace.htm#gad2913948b841a2e14e2596e32d5dbc31">af::colorSpace</a></div><div class="ttdeci">AFAPI array colorSpace(const array &amp;image, const CSpace to, const CSpace from)</div><div class="ttdoc">C++ Interface wrapper for colorspace conversion.</div></div>
<div class="ttc" id="agroup__imageio__func__load_htm_ga5a57870c43a81ec21fcdb7a11bef20d4"><div class="ttname"><a href="group__imageio__func__load.htm#ga5a57870c43a81ec21fcdb7a11bef20d4">af::loadImage</a></div><div class="ttdeci">AFAPI array loadImage(const char *filename, const bool is_color=false)</div><div class="ttdoc">C++ Interface for loading an image.</div></div>
<div class="ttc" id="agroup__signal__func__convolve_htm_ga801b0f4a09a017ccb196fac3c0dc417b"><div class="ttname"><a href="group__signal__func__convolve.htm#ga801b0f4a09a017ccb196fac3c0dc417b">af::convolve</a></div><div class="ttdeci">AFAPI array convolve(const array &amp;signal, const array &amp;filter, const convMode mode=AF_CONV_DEFAULT, const convDomain domain=AF_CONV_AUTO)</div><div class="ttdoc">C++ Interface for convolution any(one through three) dimensional signals.</div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:15</a></div></div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Mon Sep 25 2023 12:35:27 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
