<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: pde/swe.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('pde_2swe_8cpp-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">pde/swe.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="arrayfire_8h.htm">arrayfire.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;math.h&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;stdlib.h&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;string.h&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span><a class="code" href="namespaceaf.htm">af</a>;</div>
<div class="line"> </div>
<div class="line"><a name="_a0"></a><a class="code" href="classaf_1_1Window.htm">Window</a>* win;</div>
<div class="line"> </div>
<div class="line"><a name="_a1"></a><a class="code" href="classaf_1_1array.htm">array</a> normalize(<a class="code" href="classaf_1_1array.htm">array</a> a, <span class="keywordtype">float</span> <a name="a2"></a><a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>) {</div>
<div class="line">    <span class="keywordtype">float</span> mx = <a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a> * 0.5;</div>
<div class="line">    <span class="keywordtype">float</span> mn = -<a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a> * 0.5;</div>
<div class="line">    <span class="keywordflow">return</span> (a - mn) / (mx - mn);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keyword">static</span> <span class="keywordtype">void</span> swe(<span class="keywordtype">bool</span> console) {</div>
<div class="line">    <span class="comment">// Grid length, number and spacing</span></div>
<div class="line">    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> Lx = 1600, nx = Lx + 1;</div>
<div class="line">    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> Ly = 1600, ny = Ly + 1;</div>
<div class="line">    <span class="keyword">const</span> <span class="keywordtype">float</span> dx = Lx / (nx - 1);</div>
<div class="line">    <span class="keyword">const</span> <span class="keywordtype">float</span> dy = Ly / (ny - 1);</div>
<div class="line"> </div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> ZERO = <a name="a3"></a><a class="code" href="group__data__func__constant.htm#ga3c58da8ca31ae6c871379aeb587b8b0d">constant</a>(0, nx, ny);</div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> um = ZERO, vm = ZERO;</div>
<div class="line">    <span class="keywordtype">unsigned</span> io = (unsigned)<a name="a4"></a><a class="code" href="group__arith__func__floor.htm#ga3e75b4b34f55a6ce68cfa762eff995a6">floor</a>(Lx / 6.0f), jo = (unsigned)<a class="code" href="group__arith__func__floor.htm#ga3e75b4b34f55a6ce68cfa762eff995a6">floor</a>(Ly / 6.0f),</div>
<div class="line">             k = 15;</div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> x    = <a name="a5"></a><a class="code" href="group__manip__func__tile.htm#ga3548059d64e0cefc7fedb4ec28321d32">tile</a>(<a name="a6"></a><a class="code" href="group__data__func__range.htm#ga3789475e962b4c31e07c1c3bdab8498b">range</a>(nx), 1, ny);</div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> y    = <a class="code" href="group__manip__func__tile.htm#ga3548059d64e0cefc7fedb4ec28321d32">tile</a>(<a class="code" href="group__data__func__range.htm#ga3789475e962b4c31e07c1c3bdab8498b">range</a>(<a name="_a7"></a><a class="code" href="classaf_1_1dim4.htm">dim4</a>(1, ny), 1), nx, 1);</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// initial condition</span></div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> etam =</div>
<div class="line">        0.01f * <a name="a8"></a><a class="code" href="group__arith__func__exp.htm#ga9ddbaf0852fbf988400b9677705b2a00">exp</a>((-((x - io) * (x - io) + (y - jo) * (y - jo))) / (k * k));</div>
<div class="line">    <span class="keywordtype">float</span> m_eta = max&lt;float&gt;(etam);</div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> eta   = etam;</div>
<div class="line">    <span class="keywordtype">float</span> dt    = 0.5;</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// conv kernels</span></div>
<div class="line">    <span class="keywordtype">float</span> h_diff_kernel[] = {9.81f * (dt / dx), 0, -9.81f * (dt / dx)};</div>
<div class="line">    <span class="keywordtype">float</span> h_lap_kernel[]  = {0, 1, 0, 1, -4, 1, 0, 1, 0};</div>
<div class="line"> </div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> h_diff_kernel_arr(3, h_diff_kernel);</div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> h_lap_kernel_arr(3, 3, h_lap_kernel);</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">if</span> (!console) {</div>
<div class="line">        win = <span class="keyword">new</span> <a class="code" href="classaf_1_1Window.htm">Window</a>(1536, 768, <span class="stringliteral">&quot;Shallow Water Equations&quot;</span>);</div>
<div class="line">        win-&gt;<a name="a9"></a><a class="code" href="group__gfx__func__window.htm#gaecba84f1690934bbc397e8ac7e141268">grid</a>(2, 2);</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="keywordtype">unsigned</span> iter            = 0;</div>
<div class="line">    <span class="keywordtype">unsigned</span> random_interval = 30;</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">while</span> (!win-&gt;<a name="a10"></a><a class="code" href="group__gfx__func__window.htm#ga46143fd6de3be9ab9951f140d3ae8c2f">close</a>()) {</div>
<div class="line">        <span class="keywordflow">if</span> (iter &gt; 2000) {</div>
<div class="line">            <span class="comment">// Initial condition</span></div>
<div class="line">            etam  = 0.01f * <a class="code" href="group__arith__func__exp.htm#ga9ddbaf0852fbf988400b9677705b2a00">exp</a>((-((x - io) * (x - io) + (y - jo) * (y - jo))) /</div>
<div class="line">                               (k * k));</div>
<div class="line">            m_eta = max&lt;float&gt;(etam);</div>
<div class="line">            eta   = etam;</div>
<div class="line">            iter  = 0;</div>
<div class="line">        }</div>
<div class="line"> </div>
<div class="line">        <span class="comment">// raindrops</span></div>
<div class="line">        <span class="keywordflow">if</span> (iter % 100 == 0 || iter % 130 == 0 || iter % random_interval == 0) {</div>
<div class="line">            <span class="keywordtype">unsigned</span> io     = (unsigned)<a class="code" href="group__arith__func__floor.htm#ga3e75b4b34f55a6ce68cfa762eff995a6">floor</a>(rand() % Lx),</div>
<div class="line">                     jo     = (<span class="keywordtype">unsigned</span>)<a class="code" href="group__arith__func__floor.htm#ga3e75b4b34f55a6ce68cfa762eff995a6">floor</a>(rand() % Ly);</div>
<div class="line">            random_interval = rand() % 200 + 1;</div>
<div class="line">            eta += 0.01f * <a class="code" href="group__arith__func__exp.htm#ga9ddbaf0852fbf988400b9677705b2a00">exp</a>((-((x - io) * (x - io) + (y - jo) * (y - jo))) /</div>
<div class="line">                               (k * k));</div>
<div class="line">        }</div>
<div class="line"> </div>
<div class="line">        <span class="comment">// compute</span></div>
<div class="line">        <a class="code" href="classaf_1_1array.htm">array</a> up   = um + <a name="a11"></a><a class="code" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve</a>(eta, h_diff_kernel_arr);</div>
<div class="line">        <a class="code" href="classaf_1_1array.htm">array</a> vp   = um + <a class="code" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve</a>(eta, h_diff_kernel_arr.T());</div>
<div class="line">        <a class="code" href="classaf_1_1array.htm">array</a> e    = <a class="code" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve</a>(eta, h_lap_kernel_arr);</div>
<div class="line">        <a class="code" href="classaf_1_1array.htm">array</a> etap = 2 * eta - etam + (2 * dt * dt) / (dx * dy) * e;</div>
<div class="line"> </div>
<div class="line">        etam = eta;</div>
<div class="line">        eta  = etap;</div>
<div class="line"> </div>
<div class="line">        m_eta = max&lt;float&gt;(etam);</div>
<div class="line">        <span class="keywordflow">if</span> (!console) {</div>
<div class="line">            (*win)(0, 0).setColorMap(<a name="a12"></a><a class="code" href="defines_8h.htm#a553ceda8a1d8946efac3b08e642574aea5b97cf72659418f4122d63014a237bad">AF_COLORMAP_BLUE</a>);</div>
<div class="line">            <a class="code" href="classaf_1_1array.htm">array</a> hist_out = <a name="a13"></a><a class="code" href="group__image__func__histogram.htm#gafb93ba76739ef18b3698e39c7768c90a">histogram</a>(normalize(eta, m_eta), 15);</div>
<div class="line"> </div>
<div class="line">            (*win)(0, 1).setAxesLimits(0, hist_out.<a name="a14"></a><a class="code" href="classaf_1_1array.htm#a89f91cdf327a8b304589916db5bde3c2">elements</a>(), 0,</div>
<div class="line">                                       max&lt;float&gt;(hist_out));</div>
<div class="line"> </div>
<div class="line">            (*win)(0, 0).image(normalize(eta, m_eta));</div>
<div class="line">            (*win)(0, 1).hist(hist_out, 0, 1,</div>
<div class="line">                              <span class="stringliteral">&quot;Normalized Pressure Distribution&quot;</span>);</div>
<div class="line">            (*win)(1, 0).plot(<a class="code" href="group__data__func__range.htm#ga3789475e962b4c31e07c1c3bdab8498b">range</a>(up.<a name="a15"></a><a class="code" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>(1)), vp.<a name="a16"></a><a class="code" href="group__array__mem__col.htm#gae54ff0116727d4f4f5f91306c609704e">col</a>(0),</div>
<div class="line">                              <span class="stringliteral">&quot;Pressure at left boundary&quot;</span>);</div>
<div class="line">            (*win)(1, 1).plot(</div>
<div class="line">                <a name="a17"></a><a class="code" href="group__manip__func__flat.htm#ga3ffcfce392c479bfcf2c6ddb5ebad5af">flat</a>(eta.<a class="code" href="group__array__mem__col.htm#gae54ff0116727d4f4f5f91306c609704e">col</a>(0)), <a class="code" href="group__manip__func__flat.htm#ga3ffcfce392c479bfcf2c6ddb5ebad5af">flat</a>(up.<a class="code" href="group__array__mem__col.htm#gae54ff0116727d4f4f5f91306c609704e">col</a>(0)), <a class="code" href="group__manip__func__flat.htm#ga3ffcfce392c479bfcf2c6ddb5ebad5af">flat</a>(vp.<a class="code" href="group__array__mem__col.htm#gae54ff0116727d4f4f5f91306c609704e">col</a>(0)),</div>
<div class="line">                <span class="stringliteral">&quot;Gradients versus Magnitude at left boundary&quot;</span>);  <span class="comment">// viz</span></div>
<div class="line">            win-&gt;show();</div>
<div class="line">        } <span class="keywordflow">else</span></div>
<div class="line">            <a name="a18"></a><a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(eta, up, vp);</div>
<div class="line">        iter++;</div>
<div class="line">    }</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span>* argv[]) {</div>
<div class="line">    <span class="keywordtype">int</span> device   = argc &gt; 1 ? atoi(argv[1]) : 0;</div>
<div class="line">    <span class="keywordtype">bool</span> console = argc &gt; 2 ? argv[2][0] == <span class="charliteral">&#39;-&#39;</span> : <span class="keyword">false</span>;</div>
<div class="line">    <span class="keywordflow">try</span> {</div>
<div class="line">        <a name="a19"></a><a class="code" href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7">af::setDevice</a>(device);</div>
<div class="line">        <a name="a20"></a><a class="code" href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a>();</div>
<div class="line">        printf(<span class="stringliteral">&quot;Simulation of shallow water equations\n&quot;</span>);</div>
<div class="line">        swe(console);</div>
<div class="line">    } <span class="keywordflow">catch</span> (<a name="_a21"></a><a class="code" href="classaf_1_1exception.htm">af::exception</a>&amp; e) {</div>
<div class="line">        fprintf(stderr, <span class="stringliteral">&quot;%s\n&quot;</span>, e.<a name="a22"></a><a class="code" href="classaf_1_1exception.htm#ad62489809e3df568e973597b928d6d9b">what</a>());</div>
<div class="line">        <span class="keywordflow">throw</span>;</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassaf_1_1dim4_htm"><div class="ttname"><a href="classaf_1_1dim4.htm">af::dim4</a></div><div class="ttdoc">Generic object that represents size and shape.</div><div class="ttdef"><b>Definition:</b> <a href="dim4_8hpp_source.htm#l00032">dim4.hpp:33</a></div></div>
<div class="ttc" id="agroup__data__func__range_htm_ga3789475e962b4c31e07c1c3bdab8498b"><div class="ttname"><a href="group__data__func__range.htm#ga3789475e962b4c31e07c1c3bdab8498b">af::range</a></div><div class="ttdeci">AFAPI array range(const dim4 &amp;dims, const int seq_dim=-1, const dtype ty=f32)</div></div>
<div class="ttc" id="agroup__arith__func__exp_htm_ga9ddbaf0852fbf988400b9677705b2a00"><div class="ttname"><a href="group__arith__func__exp.htm#ga9ddbaf0852fbf988400b9677705b2a00">af::exp</a></div><div class="ttdeci">AFAPI array exp(const array &amp;in)</div><div class="ttdoc">C++ Interface for exponential of an array.</div></div>
<div class="ttc" id="agroup__device__func__info_htm_ga1360e706b046b1c5b299bd6e689a0276"><div class="ttname"><a href="group__device__func__info.htm#ga1360e706b046b1c5b299bd6e689a0276">af::info</a></div><div class="ttdeci">AFAPI void info()</div></div>
<div class="ttc" id="agroup__data__func__constant_htm_ga3c58da8ca31ae6c871379aeb587b8b0d"><div class="ttname"><a href="group__data__func__constant.htm#ga3c58da8ca31ae6c871379aeb587b8b0d">af::constant</a></div><div class="ttdeci">array constant(T val, const dim4 &amp;dims, const dtype ty=(af_dtype) dtype_traits&lt; T &gt;::ctype)</div></div>
<div class="ttc" id="agroup__device__func__set_htm_gafbb906ca5b89ec43fdb0e3a14d1df1e7"><div class="ttname"><a href="group__device__func__set.htm#gafbb906ca5b89ec43fdb0e3a14d1df1e7">af::setDevice</a></div><div class="ttdeci">AFAPI void setDevice(const int device)</div><div class="ttdoc">Sets the current device.</div></div>
<div class="ttc" id="agroup__array__mem__col_htm_gae54ff0116727d4f4f5f91306c609704e"><div class="ttname"><a href="group__array__mem__col.htm#gae54ff0116727d4f4f5f91306c609704e">af::array::col</a></div><div class="ttdeci">array::array_proxy col(int index)</div><div class="ttdoc">Returns a reference to a col.</div></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00035">array.h:35</a></div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:15</a></div></div>
<div class="ttc" id="agroup__reduce__func__max_htm_ga4459daf5a3b081fb4ee15eb49d8c902a"><div class="ttname"><a href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">af::max</a></div><div class="ttdeci">AFAPI array max(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for maximum values in an array.</div></div>
<div class="ttc" id="aclassaf_1_1array_htm_a89f91cdf327a8b304589916db5bde3c2"><div class="ttname"><a href="classaf_1_1array.htm#a89f91cdf327a8b304589916db5bde3c2">af::array::elements</a></div><div class="ttdeci">dim_t elements() const</div><div class="ttdoc">Get the total number of elements across all dimensions of the array.</div></div>
<div class="ttc" id="agroup__gfx__func__window_htm_ga46143fd6de3be9ab9951f140d3ae8c2f"><div class="ttname"><a href="group__gfx__func__window.htm#ga46143fd6de3be9ab9951f140d3ae8c2f">af::Window::close</a></div><div class="ttdeci">bool close()</div><div class="ttdoc">Check if window is marked for close.</div></div>
<div class="ttc" id="agroup__manip__func__flat_htm_ga3ffcfce392c479bfcf2c6ddb5ebad5af"><div class="ttname"><a href="group__manip__func__flat.htm#ga3ffcfce392c479bfcf2c6ddb5ebad5af">af::flat</a></div><div class="ttdeci">AFAPI array flat(const array &amp;in)</div></div>
<div class="ttc" id="aclassaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00028">exception.h:29</a></div></div>
<div class="ttc" id="agroup__manip__func__tile_htm_ga3548059d64e0cefc7fedb4ec28321d32"><div class="ttname"><a href="group__manip__func__tile.htm#ga3548059d64e0cefc7fedb4ec28321d32">af::tile</a></div><div class="ttdeci">AFAPI array tile(const array &amp;in, const unsigned x, const unsigned y=1, const unsigned z=1, const unsigned w=1)</div></div>
<div class="ttc" id="aclassaf_1_1array_htm_a10d14b019693bc98f672ad7c4ac60bac"><div class="ttname"><a href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">af::array::dims</a></div><div class="ttdeci">dim4 dims() const</div><div class="ttdoc">Get dimensions of the array.</div></div>
<div class="ttc" id="adefines_8h_htm_a553ceda8a1d8946efac3b08e642574aea5b97cf72659418f4122d63014a237bad"><div class="ttname"><a href="defines_8h.htm#a553ceda8a1d8946efac3b08e642574aea5b97cf72659418f4122d63014a237bad">AF_COLORMAP_BLUE</a></div><div class="ttdeci">@ AF_COLORMAP_BLUE</div><div class="ttdoc">Blue hue map.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00460">defines.h:460</a></div></div>
<div class="ttc" id="agroup__arith__func__floor_htm_ga3e75b4b34f55a6ce68cfa762eff995a6"><div class="ttname"><a href="group__arith__func__floor.htm#ga3e75b4b34f55a6ce68cfa762eff995a6">af::floor</a></div><div class="ttdeci">AFAPI array floor(const array &amp;in)</div><div class="ttdoc">C++ Interface for flooring an array of numbers.</div></div>
<div class="ttc" id="aarrayfire_8h_htm"><div class="ttname"><a href="arrayfire_8h.htm">arrayfire.h</a></div></div>
<div class="ttc" id="agroup__data__mat_htm_ga121545fb637db409a523862cdb8ffe39"><div class="ttname"><a href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">af::eval</a></div><div class="ttdeci">array &amp; eval(array &amp;a)</div><div class="ttdoc">Evaluate an expression (nonblocking).</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l01354">array.h:1354</a></div></div>
<div class="ttc" id="aclassaf_1_1exception_htm_ad62489809e3df568e973597b928d6d9b"><div class="ttname"><a href="classaf_1_1exception.htm#ad62489809e3df568e973597b928d6d9b">af::exception::what</a></div><div class="ttdeci">virtual const char * what() const</div><div class="ttdoc">Returns an error message for the exception in a string format.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00060">exception.h:60</a></div></div>
<div class="ttc" id="agroup__signal__func__convolve_htm_gae79b64c8b0d6a06309e8b67bf89cf6c9"><div class="ttname"><a href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">af::convolve</a></div><div class="ttdeci">AFAPI array convolve(const array &amp;signal, const array &amp;filter, const convMode mode=AF_CONV_DEFAULT, const convDomain domain=AF_CONV_AUTO)</div><div class="ttdoc">C++ Interface for convolution any(one through three) dimensional signals.</div></div>
<div class="ttc" id="aclassaf_1_1Window_htm"><div class="ttname"><a href="classaf_1_1Window.htm">af::Window</a></div><div class="ttdoc">Window object to render af::arrays.</div><div class="ttdef"><b>Definition:</b> <a href="graphics_8h_source.htm#l00037">graphics.h:37</a></div></div>
<div class="ttc" id="agroup__gfx__func__window_htm_gaecba84f1690934bbc397e8ac7e141268"><div class="ttname"><a href="group__gfx__func__window.htm#gaecba84f1690934bbc397e8ac7e141268">af::Window::grid</a></div><div class="ttdeci">void grid(const int rows, const int cols)</div><div class="ttdoc">Setup grid layout for multiview mode in a window.</div></div>
<div class="ttc" id="agroup__image__func__histogram_htm_gafb93ba76739ef18b3698e39c7768c90a"><div class="ttname"><a href="group__image__func__histogram.htm#gafb93ba76739ef18b3698e39c7768c90a">af::histogram</a></div><div class="ttdeci">AFAPI array histogram(const array &amp;in, const unsigned nbins, const double minval, const double maxval)</div><div class="ttdoc">C++ Interface for histogram.</div></div>
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
