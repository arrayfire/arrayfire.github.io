<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: signal.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('signal_8h.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">signal.h File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="defines_8h_source.htm">af/defines.h</a>&gt;</code><br />
</div>
<p><a href="signal_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceaf"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm">af</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gabd004f943d8a8df6d00064fd965680ee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#gabd004f943d8a8df6d00064fd965680ee">approx1</a> (const array &amp;in, const array &amp;pos, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a>, const float off_grid=0.0f)</td></tr>
<tr class="memdesc:gabd004f943d8a8df6d00064fd965680ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for data interpolation on one-dimensional signals.  <a href="group__signal__func__approx1.htm#gabd004f943d8a8df6d00064fd965680ee">More...</a><br /></td></tr>
<tr class="separator:gabd004f943d8a8df6d00064fd965680ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae1caef95088d57fda2eafbd83b41a0c0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#gae1caef95088d57fda2eafbd83b41a0c0">approx2</a> (const array &amp;in, const array &amp;pos0, const array &amp;pos1, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a>, const float off_grid=0.0f)</td></tr>
<tr class="memdesc:gae1caef95088d57fda2eafbd83b41a0c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for data interpolation on two-dimensional signals.  <a href="group__signal__func__approx2.htm#gae1caef95088d57fda2eafbd83b41a0c0">More...</a><br /></td></tr>
<tr class="separator:gae1caef95088d57fda2eafbd83b41a0c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga421512476569e80223f43ee3ab838b30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#ga421512476569e80223f43ee3ab838b30">approx1</a> (const array &amp;in, const array &amp;pos, const int interp_dim, const double idx_start, const double idx_step, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a>, const float off_grid=0.0f)</td></tr>
<tr class="memdesc:ga421512476569e80223f43ee3ab838b30"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for data interpolation on one-dimensional signals.  <a href="group__signal__func__approx1.htm#ga421512476569e80223f43ee3ab838b30">More...</a><br /></td></tr>
<tr class="separator:ga421512476569e80223f43ee3ab838b30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga70abdc5624f02f683fa93aed57d86033"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#ga70abdc5624f02f683fa93aed57d86033">approx2</a> (const array &amp;in, const array &amp;pos0, const int interp_dim0, const double idx_start_dim0, const double idx_step_dim0, const array &amp;pos1, const int interp_dim1, const double idx_start_dim1, const double idx_step_dim1, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a>, const float off_grid=0.0f)</td></tr>
<tr class="memdesc:ga70abdc5624f02f683fa93aed57d86033"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for data interpolation on two-dimensional signals.  <a href="group__signal__func__approx2.htm#ga70abdc5624f02f683fa93aed57d86033">More...</a><br /></td></tr>
<tr class="separator:ga70abdc5624f02f683fa93aed57d86033"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaee63590502b451b3ebaec4a61df44b6a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#gaee63590502b451b3ebaec4a61df44b6a">fftNorm</a> (const array &amp;in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0)</td></tr>
<tr class="memdesc:gaee63590502b451b3ebaec4a61df44b6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__fft.htm#gaee63590502b451b3ebaec4a61df44b6a">More...</a><br /></td></tr>
<tr class="separator:gaee63590502b451b3ebaec4a61df44b6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5100f87051ff5b35237bbd8cd197e55e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft2.htm#ga5100f87051ff5b35237bbd8cd197e55e">fft2Norm</a> (const array &amp;in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0)</td></tr>
<tr class="memdesc:ga5100f87051ff5b35237bbd8cd197e55e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__fft2.htm#ga5100f87051ff5b35237bbd8cd197e55e">More...</a><br /></td></tr>
<tr class="separator:ga5100f87051ff5b35237bbd8cd197e55e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga52e33a2bee728d0f4718035d2fb13393"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft3.htm#ga52e33a2bee728d0f4718035d2fb13393">fft3Norm</a> (const array &amp;in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim2=0)</td></tr>
<tr class="memdesc:ga52e33a2bee728d0f4718035d2fb13393"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__fft3.htm#ga52e33a2bee728d0f4718035d2fb13393">More...</a><br /></td></tr>
<tr class="separator:ga52e33a2bee728d0f4718035d2fb13393"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae8b5e5d6e9894905364e05d90d6d5916"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#gae8b5e5d6e9894905364e05d90d6d5916">fftInPlace</a> (array &amp;in, const double norm_factor=1.0)</td></tr>
<tr class="memdesc:gae8b5e5d6e9894905364e05d90d6d5916"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__fft.htm#gae8b5e5d6e9894905364e05d90d6d5916">More...</a><br /></td></tr>
<tr class="separator:gae8b5e5d6e9894905364e05d90d6d5916"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5ae6dae641f14b8225629f3b372f00af"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft2.htm#ga5ae6dae641f14b8225629f3b372f00af">fft2InPlace</a> (array &amp;in, const double norm_factor=1.0)</td></tr>
<tr class="memdesc:ga5ae6dae641f14b8225629f3b372f00af"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__fft2.htm#ga5ae6dae641f14b8225629f3b372f00af">More...</a><br /></td></tr>
<tr class="separator:ga5ae6dae641f14b8225629f3b372f00af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c676d4c97fb19756ea1be8334c86e52"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft3.htm#ga9c676d4c97fb19756ea1be8334c86e52">fft3InPlace</a> (array &amp;in, const double norm_factor=1.0)</td></tr>
<tr class="memdesc:ga9c676d4c97fb19756ea1be8334c86e52"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__fft3.htm#ga9c676d4c97fb19756ea1be8334c86e52">More...</a><br /></td></tr>
<tr class="separator:ga9c676d4c97fb19756ea1be8334c86e52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga840fd149f2d5b50e0060c88682432068"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga840fd149f2d5b50e0060c88682432068">fft</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0)</td></tr>
<tr class="memdesc:ga840fd149f2d5b50e0060c88682432068"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__fft.htm#ga840fd149f2d5b50e0060c88682432068">More...</a><br /></td></tr>
<tr class="separator:ga840fd149f2d5b50e0060c88682432068"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5888d7f92cdf12ef712a145f55e7729b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft2.htm#ga5888d7f92cdf12ef712a145f55e7729b">fft2</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0)</td></tr>
<tr class="memdesc:ga5888d7f92cdf12ef712a145f55e7729b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__fft2.htm#ga5888d7f92cdf12ef712a145f55e7729b">More...</a><br /></td></tr>
<tr class="separator:ga5888d7f92cdf12ef712a145f55e7729b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa70e58e4a322b99184a5014da045f2f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft3.htm#gaaa70e58e4a322b99184a5014da045f2f">fft3</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim2=0)</td></tr>
<tr class="memdesc:gaaa70e58e4a322b99184a5014da045f2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__fft3.htm#gaaa70e58e4a322b99184a5014da045f2f">More...</a><br /></td></tr>
<tr class="separator:gaaa70e58e4a322b99184a5014da045f2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga87f209d0288ee0bafe8dda36f07aeadb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga87f209d0288ee0bafe8dda36f07aeadb">dft</a> (const array &amp;in, const double norm_factor, const dim4 outDims)</td></tr>
<tr class="memdesc:ga87f209d0288ee0bafe8dda36f07aeadb"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on any(1d, 2d, 3d) dimensional signals.  <a href="group__signal__func__fft.htm#ga87f209d0288ee0bafe8dda36f07aeadb">More...</a><br /></td></tr>
<tr class="separator:ga87f209d0288ee0bafe8dda36f07aeadb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf2c1b5fe6a4fd638d4d2e6484d3998b7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#gaf2c1b5fe6a4fd638d4d2e6484d3998b7">dft</a> (const array &amp;in, const dim4 outDims)</td></tr>
<tr class="memdesc:gaf2c1b5fe6a4fd638d4d2e6484d3998b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on any(1d, 2d, 3d) dimensional signals.  <a href="group__signal__func__fft.htm#gaf2c1b5fe6a4fd638d4d2e6484d3998b7">More...</a><br /></td></tr>
<tr class="separator:gaf2c1b5fe6a4fd638d4d2e6484d3998b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac3798660ce25b9a31cd3d3209fc2e631"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#gac3798660ce25b9a31cd3d3209fc2e631">dft</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gac3798660ce25b9a31cd3d3209fc2e631"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on any(1d, 2d, 3d) dimensional signals.  <a href="group__signal__func__fft.htm#gac3798660ce25b9a31cd3d3209fc2e631">More...</a><br /></td></tr>
<tr class="separator:gac3798660ce25b9a31cd3d3209fc2e631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8df461e89474443ca68363682cb29977"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft.htm#ga8df461e89474443ca68363682cb29977">ifftNorm</a> (const array &amp;in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0)</td></tr>
<tr class="memdesc:ga8df461e89474443ca68363682cb29977"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on one dimensional signals.  <a href="group__signal__func__ifft.htm#ga8df461e89474443ca68363682cb29977">More...</a><br /></td></tr>
<tr class="separator:ga8df461e89474443ca68363682cb29977"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5243cf1eaf17c10ddeb829dc94365c57"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft2.htm#ga5243cf1eaf17c10ddeb829dc94365c57">ifft2Norm</a> (const array &amp;in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0)</td></tr>
<tr class="memdesc:ga5243cf1eaf17c10ddeb829dc94365c57"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on two dimensional signals.  <a href="group__signal__func__ifft2.htm#ga5243cf1eaf17c10ddeb829dc94365c57">More...</a><br /></td></tr>
<tr class="separator:ga5243cf1eaf17c10ddeb829dc94365c57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga372a8550836fcb1dcc86339a2e494ace"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft3.htm#ga372a8550836fcb1dcc86339a2e494ace">ifft3Norm</a> (const array &amp;in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim2=0)</td></tr>
<tr class="memdesc:ga372a8550836fcb1dcc86339a2e494ace"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on three dimensional signals.  <a href="group__signal__func__ifft3.htm#ga372a8550836fcb1dcc86339a2e494ace">More...</a><br /></td></tr>
<tr class="separator:ga372a8550836fcb1dcc86339a2e494ace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga91ebb243a3dc565513f45c422d22e3e5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft.htm#ga91ebb243a3dc565513f45c422d22e3e5">ifftInPlace</a> (array &amp;in, const double norm_factor=1.0)</td></tr>
<tr class="memdesc:ga91ebb243a3dc565513f45c422d22e3e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__ifft.htm#ga91ebb243a3dc565513f45c422d22e3e5">More...</a><br /></td></tr>
<tr class="separator:ga91ebb243a3dc565513f45c422d22e3e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad9c160c529140a77dc2f073919cd9d13"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft2.htm#gad9c160c529140a77dc2f073919cd9d13">ifft2InPlace</a> (array &amp;in, const double norm_factor=1.0)</td></tr>
<tr class="memdesc:gad9c160c529140a77dc2f073919cd9d13"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__ifft2.htm#gad9c160c529140a77dc2f073919cd9d13">More...</a><br /></td></tr>
<tr class="separator:gad9c160c529140a77dc2f073919cd9d13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga788e530c135fe44102aa1cfd50e9b709"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft3.htm#ga788e530c135fe44102aa1cfd50e9b709">ifft3InPlace</a> (array &amp;in, const double norm_factor=1.0)</td></tr>
<tr class="memdesc:ga788e530c135fe44102aa1cfd50e9b709"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__ifft3.htm#ga788e530c135fe44102aa1cfd50e9b709">More...</a><br /></td></tr>
<tr class="separator:ga788e530c135fe44102aa1cfd50e9b709"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafea0d39402886fc82ccb9413552ec9b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft.htm#gafea0d39402886fc82ccb9413552ec9b8">ifft</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0)</td></tr>
<tr class="memdesc:gafea0d39402886fc82ccb9413552ec9b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on one dimensional signals.  <a href="group__signal__func__ifft.htm#gafea0d39402886fc82ccb9413552ec9b8">More...</a><br /></td></tr>
<tr class="separator:gafea0d39402886fc82ccb9413552ec9b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7d66318300d9403cfe85bdc357039926"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft2.htm#ga7d66318300d9403cfe85bdc357039926">ifft2</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0)</td></tr>
<tr class="memdesc:ga7d66318300d9403cfe85bdc357039926"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on two dimensional signals.  <a href="group__signal__func__ifft2.htm#ga7d66318300d9403cfe85bdc357039926">More...</a><br /></td></tr>
<tr class="separator:ga7d66318300d9403cfe85bdc357039926"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga912e3a8448d02178c48dc8769e0a9f8d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft3.htm#ga912e3a8448d02178c48dc8769e0a9f8d">ifft3</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim2=0)</td></tr>
<tr class="memdesc:ga912e3a8448d02178c48dc8769e0a9f8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on three dimensional signals.  <a href="group__signal__func__ifft3.htm#ga912e3a8448d02178c48dc8769e0a9f8d">More...</a><br /></td></tr>
<tr class="separator:ga912e3a8448d02178c48dc8769e0a9f8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae0f8836bb065857952c128e412a70926"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#gae0f8836bb065857952c128e412a70926">idft</a> (const array &amp;in, const double norm_factor, const dim4 outDims)</td></tr>
<tr class="memdesc:gae0f8836bb065857952c128e412a70926"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on any(1d, 2d, 3d) dimensional signals.  <a href="group__signal__func__fft.htm#gae0f8836bb065857952c128e412a70926">More...</a><br /></td></tr>
<tr class="separator:gae0f8836bb065857952c128e412a70926"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc397f1c92eddecb098466683964f975"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#gadc397f1c92eddecb098466683964f975">idft</a> (const array &amp;in, const dim4 outDims)</td></tr>
<tr class="memdesc:gadc397f1c92eddecb098466683964f975"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on any(1d, 2d, 3d) dimensional signals.  <a href="group__signal__func__fft.htm#gadc397f1c92eddecb098466683964f975">More...</a><br /></td></tr>
<tr class="separator:gadc397f1c92eddecb098466683964f975"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7541a644803ff3cd47f2f8e15832cbe4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga7541a644803ff3cd47f2f8e15832cbe4">idft</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga7541a644803ff3cd47f2f8e15832cbe4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on any(1d, 2d, 3d) dimensional signals.  <a href="group__signal__func__fft.htm#ga7541a644803ff3cd47f2f8e15832cbe4">More...</a><br /></td></tr>
<tr class="separator:ga7541a644803ff3cd47f2f8e15832cbe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4e4bbe7360417ad297ad219222c516bd"><td class="memTemplParams" colspan="2">template&lt;int rank&gt; </td></tr>
<tr class="memitem:ga4e4bbe7360417ad297ad219222c516bd"><td class="memTemplItemLeft" align="right" valign="top">array&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__r2c.htm#ga4e4bbe7360417ad297ad219222c516bd">fftR2C</a> (const array &amp;in, const dim4 &amp;dims, const double norm_factor=1.0)</td></tr>
<tr class="memdesc:ga4e4bbe7360417ad297ad219222c516bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for real to complex fast fourier transform for one dimensional signals.  <a href="group__signal__func__fft__r2c.htm#ga4e4bbe7360417ad297ad219222c516bd">More...</a><br /></td></tr>
<tr class="separator:ga4e4bbe7360417ad297ad219222c516bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab604b9aa9c0164961ed4d1750176c22b"><td class="memTemplParams" colspan="2">template&lt;int rank&gt; </td></tr>
<tr class="memitem:gab604b9aa9c0164961ed4d1750176c22b"><td class="memTemplItemLeft" align="right" valign="top">array&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__r2c.htm#gab604b9aa9c0164961ed4d1750176c22b">fftR2C</a> (const array &amp;in, const double norm_factor=1.0)</td></tr>
<tr class="memdesc:gab604b9aa9c0164961ed4d1750176c22b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for real to complex fast fourier transform for one dimensional signals.  <a href="group__signal__func__fft__r2c.htm#gab604b9aa9c0164961ed4d1750176c22b">More...</a><br /></td></tr>
<tr class="separator:gab604b9aa9c0164961ed4d1750176c22b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac0db4f96fcb84525e984915e2b088046"><td class="memTemplParams" colspan="2">template&lt;int rank&gt; </td></tr>
<tr class="memitem:gac0db4f96fcb84525e984915e2b088046"><td class="memTemplItemLeft" align="right" valign="top">array&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__c2r.htm#gac0db4f96fcb84525e984915e2b088046">fftC2R</a> (const array &amp;in, bool is_odd=false, const double norm_factor=1.0)</td></tr>
<tr class="memdesc:gac0db4f96fcb84525e984915e2b088046"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for complex to real fast fourier transform.  <a href="group__signal__func__fft__c2r.htm#gac0db4f96fcb84525e984915e2b088046">More...</a><br /></td></tr>
<tr class="separator:gac0db4f96fcb84525e984915e2b088046"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga801b0f4a09a017ccb196fac3c0dc417b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve.htm#ga801b0f4a09a017ccb196fac3c0dc417b">convolve</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>, const convDomain domain=<a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dbae105d11695ba3a2287e32c552d3567dd">AF_CONV_AUTO</a>)</td></tr>
<tr class="memdesc:ga801b0f4a09a017ccb196fac3c0dc417b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution any(one through three) dimensional signals.  <a href="group__signal__func__convolve.htm#ga801b0f4a09a017ccb196fac3c0dc417b">More...</a><br /></td></tr>
<tr class="separator:ga801b0f4a09a017ccb196fac3c0dc417b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga88fc0fdac44400823c5a91d678bc4588"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve__sep.htm#ga88fc0fdac44400823c5a91d678bc4588">convolve</a> (const array &amp;col_filter, const array &amp;row_filter, const array &amp;signal, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>)</td></tr>
<tr class="memdesc:ga88fc0fdac44400823c5a91d678bc4588"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for separable convolution on two dimensional signals.  <a href="group__signal__func__convolve__sep.htm#ga88fc0fdac44400823c5a91d678bc4588">More...</a><br /></td></tr>
<tr class="separator:ga88fc0fdac44400823c5a91d678bc4588"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7f5bd1038b2991e2db8e44f6c3b3efbd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve1.htm#ga7f5bd1038b2991e2db8e44f6c3b3efbd">convolve1</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>, const convDomain domain=<a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dbae105d11695ba3a2287e32c552d3567dd">AF_CONV_AUTO</a>)</td></tr>
<tr class="memdesc:ga7f5bd1038b2991e2db8e44f6c3b3efbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on one dimensional signals.  <a href="group__signal__func__convolve1.htm#ga7f5bd1038b2991e2db8e44f6c3b3efbd">More...</a><br /></td></tr>
<tr class="separator:ga7f5bd1038b2991e2db8e44f6c3b3efbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f5f0f717d86b9beda5086c3b1a3ff4d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve2.htm#ga5f5f0f717d86b9beda5086c3b1a3ff4d">convolve2</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>, const convDomain domain=<a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dbae105d11695ba3a2287e32c552d3567dd">AF_CONV_AUTO</a>)</td></tr>
<tr class="memdesc:ga5f5f0f717d86b9beda5086c3b1a3ff4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on two dimensional signals.  <a href="group__signal__func__convolve2.htm#ga5f5f0f717d86b9beda5086c3b1a3ff4d">More...</a><br /></td></tr>
<tr class="separator:ga5f5f0f717d86b9beda5086c3b1a3ff4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb0ed76775f542fae5ead3b02ba12d0e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve2.htm#gadb0ed76775f542fae5ead3b02ba12d0e">convolve2NN</a> (const array &amp;signal, const array &amp;filter, const dim4 stride, const dim4 padding, const dim4 dilation)</td></tr>
<tr class="memdesc:gadb0ed76775f542fae5ead3b02ba12d0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for 2D convolution.  <a href="group__signal__func__convolve2.htm#gadb0ed76775f542fae5ead3b02ba12d0e">More...</a><br /></td></tr>
<tr class="separator:gadb0ed76775f542fae5ead3b02ba12d0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga61a55490dbf96126bd43e4bf815a6cad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve3.htm#ga61a55490dbf96126bd43e4bf815a6cad">convolve3</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>, const convDomain domain=<a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dbae105d11695ba3a2287e32c552d3567dd">AF_CONV_AUTO</a>)</td></tr>
<tr class="memdesc:ga61a55490dbf96126bd43e4bf815a6cad"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on three dimensional signals.  <a href="group__signal__func__convolve3.htm#ga61a55490dbf96126bd43e4bf815a6cad">More...</a><br /></td></tr>
<tr class="separator:ga61a55490dbf96126bd43e4bf815a6cad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga95cc430f1c610ed4409ebdd83156b278"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve.htm#ga95cc430f1c610ed4409ebdd83156b278">fftConvolve</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>)</td></tr>
<tr class="memdesc:ga95cc430f1c610ed4409ebdd83156b278"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for FFT-based convolution any(one through three) dimensional signals.  <a href="group__signal__func__convolve.htm#ga95cc430f1c610ed4409ebdd83156b278">More...</a><br /></td></tr>
<tr class="separator:ga95cc430f1c610ed4409ebdd83156b278"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34460fcab1f1683d8834a9488210a795"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve1.htm#ga34460fcab1f1683d8834a9488210a795">fftConvolve1</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>)</td></tr>
<tr class="memdesc:ga34460fcab1f1683d8834a9488210a795"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on 1D signals using FFT.  <a href="group__signal__func__convolve1.htm#ga34460fcab1f1683d8834a9488210a795">More...</a><br /></td></tr>
<tr class="separator:ga34460fcab1f1683d8834a9488210a795"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65a03ef8559c89195994007b94ca9b82"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve2.htm#ga65a03ef8559c89195994007b94ca9b82">fftConvolve2</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>)</td></tr>
<tr class="memdesc:ga65a03ef8559c89195994007b94ca9b82"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on 2D signals using FFT.  <a href="group__signal__func__convolve2.htm#ga65a03ef8559c89195994007b94ca9b82">More...</a><br /></td></tr>
<tr class="separator:ga65a03ef8559c89195994007b94ca9b82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga90cd382a765dfde5f1e114db8a45a928"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve3.htm#ga90cd382a765dfde5f1e114db8a45a928">fftConvolve3</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>)</td></tr>
<tr class="memdesc:ga90cd382a765dfde5f1e114db8a45a928"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on 3D signals using FFT.  <a href="group__signal__func__convolve3.htm#ga90cd382a765dfde5f1e114db8a45a928">More...</a><br /></td></tr>
<tr class="separator:ga90cd382a765dfde5f1e114db8a45a928"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b9636788162beebb313fa8cc67ac8a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fir.htm#ga3b9636788162beebb313fa8cc67ac8a7">fir</a> (const array &amp;b, const array &amp;x)</td></tr>
<tr class="memdesc:ga3b9636788162beebb313fa8cc67ac8a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for finite impulse response filter.  <a href="group__signal__func__fir.htm#ga3b9636788162beebb313fa8cc67ac8a7">More...</a><br /></td></tr>
<tr class="separator:ga3b9636788162beebb313fa8cc67ac8a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2ccd475bfe8c3ca5df87639595d12d68"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__iir.htm#ga2ccd475bfe8c3ca5df87639595d12d68">iir</a> (const array &amp;b, const array &amp;a, const array &amp;x)</td></tr>
<tr class="memdesc:ga2ccd475bfe8c3ca5df87639595d12d68"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for infinite impulse response filter.  <a href="group__signal__func__iir.htm#ga2ccd475bfe8c3ca5df87639595d12d68">More...</a><br /></td></tr>
<tr class="separator:ga2ccd475bfe8c3ca5df87639595d12d68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga70dbebc9a35d6533ad847d09b1a54bec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__medfilt.htm#ga70dbebc9a35d6533ad847d09b1a54bec">medfilt</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_length=3, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width=3, const borderType edge_pad=<a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113aa9ec0ad516e307a4d215cb9cb43cceb7">AF_PAD_ZERO</a>)</td></tr>
<tr class="memdesc:ga70dbebc9a35d6533ad847d09b1a54bec"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for median filter.  <a href="group__image__func__medfilt.htm#ga70dbebc9a35d6533ad847d09b1a54bec">More...</a><br /></td></tr>
<tr class="separator:ga70dbebc9a35d6533ad847d09b1a54bec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab6b0565d20e8bd4ce93ceaca92d6dcc4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__medfilt.htm#gab6b0565d20e8bd4ce93ceaca92d6dcc4">medfilt1</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width=3, const borderType edge_pad=<a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113aa9ec0ad516e307a4d215cb9cb43cceb7">AF_PAD_ZERO</a>)</td></tr>
<tr class="memdesc:gab6b0565d20e8bd4ce93ceaca92d6dcc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for median filter.  <a href="group__image__func__medfilt.htm#gab6b0565d20e8bd4ce93ceaca92d6dcc4">More...</a><br /></td></tr>
<tr class="separator:gab6b0565d20e8bd4ce93ceaca92d6dcc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1677276274ca6b60cec9023aa8d0a5a5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__medfilt.htm#ga1677276274ca6b60cec9023aa8d0a5a5">medfilt2</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_length=3, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width=3, const borderType edge_pad=<a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113aa9ec0ad516e307a4d215cb9cb43cceb7">AF_PAD_ZERO</a>)</td></tr>
<tr class="memdesc:ga1677276274ca6b60cec9023aa8d0a5a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for median filter.  <a href="group__image__func__medfilt.htm#ga1677276274ca6b60cec9023aa8d0a5a5">More...</a><br /></td></tr>
<tr class="separator:ga1677276274ca6b60cec9023aa8d0a5a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adae4ba27bc8beed887774815c469f74e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm#adae4ba27bc8beed887774815c469f74e">setFFTPlanCacheSize</a> (size_t cacheSize)</td></tr>
<tr class="memdesc:adae4ba27bc8beed887774815c469f74e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for setting plan cache size.  <a href="namespaceaf.htm#adae4ba27bc8beed887774815c469f74e">More...</a><br /></td></tr>
<tr class="separator:adae4ba27bc8beed887774815c469f74e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga10c8bfceea06e7d5dfffecb893b0ccbd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#ga10c8bfceea06e7d5dfffecb893b0ccbd">af_approx1</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:ga10c8bfceea06e7d5dfffecb893b0ccbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for signals interpolation on one dimensional signals.  <a href="group__signal__func__approx1.htm#ga10c8bfceea06e7d5dfffecb893b0ccbd">More...</a><br /></td></tr>
<tr class="separator:ga10c8bfceea06e7d5dfffecb893b0ccbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga24be84d2725a52cbee03eeed2a8d78d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#ga24be84d2725a52cbee03eeed2a8d78d4">af_approx1_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:ga24be84d2725a52cbee03eeed2a8d78d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for the version of <a class="el" href="group__signal__func__approx1.htm#ga10c8bfceea06e7d5dfffecb893b0ccbd">af_approx1</a> that accepts a preallocated output array.  <a href="group__signal__func__approx1.htm#ga24be84d2725a52cbee03eeed2a8d78d4">More...</a><br /></td></tr>
<tr class="separator:ga24be84d2725a52cbee03eeed2a8d78d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadd7c8ac60b5dc06999e16c7c8e555699"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#gadd7c8ac60b5dc06999e16c7c8e555699">af_approx2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos0, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:gadd7c8ac60b5dc06999e16c7c8e555699"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for signals interpolation on two dimensional signals.  <a href="group__signal__func__approx2.htm#gadd7c8ac60b5dc06999e16c7c8e555699">More...</a><br /></td></tr>
<tr class="separator:gadd7c8ac60b5dc06999e16c7c8e555699"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7448f8eecc9e454d814833b1b19af699"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#ga7448f8eecc9e454d814833b1b19af699">af_approx2_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos0, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:ga7448f8eecc9e454d814833b1b19af699"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for the version of <a class="el" href="group__signal__func__approx2.htm#gadd7c8ac60b5dc06999e16c7c8e555699">af_approx2</a> that accepts a preallocated output array.  <a href="group__signal__func__approx2.htm#ga7448f8eecc9e454d814833b1b19af699">More...</a><br /></td></tr>
<tr class="separator:ga7448f8eecc9e454d814833b1b19af699"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga888bded6f0349efd16cc15b4d7687d3c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#ga888bded6f0349efd16cc15b4d7687d3c">af_approx1_uniform</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos, const int interp_dim, const double idx_start, const double idx_step, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:ga888bded6f0349efd16cc15b4d7687d3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for signals interpolation on one dimensional signals along specified dimension.  <a href="group__signal__func__approx1.htm#ga888bded6f0349efd16cc15b4d7687d3c">More...</a><br /></td></tr>
<tr class="separator:ga888bded6f0349efd16cc15b4d7687d3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac3a09153cadef70a5f0f5d414c682857"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#gac3a09153cadef70a5f0f5d414c682857">af_approx1_uniform_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos, const int interp_dim, const double idx_start, const double idx_step, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:gac3a09153cadef70a5f0f5d414c682857"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for the version of <a class="el" href="group__signal__func__approx1.htm#ga888bded6f0349efd16cc15b4d7687d3c">af_approx1_uniform</a> that accepts a preallocated output array.  <a href="group__signal__func__approx1.htm#gac3a09153cadef70a5f0f5d414c682857">More...</a><br /></td></tr>
<tr class="separator:gac3a09153cadef70a5f0f5d414c682857"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabad5f584e30df679b9c57193603e94b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#gabad5f584e30df679b9c57193603e94b6">af_approx2_uniform</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos0, const int interp_dim0, const double idx_start_dim0, const double idx_step_dim0, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos1, const int interp_dim1, const double idx_start_dim1, const double idx_step_dim1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:gabad5f584e30df679b9c57193603e94b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for signals interpolation on two dimensional signals along specified dimensions.  <a href="group__signal__func__approx2.htm#gabad5f584e30df679b9c57193603e94b6">More...</a><br /></td></tr>
<tr class="separator:gabad5f584e30df679b9c57193603e94b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga010d987451e971518b39540aa9aba550"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#ga010d987451e971518b39540aa9aba550">af_approx2_uniform_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos0, const int interp_dim0, const double idx_start_dim0, const double idx_step_dim0, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos1, const int interp_dim1, const double idx_start_dim1, const double idx_step_dim1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:ga010d987451e971518b39540aa9aba550"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for the version of <a class="el" href="group__signal__func__approx2.htm#gabad5f584e30df679b9c57193603e94b6">af_approx2_uniform</a> that accepts a preallocated output array.  <a href="group__signal__func__approx2.htm#ga010d987451e971518b39540aa9aba550">More...</a><br /></td></tr>
<tr class="separator:ga010d987451e971518b39540aa9aba550"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga64d0db9e59c9410ba738591ad146a884"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga64d0db9e59c9410ba738591ad146a884">af_fft</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0)</td></tr>
<tr class="memdesc:ga64d0db9e59c9410ba738591ad146a884"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__fft.htm#ga64d0db9e59c9410ba738591ad146a884">More...</a><br /></td></tr>
<tr class="separator:ga64d0db9e59c9410ba738591ad146a884"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2f03c9ee1cb80dc184c0b0a13176da1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#gaa2f03c9ee1cb80dc184c0b0a13176da1">af_fft_inplace</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor)</td></tr>
<tr class="memdesc:gaa2f03c9ee1cb80dc184c0b0a13176da1"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__fft.htm#gaa2f03c9ee1cb80dc184c0b0a13176da1">More...</a><br /></td></tr>
<tr class="separator:gaa2f03c9ee1cb80dc184c0b0a13176da1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab3fb1ed398e208a615036b4496da611"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft2.htm#gaab3fb1ed398e208a615036b4496da611">af_fft2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1)</td></tr>
<tr class="memdesc:gaab3fb1ed398e208a615036b4496da611"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__fft2.htm#gaab3fb1ed398e208a615036b4496da611">More...</a><br /></td></tr>
<tr class="separator:gaab3fb1ed398e208a615036b4496da611"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacdeebb3f221ae698833dc4900a172b8c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft2.htm#gacdeebb3f221ae698833dc4900a172b8c">af_fft2_inplace</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor)</td></tr>
<tr class="memdesc:gacdeebb3f221ae698833dc4900a172b8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__fft2.htm#gacdeebb3f221ae698833dc4900a172b8c">More...</a><br /></td></tr>
<tr class="separator:gacdeebb3f221ae698833dc4900a172b8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5138ef1740ece0fde2c796904d733c12"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft3.htm#ga5138ef1740ece0fde2c796904d733c12">af_fft3</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim2)</td></tr>
<tr class="memdesc:ga5138ef1740ece0fde2c796904d733c12"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__fft3.htm#ga5138ef1740ece0fde2c796904d733c12">More...</a><br /></td></tr>
<tr class="separator:ga5138ef1740ece0fde2c796904d733c12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0b0ab1facc734503bebc1670c4826646"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft3.htm#ga0b0ab1facc734503bebc1670c4826646">af_fft3_inplace</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor)</td></tr>
<tr class="memdesc:ga0b0ab1facc734503bebc1670c4826646"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__fft3.htm#ga0b0ab1facc734503bebc1670c4826646">More...</a><br /></td></tr>
<tr class="separator:ga0b0ab1facc734503bebc1670c4826646"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d62c120b474b3b937b0425c994645fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft.htm#ga2d62c120b474b3b937b0425c994645fe">af_ifft</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0)</td></tr>
<tr class="memdesc:ga2d62c120b474b3b937b0425c994645fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for inverse fast fourier transform on one dimensional signals.  <a href="group__signal__func__ifft.htm#ga2d62c120b474b3b937b0425c994645fe">More...</a><br /></td></tr>
<tr class="separator:ga2d62c120b474b3b937b0425c994645fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga827379bef0e2cadb382c1b6301c91429"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft.htm#ga827379bef0e2cadb382c1b6301c91429">af_ifft_inplace</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor)</td></tr>
<tr class="memdesc:ga827379bef0e2cadb382c1b6301c91429"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__ifft.htm#ga827379bef0e2cadb382c1b6301c91429">More...</a><br /></td></tr>
<tr class="separator:ga827379bef0e2cadb382c1b6301c91429"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7cd29c6a35c19240635b62cc5c30dc4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft2.htm#ga7cd29c6a35c19240635b62cc5c30dc4f">af_ifft2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1)</td></tr>
<tr class="memdesc:ga7cd29c6a35c19240635b62cc5c30dc4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for inverse fast fourier transform on two dimensional signals.  <a href="group__signal__func__ifft2.htm#ga7cd29c6a35c19240635b62cc5c30dc4f">More...</a><br /></td></tr>
<tr class="separator:ga7cd29c6a35c19240635b62cc5c30dc4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e6a165d44306db4552a56d421ce5d05"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft2.htm#ga9e6a165d44306db4552a56d421ce5d05">af_ifft2_inplace</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor)</td></tr>
<tr class="memdesc:ga9e6a165d44306db4552a56d421ce5d05"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__ifft2.htm#ga9e6a165d44306db4552a56d421ce5d05">More...</a><br /></td></tr>
<tr class="separator:ga9e6a165d44306db4552a56d421ce5d05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafdabcf20f793430134550e37f7a71bbd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft3.htm#gafdabcf20f793430134550e37f7a71bbd">af_ifft3</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim2)</td></tr>
<tr class="memdesc:gafdabcf20f793430134550e37f7a71bbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for inverse fast fourier transform on three dimensional signals.  <a href="group__signal__func__ifft3.htm#gafdabcf20f793430134550e37f7a71bbd">More...</a><br /></td></tr>
<tr class="separator:gafdabcf20f793430134550e37f7a71bbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga439a7a49723bc6cf77cf4fe7f8dfe334"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft3.htm#ga439a7a49723bc6cf77cf4fe7f8dfe334">af_ifft3_inplace</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor)</td></tr>
<tr class="memdesc:ga439a7a49723bc6cf77cf4fe7f8dfe334"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__ifft3.htm#ga439a7a49723bc6cf77cf4fe7f8dfe334">More...</a><br /></td></tr>
<tr class="separator:ga439a7a49723bc6cf77cf4fe7f8dfe334"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7486f342182a18e773f14cc2ab4cb551"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__r2c.htm#ga7486f342182a18e773f14cc2ab4cb551">af_fft_r2c</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> pad0)</td></tr>
<tr class="memdesc:ga7486f342182a18e773f14cc2ab4cb551"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for real to complex fast fourier transform for one dimensional signals.  <a href="group__signal__func__fft__r2c.htm#ga7486f342182a18e773f14cc2ab4cb551">More...</a><br /></td></tr>
<tr class="separator:ga7486f342182a18e773f14cc2ab4cb551"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga90b2f78dc0ed69867145c71104bd063f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__r2c.htm#ga90b2f78dc0ed69867145c71104bd063f">af_fft2_r2c</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> pad0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> pad1)</td></tr>
<tr class="memdesc:ga90b2f78dc0ed69867145c71104bd063f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for real to complex fast fourier transform for two dimensional signals.  <a href="group__signal__func__fft__r2c.htm#ga90b2f78dc0ed69867145c71104bd063f">More...</a><br /></td></tr>
<tr class="separator:ga90b2f78dc0ed69867145c71104bd063f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab4ca074b54218b74d8cfbda63d38be51"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__r2c.htm#gab4ca074b54218b74d8cfbda63d38be51">af_fft3_r2c</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> pad0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> pad1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> pad2)</td></tr>
<tr class="memdesc:gab4ca074b54218b74d8cfbda63d38be51"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for real to complex fast fourier transform for three dimensional signals.  <a href="group__signal__func__fft__r2c.htm#gab4ca074b54218b74d8cfbda63d38be51">More...</a><br /></td></tr>
<tr class="separator:gab4ca074b54218b74d8cfbda63d38be51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa5efdfd84213a4a07d81a5d534cde5ac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__c2r.htm#gaa5efdfd84213a4a07d81a5d534cde5ac">af_fft_c2r</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const bool is_odd)</td></tr>
<tr class="memdesc:gaa5efdfd84213a4a07d81a5d534cde5ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for complex to real fast fourier transform for one dimensional signals.  <a href="group__signal__func__fft__c2r.htm#gaa5efdfd84213a4a07d81a5d534cde5ac">More...</a><br /></td></tr>
<tr class="separator:gaa5efdfd84213a4a07d81a5d534cde5ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa7da16f226cacaffced631e08da4493"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__c2r.htm#gaaa7da16f226cacaffced631e08da4493">af_fft2_c2r</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const bool is_odd)</td></tr>
<tr class="memdesc:gaaa7da16f226cacaffced631e08da4493"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for complex to real fast fourier transform for two dimensional signals.  <a href="group__signal__func__fft__c2r.htm#gaaa7da16f226cacaffced631e08da4493">More...</a><br /></td></tr>
<tr class="separator:gaaa7da16f226cacaffced631e08da4493"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa9b3322d9ffab15268919e1f114bed24"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__c2r.htm#gaa9b3322d9ffab15268919e1f114bed24">af_fft3_c2r</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const bool is_odd)</td></tr>
<tr class="memdesc:gaa9b3322d9ffab15268919e1f114bed24"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for complex to real fast fourier transform for three dimensional signals.  <a href="group__signal__func__fft__c2r.htm#gaa9b3322d9ffab15268919e1f114bed24">More...</a><br /></td></tr>
<tr class="separator:gaa9b3322d9ffab15268919e1f114bed24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga25d77b794463b5cd72cd0b7f4af140d7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve1.htm#ga25d77b794463b5cd72cd0b7f4af140d7">af_convolve1</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode, <a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3db">af_conv_domain</a> domain)</td></tr>
<tr class="memdesc:ga25d77b794463b5cd72cd0b7f4af140d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for convolution on one dimensional signals.  <a href="group__signal__func__convolve1.htm#ga25d77b794463b5cd72cd0b7f4af140d7">More...</a><br /></td></tr>
<tr class="separator:ga25d77b794463b5cd72cd0b7f4af140d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa6ab9a3d438ff793f530193b8ccb8003"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve2.htm#gaa6ab9a3d438ff793f530193b8ccb8003">af_convolve2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode, <a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3db">af_conv_domain</a> domain)</td></tr>
<tr class="memdesc:gaa6ab9a3d438ff793f530193b8ccb8003"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for convolution on two dimensional signals.  <a href="group__signal__func__convolve2.htm#gaa6ab9a3d438ff793f530193b8ccb8003">More...</a><br /></td></tr>
<tr class="separator:gaa6ab9a3d438ff793f530193b8ccb8003"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga06948be57cd0ec2e3646a7a57a5309b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve2.htm#ga06948be57cd0ec2e3646a7a57a5309b6">af_convolve2_nn</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const unsigned stride_dims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *strides, const unsigned padding_dims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *paddings, const unsigned dilation_dims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *dilations)</td></tr>
<tr class="memdesc:ga06948be57cd0ec2e3646a7a57a5309b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for 2D convolution.  <a href="group__signal__func__convolve2.htm#ga06948be57cd0ec2e3646a7a57a5309b6">More...</a><br /></td></tr>
<tr class="separator:ga06948be57cd0ec2e3646a7a57a5309b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab87335bb7ca6ce057811248c4c641182"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve3.htm#gab87335bb7ca6ce057811248c4c641182">af_convolve3</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode, <a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3db">af_conv_domain</a> domain)</td></tr>
<tr class="memdesc:gab87335bb7ca6ce057811248c4c641182"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for convolution on three dimensional signals.  <a href="group__signal__func__convolve3.htm#gab87335bb7ca6ce057811248c4c641182">More...</a><br /></td></tr>
<tr class="separator:gab87335bb7ca6ce057811248c4c641182"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeb6ba88155cf3ef29d93f97b147e372f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve__sep.htm#gaeb6ba88155cf3ef29d93f97b147e372f">af_convolve2_sep</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> col_filter, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> row_filter, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode)</td></tr>
<tr class="memdesc:gaeb6ba88155cf3ef29d93f97b147e372f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for separable convolution on two dimensional signals.  <a href="group__signal__func__convolve__sep.htm#gaeb6ba88155cf3ef29d93f97b147e372f">More...</a><br /></td></tr>
<tr class="separator:gaeb6ba88155cf3ef29d93f97b147e372f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3cbc675cc70478f73803e906253a52c1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve1.htm#ga3cbc675cc70478f73803e906253a52c1">af_fft_convolve1</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode)</td></tr>
<tr class="memdesc:ga3cbc675cc70478f73803e906253a52c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for convolution on 1D signals using FFT.  <a href="group__signal__func__convolve1.htm#ga3cbc675cc70478f73803e906253a52c1">More...</a><br /></td></tr>
<tr class="separator:ga3cbc675cc70478f73803e906253a52c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab52ebe631d8358cdef1b5c8a95550556"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve2.htm#gab52ebe631d8358cdef1b5c8a95550556">af_fft_convolve2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode)</td></tr>
<tr class="memdesc:gab52ebe631d8358cdef1b5c8a95550556"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for convolution on 2D signals using FFT.  <a href="group__signal__func__convolve2.htm#gab52ebe631d8358cdef1b5c8a95550556">More...</a><br /></td></tr>
<tr class="separator:gab52ebe631d8358cdef1b5c8a95550556"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75f2ee15302b8aa7fa2ba0f5589af00e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve3.htm#ga75f2ee15302b8aa7fa2ba0f5589af00e">af_fft_convolve3</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode)</td></tr>
<tr class="memdesc:ga75f2ee15302b8aa7fa2ba0f5589af00e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for convolution on 3D signals using FFT.  <a href="group__signal__func__convolve3.htm#ga75f2ee15302b8aa7fa2ba0f5589af00e">More...</a><br /></td></tr>
<tr class="separator:ga75f2ee15302b8aa7fa2ba0f5589af00e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a850e69775eede4709e0d607bba240b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fir.htm#ga2a850e69775eede4709e0d607bba240b">af_fir</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *y, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> b, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> x)</td></tr>
<tr class="memdesc:ga2a850e69775eede4709e0d607bba240b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for finite impulse response filter.  <a href="group__signal__func__fir.htm#ga2a850e69775eede4709e0d607bba240b">More...</a><br /></td></tr>
<tr class="separator:ga2a850e69775eede4709e0d607bba240b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7adcc364da0a66cdfd2bb351215456c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__iir.htm#ga7adcc364da0a66cdfd2bb351215456c4">af_iir</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *y, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> b, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> a, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> x)</td></tr>
<tr class="memdesc:ga7adcc364da0a66cdfd2bb351215456c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for infinite impulse response filter.  <a href="group__signal__func__iir.htm#ga7adcc364da0a66cdfd2bb351215456c4">More...</a><br /></td></tr>
<tr class="separator:ga7adcc364da0a66cdfd2bb351215456c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaf3f62f2de0f4dc315b831e494e1b2c0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__medfilt.htm#gaaf3f62f2de0f4dc315b831e494e1b2c0">af_medfilt</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_length, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width, const <a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113">af_border_type</a> edge_pad)</td></tr>
<tr class="memdesc:gaaf3f62f2de0f4dc315b831e494e1b2c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for median filter.  <a href="group__image__func__medfilt.htm#gaaf3f62f2de0f4dc315b831e494e1b2c0">More...</a><br /></td></tr>
<tr class="separator:gaaf3f62f2de0f4dc315b831e494e1b2c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad108ea62cbbb5371bd14a17d06384359"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__medfilt.htm#gad108ea62cbbb5371bd14a17d06384359">af_medfilt1</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width, const <a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113">af_border_type</a> edge_pad)</td></tr>
<tr class="memdesc:gad108ea62cbbb5371bd14a17d06384359"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for 1D median filter.  <a href="group__image__func__medfilt.htm#gad108ea62cbbb5371bd14a17d06384359">More...</a><br /></td></tr>
<tr class="separator:gad108ea62cbbb5371bd14a17d06384359"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2cb99dca5842f74f6b9cd28eb187a9cd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__medfilt.htm#ga2cb99dca5842f74f6b9cd28eb187a9cd">af_medfilt2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_length, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width, const <a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113">af_border_type</a> edge_pad)</td></tr>
<tr class="memdesc:ga2cb99dca5842f74f6b9cd28eb187a9cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for median filter.  <a href="group__image__func__medfilt.htm#ga2cb99dca5842f74f6b9cd28eb187a9cd">More...</a><br /></td></tr>
<tr class="separator:ga2cb99dca5842f74f6b9cd28eb187a9cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ddef19b43d9a50c97b1a835df60279a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga4ddef19b43d9a50c97b1a835df60279a">af_set_fft_plan_cache_size</a> (size_t cache_size)</td></tr>
<tr class="memdesc:ga4ddef19b43d9a50c97b1a835df60279a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for setting plan cache size.  <a href="group__signal__func__fft.htm#ga4ddef19b43d9a50c97b1a835df60279a">More...</a><br /></td></tr>
<tr class="separator:ga4ddef19b43d9a50c97b1a835df60279a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="navelem"><a class="el" href="signal_8h.htm">signal.h</a></li>
        <li class="footer">Generated on Mon Sep 25 2023 12:35:28 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
