<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<title>signal.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('signal_8h.htm','');});
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">signal.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<h3 class="version">(2018-05-22 12:00:01 -0400, (build fd64c39))</h3><div class="textblock"><code>#include &lt;<a class="el" href="defines_8h_source.htm">af/defines.h</a>&gt;</code><br />
</div>
<p><a href="signal_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceaf"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm">af</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga18117f73cee98f0859f8439607f7f962"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#ga18117f73cee98f0859f8439607f7f962">approx1</a> (const array &amp;in, const array &amp;pos, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a>, const float offGrid=0.0f)</td></tr>
<tr class="memdesc:ga18117f73cee98f0859f8439607f7f962"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for data interpolation on one dimensional signals.  <a href="group__signal__func__approx1.htm#ga18117f73cee98f0859f8439607f7f962">More...</a><br /></td></tr>
<tr class="separator:ga18117f73cee98f0859f8439607f7f962"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad6a825755f97f59536faab99ed6e0c2d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#gad6a825755f97f59536faab99ed6e0c2d">approx2</a> (const array &amp;in, const array &amp;pos0, const array &amp;pos1, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a>, const float offGrid=0.0f)</td></tr>
<tr class="memdesc:gad6a825755f97f59536faab99ed6e0c2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for data interpolation on two dimensional signals.  <a href="group__signal__func__approx2.htm#gad6a825755f97f59536faab99ed6e0c2d">More...</a><br /></td></tr>
<tr class="separator:gad6a825755f97f59536faab99ed6e0c2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c64e0a83ceaed1de1d5b6a32750653a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga9c64e0a83ceaed1de1d5b6a32750653a">fftNorm</a> (const array &amp;in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0)</td></tr>
<tr class="memdesc:ga9c64e0a83ceaed1de1d5b6a32750653a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__fft.htm#ga9c64e0a83ceaed1de1d5b6a32750653a">More...</a><br /></td></tr>
<tr class="separator:ga9c64e0a83ceaed1de1d5b6a32750653a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae6ba1ccca66f12a369d0428891d26622"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft2.htm#gae6ba1ccca66f12a369d0428891d26622">fft2Norm</a> (const array &amp;in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0)</td></tr>
<tr class="memdesc:gae6ba1ccca66f12a369d0428891d26622"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__fft2.htm#gae6ba1ccca66f12a369d0428891d26622">More...</a><br /></td></tr>
<tr class="separator:gae6ba1ccca66f12a369d0428891d26622"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gade854aa82063f31221c67d4f958dc757"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft3.htm#gade854aa82063f31221c67d4f958dc757">fft3Norm</a> (const array &amp;in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim2=0)</td></tr>
<tr class="memdesc:gade854aa82063f31221c67d4f958dc757"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__fft3.htm#gade854aa82063f31221c67d4f958dc757">More...</a><br /></td></tr>
<tr class="separator:gade854aa82063f31221c67d4f958dc757"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7d171d51c68b8280a0219ab42170f46d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga7d171d51c68b8280a0219ab42170f46d">fftInPlace</a> (array &amp;in, const double norm_factor=1)</td></tr>
<tr class="memdesc:ga7d171d51c68b8280a0219ab42170f46d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__fft.htm#ga7d171d51c68b8280a0219ab42170f46d">More...</a><br /></td></tr>
<tr class="separator:ga7d171d51c68b8280a0219ab42170f46d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaec63a9c53a998da227197d206f2608b1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft2.htm#gaec63a9c53a998da227197d206f2608b1">fft2InPlace</a> (array &amp;in, const double norm_factor=1)</td></tr>
<tr class="memdesc:gaec63a9c53a998da227197d206f2608b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__fft2.htm#gaec63a9c53a998da227197d206f2608b1">More...</a><br /></td></tr>
<tr class="separator:gaec63a9c53a998da227197d206f2608b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab170f1ee7198643436c50b782c9fb312"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft3.htm#gab170f1ee7198643436c50b782c9fb312">fft3InPlace</a> (array &amp;in, const double norm_factor=1)</td></tr>
<tr class="memdesc:gab170f1ee7198643436c50b782c9fb312"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__fft3.htm#gab170f1ee7198643436c50b782c9fb312">More...</a><br /></td></tr>
<tr class="separator:gab170f1ee7198643436c50b782c9fb312"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8b445e474508d96da691a9608dec5403"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga8b445e474508d96da691a9608dec5403">fft</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0)</td></tr>
<tr class="memdesc:ga8b445e474508d96da691a9608dec5403"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__fft.htm#ga8b445e474508d96da691a9608dec5403">More...</a><br /></td></tr>
<tr class="separator:ga8b445e474508d96da691a9608dec5403"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab0fc99edd6bdb9e1a59556d108f86334"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft2.htm#gab0fc99edd6bdb9e1a59556d108f86334">fft2</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0)</td></tr>
<tr class="memdesc:gab0fc99edd6bdb9e1a59556d108f86334"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__fft2.htm#gab0fc99edd6bdb9e1a59556d108f86334">More...</a><br /></td></tr>
<tr class="separator:gab0fc99edd6bdb9e1a59556d108f86334"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga83ccdcb6f1fb05e76a41987c9c949563"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft3.htm#ga83ccdcb6f1fb05e76a41987c9c949563">fft3</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim2=0)</td></tr>
<tr class="memdesc:ga83ccdcb6f1fb05e76a41987c9c949563"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__fft3.htm#ga83ccdcb6f1fb05e76a41987c9c949563">More...</a><br /></td></tr>
<tr class="separator:ga83ccdcb6f1fb05e76a41987c9c949563"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6e082e788e1085ae5e39794ddade9913"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga6e082e788e1085ae5e39794ddade9913">dft</a> (const array &amp;in, const double norm_factor, const dim4 outDims)</td></tr>
<tr class="memdesc:ga6e082e788e1085ae5e39794ddade9913"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on any(1d, 2d, 3d) dimensional signals.  <a href="group__signal__func__fft.htm#ga6e082e788e1085ae5e39794ddade9913">More...</a><br /></td></tr>
<tr class="separator:ga6e082e788e1085ae5e39794ddade9913"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7216a4f11834c5e983d6d5e6b87c532c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga7216a4f11834c5e983d6d5e6b87c532c">dft</a> (const array &amp;in, const dim4 outDims)</td></tr>
<tr class="memdesc:ga7216a4f11834c5e983d6d5e6b87c532c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on any(1d, 2d, 3d) dimensional signals.  <a href="group__signal__func__fft.htm#ga7216a4f11834c5e983d6d5e6b87c532c">More...</a><br /></td></tr>
<tr class="separator:ga7216a4f11834c5e983d6d5e6b87c532c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga291b032096457e725fa6bcd2e9b3ce30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga291b032096457e725fa6bcd2e9b3ce30">dft</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga291b032096457e725fa6bcd2e9b3ce30"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on any(1d, 2d, 3d) dimensional signals.  <a href="group__signal__func__fft.htm#ga291b032096457e725fa6bcd2e9b3ce30">More...</a><br /></td></tr>
<tr class="separator:ga291b032096457e725fa6bcd2e9b3ce30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf63a9f9f549c8f660d0b27294d9ba37a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft.htm#gaf63a9f9f549c8f660d0b27294d9ba37a">ifftNorm</a> (const array &amp;in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0)</td></tr>
<tr class="memdesc:gaf63a9f9f549c8f660d0b27294d9ba37a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on one dimensional signals.  <a href="group__signal__func__ifft.htm#gaf63a9f9f549c8f660d0b27294d9ba37a">More...</a><br /></td></tr>
<tr class="separator:gaf63a9f9f549c8f660d0b27294d9ba37a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga68d6b74c2446cb00448784725d8ebc1a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft2.htm#ga68d6b74c2446cb00448784725d8ebc1a">ifft2Norm</a> (const array &amp;in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0)</td></tr>
<tr class="memdesc:ga68d6b74c2446cb00448784725d8ebc1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on two dimensional signals.  <a href="group__signal__func__ifft2.htm#ga68d6b74c2446cb00448784725d8ebc1a">More...</a><br /></td></tr>
<tr class="separator:ga68d6b74c2446cb00448784725d8ebc1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae00c56fdd3efc957da9ec84c2bdaa64f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft3.htm#gae00c56fdd3efc957da9ec84c2bdaa64f">ifft3Norm</a> (const array &amp;in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim2=0)</td></tr>
<tr class="memdesc:gae00c56fdd3efc957da9ec84c2bdaa64f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on three dimensional signals.  <a href="group__signal__func__ifft3.htm#gae00c56fdd3efc957da9ec84c2bdaa64f">More...</a><br /></td></tr>
<tr class="separator:gae00c56fdd3efc957da9ec84c2bdaa64f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5cee5baba1961e509d4235dcd80c4073"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft.htm#ga5cee5baba1961e509d4235dcd80c4073">ifftInPlace</a> (array &amp;in, const double norm_factor=1)</td></tr>
<tr class="memdesc:ga5cee5baba1961e509d4235dcd80c4073"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__ifft.htm#ga5cee5baba1961e509d4235dcd80c4073">More...</a><br /></td></tr>
<tr class="separator:ga5cee5baba1961e509d4235dcd80c4073"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab43fda5cc7981bd91f089731f634ec51"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft2.htm#gab43fda5cc7981bd91f089731f634ec51">ifft2InPlace</a> (array &amp;in, const double norm_factor=1)</td></tr>
<tr class="memdesc:gab43fda5cc7981bd91f089731f634ec51"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__ifft2.htm#gab43fda5cc7981bd91f089731f634ec51">More...</a><br /></td></tr>
<tr class="separator:gab43fda5cc7981bd91f089731f634ec51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga133593d11131b304a3692048355f78e7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft3.htm#ga133593d11131b304a3692048355f78e7">ifft3InPlace</a> (array &amp;in, const double norm_factor=1)</td></tr>
<tr class="memdesc:ga133593d11131b304a3692048355f78e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__ifft3.htm#ga133593d11131b304a3692048355f78e7">More...</a><br /></td></tr>
<tr class="separator:ga133593d11131b304a3692048355f78e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf78b830b324704ae7c96e7e608502963"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft.htm#gaf78b830b324704ae7c96e7e608502963">ifft</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0)</td></tr>
<tr class="memdesc:gaf78b830b324704ae7c96e7e608502963"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on one dimensional signals.  <a href="group__signal__func__ifft.htm#gaf78b830b324704ae7c96e7e608502963">More...</a><br /></td></tr>
<tr class="separator:gaf78b830b324704ae7c96e7e608502963"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga42c5ef4e312c3827cc8e0830f3d14950"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft2.htm#ga42c5ef4e312c3827cc8e0830f3d14950">ifft2</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0)</td></tr>
<tr class="memdesc:ga42c5ef4e312c3827cc8e0830f3d14950"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on two dimensional signals.  <a href="group__signal__func__ifft2.htm#ga42c5ef4e312c3827cc8e0830f3d14950">More...</a><br /></td></tr>
<tr class="separator:ga42c5ef4e312c3827cc8e0830f3d14950"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb26d2805d8b62f2ed44145502c4ee4d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft3.htm#gadb26d2805d8b62f2ed44145502c4ee4d">ifft3</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim2=0)</td></tr>
<tr class="memdesc:gadb26d2805d8b62f2ed44145502c4ee4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on three dimensional signals.  <a href="group__signal__func__ifft3.htm#gadb26d2805d8b62f2ed44145502c4ee4d">More...</a><br /></td></tr>
<tr class="separator:gadb26d2805d8b62f2ed44145502c4ee4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e03a61224c7b9d217b0099ce1d5be3a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga9e03a61224c7b9d217b0099ce1d5be3a">idft</a> (const array &amp;in, const double norm_factor, const dim4 outDims)</td></tr>
<tr class="memdesc:ga9e03a61224c7b9d217b0099ce1d5be3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on any(1d, 2d, 3d) dimensional signals.  <a href="group__signal__func__fft.htm#ga9e03a61224c7b9d217b0099ce1d5be3a">More...</a><br /></td></tr>
<tr class="separator:ga9e03a61224c7b9d217b0099ce1d5be3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1a47710d5128c3e4ffa79b00d9b5c1d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga1a47710d5128c3e4ffa79b00d9b5c1d0">idft</a> (const array &amp;in, const dim4 outDims)</td></tr>
<tr class="memdesc:ga1a47710d5128c3e4ffa79b00d9b5c1d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on any(1d, 2d, 3d) dimensional signals.  <a href="group__signal__func__fft.htm#ga1a47710d5128c3e4ffa79b00d9b5c1d0">More...</a><br /></td></tr>
<tr class="separator:ga1a47710d5128c3e4ffa79b00d9b5c1d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc4ce84fc3ee55fe804a7d441450bf41"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#gabc4ce84fc3ee55fe804a7d441450bf41">idft</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gabc4ce84fc3ee55fe804a7d441450bf41"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for inverse fast fourier transform on any(1d, 2d, 3d) dimensional signals.  <a href="group__signal__func__fft.htm#gabc4ce84fc3ee55fe804a7d441450bf41">More...</a><br /></td></tr>
<tr class="separator:gabc4ce84fc3ee55fe804a7d441450bf41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaecfef8da267bdc9bddb802badf0d1da3"><td class="memTemplParams" colspan="2">template&lt;int rank&gt; </td></tr>
<tr class="memitem:gaecfef8da267bdc9bddb802badf0d1da3"><td class="memTemplItemLeft" align="right" valign="top">array&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__r2c.htm#gaecfef8da267bdc9bddb802badf0d1da3">fftR2C</a> (const array &amp;in, const dim4 &amp;dims, const double norm_factor=0)</td></tr>
<tr class="memdesc:gaecfef8da267bdc9bddb802badf0d1da3"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for real to complex fast fourier transform for one dimensional signals.  <a href="group__signal__func__fft__r2c.htm#gaecfef8da267bdc9bddb802badf0d1da3">More...</a><br /></td></tr>
<tr class="separator:gaecfef8da267bdc9bddb802badf0d1da3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5a1faa1bcf98eff31909b7d8fe669dfe"><td class="memTemplParams" colspan="2">template&lt;int rank&gt; </td></tr>
<tr class="memitem:ga5a1faa1bcf98eff31909b7d8fe669dfe"><td class="memTemplItemLeft" align="right" valign="top">array&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__r2c.htm#ga5a1faa1bcf98eff31909b7d8fe669dfe">fftR2C</a> (const array &amp;in, const double norm_factor=0)</td></tr>
<tr class="memdesc:ga5a1faa1bcf98eff31909b7d8fe669dfe"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for real to complex fast fourier transform for one dimensional signals.  <a href="group__signal__func__fft__r2c.htm#ga5a1faa1bcf98eff31909b7d8fe669dfe">More...</a><br /></td></tr>
<tr class="separator:ga5a1faa1bcf98eff31909b7d8fe669dfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01fa22566a246623a7378960e4ac06a3"><td class="memTemplParams" colspan="2">template&lt;int rank&gt; </td></tr>
<tr class="memitem:ga01fa22566a246623a7378960e4ac06a3"><td class="memTemplItemLeft" align="right" valign="top">array&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__c2r.htm#ga01fa22566a246623a7378960e4ac06a3">fftC2R</a> (const array &amp;in, bool is_odd=false, const double norm_factor=0)</td></tr>
<tr class="memdesc:ga01fa22566a246623a7378960e4ac06a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for complex to real fast fourier transform.  <a href="group__signal__func__fft__c2r.htm#ga01fa22566a246623a7378960e4ac06a3">More...</a><br /></td></tr>
<tr class="separator:ga01fa22566a246623a7378960e4ac06a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae79b64c8b0d6a06309e8b67bf89cf6c9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">convolve</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>, const convDomain domain=<a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dbae105d11695ba3a2287e32c552d3567dd">AF_CONV_AUTO</a>)</td></tr>
<tr class="memdesc:gae79b64c8b0d6a06309e8b67bf89cf6c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution any(one through three) dimensional signals.  <a href="group__signal__func__convolve.htm#gae79b64c8b0d6a06309e8b67bf89cf6c9">More...</a><br /></td></tr>
<tr class="separator:gae79b64c8b0d6a06309e8b67bf89cf6c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae5e9f278ff9b46229184ca2adc144ece"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve.htm#gae5e9f278ff9b46229184ca2adc144ece">convolve</a> (const array &amp;col_filter, const array &amp;row_filter, const array &amp;signal, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>)</td></tr>
<tr class="memdesc:gae5e9f278ff9b46229184ca2adc144ece"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for separable convolution on two dimensional signals.  <a href="group__signal__func__convolve.htm#gae5e9f278ff9b46229184ca2adc144ece">More...</a><br /></td></tr>
<tr class="separator:gae5e9f278ff9b46229184ca2adc144ece"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga72a117436a82ed5fe593fe7072c01968"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve1.htm#ga72a117436a82ed5fe593fe7072c01968">convolve1</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>, const convDomain domain=<a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dbae105d11695ba3a2287e32c552d3567dd">AF_CONV_AUTO</a>)</td></tr>
<tr class="memdesc:ga72a117436a82ed5fe593fe7072c01968"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on one dimensional signals.  <a href="group__signal__func__convolve1.htm#ga72a117436a82ed5fe593fe7072c01968">More...</a><br /></td></tr>
<tr class="separator:ga72a117436a82ed5fe593fe7072c01968"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0aec29b4d4c9cf4412420b91c96ffe6c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve2.htm#ga0aec29b4d4c9cf4412420b91c96ffe6c">convolve2</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>, const convDomain domain=<a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dbae105d11695ba3a2287e32c552d3567dd">AF_CONV_AUTO</a>)</td></tr>
<tr class="memdesc:ga0aec29b4d4c9cf4412420b91c96ffe6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on two dimensional signals.  <a href="group__signal__func__convolve2.htm#ga0aec29b4d4c9cf4412420b91c96ffe6c">More...</a><br /></td></tr>
<tr class="separator:ga0aec29b4d4c9cf4412420b91c96ffe6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga612982eb8719085e327ca764e4f728d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve3.htm#ga612982eb8719085e327ca764e4f728d6">convolve3</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>, const convDomain domain=<a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3dbae105d11695ba3a2287e32c552d3567dd">AF_CONV_AUTO</a>)</td></tr>
<tr class="memdesc:ga612982eb8719085e327ca764e4f728d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on three dimensional signals.  <a href="group__signal__func__convolve3.htm#ga612982eb8719085e327ca764e4f728d6">More...</a><br /></td></tr>
<tr class="separator:ga612982eb8719085e327ca764e4f728d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga711d2440b2d954215a02d90ac8952af8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__convolve.htm#ga711d2440b2d954215a02d90ac8952af8">fftConvolve</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>)</td></tr>
<tr class="memdesc:ga711d2440b2d954215a02d90ac8952af8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for FFT-based convolution any(one through three) dimensional signals.  <a href="group__signal__func__fft__convolve.htm#ga711d2440b2d954215a02d90ac8952af8">More...</a><br /></td></tr>
<tr class="separator:ga711d2440b2d954215a02d90ac8952af8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95ec82427447ca372f760341e6e4da7d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm#a95ec82427447ca372f760341e6e4da7d">fftConvolve1</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>)</td></tr>
<tr class="memdesc:a95ec82427447ca372f760341e6e4da7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on one dimensional signals.  <a href="namespaceaf.htm#a95ec82427447ca372f760341e6e4da7d">More...</a><br /></td></tr>
<tr class="separator:a95ec82427447ca372f760341e6e4da7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9144b146cb6c74da32eb75fdf3570b27"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__convolve2.htm#ga9144b146cb6c74da32eb75fdf3570b27">fftConvolve2</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>)</td></tr>
<tr class="memdesc:ga9144b146cb6c74da32eb75fdf3570b27"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on two dimensional signals.  <a href="group__signal__func__fft__convolve2.htm#ga9144b146cb6c74da32eb75fdf3570b27">More...</a><br /></td></tr>
<tr class="separator:ga9144b146cb6c74da32eb75fdf3570b27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f8961d19f4fba3e585a14e3864fdd2f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm#a1f8961d19f4fba3e585a14e3864fdd2f">fftConvolve3</a> (const array &amp;signal, const array &amp;filter, const convMode mode=<a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdca35a0029690106be18b67f0f30357ab48">AF_CONV_DEFAULT</a>)</td></tr>
<tr class="memdesc:a1f8961d19f4fba3e585a14e3864fdd2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for convolution on three dimensional signals.  <a href="namespaceaf.htm#a1f8961d19f4fba3e585a14e3864fdd2f">More...</a><br /></td></tr>
<tr class="separator:a1f8961d19f4fba3e585a14e3864fdd2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac80d4c15f750d3b70c31748c329e1282"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fir.htm#gac80d4c15f750d3b70c31748c329e1282">fir</a> (const array &amp;b, const array &amp;x)</td></tr>
<tr class="memdesc:gac80d4c15f750d3b70c31748c329e1282"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for finite impulse response filter.  <a href="group__signal__func__fir.htm#gac80d4c15f750d3b70c31748c329e1282">More...</a><br /></td></tr>
<tr class="separator:gac80d4c15f750d3b70c31748c329e1282"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga050877395b6428d4c0ae57cf08f82e83"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__iir.htm#ga050877395b6428d4c0ae57cf08f82e83">iir</a> (const array &amp;b, const array &amp;a, const array &amp;x)</td></tr>
<tr class="memdesc:ga050877395b6428d4c0ae57cf08f82e83"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for infinite impulse response filter.  <a href="group__signal__func__iir.htm#ga050877395b6428d4c0ae57cf08f82e83">More...</a><br /></td></tr>
<tr class="separator:ga050877395b6428d4c0ae57cf08f82e83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gace207668a873b0f5f49d8a97a8df5928"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__medfilt.htm#gace207668a873b0f5f49d8a97a8df5928">medfilt</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_length=3, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width=3, const borderType edge_pad=<a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113aa9ec0ad516e307a4d215cb9cb43cceb7">AF_PAD_ZERO</a>)</td></tr>
<tr class="memdesc:gace207668a873b0f5f49d8a97a8df5928"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for median filter.  <a href="group__image__func__medfilt.htm#gace207668a873b0f5f49d8a97a8df5928">More...</a><br /></td></tr>
<tr class="separator:gace207668a873b0f5f49d8a97a8df5928"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3ed06c96f5e336e4cc60d001dc5cdd89"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__medfilt.htm#ga3ed06c96f5e336e4cc60d001dc5cdd89">medfilt1</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width=3, const borderType edge_pad=<a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113aa9ec0ad516e307a4d215cb9cb43cceb7">AF_PAD_ZERO</a>)</td></tr>
<tr class="memdesc:ga3ed06c96f5e336e4cc60d001dc5cdd89"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for median filter.  <a href="group__image__func__medfilt.htm#ga3ed06c96f5e336e4cc60d001dc5cdd89">More...</a><br /></td></tr>
<tr class="separator:ga3ed06c96f5e336e4cc60d001dc5cdd89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1316bb34afc339942353c54807ca4591"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__medfilt.htm#ga1316bb34afc339942353c54807ca4591">medfilt2</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_length=3, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width=3, const borderType edge_pad=<a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113aa9ec0ad516e307a4d215cb9cb43cceb7">AF_PAD_ZERO</a>)</td></tr>
<tr class="memdesc:ga1316bb34afc339942353c54807ca4591"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for median filter.  <a href="group__image__func__medfilt.htm#ga1316bb34afc339942353c54807ca4591">More...</a><br /></td></tr>
<tr class="separator:ga1316bb34afc339942353c54807ca4591"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4be4eadea7bc6db08b4d8faf7820d64"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm#af4be4eadea7bc6db08b4d8faf7820d64">setFFTPlanCacheSize</a> (size_t cacheSize)</td></tr>
<tr class="memdesc:af4be4eadea7bc6db08b4d8faf7820d64"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for setting plan cache size.  <a href="namespaceaf.htm#af4be4eadea7bc6db08b4d8faf7820d64">More...</a><br /></td></tr>
<tr class="separator:af4be4eadea7bc6db08b4d8faf7820d64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0085f85729768af1ca829157335f1cb5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx1.htm#ga0085f85729768af1ca829157335f1cb5">af_approx1</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float offGrid)</td></tr>
<tr class="memdesc:ga0085f85729768af1ca829157335f1cb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for signals interpolation on one dimensional signals.  <a href="group__signal__func__approx1.htm#ga0085f85729768af1ca829157335f1cb5">More...</a><br /></td></tr>
<tr class="separator:ga0085f85729768af1ca829157335f1cb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga449442bd0e0a9a96a9b05c796c93f032"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#ga449442bd0e0a9a96a9b05c796c93f032">af_approx2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos0, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float offGrid)</td></tr>
<tr class="memdesc:ga449442bd0e0a9a96a9b05c796c93f032"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for signals interpolation on two dimensional signals.  <a href="group__signal__func__approx2.htm#ga449442bd0e0a9a96a9b05c796c93f032">More...</a><br /></td></tr>
<tr class="separator:ga449442bd0e0a9a96a9b05c796c93f032"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga64d0db9e59c9410ba738591ad146a884"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga64d0db9e59c9410ba738591ad146a884">af_fft</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0)</td></tr>
<tr class="memdesc:ga64d0db9e59c9410ba738591ad146a884"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__fft.htm#ga64d0db9e59c9410ba738591ad146a884">More...</a><br /></td></tr>
<tr class="separator:ga64d0db9e59c9410ba738591ad146a884"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2f03c9ee1cb80dc184c0b0a13176da1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#gaa2f03c9ee1cb80dc184c0b0a13176da1">af_fft_inplace</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor)</td></tr>
<tr class="memdesc:gaa2f03c9ee1cb80dc184c0b0a13176da1"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__fft.htm#gaa2f03c9ee1cb80dc184c0b0a13176da1">More...</a><br /></td></tr>
<tr class="separator:gaa2f03c9ee1cb80dc184c0b0a13176da1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab3fb1ed398e208a615036b4496da611"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft2.htm#gaab3fb1ed398e208a615036b4496da611">af_fft2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1)</td></tr>
<tr class="memdesc:gaab3fb1ed398e208a615036b4496da611"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__fft2.htm#gaab3fb1ed398e208a615036b4496da611">More...</a><br /></td></tr>
<tr class="separator:gaab3fb1ed398e208a615036b4496da611"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacdeebb3f221ae698833dc4900a172b8c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft2.htm#gacdeebb3f221ae698833dc4900a172b8c">af_fft2_inplace</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor)</td></tr>
<tr class="memdesc:gacdeebb3f221ae698833dc4900a172b8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__fft2.htm#gacdeebb3f221ae698833dc4900a172b8c">More...</a><br /></td></tr>
<tr class="separator:gacdeebb3f221ae698833dc4900a172b8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5138ef1740ece0fde2c796904d733c12"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft3.htm#ga5138ef1740ece0fde2c796904d733c12">af_fft3</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim2)</td></tr>
<tr class="memdesc:ga5138ef1740ece0fde2c796904d733c12"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__fft3.htm#ga5138ef1740ece0fde2c796904d733c12">More...</a><br /></td></tr>
<tr class="separator:ga5138ef1740ece0fde2c796904d733c12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0b0ab1facc734503bebc1670c4826646"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft3.htm#ga0b0ab1facc734503bebc1670c4826646">af_fft3_inplace</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor)</td></tr>
<tr class="memdesc:ga0b0ab1facc734503bebc1670c4826646"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__fft3.htm#ga0b0ab1facc734503bebc1670c4826646">More...</a><br /></td></tr>
<tr class="separator:ga0b0ab1facc734503bebc1670c4826646"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d62c120b474b3b937b0425c994645fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft.htm#ga2d62c120b474b3b937b0425c994645fe">af_ifft</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0)</td></tr>
<tr class="memdesc:ga2d62c120b474b3b937b0425c994645fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for inverse fast fourier transform on one dimensional signals.  <a href="group__signal__func__ifft.htm#ga2d62c120b474b3b937b0425c994645fe">More...</a><br /></td></tr>
<tr class="separator:ga2d62c120b474b3b937b0425c994645fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga827379bef0e2cadb382c1b6301c91429"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft.htm#ga827379bef0e2cadb382c1b6301c91429">af_ifft_inplace</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor)</td></tr>
<tr class="memdesc:ga827379bef0e2cadb382c1b6301c91429"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on one dimensional signals.  <a href="group__signal__func__ifft.htm#ga827379bef0e2cadb382c1b6301c91429">More...</a><br /></td></tr>
<tr class="separator:ga827379bef0e2cadb382c1b6301c91429"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7cd29c6a35c19240635b62cc5c30dc4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft2.htm#ga7cd29c6a35c19240635b62cc5c30dc4f">af_ifft2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1)</td></tr>
<tr class="memdesc:ga7cd29c6a35c19240635b62cc5c30dc4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for inverse fast fourier transform on two dimensional signals.  <a href="group__signal__func__ifft2.htm#ga7cd29c6a35c19240635b62cc5c30dc4f">More...</a><br /></td></tr>
<tr class="separator:ga7cd29c6a35c19240635b62cc5c30dc4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e6a165d44306db4552a56d421ce5d05"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft2.htm#ga9e6a165d44306db4552a56d421ce5d05">af_ifft2_inplace</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor)</td></tr>
<tr class="memdesc:ga9e6a165d44306db4552a56d421ce5d05"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on two dimensional signals.  <a href="group__signal__func__ifft2.htm#ga9e6a165d44306db4552a56d421ce5d05">More...</a><br /></td></tr>
<tr class="separator:ga9e6a165d44306db4552a56d421ce5d05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafdabcf20f793430134550e37f7a71bbd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft3.htm#gafdabcf20f793430134550e37f7a71bbd">af_ifft3</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim2)</td></tr>
<tr class="memdesc:gafdabcf20f793430134550e37f7a71bbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for inverse fast fourier transform on three dimensional signals.  <a href="group__signal__func__ifft3.htm#gafdabcf20f793430134550e37f7a71bbd">More...</a><br /></td></tr>
<tr class="separator:gafdabcf20f793430134550e37f7a71bbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga439a7a49723bc6cf77cf4fe7f8dfe334"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__ifft3.htm#ga439a7a49723bc6cf77cf4fe7f8dfe334">af_ifft3_inplace</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor)</td></tr>
<tr class="memdesc:ga439a7a49723bc6cf77cf4fe7f8dfe334"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for fast fourier transform on three dimensional signals.  <a href="group__signal__func__ifft3.htm#ga439a7a49723bc6cf77cf4fe7f8dfe334">More...</a><br /></td></tr>
<tr class="separator:ga439a7a49723bc6cf77cf4fe7f8dfe334"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7486f342182a18e773f14cc2ab4cb551"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__r2c.htm#ga7486f342182a18e773f14cc2ab4cb551">af_fft_r2c</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> pad0)</td></tr>
<tr class="memdesc:ga7486f342182a18e773f14cc2ab4cb551"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for real to complex fast fourier transform for one dimensional signals.  <a href="group__signal__func__fft__r2c.htm#ga7486f342182a18e773f14cc2ab4cb551">More...</a><br /></td></tr>
<tr class="separator:ga7486f342182a18e773f14cc2ab4cb551"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga90b2f78dc0ed69867145c71104bd063f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__r2c.htm#ga90b2f78dc0ed69867145c71104bd063f">af_fft2_r2c</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> pad0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> pad1)</td></tr>
<tr class="memdesc:ga90b2f78dc0ed69867145c71104bd063f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for real to complex fast fourier transform for two dimensional signals.  <a href="group__signal__func__fft__r2c.htm#ga90b2f78dc0ed69867145c71104bd063f">More...</a><br /></td></tr>
<tr class="separator:ga90b2f78dc0ed69867145c71104bd063f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab4ca074b54218b74d8cfbda63d38be51"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__r2c.htm#gab4ca074b54218b74d8cfbda63d38be51">af_fft3_r2c</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> pad0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> pad1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> pad2)</td></tr>
<tr class="memdesc:gab4ca074b54218b74d8cfbda63d38be51"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for real to complex fast fourier transform for three dimensional signals.  <a href="group__signal__func__fft__r2c.htm#gab4ca074b54218b74d8cfbda63d38be51">More...</a><br /></td></tr>
<tr class="separator:gab4ca074b54218b74d8cfbda63d38be51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa5efdfd84213a4a07d81a5d534cde5ac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__c2r.htm#gaa5efdfd84213a4a07d81a5d534cde5ac">af_fft_c2r</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const bool is_odd)</td></tr>
<tr class="memdesc:gaa5efdfd84213a4a07d81a5d534cde5ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for complex to real fast fourier transform for one dimensional signals.  <a href="group__signal__func__fft__c2r.htm#gaa5efdfd84213a4a07d81a5d534cde5ac">More...</a><br /></td></tr>
<tr class="separator:gaa5efdfd84213a4a07d81a5d534cde5ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa7da16f226cacaffced631e08da4493"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__c2r.htm#gaaa7da16f226cacaffced631e08da4493">af_fft2_c2r</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const bool is_odd)</td></tr>
<tr class="memdesc:gaaa7da16f226cacaffced631e08da4493"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for complex to real fast fourier transform for two dimensional signals.  <a href="group__signal__func__fft__c2r.htm#gaaa7da16f226cacaffced631e08da4493">More...</a><br /></td></tr>
<tr class="separator:gaaa7da16f226cacaffced631e08da4493"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa9b3322d9ffab15268919e1f114bed24"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__c2r.htm#gaa9b3322d9ffab15268919e1f114bed24">af_fft3_c2r</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const double norm_factor, const bool is_odd)</td></tr>
<tr class="memdesc:gaa9b3322d9ffab15268919e1f114bed24"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for complex to real fast fourier transform for three dimensional signals.  <a href="group__signal__func__fft__c2r.htm#gaa9b3322d9ffab15268919e1f114bed24">More...</a><br /></td></tr>
<tr class="separator:gaa9b3322d9ffab15268919e1f114bed24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga25d77b794463b5cd72cd0b7f4af140d7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve1.htm#ga25d77b794463b5cd72cd0b7f4af140d7">af_convolve1</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode, <a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3db">af_conv_domain</a> domain)</td></tr>
<tr class="memdesc:ga25d77b794463b5cd72cd0b7f4af140d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for convolution on one dimensional signals.  <a href="group__signal__func__convolve1.htm#ga25d77b794463b5cd72cd0b7f4af140d7">More...</a><br /></td></tr>
<tr class="separator:ga25d77b794463b5cd72cd0b7f4af140d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa6ab9a3d438ff793f530193b8ccb8003"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve2.htm#gaa6ab9a3d438ff793f530193b8ccb8003">af_convolve2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode, <a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3db">af_conv_domain</a> domain)</td></tr>
<tr class="memdesc:gaa6ab9a3d438ff793f530193b8ccb8003"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for convolution on two dimensional signals.  <a href="group__signal__func__convolve2.htm#gaa6ab9a3d438ff793f530193b8ccb8003">More...</a><br /></td></tr>
<tr class="separator:gaa6ab9a3d438ff793f530193b8ccb8003"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab87335bb7ca6ce057811248c4c641182"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve3.htm#gab87335bb7ca6ce057811248c4c641182">af_convolve3</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode, <a class="el" href="defines_8h.htm#a8519ae1caafab760d2421cd6ac13a3db">af_conv_domain</a> domain)</td></tr>
<tr class="memdesc:gab87335bb7ca6ce057811248c4c641182"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for convolution on three dimensional signals.  <a href="group__signal__func__convolve3.htm#gab87335bb7ca6ce057811248c4c641182">More...</a><br /></td></tr>
<tr class="separator:gab87335bb7ca6ce057811248c4c641182"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeb6ba88155cf3ef29d93f97b147e372f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__convolve.htm#gaeb6ba88155cf3ef29d93f97b147e372f">af_convolve2_sep</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> col_filter, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> row_filter, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode)</td></tr>
<tr class="memdesc:gaeb6ba88155cf3ef29d93f97b147e372f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for separable convolution on two dimensional signals.  <a href="group__signal__func__convolve.htm#gaeb6ba88155cf3ef29d93f97b147e372f">More...</a><br /></td></tr>
<tr class="separator:gaeb6ba88155cf3ef29d93f97b147e372f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cbc675cc70478f73803e906253a52c1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="signal_8h.htm#a3cbc675cc70478f73803e906253a52c1">af_fft_convolve1</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode)</td></tr>
<tr class="memdesc:a3cbc675cc70478f73803e906253a52c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for FFT-based convolution on one dimensional signals.  <a href="#a3cbc675cc70478f73803e906253a52c1">More...</a><br /></td></tr>
<tr class="separator:a3cbc675cc70478f73803e906253a52c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab52ebe631d8358cdef1b5c8a95550556"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__convolve2.htm#gab52ebe631d8358cdef1b5c8a95550556">af_fft_convolve2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode)</td></tr>
<tr class="memdesc:gab52ebe631d8358cdef1b5c8a95550556"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for FFT-based convolution on two dimensional signals.  <a href="group__signal__func__fft__convolve2.htm#gab52ebe631d8358cdef1b5c8a95550556">More...</a><br /></td></tr>
<tr class="separator:gab52ebe631d8358cdef1b5c8a95550556"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75f2ee15302b8aa7fa2ba0f5589af00e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft__convolve3.htm#ga75f2ee15302b8aa7fa2ba0f5589af00e">af_fft_convolve3</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> signal, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> filter, const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a> mode)</td></tr>
<tr class="memdesc:ga75f2ee15302b8aa7fa2ba0f5589af00e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for FFT-based convolution on three dimensional signals.  <a href="group__signal__func__fft__convolve3.htm#ga75f2ee15302b8aa7fa2ba0f5589af00e">More...</a><br /></td></tr>
<tr class="separator:ga75f2ee15302b8aa7fa2ba0f5589af00e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a850e69775eede4709e0d607bba240b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fir.htm#ga2a850e69775eede4709e0d607bba240b">af_fir</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *y, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> b, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> x)</td></tr>
<tr class="memdesc:ga2a850e69775eede4709e0d607bba240b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for finite impulse response filter.  <a href="group__signal__func__fir.htm#ga2a850e69775eede4709e0d607bba240b">More...</a><br /></td></tr>
<tr class="separator:ga2a850e69775eede4709e0d607bba240b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7adcc364da0a66cdfd2bb351215456c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__iir.htm#ga7adcc364da0a66cdfd2bb351215456c4">af_iir</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *y, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> b, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> a, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> x)</td></tr>
<tr class="memdesc:ga7adcc364da0a66cdfd2bb351215456c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for infinite impulse response filter.  <a href="group__signal__func__iir.htm#ga7adcc364da0a66cdfd2bb351215456c4">More...</a><br /></td></tr>
<tr class="separator:ga7adcc364da0a66cdfd2bb351215456c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaf3f62f2de0f4dc315b831e494e1b2c0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__medfilt.htm#gaaf3f62f2de0f4dc315b831e494e1b2c0">af_medfilt</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_length, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width, const <a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113">af_border_type</a> edge_pad)</td></tr>
<tr class="memdesc:gaaf3f62f2de0f4dc315b831e494e1b2c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for median filter.  <a href="group__image__func__medfilt.htm#gaaf3f62f2de0f4dc315b831e494e1b2c0">More...</a><br /></td></tr>
<tr class="separator:gaaf3f62f2de0f4dc315b831e494e1b2c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad108ea62cbbb5371bd14a17d06384359"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__medfilt.htm#gad108ea62cbbb5371bd14a17d06384359">af_medfilt1</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width, const <a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113">af_border_type</a> edge_pad)</td></tr>
<tr class="memdesc:gad108ea62cbbb5371bd14a17d06384359"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for 1D median filter.  <a href="group__image__func__medfilt.htm#gad108ea62cbbb5371bd14a17d06384359">More...</a><br /></td></tr>
<tr class="separator:gad108ea62cbbb5371bd14a17d06384359"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2cb99dca5842f74f6b9cd28eb187a9cd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__medfilt.htm#ga2cb99dca5842f74f6b9cd28eb187a9cd">af_medfilt2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_length, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width, const <a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113">af_border_type</a> edge_pad)</td></tr>
<tr class="memdesc:ga2cb99dca5842f74f6b9cd28eb187a9cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for median filter.  <a href="group__image__func__medfilt.htm#ga2cb99dca5842f74f6b9cd28eb187a9cd">More...</a><br /></td></tr>
<tr class="separator:ga2cb99dca5842f74f6b9cd28eb187a9cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ddef19b43d9a50c97b1a835df60279a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__fft.htm#ga4ddef19b43d9a50c97b1a835df60279a">af_set_fft_plan_cache_size</a> (size_t cache_size)</td></tr>
<tr class="memdesc:ga4ddef19b43d9a50c97b1a835df60279a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for setting plan cache size.  <a href="group__signal__func__fft.htm#ga4ddef19b43d9a50c97b1a835df60279a">More...</a><br /></td></tr>
<tr class="separator:ga4ddef19b43d9a50c97b1a835df60279a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a3cbc675cc70478f73803e906253a52c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3cbc675cc70478f73803e906253a52c1">&#9670;&nbsp;</a></span>af_fft_convolve1()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_fft_convolve1 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>signal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac999a96d4a0b4ff19efba40dd5894fdc">af_conv_mode</a>&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for FFT-based convolution on one dimensional signals. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>is convolved array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">signal</td><td>is the input signal </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filter</td><td>is the signal that shall be used for the convolution operation </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>indicates if the convolution should be expanded or not(where output size equals input) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the convolution is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
