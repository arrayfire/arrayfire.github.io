<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: image.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('image_8h.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">image.h File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="defines_8h_source.htm">af/defines.h</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="features_8h_source.htm">af/features.h</a>&gt;</code><br />
</div>
<p><a href="image_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceaf"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceaf.htm">af</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga98d1d8b7f0cd46065014f3bf4d73adda"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__calc__func__grad.htm#ga98d1d8b7f0cd46065014f3bf4d73adda">grad</a> (array &amp;dx, array &amp;dy, const array &amp;in)</td></tr>
<tr class="memdesc:ga98d1d8b7f0cd46065014f3bf4d73adda"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for calculating the gradients.  <a href="group__calc__func__grad.htm#ga98d1d8b7f0cd46065014f3bf4d73adda">More...</a><br /></td></tr>
<tr class="separator:ga98d1d8b7f0cd46065014f3bf4d73adda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5a57870c43a81ec21fcdb7a11bef20d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__load.htm#ga5a57870c43a81ec21fcdb7a11bef20d4">loadImage</a> (const char *filename, const bool is_color=false)</td></tr>
<tr class="memdesc:ga5a57870c43a81ec21fcdb7a11bef20d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for loading an image.  <a href="group__imageio__func__load.htm#ga5a57870c43a81ec21fcdb7a11bef20d4">More...</a><br /></td></tr>
<tr class="separator:ga5a57870c43a81ec21fcdb7a11bef20d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga90bcd11fa9641e7543a07e72df46de1e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__save.htm#ga90bcd11fa9641e7543a07e72df46de1e">saveImage</a> (const char *filename, const array &amp;in)</td></tr>
<tr class="memdesc:ga90bcd11fa9641e7543a07e72df46de1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for saving an image.  <a href="group__imageio__func__save.htm#ga90bcd11fa9641e7543a07e72df46de1e">More...</a><br /></td></tr>
<tr class="separator:ga90bcd11fa9641e7543a07e72df46de1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7e7ebada03123bba983dfe7e24cfc56c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imagemem__func__load.htm#ga7e7ebada03123bba983dfe7e24cfc56c">loadImageMem</a> (const void *ptr)</td></tr>
<tr class="memdesc:ga7e7ebada03123bba983dfe7e24cfc56c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for loading an image from memory.  <a href="group__imagemem__func__load.htm#ga7e7ebada03123bba983dfe7e24cfc56c">More...</a><br /></td></tr>
<tr class="separator:ga7e7ebada03123bba983dfe7e24cfc56c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga30d6b01bf14a68410a717c45486f565e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imagemem__func__save.htm#ga30d6b01bf14a68410a717c45486f565e">saveImageMem</a> (const array &amp;in, const imageFormat format=<a class="el" href="defines_8h.htm#a46734de80dcc107a0732d8ec7c977d6fa21fabb1b254e14691a1f99e8c6ed4f3f">AF_FIF_PNG</a>)</td></tr>
<tr class="memdesc:ga30d6b01bf14a68410a717c45486f565e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for saving an image to memory.  <a href="group__imagemem__func__save.htm#ga30d6b01bf14a68410a717c45486f565e">More...</a><br /></td></tr>
<tr class="separator:ga30d6b01bf14a68410a717c45486f565e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e1f1f3781ba8f2b86bf875207feb82b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imagemem__func__delete.htm#ga9e1f1f3781ba8f2b86bf875207feb82b">deleteImageMem</a> (void *ptr)</td></tr>
<tr class="memdesc:ga9e1f1f3781ba8f2b86bf875207feb82b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for deleting memory created by <a class="el" href="group__imagemem__func__save.htm#ga30d6b01bf14a68410a717c45486f565e">saveImageMem</a> or <a class="el" href="group__imagemem__func__save.htm#gae9f582ee747e6ac5c75209dc6224be8a">af_save_image_memory</a>.  <a href="group__imagemem__func__delete.htm#ga9e1f1f3781ba8f2b86bf875207feb82b">More...</a><br /></td></tr>
<tr class="separator:ga9e1f1f3781ba8f2b86bf875207feb82b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a0bf2412867519de8dcd3aa63d27a16"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__load.htm#ga6a0bf2412867519de8dcd3aa63d27a16">loadImageNative</a> (const char *filename)</td></tr>
<tr class="memdesc:ga6a0bf2412867519de8dcd3aa63d27a16"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for loading an image as its original type.  <a href="group__imageio__func__load.htm#ga6a0bf2412867519de8dcd3aa63d27a16">More...</a><br /></td></tr>
<tr class="separator:ga6a0bf2412867519de8dcd3aa63d27a16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7692b88458a5df179ab6590151bf2999"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__save.htm#ga7692b88458a5df179ab6590151bf2999">saveImageNative</a> (const char *filename, const array &amp;in)</td></tr>
<tr class="memdesc:ga7692b88458a5df179ab6590151bf2999"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for saving an image without modifications.  <a href="group__imageio__func__save.htm#ga7692b88458a5df179ab6590151bf2999">More...</a><br /></td></tr>
<tr class="separator:ga7692b88458a5df179ab6590151bf2999"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd858a64f9c2dc1055a1722aefe7ce14"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__available.htm#gacd858a64f9c2dc1055a1722aefe7ce14">isImageIOAvailable</a> ()</td></tr>
<tr class="memdesc:gacd858a64f9c2dc1055a1722aefe7ce14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to check if Image IO is available.  <a href="group__imageio__func__available.htm#gacd858a64f9c2dc1055a1722aefe7ce14">More...</a><br /></td></tr>
<tr class="separator:gacd858a64f9c2dc1055a1722aefe7ce14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa80038ec7db0ce0836c79d2c8a75e788"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__resize.htm#gaa80038ec7db0ce0836c79d2c8a75e788">resize</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a>)</td></tr>
<tr class="memdesc:gaa80038ec7db0ce0836c79d2c8a75e788"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for resizing an image to specified dimensions.  <a href="group__transform__func__resize.htm#gaa80038ec7db0ce0836c79d2c8a75e788">More...</a><br /></td></tr>
<tr class="separator:gaa80038ec7db0ce0836c79d2c8a75e788"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga76b715aa9c08e7221482acbbd447fb88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__resize.htm#ga76b715aa9c08e7221482acbbd447fb88">resize</a> (const float scale0, const float scale1, const array &amp;in, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a>)</td></tr>
<tr class="memdesc:ga76b715aa9c08e7221482acbbd447fb88"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for resizing an image to specified scales.  <a href="group__transform__func__resize.htm#ga76b715aa9c08e7221482acbbd447fb88">More...</a><br /></td></tr>
<tr class="separator:ga76b715aa9c08e7221482acbbd447fb88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaad72a3f0b32e23115cdc510fb6f1697a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__resize.htm#gaad72a3f0b32e23115cdc510fb6f1697a">resize</a> (const float scale, const array &amp;in, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a>)</td></tr>
<tr class="memdesc:gaad72a3f0b32e23115cdc510fb6f1697a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for resizing an image to specified scale.  <a href="group__transform__func__resize.htm#gaad72a3f0b32e23115cdc510fb6f1697a">More...</a><br /></td></tr>
<tr class="separator:gaad72a3f0b32e23115cdc510fb6f1697a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7bc5a84bcc12ec50800f918f2fc7da5d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__rotate.htm#ga7bc5a84bcc12ec50800f918f2fc7da5d">rotate</a> (const array &amp;in, const float theta, const bool crop=true, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a>)</td></tr>
<tr class="memdesc:ga7bc5a84bcc12ec50800f918f2fc7da5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for rotating an image.  <a href="group__transform__func__rotate.htm#ga7bc5a84bcc12ec50800f918f2fc7da5d">More...</a><br /></td></tr>
<tr class="separator:ga7bc5a84bcc12ec50800f918f2fc7da5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga62d399998f63e3a919e6dde241ec6a08"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__transform.htm#ga62d399998f63e3a919e6dde241ec6a08">transform</a> (const array &amp;in, const array &amp;transform, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a>, const bool inverse=true)</td></tr>
<tr class="memdesc:ga62d399998f63e3a919e6dde241ec6a08"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for transforming an image.  <a href="group__transform__func__transform.htm#ga62d399998f63e3a919e6dde241ec6a08">More...</a><br /></td></tr>
<tr class="separator:ga62d399998f63e3a919e6dde241ec6a08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae962f397a0447364857ad2f8475719c2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__coordinates.htm#gae962f397a0447364857ad2f8475719c2">transformCoordinates</a> (const array &amp;tf, const float d0, const float d1)</td></tr>
<tr class="memdesc:gae962f397a0447364857ad2f8475719c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for transforming coordinates.  <a href="group__transform__func__coordinates.htm#gae962f397a0447364857ad2f8475719c2">More...</a><br /></td></tr>
<tr class="separator:gae962f397a0447364857ad2f8475719c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9478a180bc3822354a01cb06e1905133"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__translate.htm#ga9478a180bc3822354a01cb06e1905133">translate</a> (const array &amp;in, const float trans0, const float trans1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a>)</td></tr>
<tr class="memdesc:ga9478a180bc3822354a01cb06e1905133"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for translating an image.  <a href="group__transform__func__translate.htm#ga9478a180bc3822354a01cb06e1905133">More...</a><br /></td></tr>
<tr class="separator:ga9478a180bc3822354a01cb06e1905133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f7deb928b92209e0ef2c2371b1ad51b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__scale.htm#ga0f7deb928b92209e0ef2c2371b1ad51b">scale</a> (const array &amp;in, const float scale0, const float scale1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a>)</td></tr>
<tr class="memdesc:ga0f7deb928b92209e0ef2c2371b1ad51b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for scaling an image.  <a href="group__transform__func__scale.htm#ga0f7deb928b92209e0ef2c2371b1ad51b">More...</a><br /></td></tr>
<tr class="separator:ga0f7deb928b92209e0ef2c2371b1ad51b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaef2efb5088584ad9896a7c89af1bea69"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__skew.htm#gaef2efb5088584ad9896a7c89af1bea69">skew</a> (const array &amp;in, const float skew0, const float skew1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1=0, const bool inverse=true, const interpType method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a5357aed0afbcd45da3d48f080bf5a8bf">AF_INTERP_NEAREST</a>)</td></tr>
<tr class="memdesc:gaef2efb5088584ad9896a7c89af1bea69"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for skewing an image.  <a href="group__transform__func__skew.htm#gaef2efb5088584ad9896a7c89af1bea69">More...</a><br /></td></tr>
<tr class="separator:gaef2efb5088584ad9896a7c89af1bea69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabecce3d57eb1880bdfc680992b2c15f6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__bilateral.htm#gabecce3d57eb1880bdfc680992b2c15f6">bilateral</a> (const array &amp;in, const float spatial_sigma, const float chromatic_sigma, const bool is_color=false)</td></tr>
<tr class="memdesc:gabecce3d57eb1880bdfc680992b2c15f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for bilateral filter.  <a href="group__image__func__bilateral.htm#gabecce3d57eb1880bdfc680992b2c15f6">More...</a><br /></td></tr>
<tr class="separator:gabecce3d57eb1880bdfc680992b2c15f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf97fd7eb81e8ec41c816eeda9104ae24"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__histogram.htm#gaf97fd7eb81e8ec41c816eeda9104ae24">histogram</a> (const array &amp;in, const unsigned nbins, const double minval, const double maxval)</td></tr>
<tr class="memdesc:gaf97fd7eb81e8ec41c816eeda9104ae24"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for histogram.  <a href="group__image__func__histogram.htm#gaf97fd7eb81e8ec41c816eeda9104ae24">More...</a><br /></td></tr>
<tr class="separator:gaf97fd7eb81e8ec41c816eeda9104ae24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc26a14b95c1f36ef2ae9963d9b0344a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__histogram.htm#gabc26a14b95c1f36ef2ae9963d9b0344a">histogram</a> (const array &amp;in, const unsigned nbins)</td></tr>
<tr class="memdesc:gabc26a14b95c1f36ef2ae9963d9b0344a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for histogram.  <a href="group__image__func__histogram.htm#gabc26a14b95c1f36ef2ae9963d9b0344a">More...</a><br /></td></tr>
<tr class="separator:gabc26a14b95c1f36ef2ae9963d9b0344a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac19e2d4cf301ef9f0293bf62aed584e6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__mean__shift.htm#gac19e2d4cf301ef9f0293bf62aed584e6">meanShift</a> (const array &amp;in, const float spatial_sigma, const float chromatic_sigma, const unsigned iter, const bool is_color=false)</td></tr>
<tr class="memdesc:gac19e2d4cf301ef9f0293bf62aed584e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for mean shift.  <a href="group__image__func__mean__shift.htm#gac19e2d4cf301ef9f0293bf62aed584e6">More...</a><br /></td></tr>
<tr class="separator:gac19e2d4cf301ef9f0293bf62aed584e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6e133f1e3d6109340feb5fef2f41a86b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__minfilt.htm#ga6e133f1e3d6109340feb5fef2f41a86b">minfilt</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_length=3, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width=3, const borderType edge_pad=<a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113aa9ec0ad516e307a4d215cb9cb43cceb7">AF_PAD_ZERO</a>)</td></tr>
<tr class="memdesc:ga6e133f1e3d6109340feb5fef2f41a86b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for minimum filter.  <a href="group__image__func__minfilt.htm#ga6e133f1e3d6109340feb5fef2f41a86b">More...</a><br /></td></tr>
<tr class="separator:ga6e133f1e3d6109340feb5fef2f41a86b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7e6e7169ecf6a1137516080e13b223cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__maxfilt.htm#ga7e6e7169ecf6a1137516080e13b223cc">maxfilt</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_length=3, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width=3, const borderType edge_pad=<a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113aa9ec0ad516e307a4d215cb9cb43cceb7">AF_PAD_ZERO</a>)</td></tr>
<tr class="memdesc:ga7e6e7169ecf6a1137516080e13b223cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for maximum filter.  <a href="group__image__func__maxfilt.htm#ga7e6e7169ecf6a1137516080e13b223cc">More...</a><br /></td></tr>
<tr class="separator:ga7e6e7169ecf6a1137516080e13b223cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0d435bca1e30a440267624056654e9eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__dilate.htm#ga0d435bca1e30a440267624056654e9eb">dilate</a> (const array &amp;in, const array &amp;mask)</td></tr>
<tr class="memdesc:ga0d435bca1e30a440267624056654e9eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for image dilation (max filter)  <a href="group__image__func__dilate.htm#ga0d435bca1e30a440267624056654e9eb">More...</a><br /></td></tr>
<tr class="separator:ga0d435bca1e30a440267624056654e9eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd32acbc0595a62f94d6256153db2ec2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__dilate3d.htm#gacd32acbc0595a62f94d6256153db2ec2">dilate3</a> (const array &amp;in, const array &amp;mask)</td></tr>
<tr class="memdesc:gacd32acbc0595a62f94d6256153db2ec2"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for 3D image dilation.  <a href="group__image__func__dilate3d.htm#gacd32acbc0595a62f94d6256153db2ec2">More...</a><br /></td></tr>
<tr class="separator:gacd32acbc0595a62f94d6256153db2ec2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa25e0009132b5aa83b6462b732cbf031"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__erode.htm#gaa25e0009132b5aa83b6462b732cbf031">erode</a> (const array &amp;in, const array &amp;mask)</td></tr>
<tr class="memdesc:gaa25e0009132b5aa83b6462b732cbf031"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for image erosion (min filter)  <a href="group__image__func__erode.htm#gaa25e0009132b5aa83b6462b732cbf031">More...</a><br /></td></tr>
<tr class="separator:gaa25e0009132b5aa83b6462b732cbf031"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8fcdd19419c3c72283947ef567d806d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__erode3d.htm#ga8fcdd19419c3c72283947ef567d806d5">erode3</a> (const array &amp;in, const array &amp;mask)</td></tr>
<tr class="memdesc:ga8fcdd19419c3c72283947ef567d806d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for 3d for image erosion.  <a href="group__image__func__erode3d.htm#ga8fcdd19419c3c72283947ef567d806d5">More...</a><br /></td></tr>
<tr class="separator:ga8fcdd19419c3c72283947ef567d806d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf631c72f5d9f2bcb719841d08443926c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__regions.htm#gaf631c72f5d9f2bcb719841d08443926c">regions</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#ae7d8d22b4425c878e1e43ace36ae28be">af::connectivity</a> connectivity=<a class="el" href="defines_8h.htm#ae7d8d22b4425c878e1e43ace36ae28bea5c1141bbd2404f74471630455d8653bf">AF_CONNECTIVITY_4</a>, const dtype type=<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>)</td></tr>
<tr class="memdesc:gaf631c72f5d9f2bcb719841d08443926c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting regions in an image.  <a href="group__image__func__regions.htm#gaf631c72f5d9f2bcb719841d08443926c">More...</a><br /></td></tr>
<tr class="separator:gaf631c72f5d9f2bcb719841d08443926c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7918bbf6f3e37d5bab9d9fb5a1a46607"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__sobel.htm#ga7918bbf6f3e37d5bab9d9fb5a1a46607">sobel</a> (array &amp;dx, array &amp;dy, const array &amp;img, const unsigned ker_size=3)</td></tr>
<tr class="memdesc:ga7918bbf6f3e37d5bab9d9fb5a1a46607"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for extracting sobel gradients.  <a href="group__image__func__sobel.htm#ga7918bbf6f3e37d5bab9d9fb5a1a46607">More...</a><br /></td></tr>
<tr class="separator:ga7918bbf6f3e37d5bab9d9fb5a1a46607"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac04b9919b218b95074177e6de225bfc5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__sobel.htm#gac04b9919b218b95074177e6de225bfc5">sobel</a> (const array &amp;img, const unsigned ker_size=3, const bool isFast=false)</td></tr>
<tr class="memdesc:gac04b9919b218b95074177e6de225bfc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for sobel filtering.  <a href="group__image__func__sobel.htm#gac04b9919b218b95074177e6de225bfc5">More...</a><br /></td></tr>
<tr class="separator:gac04b9919b218b95074177e6de225bfc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga96e322e3aba443889897b9bb45471bf4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__rgb2gray.htm#ga96e322e3aba443889897b9bb45471bf4">rgb2gray</a> (const array &amp;in, const float rPercent=0.2126f, const float gPercent=0.7152f, const float bPercent=0.0722f)</td></tr>
<tr class="memdesc:ga96e322e3aba443889897b9bb45471bf4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for RGB to gray conversion.  <a href="group__image__func__rgb2gray.htm#ga96e322e3aba443889897b9bb45471bf4">More...</a><br /></td></tr>
<tr class="separator:ga96e322e3aba443889897b9bb45471bf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaceb5f8f3c104403afb89e7f59673dda7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__gray2rgb.htm#gaceb5f8f3c104403afb89e7f59673dda7">gray2rgb</a> (const array &amp;in, const float rFactor=1.0, const float gFactor=1.0, const float bFactor=1.0)</td></tr>
<tr class="memdesc:gaceb5f8f3c104403afb89e7f59673dda7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for gray to RGB conversion.  <a href="group__image__func__gray2rgb.htm#gaceb5f8f3c104403afb89e7f59673dda7">More...</a><br /></td></tr>
<tr class="separator:gaceb5f8f3c104403afb89e7f59673dda7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9f1fae4807432e9f1710ec745d2b25d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__histequal.htm#gac9f1fae4807432e9f1710ec745d2b25d">histEqual</a> (const array &amp;in, const array &amp;hist)</td></tr>
<tr class="memdesc:gac9f1fae4807432e9f1710ec745d2b25d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for histogram equalization.  <a href="group__image__func__histequal.htm#gac9f1fae4807432e9f1710ec745d2b25d">More...</a><br /></td></tr>
<tr class="separator:gac9f1fae4807432e9f1710ec745d2b25d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd7cc37308ee4d90a0071968073987e5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__gauss.htm#gacd7cc37308ee4d90a0071968073987e5">gaussianKernel</a> (const int rows, const int cols, const double sig_r=0, const double sig_c=0)</td></tr>
<tr class="memdesc:gacd7cc37308ee4d90a0071968073987e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for generating gausian kernels.  <a href="group__image__func__gauss.htm#gacd7cc37308ee4d90a0071968073987e5">More...</a><br /></td></tr>
<tr class="separator:gacd7cc37308ee4d90a0071968073987e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga92b9afdbfee1b3ccec61ebd1d872064a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__hsv2rgb.htm#ga92b9afdbfee1b3ccec61ebd1d872064a">hsv2rgb</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga92b9afdbfee1b3ccec61ebd1d872064a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for converting HSV to RGB.  <a href="group__image__func__hsv2rgb.htm#ga92b9afdbfee1b3ccec61ebd1d872064a">More...</a><br /></td></tr>
<tr class="separator:ga92b9afdbfee1b3ccec61ebd1d872064a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf8952088e8e38e6a1e44addacf441e8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__rgb2hsv.htm#gaf8952088e8e38e6a1e44addacf441e8a">rgb2hsv</a> (const array &amp;in)</td></tr>
<tr class="memdesc:gaf8952088e8e38e6a1e44addacf441e8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for converting RGB to HSV.  <a href="group__image__func__rgb2hsv.htm#gaf8952088e8e38e6a1e44addacf441e8a">More...</a><br /></td></tr>
<tr class="separator:gaf8952088e8e38e6a1e44addacf441e8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2913948b841a2e14e2596e32d5dbc31"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__colorspace.htm#gad2913948b841a2e14e2596e32d5dbc31">colorSpace</a> (const array &amp;image, const CSpace to, const CSpace from)</td></tr>
<tr class="memdesc:gad2913948b841a2e14e2596e32d5dbc31"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface wrapper for colorspace conversion.  <a href="group__image__func__colorspace.htm#gad2913948b841a2e14e2596e32d5dbc31">More...</a><br /></td></tr>
<tr class="separator:gad2913948b841a2e14e2596e32d5dbc31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac65c28b7e78bc25d5e442a0159afee53"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__unwrap.htm#gac65c28b7e78bc25d5e442a0159afee53">unwrap</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wx, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wy, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> sx, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> sy, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> px=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> py=0, const bool is_column=true)</td></tr>
<tr class="memdesc:gac65c28b7e78bc25d5e442a0159afee53"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for rearranging windowed sections of an input into columns (or rows)  <a href="group__image__func__unwrap.htm#gac65c28b7e78bc25d5e442a0159afee53">More...</a><br /></td></tr>
<tr class="separator:gac65c28b7e78bc25d5e442a0159afee53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8270837c6d109f49c783c5ea286b4cea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__wrap.htm#ga8270837c6d109f49c783c5ea286b4cea">wrap</a> (const array &amp;in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> ox, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> oy, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wx, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wy, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> sx, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> sy, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> px=0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> py=0, const bool is_column=true)</td></tr>
<tr class="memdesc:ga8270837c6d109f49c783c5ea286b4cea"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for performing the opposite of <a class="el" href="group__image__func__unwrap.htm#gac65c28b7e78bc25d5e442a0159afee53">unwrap</a>.  <a href="group__image__func__wrap.htm#ga8270837c6d109f49c783c5ea286b4cea">More...</a><br /></td></tr>
<tr class="separator:ga8270837c6d109f49c783c5ea286b4cea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga391d3a4eafe00c06334eeadbfcdf0237"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__sat.htm#ga391d3a4eafe00c06334eeadbfcdf0237">sat</a> (const array &amp;in)</td></tr>
<tr class="memdesc:ga391d3a4eafe00c06334eeadbfcdf0237"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface wrapper for summed area tables.  <a href="group__image__func__sat.htm#ga391d3a4eafe00c06334eeadbfcdf0237">More...</a><br /></td></tr>
<tr class="separator:ga391d3a4eafe00c06334eeadbfcdf0237"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2faad6d2a5dc0f568547c719b2e7b805"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__ycbcr2rgb.htm#ga2faad6d2a5dc0f568547c719b2e7b805">ycbcr2rgb</a> (const array &amp;in, const YCCStd standard=<a class="el" href="defines_8h.htm#aa5679a392b943e17b0a79b803f8737a4a6bf76f6da5ac2f402c332a9c577f349f">AF_YCC_601</a>)</td></tr>
<tr class="memdesc:ga2faad6d2a5dc0f568547c719b2e7b805"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for converting YCbCr to RGB.  <a href="group__image__func__ycbcr2rgb.htm#ga2faad6d2a5dc0f568547c719b2e7b805">More...</a><br /></td></tr>
<tr class="separator:ga2faad6d2a5dc0f568547c719b2e7b805"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga48c473e4cf44c12e2f1be25b5f816805"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__rgb2ycbcr.htm#ga48c473e4cf44c12e2f1be25b5f816805">rgb2ycbcr</a> (const array &amp;in, const YCCStd standard=<a class="el" href="defines_8h.htm#aa5679a392b943e17b0a79b803f8737a4a6bf76f6da5ac2f402c332a9c577f349f">AF_YCC_601</a>)</td></tr>
<tr class="memdesc:ga48c473e4cf44c12e2f1be25b5f816805"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for converting RGB to YCbCr.  <a href="group__image__func__rgb2ycbcr.htm#ga48c473e4cf44c12e2f1be25b5f816805">More...</a><br /></td></tr>
<tr class="separator:ga48c473e4cf44c12e2f1be25b5f816805"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga524d080d05f2e7fb10356d300404d543"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__moments.htm#ga524d080d05f2e7fb10356d300404d543">moments</a> (double *out, const array &amp;in, const momentType moment=<a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0a438c36c62e4d61011c3d2de0a20be0a7">AF_MOMENT_FIRST_ORDER</a>)</td></tr>
<tr class="memdesc:ga524d080d05f2e7fb10356d300404d543"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for calculating an image moment.  <a href="group__image__func__moments.htm#ga524d080d05f2e7fb10356d300404d543">More...</a><br /></td></tr>
<tr class="separator:ga524d080d05f2e7fb10356d300404d543"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabf3140e73a010f09afdd55063caa3205"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__moments.htm#gabf3140e73a010f09afdd55063caa3205">moments</a> (const array &amp;in, const momentType moment=<a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0a438c36c62e4d61011c3d2de0a20be0a7">AF_MOMENT_FIRST_ORDER</a>)</td></tr>
<tr class="memdesc:gabf3140e73a010f09afdd55063caa3205"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for calculating image moments.  <a href="group__image__func__moments.htm#gabf3140e73a010f09afdd55063caa3205">More...</a><br /></td></tr>
<tr class="separator:gabf3140e73a010f09afdd55063caa3205"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga79334eae16255b8a33f4f1a672f7cac6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__canny.htm#ga79334eae16255b8a33f4f1a672f7cac6">canny</a> (const array &amp;in, const cannyThreshold thresholdType, const float lowThresholdRatio, const float highThresholdRatio, const unsigned sobelWindow=3, const bool isFast=false)</td></tr>
<tr class="memdesc:ga79334eae16255b8a33f4f1a672f7cac6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for canny edge detector.  <a href="group__image__func__canny.htm#ga79334eae16255b8a33f4f1a672f7cac6">More...</a><br /></td></tr>
<tr class="separator:ga79334eae16255b8a33f4f1a672f7cac6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4cd2183544530cdc61e6073bd120a65e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__anisotropic__diffusion.htm#ga4cd2183544530cdc61e6073bd120a65e">anisotropicDiffusion</a> (const <a class="el" href="classaf_1_1array.htm">af::array</a> &amp;in, const float timestep, const float conductance, const unsigned iterations, const fluxFunction fftype=<a class="el" href="defines_8h.htm#ae6df6eb017ab7030bfc10b6d98817bbba356bf447a07e7dc28779dccb650e432a">AF_FLUX_EXPONENTIAL</a>, const diffusionEq diffusionKind=<a class="el" href="defines_8h.htm#ac6ea6eab91acb3d99fa711fe514498a5af54c5e7995abd1cf6286da145f6d0295">AF_DIFFUSION_GRAD</a>)</td></tr>
<tr class="memdesc:ga4cd2183544530cdc61e6073bd120a65e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for gradient anisotropic(non-linear diffusion) smoothing.  <a href="group__image__func__anisotropic__diffusion.htm#ga4cd2183544530cdc61e6073bd120a65e">More...</a><br /></td></tr>
<tr class="separator:ga4cd2183544530cdc61e6073bd120a65e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga002abbf6b18cd02d9251ef5452d3b917"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__iterative__deconv.htm#ga002abbf6b18cd02d9251ef5452d3b917">iterativeDeconv</a> (const array &amp;in, const array &amp;ker, const unsigned iterations, const float relaxFactor, const iterativeDeconvAlgo algo)</td></tr>
<tr class="memdesc:ga002abbf6b18cd02d9251ef5452d3b917"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for Iterative deconvolution algorithm.  <a href="group__image__func__iterative__deconv.htm#ga002abbf6b18cd02d9251ef5452d3b917">More...</a><br /></td></tr>
<tr class="separator:ga002abbf6b18cd02d9251ef5452d3b917"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga646a68fa926eb8d2c331f3c469d708fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__inverse__deconv.htm#ga646a68fa926eb8d2c331f3c469d708fe">inverseDeconv</a> (const array &amp;in, const array &amp;psf, const float gamma, const inverseDeconvAlgo algo)</td></tr>
<tr class="memdesc:ga646a68fa926eb8d2c331f3c469d708fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for Tikhonov deconvolution algorithm.  <a href="group__image__func__inverse__deconv.htm#ga646a68fa926eb8d2c331f3c469d708fe">More...</a><br /></td></tr>
<tr class="separator:ga646a68fa926eb8d2c331f3c469d708fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga172e5c4343bcce8404a78bd8c036f1cd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__confidence__cc.htm#ga172e5c4343bcce8404a78bd8c036f1cd">confidenceCC</a> (const array &amp;in, const array &amp;seeds, const unsigned radius, const unsigned multiplier, const int iter, const double segmentedValue)</td></tr>
<tr class="memdesc:ga172e5c4343bcce8404a78bd8c036f1cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for confidence connected components.  <a href="group__image__func__confidence__cc.htm#ga172e5c4343bcce8404a78bd8c036f1cd">More...</a><br /></td></tr>
<tr class="separator:ga172e5c4343bcce8404a78bd8c036f1cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6bfd0c74e03ae16cf05621c13b0a8e0d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__confidence__cc.htm#ga6bfd0c74e03ae16cf05621c13b0a8e0d">confidenceCC</a> (const array &amp;in, const array &amp;seedx, const array &amp;seedy, const unsigned radius, const unsigned multiplier, const int iter, const double segmentedValue)</td></tr>
<tr class="memdesc:ga6bfd0c74e03ae16cf05621c13b0a8e0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for confidence connected components.  <a href="group__image__func__confidence__cc.htm#ga6bfd0c74e03ae16cf05621c13b0a8e0d">More...</a><br /></td></tr>
<tr class="separator:ga6bfd0c74e03ae16cf05621c13b0a8e0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae35264fc15d92776d86dd1d0b80a397d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__confidence__cc.htm#gae35264fc15d92776d86dd1d0b80a397d">confidenceCC</a> (const array &amp;in, const size_t num_seeds, const unsigned *seedx, const unsigned *seedy, const unsigned radius, const unsigned multiplier, const int iter, const double segmentedValue)</td></tr>
<tr class="memdesc:gae35264fc15d92776d86dd1d0b80a397d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for confidence connected components.  <a href="group__image__func__confidence__cc.htm#gae35264fc15d92776d86dd1d0b80a397d">More...</a><br /></td></tr>
<tr class="separator:gae35264fc15d92776d86dd1d0b80a397d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb342e6765c1536125261b035f7eee59"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__calc__func__grad.htm#gadb342e6765c1536125261b035f7eee59">af_gradient</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *dx, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *dy, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gadb342e6765c1536125261b035f7eee59"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for calculating the gradients.  <a href="group__calc__func__grad.htm#gadb342e6765c1536125261b035f7eee59">More...</a><br /></td></tr>
<tr class="separator:gadb342e6765c1536125261b035f7eee59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c505bba21cd2d5aa277ad1e6f0ffb5f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__load.htm#ga9c505bba21cd2d5aa277ad1e6f0ffb5f">af_load_image</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const char *filename, const bool isColor)</td></tr>
<tr class="memdesc:ga9c505bba21cd2d5aa277ad1e6f0ffb5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for loading an image.  <a href="group__imageio__func__load.htm#ga9c505bba21cd2d5aa277ad1e6f0ffb5f">More...</a><br /></td></tr>
<tr class="separator:ga9c505bba21cd2d5aa277ad1e6f0ffb5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d73aad096dd1e0022fe7369112168b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__save.htm#ga2d73aad096dd1e0022fe7369112168b8">af_save_image</a> (const char *filename, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga2d73aad096dd1e0022fe7369112168b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for saving an image.  <a href="group__imageio__func__save.htm#ga2d73aad096dd1e0022fe7369112168b8">More...</a><br /></td></tr>
<tr class="separator:ga2d73aad096dd1e0022fe7369112168b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadcf65c240a2956afb296194685c4f7c5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imagemem__func__load.htm#gadcf65c240a2956afb296194685c4f7c5">af_load_image_memory</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const void *ptr)</td></tr>
<tr class="memdesc:gadcf65c240a2956afb296194685c4f7c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for loading an image from memory.  <a href="group__imagemem__func__load.htm#gadcf65c240a2956afb296194685c4f7c5">More...</a><br /></td></tr>
<tr class="separator:gadcf65c240a2956afb296194685c4f7c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9f582ee747e6ac5c75209dc6224be8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imagemem__func__save.htm#gae9f582ee747e6ac5c75209dc6224be8a">af_save_image_memory</a> (void **ptr, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a46734de80dcc107a0732d8ec7c977d6f">af_image_format</a> format)</td></tr>
<tr class="memdesc:gae9f582ee747e6ac5c75209dc6224be8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for saving an image to memory using FreeImage.  <a href="group__imagemem__func__save.htm#gae9f582ee747e6ac5c75209dc6224be8a">More...</a><br /></td></tr>
<tr class="separator:gae9f582ee747e6ac5c75209dc6224be8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab4a7f3417baf7287371d295b292b93bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imagemem__func__delete.htm#gab4a7f3417baf7287371d295b292b93bb">af_delete_image_memory</a> (void *ptr)</td></tr>
<tr class="memdesc:gab4a7f3417baf7287371d295b292b93bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for deleting an image from memory.  <a href="group__imagemem__func__delete.htm#gab4a7f3417baf7287371d295b292b93bb">More...</a><br /></td></tr>
<tr class="separator:gab4a7f3417baf7287371d295b292b93bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf8ccff53540bcc78ab814864f3c74ded"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__load.htm#gaf8ccff53540bcc78ab814864f3c74ded">af_load_image_native</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const char *filename)</td></tr>
<tr class="memdesc:gaf8ccff53540bcc78ab814864f3c74ded"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for loading an image as is original type.  <a href="group__imageio__func__load.htm#gaf8ccff53540bcc78ab814864f3c74ded">More...</a><br /></td></tr>
<tr class="separator:gaf8ccff53540bcc78ab814864f3c74ded"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac19d3cc88b12d0ea8b9bc751927f5c83"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__save.htm#gac19d3cc88b12d0ea8b9bc751927f5c83">af_save_image_native</a> (const char *filename, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:gac19d3cc88b12d0ea8b9bc751927f5c83"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for saving an image without modifications.  <a href="group__imageio__func__save.htm#gac19d3cc88b12d0ea8b9bc751927f5c83">More...</a><br /></td></tr>
<tr class="separator:gac19d3cc88b12d0ea8b9bc751927f5c83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d7fa02d9009a3ca6f16bfb1a5aacd0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__imageio__func__available.htm#ga2d7fa02d9009a3ca6f16bfb1a5aacd0b">af_is_image_io_available</a> (bool *out)</td></tr>
<tr class="memdesc:ga2d7fa02d9009a3ca6f16bfb1a5aacd0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to check if Image IO is available.  <a href="group__imageio__func__available.htm#ga2d7fa02d9009a3ca6f16bfb1a5aacd0b">More...</a><br /></td></tr>
<tr class="separator:ga2d7fa02d9009a3ca6f16bfb1a5aacd0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2fbcfb50e2b74acb0a087b17e4e0dd8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__resize.htm#gaa2fbcfb50e2b74acb0a087b17e4e0dd8">af_resize</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method)</td></tr>
<tr class="memdesc:gaa2fbcfb50e2b74acb0a087b17e4e0dd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for resizing an image to specified dimensions.  <a href="group__transform__func__resize.htm#gaa2fbcfb50e2b74acb0a087b17e4e0dd8">More...</a><br /></td></tr>
<tr class="separator:gaa2fbcfb50e2b74acb0a087b17e4e0dd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga43912cc2f13f3b08bb89e83e570ac346"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__transform.htm#ga43912cc2f13f3b08bb89e83e570ac346">af_transform</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> transform, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const bool inverse)</td></tr>
<tr class="memdesc:ga43912cc2f13f3b08bb89e83e570ac346"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for transforming an image.  <a href="group__transform__func__transform.htm#ga43912cc2f13f3b08bb89e83e570ac346">More...</a><br /></td></tr>
<tr class="separator:ga43912cc2f13f3b08bb89e83e570ac346"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac40849a4c191e999caae41cedeaa33bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__transform.htm#gac40849a4c191e999caae41cedeaa33bd">af_transform_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> transform, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const bool inverse)</td></tr>
<tr class="memdesc:gac40849a4c191e999caae41cedeaa33bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for the version of <a class="el" href="group__transform__func__transform.htm#ga43912cc2f13f3b08bb89e83e570ac346">af_transform</a> that accepts a preallocated output array.  <a href="group__transform__func__transform.htm#gac40849a4c191e999caae41cedeaa33bd">More...</a><br /></td></tr>
<tr class="separator:gac40849a4c191e999caae41cedeaa33bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad6a3e6fde0cff195c8c308762e57bd52"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__coordinates.htm#gad6a3e6fde0cff195c8c308762e57bd52">af_transform_coordinates</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> tf, const float d0, const float d1)</td></tr>
<tr class="memdesc:gad6a3e6fde0cff195c8c308762e57bd52"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for transforming an image C++ Interface for transforming coordinates.  <a href="group__transform__func__coordinates.htm#gad6a3e6fde0cff195c8c308762e57bd52">More...</a><br /></td></tr>
<tr class="separator:gad6a3e6fde0cff195c8c308762e57bd52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga826d224d5d5d0f721b7865a9d4c034da"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__rotate.htm#ga826d224d5d5d0f721b7865a9d4c034da">af_rotate</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const float theta, const bool crop, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method)</td></tr>
<tr class="memdesc:ga826d224d5d5d0f721b7865a9d4c034da"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for rotating an image.  <a href="group__transform__func__rotate.htm#ga826d224d5d5d0f721b7865a9d4c034da">More...</a><br /></td></tr>
<tr class="separator:ga826d224d5d5d0f721b7865a9d4c034da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf753bd5ef4aabc810e68a93e38586aa5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__translate.htm#gaf753bd5ef4aabc810e68a93e38586aa5">af_translate</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const float trans0, const float trans1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method)</td></tr>
<tr class="memdesc:gaf753bd5ef4aabc810e68a93e38586aa5"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for translate an image.  <a href="group__transform__func__translate.htm#gaf753bd5ef4aabc810e68a93e38586aa5">More...</a><br /></td></tr>
<tr class="separator:gaf753bd5ef4aabc810e68a93e38586aa5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe489c0df047d7313e28955694f043d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__scale.htm#gafe489c0df047d7313e28955694f043d6">af_scale</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const float scale0, const float scale1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method)</td></tr>
<tr class="memdesc:gafe489c0df047d7313e28955694f043d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for scaling an image.  <a href="group__transform__func__scale.htm#gafe489c0df047d7313e28955694f043d6">More...</a><br /></td></tr>
<tr class="separator:gafe489c0df047d7313e28955694f043d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga469445c0345acad37cd0cfca2375c671"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__transform__func__skew.htm#ga469445c0345acad37cd0cfca2375c671">af_skew</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const float skew0, const float skew1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> odim1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const bool inverse)</td></tr>
<tr class="memdesc:ga469445c0345acad37cd0cfca2375c671"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for skewing an image.  <a href="group__transform__func__skew.htm#ga469445c0345acad37cd0cfca2375c671">More...</a><br /></td></tr>
<tr class="separator:ga469445c0345acad37cd0cfca2375c671"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab14404cc8923cf3e1bd0d9d94ef63325"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__histogram.htm#gab14404cc8923cf3e1bd0d9d94ef63325">af_histogram</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const unsigned nbins, const double minval, const double maxval)</td></tr>
<tr class="memdesc:gab14404cc8923cf3e1bd0d9d94ef63325"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for histogram.  <a href="group__image__func__histogram.htm#gab14404cc8923cf3e1bd0d9d94ef63325">More...</a><br /></td></tr>
<tr class="separator:gab14404cc8923cf3e1bd0d9d94ef63325"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga42a4df68ce13f8d9b1bc50f56a5f0927"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__dilate.htm#ga42a4df68ce13f8d9b1bc50f56a5f0927">af_dilate</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> mask)</td></tr>
<tr class="memdesc:ga42a4df68ce13f8d9b1bc50f56a5f0927"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for image dilation (max filter)  <a href="group__image__func__dilate.htm#ga42a4df68ce13f8d9b1bc50f56a5f0927">More...</a><br /></td></tr>
<tr class="separator:ga42a4df68ce13f8d9b1bc50f56a5f0927"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf87ec9878f8405f18324a8e532cd7f2e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__dilate3d.htm#gaf87ec9878f8405f18324a8e532cd7f2e">af_dilate3</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> mask)</td></tr>
<tr class="memdesc:gaf87ec9878f8405f18324a8e532cd7f2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for 3d image dilation.  <a href="group__image__func__dilate3d.htm#gaf87ec9878f8405f18324a8e532cd7f2e">More...</a><br /></td></tr>
<tr class="separator:gaf87ec9878f8405f18324a8e532cd7f2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6420bd50feac6ca3426ebf2509c8431e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__erode.htm#ga6420bd50feac6ca3426ebf2509c8431e">af_erode</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> mask)</td></tr>
<tr class="memdesc:ga6420bd50feac6ca3426ebf2509c8431e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for image erosion (min filter)  <a href="group__image__func__erode.htm#ga6420bd50feac6ca3426ebf2509c8431e">More...</a><br /></td></tr>
<tr class="separator:ga6420bd50feac6ca3426ebf2509c8431e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga94b15e5a5721c5f5daa511d0a830e26a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__erode3d.htm#ga94b15e5a5721c5f5daa511d0a830e26a">af_erode3</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> mask)</td></tr>
<tr class="memdesc:ga94b15e5a5721c5f5daa511d0a830e26a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for 3D image erosion.  <a href="group__image__func__erode3d.htm#ga94b15e5a5721c5f5daa511d0a830e26a">More...</a><br /></td></tr>
<tr class="separator:ga94b15e5a5721c5f5daa511d0a830e26a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa3af44395a7cfed60b01b2ea9bf06fdc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__bilateral.htm#gaa3af44395a7cfed60b01b2ea9bf06fdc">af_bilateral</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const float spatial_sigma, const float chromatic_sigma, const bool isColor)</td></tr>
<tr class="memdesc:gaa3af44395a7cfed60b01b2ea9bf06fdc"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for bilateral filter.  <a href="group__image__func__bilateral.htm#gaa3af44395a7cfed60b01b2ea9bf06fdc">More...</a><br /></td></tr>
<tr class="separator:gaa3af44395a7cfed60b01b2ea9bf06fdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d39d9d7563f2cf6c94892e1f86e2b5b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__mean__shift.htm#ga3d39d9d7563f2cf6c94892e1f86e2b5b">af_mean_shift</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const float spatial_sigma, const float chromatic_sigma, const unsigned iter, const bool is_color)</td></tr>
<tr class="memdesc:ga3d39d9d7563f2cf6c94892e1f86e2b5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for mean shift.  <a href="group__image__func__mean__shift.htm#ga3d39d9d7563f2cf6c94892e1f86e2b5b">More...</a><br /></td></tr>
<tr class="separator:ga3d39d9d7563f2cf6c94892e1f86e2b5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga39ce8056585b157af1c854f1b5f3e23a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__minfilt.htm#ga39ce8056585b157af1c854f1b5f3e23a">af_minfilt</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_length, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width, const <a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113">af_border_type</a> edge_pad)</td></tr>
<tr class="memdesc:ga39ce8056585b157af1c854f1b5f3e23a"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for minimum filter.  <a href="group__image__func__minfilt.htm#ga39ce8056585b157af1c854f1b5f3e23a">More...</a><br /></td></tr>
<tr class="separator:ga39ce8056585b157af1c854f1b5f3e23a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga97e07bf5f5c58752d23d1772586b71f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__maxfilt.htm#ga97e07bf5f5c58752d23d1772586b71f4">af_maxfilt</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_length, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wind_width, const <a class="el" href="defines_8h.htm#a3af15a2f5512e0de849d7bc95de3c113">af_border_type</a> edge_pad)</td></tr>
<tr class="memdesc:ga97e07bf5f5c58752d23d1772586b71f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for maximum filter.  <a href="group__image__func__maxfilt.htm#ga97e07bf5f5c58752d23d1772586b71f4">More...</a><br /></td></tr>
<tr class="separator:ga97e07bf5f5c58752d23d1772586b71f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga936ee980be71bf26cd3d238d3db1ed34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__regions.htm#ga936ee980be71bf26cd3d238d3db1ed34">af_regions</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#ae7d8d22b4425c878e1e43ace36ae28be">af_connectivity</a> connectivity, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> ty)</td></tr>
<tr class="memdesc:ga936ee980be71bf26cd3d238d3db1ed34"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for regions in an image.  <a href="group__image__func__regions.htm#ga936ee980be71bf26cd3d238d3db1ed34">More...</a><br /></td></tr>
<tr class="separator:ga936ee980be71bf26cd3d238d3db1ed34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga40e382358b5c1c16318cc8bf094eaf4c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__sobel.htm#ga40e382358b5c1c16318cc8bf094eaf4c">af_sobel_operator</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *dx, <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *dy, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> img, const unsigned ker_size)</td></tr>
<tr class="memdesc:ga40e382358b5c1c16318cc8bf094eaf4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting sobel gradients.  <a href="group__image__func__sobel.htm#ga40e382358b5c1c16318cc8bf094eaf4c">More...</a><br /></td></tr>
<tr class="separator:ga40e382358b5c1c16318cc8bf094eaf4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6cc36e0f3fc7a291a759b047622b2d56"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__rgb2gray.htm#ga6cc36e0f3fc7a291a759b047622b2d56">af_rgb2gray</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const float rPercent, const float gPercent, const float bPercent)</td></tr>
<tr class="memdesc:ga6cc36e0f3fc7a291a759b047622b2d56"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for converting RGB to gray.  <a href="group__image__func__rgb2gray.htm#ga6cc36e0f3fc7a291a759b047622b2d56">More...</a><br /></td></tr>
<tr class="separator:ga6cc36e0f3fc7a291a759b047622b2d56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa966ed1b88470cc8bdba1128c445e4c0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__gray2rgb.htm#gaa966ed1b88470cc8bdba1128c445e4c0">af_gray2rgb</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const float rFactor, const float gFactor, const float bFactor)</td></tr>
<tr class="memdesc:gaa966ed1b88470cc8bdba1128c445e4c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for converting gray to RGB.  <a href="group__image__func__gray2rgb.htm#gaa966ed1b88470cc8bdba1128c445e4c0">More...</a><br /></td></tr>
<tr class="separator:gaa966ed1b88470cc8bdba1128c445e4c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2ef6316afcfde69eff2b71c41602f347"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__histequal.htm#ga2ef6316afcfde69eff2b71c41602f347">af_hist_equal</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> hist)</td></tr>
<tr class="memdesc:ga2ef6316afcfde69eff2b71c41602f347"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for histogram equalization.  <a href="group__image__func__histequal.htm#ga2ef6316afcfde69eff2b71c41602f347">More...</a><br /></td></tr>
<tr class="separator:ga2ef6316afcfde69eff2b71c41602f347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae27509f852c88f97fb31df2d5bdef2b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__gauss.htm#gaae27509f852c88f97fb31df2d5bdef2b">af_gaussian_kernel</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const int rows, const int cols, const double sigma_r, const double sigma_c)</td></tr>
<tr class="memdesc:gaae27509f852c88f97fb31df2d5bdef2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface generating gaussian kernels.  <a href="group__image__func__gauss.htm#gaae27509f852c88f97fb31df2d5bdef2b">More...</a><br /></td></tr>
<tr class="separator:gaae27509f852c88f97fb31df2d5bdef2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3191a0eb0c0a3aceb981c5dab4b8eefb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__hsv2rgb.htm#ga3191a0eb0c0a3aceb981c5dab4b8eefb">af_hsv2rgb</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga3191a0eb0c0a3aceb981c5dab4b8eefb"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for converting HSV to RGB.  <a href="group__image__func__hsv2rgb.htm#ga3191a0eb0c0a3aceb981c5dab4b8eefb">More...</a><br /></td></tr>
<tr class="separator:ga3191a0eb0c0a3aceb981c5dab4b8eefb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fd64ad534fb69185af01c53a0aacceb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__rgb2hsv.htm#ga9fd64ad534fb69185af01c53a0aacceb">af_rgb2hsv</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga9fd64ad534fb69185af01c53a0aacceb"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for converting RGB to HSV.  <a href="group__image__func__rgb2hsv.htm#ga9fd64ad534fb69185af01c53a0aacceb">More...</a><br /></td></tr>
<tr class="separator:ga9fd64ad534fb69185af01c53a0aacceb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d003d4193491aaa80a386fce711a24d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__colorspace.htm#ga6d003d4193491aaa80a386fce711a24d">af_color_space</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> image, const <a class="el" href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0d">af_cspace_t</a> to, const <a class="el" href="defines_8h.htm#ae1e32be35ff02f167999723d77153f0d">af_cspace_t</a> from)</td></tr>
<tr class="memdesc:ga6d003d4193491aaa80a386fce711a24d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for color space conversion.  <a href="group__image__func__colorspace.htm#ga6d003d4193491aaa80a386fce711a24d">More...</a><br /></td></tr>
<tr class="separator:ga6d003d4193491aaa80a386fce711a24d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga79b946d02b227e217097a7fece23dcde"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__unwrap.htm#ga79b946d02b227e217097a7fece23dcde">af_unwrap</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wx, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wy, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> sx, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> sy, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> px, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> py, const bool is_column)</td></tr>
<tr class="memdesc:ga79b946d02b227e217097a7fece23dcde"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for rearranging windowed sections of an input into columns (or rows)  <a href="group__image__func__unwrap.htm#ga79b946d02b227e217097a7fece23dcde">More...</a><br /></td></tr>
<tr class="separator:ga79b946d02b227e217097a7fece23dcde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaace920603110e045a0e251ca8ca4377c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__wrap.htm#gaace920603110e045a0e251ca8ca4377c">af_wrap</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> ox, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> oy, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wx, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wy, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> sx, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> sy, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> px, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> py, const bool is_column)</td></tr>
<tr class="memdesc:gaace920603110e045a0e251ca8ca4377c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for performing the opposite of <a class="el" href="group__image__func__unwrap.htm#gac65c28b7e78bc25d5e442a0159afee53">af::unwrap()</a>  <a href="group__image__func__wrap.htm#gaace920603110e045a0e251ca8ca4377c">More...</a><br /></td></tr>
<tr class="separator:gaace920603110e045a0e251ca8ca4377c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaff897271aa30538fff13f60cda494d32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__wrap.htm#gaff897271aa30538fff13f60cda494d32">af_wrap_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> ox, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> oy, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wx, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> wy, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> sx, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> sy, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> px, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> py, const bool is_column)</td></tr>
<tr class="memdesc:gaff897271aa30538fff13f60cda494d32"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for the version of <a class="el" href="group__image__func__wrap.htm#gaace920603110e045a0e251ca8ca4377c">af_wrap</a> that accepts a preallocated output array.  <a href="group__image__func__wrap.htm#gaff897271aa30538fff13f60cda494d32">More...</a><br /></td></tr>
<tr class="separator:gaff897271aa30538fff13f60cda494d32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8ac0fccad8bf0105839ee734a7796407"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__sat.htm#ga8ac0fccad8bf0105839ee734a7796407">af_sat</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in)</td></tr>
<tr class="memdesc:ga8ac0fccad8bf0105839ee734a7796407"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface wrapper for summed area tables.  <a href="group__image__func__sat.htm#ga8ac0fccad8bf0105839ee734a7796407">More...</a><br /></td></tr>
<tr class="separator:ga8ac0fccad8bf0105839ee734a7796407"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga94217a2f6cda2e867d134eca5dbca2b0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__ycbcr2rgb.htm#ga94217a2f6cda2e867d134eca5dbca2b0">af_ycbcr2rgb</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#aa5679a392b943e17b0a79b803f8737a4">af_ycc_std</a> standard)</td></tr>
<tr class="memdesc:ga94217a2f6cda2e867d134eca5dbca2b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for converting YCbCr to RGB.  <a href="group__image__func__ycbcr2rgb.htm#ga94217a2f6cda2e867d134eca5dbca2b0">More...</a><br /></td></tr>
<tr class="separator:ga94217a2f6cda2e867d134eca5dbca2b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga808a8f0f280fe4330828ad0428a57b9e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__rgb2ycbcr.htm#ga808a8f0f280fe4330828ad0428a57b9e">af_rgb2ycbcr</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#aa5679a392b943e17b0a79b803f8737a4">af_ycc_std</a> standard)</td></tr>
<tr class="memdesc:ga808a8f0f280fe4330828ad0428a57b9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for converting RGB to YCbCr.  <a href="group__image__func__rgb2ycbcr.htm#ga808a8f0f280fe4330828ad0428a57b9e">More...</a><br /></td></tr>
<tr class="separator:ga808a8f0f280fe4330828ad0428a57b9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga28bab821ee673f9a93882e486e8cd47d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__moments.htm#ga28bab821ee673f9a93882e486e8cd47d">af_moments</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0">af_moment_type</a> moment)</td></tr>
<tr class="memdesc:ga28bab821ee673f9a93882e486e8cd47d"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for finding image moments.  <a href="group__image__func__moments.htm#ga28bab821ee673f9a93882e486e8cd47d">More...</a><br /></td></tr>
<tr class="separator:ga28bab821ee673f9a93882e486e8cd47d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d0b4c037b137989f95131787882d9b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__moments.htm#ga3d0b4c037b137989f95131787882d9b4">af_moments_all</a> (double *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#ad3ee8e32709131cf4126dfa26210aec0">af_moment_type</a> moment)</td></tr>
<tr class="memdesc:ga3d0b4c037b137989f95131787882d9b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for calculating image moment(s) of a single image.  <a href="group__image__func__moments.htm#ga3d0b4c037b137989f95131787882d9b4">More...</a><br /></td></tr>
<tr class="separator:ga3d0b4c037b137989f95131787882d9b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3cc80f80d1b2a19312d033763b382957"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__canny.htm#ga3cc80f80d1b2a19312d033763b382957">af_canny</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a179019caba59979e58ec07d81cd25ef2">af_canny_threshold</a> threshold_type, const float low_threshold_ratio, const float high_threshold_ratio, const unsigned sobel_window, const bool is_fast)</td></tr>
<tr class="memdesc:ga3cc80f80d1b2a19312d033763b382957"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for canny edge detector.  <a href="group__image__func__canny.htm#ga3cc80f80d1b2a19312d033763b382957">More...</a><br /></td></tr>
<tr class="separator:ga3cc80f80d1b2a19312d033763b382957"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ef489c34a5dbc29bf9ec28c4d8aa310"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__anisotropic__diffusion.htm#ga4ef489c34a5dbc29bf9ec28c4d8aa310">af_anisotropic_diffusion</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const float timestep, const float conductance, const unsigned iterations, const <a class="el" href="defines_8h.htm#ae6df6eb017ab7030bfc10b6d98817bbb">af_flux_function</a> fftype, const <a class="el" href="defines_8h.htm#ac6ea6eab91acb3d99fa711fe514498a5">af_diffusion_eq</a> diffusion_kind)</td></tr>
<tr class="memdesc:ga4ef489c34a5dbc29bf9ec28c4d8aa310"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for anisotropic diffusion.  <a href="group__image__func__anisotropic__diffusion.htm#ga4ef489c34a5dbc29bf9ec28c4d8aa310">More...</a><br /></td></tr>
<tr class="separator:ga4ef489c34a5dbc29bf9ec28c4d8aa310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf716e895be65781a1d046619409716b7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__iterative__deconv.htm#gaf716e895be65781a1d046619409716b7">af_iterative_deconv</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> ker, const unsigned iterations, const float relax_factor, const <a class="el" href="defines_8h.htm#a201e6b1dd1068c9795168fc25759a17c">af_iterative_deconv_algo</a> algo)</td></tr>
<tr class="memdesc:gaf716e895be65781a1d046619409716b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for Iterative deconvolution algorithm.  <a href="group__image__func__iterative__deconv.htm#gaf716e895be65781a1d046619409716b7">More...</a><br /></td></tr>
<tr class="separator:gaf716e895be65781a1d046619409716b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b7c66c24db219c1058890ec6beeef7c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__inverse__deconv.htm#ga4b7c66c24db219c1058890ec6beeef7c">af_inverse_deconv</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> psf, const float gamma, const <a class="el" href="defines_8h.htm#a2bdf5ea652ab094b2e3dcbeebd0b35c6">af_inverse_deconv_algo</a> algo)</td></tr>
<tr class="memdesc:ga4b7c66c24db219c1058890ec6beeef7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for Tikhonov deconvolution algorithm.  <a href="group__image__func__inverse__deconv.htm#ga4b7c66c24db219c1058890ec6beeef7c">More...</a><br /></td></tr>
<tr class="separator:ga4b7c66c24db219c1058890ec6beeef7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaace9e5c33fc46076177e546a5642095c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__image__func__confidence__cc.htm#gaace9e5c33fc46076177e546a5642095c">af_confidence_cc</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> seedx, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> seedy, const unsigned radius, const unsigned multiplier, const int iter, const double segmented_value)</td></tr>
<tr class="memdesc:gaace9e5c33fc46076177e546a5642095c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for confidence connected components.  <a href="group__image__func__confidence__cc.htm#gaace9e5c33fc46076177e546a5642095c">More...</a><br /></td></tr>
<tr class="separator:gaace9e5c33fc46076177e546a5642095c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="navelem"><a class="el" href="image_8h.htm">image.h</a></li>
        <li class="footer">Generated on Mon Sep 25 2023 12:35:28 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
