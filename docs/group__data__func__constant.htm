<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: constant</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__data__func__constant.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">constant<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__array__mat.htm">Functions to create and modify Arrays</a> &raquo; <a class="el" href="group__data__mat.htm">Functions to create arrays.</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Create a array from a scalar input value.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga3c58da8ca31ae6c871379aeb587b8b0d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga3c58da8ca31ae6c871379aeb587b8b0d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__data__func__constant.htm#ga3c58da8ca31ae6c871379aeb587b8b0d">constant</a> (T val, const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;dims, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty=(<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>) <a class="el" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt; T &gt;::ctype)</td></tr>
<tr class="separator:ga3c58da8ca31ae6c871379aeb587b8b0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4d2909a9a82efa1f5a428f9eaab84e7d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga4d2909a9a82efa1f5a428f9eaab84e7d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__data__func__constant.htm#ga4d2909a9a82efa1f5a428f9eaab84e7d">constant</a> (T val, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> d0, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> ty=(<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>) <a class="el" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt; T &gt;::ctype)</td></tr>
<tr class="separator:ga4d2909a9a82efa1f5a428f9eaab84e7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac59a0ee843c38b50f1a74604e1f4ee17"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:gac59a0ee843c38b50f1a74604e1f4ee17"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__data__func__constant.htm#gac59a0ee843c38b50f1a74604e1f4ee17">constant</a> (T val, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> d0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> d1, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> ty=(<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>) <a class="el" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt; T &gt;::ctype)</td></tr>
<tr class="separator:gac59a0ee843c38b50f1a74604e1f4ee17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6e615ac013103f929fee2603d64785a0"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga6e615ac013103f929fee2603d64785a0"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__data__func__constant.htm#ga6e615ac013103f929fee2603d64785a0">constant</a> (T val, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> d0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> d1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> d2, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> ty=(<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>) <a class="el" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt; T &gt;::ctype)</td></tr>
<tr class="separator:ga6e615ac013103f929fee2603d64785a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2e759362ddb366ec28a6abaae1061235"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ga2e759362ddb366ec28a6abaae1061235"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__data__func__constant.htm#ga2e759362ddb366ec28a6abaae1061235">constant</a> (T val, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> d0, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> d1, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> d2, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> d3, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> ty=(<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>) <a class="el" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt; T &gt;::ctype)</td></tr>
<tr class="separator:ga2e759362ddb366ec28a6abaae1061235"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafc51b6a98765dd24cd4139f3bde00670"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__func__constant.htm#gafc51b6a98765dd24cd4139f3bde00670">af_constant</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, const double val, const unsigned ndims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const dims, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type)</td></tr>
<tr class="separator:gafc51b6a98765dd24cd4139f3bde00670"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5a083b1f3cd8a72a41f151de3bdea1a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__func__constant.htm#ga5a083b1f3cd8a72a41f151de3bdea1a2">af_constant_complex</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, const double real, const double imag, const unsigned ndims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const dims, const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type)</td></tr>
<tr class="separator:ga5a083b1f3cd8a72a41f151de3bdea1a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga10f1c9fad1ce9e9fefd885d5a1d1fd49"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__func__constant.htm#ga10f1c9fad1ce9e9fefd885d5a1d1fd49">af_constant_long</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, const long long val, const unsigned ndims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const dims)</td></tr>
<tr class="separator:ga10f1c9fad1ce9e9fefd885d5a1d1fd49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67af670cc9314589f8134019f5e68809"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data__func__constant.htm#ga67af670cc9314589f8134019f5e68809">af_constant_ulong</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, const unsigned long long val, const unsigned ndims, const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const dims)</td></tr>
<tr class="separator:ga67af670cc9314589f8134019f5e68809"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Create a array from a scalar input value. </p>
<p>The array created has the same value at all locations</p>
<hr  />
 <h2 class="groupheader">Function Documentation</h2>
<a id="gafc51b6a98765dd24cd4139f3bde00670"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafc51b6a98765dd24cd4139f3bde00670">&#9670;&nbsp;</a></span>af_constant()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_constant </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>arr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>ndims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const&#160;</td>
          <td class="paramname"><em>dims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">arr</td><td>is the generated array of given type </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value of each element in the generated array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ndims</td><td>is size of dimension array <code>dims</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dims</td><td>is the array containing sizes of the dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>is the type of array to generate </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga5a083b1f3cd8a72a41f151de3bdea1a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5a083b1f3cd8a72a41f151de3bdea1a2">&#9670;&nbsp;</a></span>af_constant_complex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_constant_complex </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>arr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>real</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>imag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>ndims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const&#160;</td>
          <td class="paramname"><em>dims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">arr</td><td>is the generated array of type <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a994ac20239e3eba6122cafb2eb21f23f">c32</a> or <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a782bca2d24c98bee3e5f1787c4165198">c64</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">real</td><td>is the real value of each element in the generated array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">imag</td><td>is the imaginary value of each element in the generated array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ndims</td><td>is size of dimension array <code>dims</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dims</td><td>is the array containing sizes of the dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>is the type of array to generate </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga10f1c9fad1ce9e9fefd885d5a1d1fd49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga10f1c9fad1ce9e9fefd885d5a1d1fd49">&#9670;&nbsp;</a></span>af_constant_long()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_constant_long </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>arr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long long&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>ndims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const&#160;</td>
          <td class="paramname"><em>dims</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">arr</td><td>is the generated array of type <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a2fb596fb851c71689624894525c069e4">s64</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is a complex value of each element in the generated array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ndims</td><td>is size of dimension array <code>dims</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dims</td><td>is the array containing sizes of the dimension </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga67af670cc9314589f8134019f5e68809"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga67af670cc9314589f8134019f5e68809">&#9670;&nbsp;</a></span>af_constant_ulong()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_constant_ulong </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>arr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long long&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>ndims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *const&#160;</td>
          <td class="paramname"><em>dims</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">arr</td><td>is the generated array of type <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a1b18b7885e1360b6696142284b4b4928">u64</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is a complex value of each element in the generated array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ndims</td><td>is size of dimension array <code>dims</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dims</td><td>is the array containing sizes of the dimension </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga3c58da8ca31ae6c871379aeb587b8b0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3c58da8ca31ae6c871379aeb587b8b0d">&#9670;&nbsp;</a></span>constant() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> af::constant </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1dim4.htm">dim4</a> &amp;&#160;</td>
          <td class="paramname"><em>dims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a>&#160;</td>
          <td class="paramname"><em>ty</em> = <code>(<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>)&#160;<a class="el" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;&#160;T&#160;&gt;::ctype</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value of each element of the array be genrated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dims</td><td>is the dimensions of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ty</td><td>is the type of the array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>array of size <code>dims</code> </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="benchmarks_2blas_8cpp-example.htm#a8">benchmarks/blas.cpp</a>, <a class="el" href="benchmarks_2cg_8cpp-example.htm#a15">benchmarks/cg.cpp</a>, <a class="el" href="computer_vision_2harris_8cpp-example.htm#a9">computer_vision/harris.cpp</a>, <a class="el" href="financial_2heston_model_8cpp-example.htm#a1">financial/heston_model.cpp</a>, <a class="el" href="financial_2monte_carlo_options_8cpp-example.htm#a3">financial/monte_carlo_options.cpp</a>, <a class="el" href="getting_started_2rainfall_8cpp-example.htm#a3">getting_started/rainfall.cpp</a>, <a class="el" href="getting_started_2vectorize_8cpp-example.htm#a1">getting_started/vectorize.cpp</a>, <a class="el" href="graphics_2field_8cpp-example.htm#a13">graphics/field.cpp</a>, <a class="el" href="graphics_2fractal_8cpp-example.htm#a5">graphics/fractal.cpp</a>, <a class="el" href="graphics_2gravity_sim_8cpp-example.htm#a3">graphics/gravity_sim.cpp</a>, <a class="el" href="helloworld_2helloworld_8cpp-example.htm#a12">helloworld/helloworld.cpp</a>, <a class="el" href="image_processing_2adaptive_thresholding_8cpp-example.htm#a7">image_processing/adaptive_thresholding.cpp</a>, <a class="el" href="image_processing_2brain_segmentation_8cpp-example.htm#a10">image_processing/brain_segmentation.cpp</a>, <a class="el" href="image_processing_2filters_8cpp-example.htm#a26">image_processing/filters.cpp</a>, <a class="el" href="image_processing_2image_editing_8cpp-example.htm#a22">image_processing/image_editing.cpp</a>, <a class="el" href="image_processing_2morphing_8cpp-example.htm#a5">image_processing/morphing.cpp</a>, <a class="el" href="image_processing_2optical_flow_8cpp-example.htm#a3">image_processing/optical_flow.cpp</a>, <a class="el" href="image_processing_2pyramids_8cpp-example.htm#a6">image_processing/pyramids.cpp</a>, <a class="el" href="machine_learning_2bagging_8cpp-example.htm#a3">machine_learning/bagging.cpp</a>, <a class="el" href="machine_learning_2deep_belief_net_8cpp-example.htm#a9">machine_learning/deep_belief_net.cpp</a>, <a class="el" href="machine_learning_2kmeans_8cpp-example.htm#a6">machine_learning/kmeans.cpp</a>, <a class="el" href="machine_learning_2knn_8cpp-example.htm#a3">machine_learning/knn.cpp</a>, <a class="el" href="machine_learning_2logistic_regression_8cpp-example.htm#a7">machine_learning/logistic_regression.cpp</a>, <a class="el" href="machine_learning_2naive_bayes_8cpp-example.htm#a3">machine_learning/naive_bayes.cpp</a>, <a class="el" href="machine_learning_2neural_network_8cpp-example.htm#a8">machine_learning/neural_network.cpp</a>, <a class="el" href="machine_learning_2perceptron_8cpp-example.htm#a5">machine_learning/perceptron.cpp</a>, <a class="el" href="machine_learning_2rbm_8cpp-example.htm#a8">machine_learning/rbm.cpp</a>, <a class="el" href="machine_learning_2softmax_regression_8cpp-example.htm#a9">machine_learning/softmax_regression.cpp</a>, <a class="el" href="pde_2swe_8cpp-example.htm#a3">pde/swe.cpp</a>, and <a class="el" href="unified_2basic_8cpp-example.htm#a4">unified/basic.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="ga4d2909a9a82efa1f5a428f9eaab84e7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4d2909a9a82efa1f5a428f9eaab84e7d">&#9670;&nbsp;</a></span>constant() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> af::constant </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>d0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>&#160;</td>
          <td class="paramname"><em>ty</em> = <code>(<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>)&#160;<a class="el" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;&#160;T&#160;&gt;::ctype</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value of each element of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d0</td><td>is the size of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ty</td><td>is the type of the array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>array of size <code>d0</code> </dd></dl>

</div>
</div>
<a id="gac59a0ee843c38b50f1a74604e1f4ee17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac59a0ee843c38b50f1a74604e1f4ee17">&#9670;&nbsp;</a></span>constant() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> af::constant </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>d0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>d1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>&#160;</td>
          <td class="paramname"><em>ty</em> = <code>(<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>)&#160;<a class="el" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;&#160;T&#160;&gt;::ctype</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value of each element of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d0</td><td>is the number of rows of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d1</td><td>is the number of columns of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ty</td><td>is the type of the array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>array of size <code>d0</code> x d1 </dd></dl>

</div>
</div>
<a id="ga6e615ac013103f929fee2603d64785a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6e615ac013103f929fee2603d64785a0">&#9670;&nbsp;</a></span>constant() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> af::constant </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>d0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>d1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>d2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>&#160;</td>
          <td class="paramname"><em>ty</em> = <code>(<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>)&#160;<a class="el" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;&#160;T&#160;&gt;::ctype</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value of each element of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d0</td><td>is the size of the 1st dimension of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d1</td><td>is the size of the 2nd dimension of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d2</td><td>is the size of the 3rd dimension of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ty</td><td>is the type of the array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>array of size <code>d0</code> x d1 x d2 </dd></dl>

</div>
</div>
<a id="ga2e759362ddb366ec28a6abaae1061235"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2e759362ddb366ec28a6abaae1061235">&#9670;&nbsp;</a></span>constant() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1array.htm">array</a> af::constant </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>d0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>d1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>d2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a>&#160;</td>
          <td class="paramname"><em>d3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>&#160;</td>
          <td class="paramname"><em>ty</em> = <code>(<a class="el" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a>)&#160;<a class="el" href="structaf_1_1dtype__traits.htm">dtype_traits</a>&lt;&#160;T&#160;&gt;::ctype</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>is the value of each element of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d0</td><td>is the size of the 1st dimension of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d1</td><td>is the size of the 2nd dimension of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d2</td><td>is the size of the 3rd dimension of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d3</td><td>is the size of the 4rd dimension of the array to be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ty</td><td>is the type of the array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>array of size <code>d0</code> x d1 x d2 x d3 </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
