<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: eq</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__arith__func__eq.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">eq<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__mathfunc__mat.htm">Mathematical functions</a> &raquo; <a class="el" href="group__logic__mat.htm">Logical operations</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Equal to, an elementwise comparison of two arrays.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga76d2da7716831616bb81effa9e163693"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga76d2da7716831616bb81effa9e163693">af_eq</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga76d2da7716831616bb81effa9e163693"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface to check if corresponding elements of two arrays are equal.  <a href="group__arith__func__eq.htm#ga76d2da7716831616bb81effa9e163693">More...</a><br /></td></tr>
<tr class="separator:ga76d2da7716831616bb81effa9e163693"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa06c948dd656312c23268d11ad8773e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaa06c948dd656312c23268d11ad8773e9">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaa06c948dd656312c23268d11ad8773e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.  <a href="group__arith__func__eq.htm#gaa06c948dd656312c23268d11ad8773e9">More...</a><br /></td></tr>
<tr class="separator:gaa06c948dd656312c23268d11ad8773e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa45c66739a3539627f5e61cd0a5921f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaa45c66739a3539627f5e61cd0a5921f9">operator==</a> (const bool &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaa45c66739a3539627f5e61cd0a5921f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gaa45c66739a3539627f5e61cd0a5921f9">More...</a><br /></td></tr>
<tr class="separator:gaa45c66739a3539627f5e61cd0a5921f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga63a7b53ce6700b22e00c68bee164484f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga63a7b53ce6700b22e00c68bee164484f">operator==</a> (const int &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga63a7b53ce6700b22e00c68bee164484f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga63a7b53ce6700b22e00c68bee164484f">More...</a><br /></td></tr>
<tr class="separator:ga63a7b53ce6700b22e00c68bee164484f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab9be88f20659e084fdd46a4885c67096"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gab9be88f20659e084fdd46a4885c67096">operator==</a> (const unsigned &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gab9be88f20659e084fdd46a4885c67096"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gab9be88f20659e084fdd46a4885c67096">More...</a><br /></td></tr>
<tr class="separator:gab9be88f20659e084fdd46a4885c67096"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga492b1a27f9c5d7652e66cb28afc17c1d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga492b1a27f9c5d7652e66cb28afc17c1d">operator==</a> (const char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga492b1a27f9c5d7652e66cb28afc17c1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga492b1a27f9c5d7652e66cb28afc17c1d">More...</a><br /></td></tr>
<tr class="separator:ga492b1a27f9c5d7652e66cb28afc17c1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a4b28f93498089c339b2a9207ed8edf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga3a4b28f93498089c339b2a9207ed8edf">operator==</a> (const unsigned char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga3a4b28f93498089c339b2a9207ed8edf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga3a4b28f93498089c339b2a9207ed8edf">More...</a><br /></td></tr>
<tr class="separator:ga3a4b28f93498089c339b2a9207ed8edf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga847be211f66a170690a090e99080965b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga847be211f66a170690a090e99080965b">operator==</a> (const long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga847be211f66a170690a090e99080965b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga847be211f66a170690a090e99080965b">More...</a><br /></td></tr>
<tr class="separator:ga847be211f66a170690a090e99080965b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0ab2385db6ddd4193c2a95b8695f3f72"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga0ab2385db6ddd4193c2a95b8695f3f72">operator==</a> (const unsigned long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga0ab2385db6ddd4193c2a95b8695f3f72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga0ab2385db6ddd4193c2a95b8695f3f72">More...</a><br /></td></tr>
<tr class="separator:ga0ab2385db6ddd4193c2a95b8695f3f72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f005066f72173f5ec5985556499adf8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga9f005066f72173f5ec5985556499adf8">operator==</a> (const long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga9f005066f72173f5ec5985556499adf8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga9f005066f72173f5ec5985556499adf8">More...</a><br /></td></tr>
<tr class="separator:ga9f005066f72173f5ec5985556499adf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4f18a25458554583c90d3bdd496fffd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gae4f18a25458554583c90d3bdd496fffd">operator==</a> (const unsigned long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gae4f18a25458554583c90d3bdd496fffd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gae4f18a25458554583c90d3bdd496fffd">More...</a><br /></td></tr>
<tr class="separator:gae4f18a25458554583c90d3bdd496fffd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae75f8d37e2c2d150849b8ad7b98973de"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gae75f8d37e2c2d150849b8ad7b98973de">operator==</a> (const double &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gae75f8d37e2c2d150849b8ad7b98973de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gae75f8d37e2c2d150849b8ad7b98973de">More...</a><br /></td></tr>
<tr class="separator:gae75f8d37e2c2d150849b8ad7b98973de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7d30e99ec171958086e1b58b97253fad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga7d30e99ec171958086e1b58b97253fad">operator==</a> (const float &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga7d30e99ec171958086e1b58b97253fad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga7d30e99ec171958086e1b58b97253fad">More...</a><br /></td></tr>
<tr class="separator:ga7d30e99ec171958086e1b58b97253fad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e1265565b6d49b4b1a455cc206dd56d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga8e1265565b6d49b4b1a455cc206dd56d">operator==</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga8e1265565b6d49b4b1a455cc206dd56d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga8e1265565b6d49b4b1a455cc206dd56d">More...</a><br /></td></tr>
<tr class="separator:ga8e1265565b6d49b4b1a455cc206dd56d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0993c0211a8a82e13f683a286ed4623c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga0993c0211a8a82e13f683a286ed4623c">operator==</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga0993c0211a8a82e13f683a286ed4623c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga0993c0211a8a82e13f683a286ed4623c">More...</a><br /></td></tr>
<tr class="separator:ga0993c0211a8a82e13f683a286ed4623c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacfb12c26e75c23e3f8528206f8a24159"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gacfb12c26e75c23e3f8528206f8a24159">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:gacfb12c26e75c23e3f8528206f8a24159"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gacfb12c26e75c23e3f8528206f8a24159">More...</a><br /></td></tr>
<tr class="separator:gacfb12c26e75c23e3f8528206f8a24159"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3dce3d1bddf17a9e0663bff05263d3d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga3dce3d1bddf17a9e0663bff05263d3d0">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:ga3dce3d1bddf17a9e0663bff05263d3d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga3dce3d1bddf17a9e0663bff05263d3d0">More...</a><br /></td></tr>
<tr class="separator:ga3dce3d1bddf17a9e0663bff05263d3d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae25a8580de8bbfb27c16b33cd5c49f12"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gae25a8580de8bbfb27c16b33cd5c49f12">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:gae25a8580de8bbfb27c16b33cd5c49f12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gae25a8580de8bbfb27c16b33cd5c49f12">More...</a><br /></td></tr>
<tr class="separator:gae25a8580de8bbfb27c16b33cd5c49f12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f885d83af417538cc0b2bebf629ec07"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga6f885d83af417538cc0b2bebf629ec07">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga6f885d83af417538cc0b2bebf629ec07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga6f885d83af417538cc0b2bebf629ec07">More...</a><br /></td></tr>
<tr class="separator:ga6f885d83af417538cc0b2bebf629ec07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc11fea0c5dddb0580a7363c33cce890"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gadc11fea0c5dddb0580a7363c33cce890">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:gadc11fea0c5dddb0580a7363c33cce890"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gadc11fea0c5dddb0580a7363c33cce890">More...</a><br /></td></tr>
<tr class="separator:gadc11fea0c5dddb0580a7363c33cce890"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4c825855225f60b39212165d55cfa0ad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga4c825855225f60b39212165d55cfa0ad">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga4c825855225f60b39212165d55cfa0ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga4c825855225f60b39212165d55cfa0ad">More...</a><br /></td></tr>
<tr class="separator:ga4c825855225f60b39212165d55cfa0ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7526dde0264b6954901520361eaa4242"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga7526dde0264b6954901520361eaa4242">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga7526dde0264b6954901520361eaa4242"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga7526dde0264b6954901520361eaa4242">More...</a><br /></td></tr>
<tr class="separator:ga7526dde0264b6954901520361eaa4242"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d9885754d1efd4b34e9e9701d17b31a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga6d9885754d1efd4b34e9e9701d17b31a">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga6d9885754d1efd4b34e9e9701d17b31a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga6d9885754d1efd4b34e9e9701d17b31a">More...</a><br /></td></tr>
<tr class="separator:ga6d9885754d1efd4b34e9e9701d17b31a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaef618dc7e563e466eb95b76f068b3395"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaef618dc7e563e466eb95b76f068b3395">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gaef618dc7e563e466eb95b76f068b3395"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gaef618dc7e563e466eb95b76f068b3395">More...</a><br /></td></tr>
<tr class="separator:gaef618dc7e563e466eb95b76f068b3395"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae32a1a87c88e059210dddd946e348265"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gae32a1a87c88e059210dddd946e348265">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:gae32a1a87c88e059210dddd946e348265"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gae32a1a87c88e059210dddd946e348265">More...</a><br /></td></tr>
<tr class="separator:gae32a1a87c88e059210dddd946e348265"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga021b01c18cffba56d93eb4283a4356bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga021b01c18cffba56d93eb4283a4356bb">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga021b01c18cffba56d93eb4283a4356bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga021b01c18cffba56d93eb4283a4356bb">More...</a><br /></td></tr>
<tr class="separator:ga021b01c18cffba56d93eb4283a4356bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67716abd9142ed601fb3cff785a906e3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga67716abd9142ed601fb3cff785a906e3">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga67716abd9142ed601fb3cff785a906e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga67716abd9142ed601fb3cff785a906e3">More...</a><br /></td></tr>
<tr class="separator:ga67716abd9142ed601fb3cff785a906e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8bb0c5a16fce6f092f645204887daaca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga8bb0c5a16fce6f092f645204887daaca">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;rhs)</td></tr>
<tr class="separator:ga8bb0c5a16fce6f092f645204887daaca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5b34f0e0b55d0f26b97f366545522086"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga5b34f0e0b55d0f26b97f366545522086">operator==</a> (const short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga5b34f0e0b55d0f26b97f366545522086"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga5b34f0e0b55d0f26b97f366545522086">More...</a><br /></td></tr>
<tr class="separator:ga5b34f0e0b55d0f26b97f366545522086"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaffff6d5cb2a350c76eac90fea6dc5954"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#gaffff6d5cb2a350c76eac90fea6dc5954">operator==</a> (const unsigned short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaffff6d5cb2a350c76eac90fea6dc5954"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#gaffff6d5cb2a350c76eac90fea6dc5954">More...</a><br /></td></tr>
<tr class="separator:gaffff6d5cb2a350c76eac90fea6dc5954"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga975ced74a170856849ed8fbf2e2cbf7e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga975ced74a170856849ed8fbf2e2cbf7e">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga975ced74a170856849ed8fbf2e2cbf7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an equality operation on two arrays or an array and a value.   <a href="group__arith__func__eq.htm#ga975ced74a170856849ed8fbf2e2cbf7e">More...</a><br /></td></tr>
<tr class="separator:ga975ced74a170856849ed8fbf2e2cbf7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e351a068a1df168dd3ffcdf7abcccbf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__eq.htm#ga3e351a068a1df168dd3ffcdf7abcccbf">operator==</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:ga3e351a068a1df168dd3ffcdf7abcccbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >Equal to, an elementwise comparison of two arrays. </p>
<p >Check if the elements of one array are equal to those of another array. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga76d2da7716831616bb81effa9e163693" name="ga76d2da7716831616bb81effa9e163693"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga76d2da7716831616bb81effa9e163693">&#9670;&#160;</a></span>af_eq()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_eq </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>batch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface to check if corresponding elements of two arrays are equal. </p>
<p >Output type is b8.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>1's where <code>lhs == rhs</code>, else 0's </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>first input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>second input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">batch</td><td>batch mode </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a>, if function returns successfully, else an <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> code is given </dd></dl>

</div>
</div>
<a id="gaa06c948dd656312c23268d11ad8773e9" name="gaa06c948dd656312c23268d11ad8773e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa06c948dd656312c23268d11ad8773e9">&#9670;&#160;</a></span>operator==() <span class="overload">[1/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element </dd></dl>

</div>
</div>
<a id="gacfb12c26e75c23e3f8528206f8a24159" name="gacfb12c26e75c23e3f8528206f8a24159"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacfb12c26e75c23e3f8528206f8a24159">&#9670;&#160;</a></span>operator==() <span class="overload">[2/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga8bb0c5a16fce6f092f645204887daaca" name="ga8bb0c5a16fce6f092f645204887daaca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8bb0c5a16fce6f092f645204887daaca">&#9670;&#160;</a></span>operator==() <span class="overload">[3/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga67716abd9142ed601fb3cff785a906e3" name="ga67716abd9142ed601fb3cff785a906e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga67716abd9142ed601fb3cff785a906e3">&#9670;&#160;</a></span>operator==() <span class="overload">[4/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga6f885d83af417538cc0b2bebf629ec07" name="ga6f885d83af417538cc0b2bebf629ec07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6f885d83af417538cc0b2bebf629ec07">&#9670;&#160;</a></span>operator==() <span class="overload">[5/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="gae32a1a87c88e059210dddd946e348265" name="gae32a1a87c88e059210dddd946e348265"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae32a1a87c88e059210dddd946e348265">&#9670;&#160;</a></span>operator==() <span class="overload">[6/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga021b01c18cffba56d93eb4283a4356bb" name="ga021b01c18cffba56d93eb4283a4356bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga021b01c18cffba56d93eb4283a4356bb">&#9670;&#160;</a></span>operator==() <span class="overload">[7/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga3dce3d1bddf17a9e0663bff05263d3d0" name="ga3dce3d1bddf17a9e0663bff05263d3d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3dce3d1bddf17a9e0663bff05263d3d0">&#9670;&#160;</a></span>operator==() <span class="overload">[8/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga4c825855225f60b39212165d55cfa0ad" name="ga4c825855225f60b39212165d55cfa0ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4c825855225f60b39212165d55cfa0ad">&#9670;&#160;</a></span>operator==() <span class="overload">[9/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga6d9885754d1efd4b34e9e9701d17b31a" name="ga6d9885754d1efd4b34e9e9701d17b31a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6d9885754d1efd4b34e9e9701d17b31a">&#9670;&#160;</a></span>operator==() <span class="overload">[10/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga975ced74a170856849ed8fbf2e2cbf7e" name="ga975ced74a170856849ed8fbf2e2cbf7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga975ced74a170856849ed8fbf2e2cbf7e">&#9670;&#160;</a></span>operator==() <span class="overload">[11/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="gae25a8580de8bbfb27c16b33cd5c49f12" name="gae25a8580de8bbfb27c16b33cd5c49f12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae25a8580de8bbfb27c16b33cd5c49f12">&#9670;&#160;</a></span>operator==() <span class="overload">[12/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="gadc11fea0c5dddb0580a7363c33cce890" name="gadc11fea0c5dddb0580a7363c33cce890"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadc11fea0c5dddb0580a7363c33cce890">&#9670;&#160;</a></span>operator==() <span class="overload">[13/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga7526dde0264b6954901520361eaa4242" name="ga7526dde0264b6954901520361eaa4242"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7526dde0264b6954901520361eaa4242">&#9670;&#160;</a></span>operator==() <span class="overload">[14/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="gaef618dc7e563e466eb95b76f068b3395" name="gaef618dc7e563e466eb95b76f068b3395"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaef618dc7e563e466eb95b76f068b3395">&#9670;&#160;</a></span>operator==() <span class="overload">[15/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga3e351a068a1df168dd3ffcdf7abcccbf" name="ga3e351a068a1df168dd3ffcdf7abcccbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3e351a068a1df168dd3ffcdf7abcccbf">&#9670;&#160;</a></span>operator==() <span class="overload">[16/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaa45c66739a3539627f5e61cd0a5921f9" name="gaa45c66739a3539627f5e61cd0a5921f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa45c66739a3539627f5e61cd0a5921f9">&#9670;&#160;</a></span>operator==() <span class="overload">[17/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga0993c0211a8a82e13f683a286ed4623c" name="ga0993c0211a8a82e13f683a286ed4623c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0993c0211a8a82e13f683a286ed4623c">&#9670;&#160;</a></span>operator==() <span class="overload">[18/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga8e1265565b6d49b4b1a455cc206dd56d" name="ga8e1265565b6d49b4b1a455cc206dd56d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8e1265565b6d49b4b1a455cc206dd56d">&#9670;&#160;</a></span>operator==() <span class="overload">[19/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga492b1a27f9c5d7652e66cb28afc17c1d" name="ga492b1a27f9c5d7652e66cb28afc17c1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga492b1a27f9c5d7652e66cb28afc17c1d">&#9670;&#160;</a></span>operator==() <span class="overload">[20/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="gae75f8d37e2c2d150849b8ad7b98973de" name="gae75f8d37e2c2d150849b8ad7b98973de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae75f8d37e2c2d150849b8ad7b98973de">&#9670;&#160;</a></span>operator==() <span class="overload">[21/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga7d30e99ec171958086e1b58b97253fad" name="ga7d30e99ec171958086e1b58b97253fad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7d30e99ec171958086e1b58b97253fad">&#9670;&#160;</a></span>operator==() <span class="overload">[22/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga63a7b53ce6700b22e00c68bee164484f" name="ga63a7b53ce6700b22e00c68bee164484f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga63a7b53ce6700b22e00c68bee164484f">&#9670;&#160;</a></span>operator==() <span class="overload">[23/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga847be211f66a170690a090e99080965b" name="ga847be211f66a170690a090e99080965b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga847be211f66a170690a090e99080965b">&#9670;&#160;</a></span>operator==() <span class="overload">[24/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga9f005066f72173f5ec5985556499adf8" name="ga9f005066f72173f5ec5985556499adf8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9f005066f72173f5ec5985556499adf8">&#9670;&#160;</a></span>operator==() <span class="overload">[25/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga5b34f0e0b55d0f26b97f366545522086" name="ga5b34f0e0b55d0f26b97f366545522086"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5b34f0e0b55d0f26b97f366545522086">&#9670;&#160;</a></span>operator==() <span class="overload">[26/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="gab9be88f20659e084fdd46a4885c67096" name="gab9be88f20659e084fdd46a4885c67096"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab9be88f20659e084fdd46a4885c67096">&#9670;&#160;</a></span>operator==() <span class="overload">[27/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga3a4b28f93498089c339b2a9207ed8edf" name="ga3a4b28f93498089c339b2a9207ed8edf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3a4b28f93498089c339b2a9207ed8edf">&#9670;&#160;</a></span>operator==() <span class="overload">[28/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="ga0ab2385db6ddd4193c2a95b8695f3f72" name="ga0ab2385db6ddd4193c2a95b8695f3f72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0ab2385db6ddd4193c2a95b8695f3f72">&#9670;&#160;</a></span>operator==() <span class="overload">[29/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="gae4f18a25458554583c90d3bdd496fffd" name="gae4f18a25458554583c90d3bdd496fffd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae4f18a25458554583c90d3bdd496fffd">&#9670;&#160;</a></span>operator==() <span class="overload">[30/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
<a id="gaffff6d5cb2a350c76eac90fea6dc5954" name="gaffff6d5cb2a350c76eac90fea6dc5954"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaffff6d5cb2a350c76eac90fea6dc5954">&#9670;&#160;</a></span>operator==() <span class="overload">[31/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator== </td>
          <td>(</td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an equality operation on two arrays or an array and a value.  </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the equality operation performed on each element   </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Mon Sep 25 2023 12:35:29 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
