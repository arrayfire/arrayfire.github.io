<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: array.h (2020-07-07 17:43:34 +0530, (build 218dd2c99)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('array_8h_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">array.h (2020-07-07 17:43:34 +0530, (build 218dd2c99))</div>  </div>
</div><!--header-->
<div class="contents">
<a href="array_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*******************************************************</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2014, ArrayFire</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> ********************************************************/</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;af/compilers.h&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="defines_8h.htm">af/defines.h</a>&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="index_8h.htm">af/index.h</a>&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="seq_8h.htm">af/seq.h</a>&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="util_8h.htm">af/util.h</a>&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="traits_8hpp.htm">af/traits.hpp</a>&gt;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceaf.htm">af</a></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">class </span>dim4;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keyword">class </span><a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> {</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>   arr;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordtype">void</span> set(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> tmp);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#a45b3c2ad4eb3f366485b7408367c56b5">   46</a></span>&#160;        <span class="keyword">class </span><a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <span class="keyword">struct </span>array_proxy_impl;    <span class="comment">//forward declaration</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            array_proxy_impl *impl;     <span class="comment">// implementation</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a>(<a class="code" href="classaf_1_1array.htm">array</a>&amp; par, <a class="code" href="structaf__index__t.htm">af_index_t</a> *ssss, <span class="keywordtype">bool</span> linear = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm">   53</a></span>&#160;            <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a> &amp;other);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#if AF_COMPILER_CXX_RVALUE_REFERENCES</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a>(<a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a> &amp;&amp;other);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a> &amp; operator=(<a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a> &amp;&amp;other);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            ~<a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a>();</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a90799a5428da26c85b0a4a2e0da79ea5">   59</a></span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a6f301bc247ba9168e6315887513e71ea">   60</a></span>&#160;            <span class="comment">// Implicit conversion operators</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keyword">operator</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keyword">operator</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#define ASSIGN(OP)                                                  \</span></div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#ac1d3335cdb520e981763c7a2b24343ce">   65</a></span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const array_proxy &amp;a);         \</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const array &amp;a);               \</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const double &amp;a);              \</span></div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#aec88936a07e8c3c03ae59bcf9efccc45">   68</a></span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const cdouble &amp;a);             \</span></div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a6940a9dcb1164d987fdd7599e81049d1">   69</a></span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const cfloat &amp;a);              \</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const float &amp;a);               \</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const int &amp;a);                 \</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const unsigned &amp;a);            \</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const bool &amp;a);                \</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const char &amp;a);                \</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const unsigned char &amp;a);       \</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const long  &amp;a);               \</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const unsigned long &amp;a);       \</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const long long  &amp;a);          \</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const unsigned long long &amp;a);</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(=)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(+=)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(-=)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(*=)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(/=)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#undef ASSIGN</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#ae06f4e95626667ebad8c50bc265ecd1f">   88</a></span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 32</span></div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a157f55ba45cffff40fcbebc0fe575034">   89</a></span>&#160;<span class="preprocessor">#define ASSIGN(OP)                                                  \</span></div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a374b15d8ba60a5be828f631d1211f0f9">   90</a></span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const short &amp;a);               \</span></div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a6aff5c9bcd594a49bfe92a3a8a960cfb">   91</a></span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const unsigned short &amp;a);</span></div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#ac1a1e91ddc123afef5d3531132736cbf">   92</a></span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(=)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(+=)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(-=)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(*=)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(/=)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#undef ASSIGN</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a3f9bb5453c46a6565fef6f94674d315c">  100</a></span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a91ce8c7f97e9449e438913ece9a3cce1">  101</a></span>&#160;            <span class="comment">// af::array member functions. same behavior as those below</span></div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a06361358b40c2134986112557860780b">  102</a></span>&#160;            <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> get();</div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a1d3c3e051c2c89235ac911b1415f4a2c">  103</a></span>&#160;            <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> get() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#ab7b8f2dc94d86ba99db80c7fe1c21127">  104</a></span>&#160;            <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> elements() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T* host() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordtype">void</span> host(<span class="keywordtype">void</span> *ptr) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> type() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <a class="code" href="classaf_1_1dim4.htm">dim4</a> dims() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#aac57222501ff47f5d795503ac47c87e3">  109</a></span>&#160;            <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dims(<span class="keywordtype">unsigned</span> dim) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#ae2b564347156aa7fd3908617a84ba3cc">  110</a></span>&#160;            <span class="keywordtype">unsigned</span> numdims() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a89f91cdf327a8b304589916db5bde3c2">  111</a></span>&#160;            <span class="keywordtype">size_t</span> bytes() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a332e06d4340867375a5e415fc1befc1d">  112</a></span>&#160;            <span class="keywordtype">size_t</span> allocated() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a5cc0f3c2307de6b82ede47c9b26da2d0">  113</a></span>&#160;            <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__index__func__index.htm#ga25f470817062b23ad3f74347ea44b17c">copy</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a122667ba97054fbee7b1ff885bb3bfe4">  114</a></span>&#160;            <span class="keywordtype">bool</span> isempty() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a10d14b019693bc98f672ad7c4ac60bac">  115</a></span>&#160;            <span class="keywordtype">bool</span> isscalar() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a83301f0006c5cb2de7b92b596b40b97b">  116</a></span>&#160;            <span class="keywordtype">bool</span> isvector() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#af44710cddd99a7992a890b6096265041">  117</a></span>&#160;            <span class="keywordtype">bool</span> isrow() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a3b73c6479b9490ad49b8156e14473541">  118</a></span>&#160;            <span class="keywordtype">bool</span> iscolumn() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a8bc3e142a14a07815b29e230cefacd3e">  119</a></span>&#160;            <span class="keywordtype">bool</span> iscomplex() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#aa859f53b411dd3ab37c8c817b4352e07">  120</a></span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">bool</span> isreal()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !iscomplex(); }</div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a02af51409898c251bb31665e41596057">  121</a></span>&#160;            <span class="keywordtype">bool</span> isdouble() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a41966eaad67492044dc4757b843dbbac">  122</a></span>&#160;            <span class="keywordtype">bool</span> issingle() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a237bd79e8bf4cb8ad0c6eb1f0a9aa3d9">  123</a></span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div>
<div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a99cd74de21bde89f497dac1c2e1b23f1">  124</a></span>&#160;            <span class="keywordtype">bool</span> ishalf() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#af5e12ba6e9d5b29ab276fb4271cb0764">  125</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a2e82c9d93b78f06278146e85a222604b">  126</a></span>&#160;            <span class="keywordtype">bool</span> isrealfloating() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#ae778ca527466663084f5797f23075603">  127</a></span>&#160;            <span class="keywordtype">bool</span> isfloating() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#ae1893dbf4e3ad0325a7cdff6bc5485f5">  128</a></span>&#160;            <span class="keywordtype">bool</span> isinteger() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a819cfdc18b093dce679d6b6c72d0110b">  129</a></span>&#160;            <span class="keywordtype">bool</span> isbool() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a3ce9ca2348ff15914295042744c734e7">  131</a></span>&#160;            <span class="keywordtype">bool</span> issparse() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a26b61c0ea2dcb7aa91d21db31c0cf148">  133</a></span>&#160;            <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#ab33ad283445e5af655bf7e87bbab72e3">  134</a></span>&#160;            <a class="code" href="classaf_1_1array.htm">array</a> as(<a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> type) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a4b69d758673c8443bd0609685cb97615">  135</a></span>&#160;            <a class="code" href="classaf_1_1array.htm">array</a> T() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a75548d3af424a944fd62f0c897321311">  136</a></span>&#160;            <a class="code" href="classaf_1_1array.htm">array</a> H() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T scalar() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a4c71baaa51ca6bc9403a2a9ef0c46d96">  138</a></span>&#160;            <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T* device() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keywordtype">void</span> unlock() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a6a8d7156cd3c66a9ca9f0f2688ee9f72">  140</a></span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a2eb710f2713fa09134093919eb515566">  141</a></span>&#160;            <span class="keywordtype">void</span> lock() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a7fc1c437c072767fc8acea2b67469498">  142</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a222cd421e1a99821609a17d54c9fc488">  143</a></span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a048d77db849d74f18a13dabfd43ce55d">  144</a></span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#adadd8fc5a8adad8b3b833eb6a4244236">  145</a></span>&#160;            <span class="keywordtype">bool</span> isLocked() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#abc83498cc8bf3655094e2f4273861680">  146</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a0af0c6e3920cd67025211889c98807db">  148</a></span>&#160;                  <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> row(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> row(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                  <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> rows(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last);</div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a43966e19963e4bcb7f7f9b5327ec732b">  152</a></span>&#160;            <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> rows(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                  <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> col(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>);</div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#ab4b3d8fcff693a861c0748faf06fd65e">  155</a></span>&#160;            <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> col(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a9d0184cfb1f00ed4b0ecb371f5cc4728">  156</a></span>&#160;                  <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> cols(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> cols(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#acb5178c8a2361d0405cc34775e20c3af">  158</a></span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#a9cc36347482f44a204d053f9dd6d230c">  159</a></span>&#160;                  <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slice(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slice(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#ae54ff0116727d4f4f5f91306c609704e">  161</a></span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#ae9d4458d899387af9befc15794eea8aa">  162</a></span>&#160;                  <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slices(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last);</div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#ab4bddfa6cca59628b353964a71e8ec34">  163</a></span>&#160;            <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slices(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#aabcf3442d37bcd62b586f352a8f5017d">  164</a></span>&#160;        };</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>();</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="preprocessor">#if AF_COMPILER_CXX_RVALUE_REFERENCES</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;&amp;other) AF_NOEXCEPT;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <a class="code" href="classaf_1_1array.htm">array</a> &amp;operator=(<a class="code" href="classaf_1_1array.htm">array</a> &amp;&amp;other) AF_NOEXCEPT;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keyword">explicit</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> handle);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#ad34fcf3e619cabf1cd107f72c571f091">  215</a></span>&#160;        <a class="code" href="classaf_1_1array.htm#ad34fcf3e619cabf1cd107f72c571f091">array</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; in);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; </div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160; </div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim3, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; </div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        <span class="keyword">explicit</span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; dims, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; </div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0,</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;              <span class="keyword">const</span> T *pointer, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>);</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160; </div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160; </div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1,</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;              <span class="keyword">const</span> T *pointer, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>);</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160; </div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160; </div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2,</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;              <span class="keyword">const</span> T *pointer, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160; </div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160; </div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim3,</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;              <span class="keyword">const</span> T *pointer, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>);</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160; </div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        <span class="keyword">explicit</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; dims,</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;              <span class="keyword">const</span> T *pointer, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160; </div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; input, <span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; dims);</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160; </div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(  <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; input,</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1 = 1,</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2 = 1, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim3 = 1);</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160; </div>
<div class="line"><a name="l00554"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#a4866e95e473b71b99ad842608744ac4f">  554</a></span>&#160;        <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> get();</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160; </div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> get() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160; </div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> elements() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160; </div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T* host() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160; </div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        <span class="keywordtype">void</span> host(<span class="keywordtype">void</span> *ptr) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160; </div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="keywordtype">void</span> write(<span class="keyword">const</span> T *ptr, <span class="keyword">const</span> <span class="keywordtype">size_t</span> bytes, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src = <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>);</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160; </div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> type() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160; </div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        <a class="code" href="classaf_1_1dim4.htm">dim4</a> dims() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160; </div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dims(<span class="keywordtype">unsigned</span> dim) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160; </div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        <span class="keywordtype">unsigned</span> numdims() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160; </div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        <span class="keywordtype">size_t</span> bytes() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160; </div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        <span class="keywordtype">size_t</span> allocated() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00611"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#a3b73c6479b9490ad49b8156e14473541">  611</a></span>&#160; </div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__index__func__index.htm#ga25f470817062b23ad3f74347ea44b17c">copy</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160; </div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        <span class="keywordtype">bool</span> isempty() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160; </div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        <span class="keywordtype">bool</span> isscalar() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160; </div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        <span class="keywordtype">bool</span> isvector() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160; </div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        <span class="keywordtype">bool</span> isrow() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160; </div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        <span class="keywordtype">bool</span> iscolumn() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160; </div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;        <span class="keywordtype">bool</span> iscomplex() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160; </div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">bool</span> isreal()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !iscomplex(); }</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160; </div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        <span class="keywordtype">bool</span> isdouble() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160; </div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        <span class="keywordtype">bool</span> issingle() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160; </div>
<div class="line"><a name="l00662"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#ae1893dbf4e3ad0325a7cdff6bc5485f5">  662</a></span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160; </div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;        <span class="keywordtype">bool</span> ishalf() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00667"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#a819cfdc18b093dce679d6b6c72d0110b">  667</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160; </div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;        <span class="keywordtype">bool</span> isrealfloating() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00673"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#a3ce9ca2348ff15914295042744c734e7">  673</a></span>&#160; </div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;        <span class="keywordtype">bool</span> isfloating() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160; </div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        <span class="keywordtype">bool</span> isinteger() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160; </div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;        <span class="keywordtype">bool</span> isbool() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160; </div>
<div class="line"><a name="l00689"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#a4b69d758673c8443bd0609685cb97615">  689</a></span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160; </div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        <span class="keywordtype">bool</span> issparse() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00694"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#a75548d3af424a944fd62f0c897321311">  694</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160; </div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00700"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#a4c71baaa51ca6bc9403a2a9ef0c46d96">  700</a></span>&#160; </div>
<div class="line"><a name="l00706"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#a6a8d7156cd3c66a9ca9f0f2688ee9f72">  706</a></span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T scalar() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160; </div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T* device() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160; </div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;        <span class="comment">// INDEXING</span></div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        <span class="comment">// Single arguments</span></div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160; </div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;        <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> operator()(<span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s0);</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160; </div>
<div class="line"><a name="l00745"></a><span class="lineno"><a class="line" href="group__array__mem__operator__paren.htm#ga9fe5da06c007e62ef0f1a9f37e4f5d8a">  745</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> <a class="code" href="group__array__mem__operator__paren.htm#ga9fe5da06c007e62ef0f1a9f37e4f5d8a">operator()</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s0) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160; </div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160; </div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> operator()(<span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s0,</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s1,</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s2 = <a class="code" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>,</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s3 = <a class="code" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>);</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160; </div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> operator()(<span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s0,</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s1,</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s2 = <a class="code" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>,</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s3 = <a class="code" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160; </div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160; </div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;              <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> row(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>);</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> row(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>) <span class="keyword">const</span>; </div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160; </div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;              <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> rows(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last);</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> rows(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last) <span class="keyword">const</span>; </div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160; </div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;              <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> col(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>);</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> col(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>) <span class="keyword">const</span>; </div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160; </div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;              <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> cols(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last);</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> cols(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last) <span class="keyword">const</span>; </div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160; </div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;              <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slice(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>);</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slice(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>) <span class="keyword">const</span>; </div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160; </div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;              <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slices(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last);</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slices(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last) <span class="keyword">const</span>; </div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160; </div>
<div class="line"><a name="l00865"></a><span class="lineno"><a class="line" href="group__array__mem__slice.htm#gacceb2e3736fd26549d8487785b9745ba">  865</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> as(<a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> type) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160; </div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160; </div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;        ~<a class="code" href="classaf_1_1array.htm">array</a>();</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160; </div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;        <a class="code" href="classaf_1_1array.htm">array</a> T() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;        <a class="code" href="classaf_1_1array.htm">array</a> H() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160; </div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;<span class="preprocessor">#define ASSIGN_(OP2)                                                                      \</span></div>
<div class="line"><a name="l00880"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#a7fc1c437c072767fc8acea2b67469498">  880</a></span>&#160;<span class="preprocessor">        array&amp; OP2(const array &amp;val);                                                     \</span></div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;<span class="preprocessor">        array&amp; OP2(const double &amp;val);               \</span></div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;<span class="preprocessor">        array&amp; OP2(const cdouble &amp;val);              \</span></div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;<span class="preprocessor">        array&amp; OP2(const cfloat &amp;val);               \</span></div>
<div class="line"><a name="l00884"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#a222cd421e1a99821609a17d54c9fc488">  884</a></span>&#160;<span class="preprocessor">        array&amp; OP2(const float &amp;val);                \</span></div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;<span class="preprocessor">        array&amp; OP2(const int &amp;val);                  \</span></div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;<span class="preprocessor">        array&amp; OP2(const unsigned &amp;val);             \</span></div>
<div class="line"><a name="l00887"></a><span class="lineno"><a class="line" href="array_8h.htm#a3024a14587b6373c2e2a3fe65f2b8b12">  887</a></span>&#160;<span class="preprocessor">        array&amp; OP2(const bool &amp;val);                 \</span></div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;<span class="preprocessor">        array&amp; OP2(const char &amp;val);                 \</span></div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;<span class="preprocessor">        array&amp; OP2(const unsigned char &amp;val);        \</span></div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;<span class="preprocessor">        array&amp; OP2(const long  &amp;val);                \</span></div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;<span class="preprocessor">        array&amp; OP2(const unsigned long &amp;val);        \</span></div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;<span class="preprocessor">        array&amp; OP2(const long long  &amp;val);           \</span></div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;<span class="preprocessor">        array&amp; OP2(const unsigned long long &amp;val);</span></div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160; </div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160; </div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 32</span></div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="preprocessor">#define ASSIGN(OP)                                                                        \</span></div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;<span class="preprocessor">        ASSIGN_(OP)                                                                       \</span></div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;<span class="preprocessor">          array&amp; OP(const short  &amp;val);               \</span></div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;<span class="preprocessor">          array&amp; OP(const unsigned short &amp;val);</span></div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160; </div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;<span class="preprocessor">#define ASSIGN(OP) ASSIGN_(OP)</span></div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00905"></a><span class="lineno"><a class="line" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">  905</a></span>&#160; </div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160; </div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;        <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(<span class="keyword">operator</span>=)</div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160; </div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;        <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(operator+=)</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160; </div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;        <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(operator-=)</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160; </div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;        <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(operator*=)</div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160; </div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;        <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(operator/=)</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160; </div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160; </div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;<span class="preprocessor">#undef ASSIGN</span></div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;<span class="preprocessor">#undef ASSIGN_</span></div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160; </div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__sub.htm#gafa57cf4a71580be2bfd04a83a66d9835">operator -</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160; </div>
<div class="line"><a name="l00984"></a><span class="lineno"><a class="line" href="group__arith__func__neg.htm#gaedef821c349b4baef7c60b52c958f4fc">  984</a></span>&#160;        <a class="code" href="classaf_1_1array.htm">array</a> operator !() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160; </div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;        <span class="keywordtype">int</span> nonzeros() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00991"></a><span class="lineno"><a class="line" href="group__arith__func__not.htm#ga17eb7b75d893bff8288eb80067d4be77">  991</a></span>&#160; </div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160; </div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;        <span class="keywordtype">void</span> lock() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160; </div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160; </div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;        <span class="keywordtype">bool</span> isLocked() <span class="keyword">const</span>;</div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160; </div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160; </div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;        <span class="keywordtype">void</span> unlock() <span class="keyword">const</span>;</div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;    };</div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;    <span class="comment">// end of class array</span></div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160; </div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;<span class="preprocessor">#define BIN_OP_(OP)                                                                                                      \</span></div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const array&amp; rhs);                                                                 \</span></div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;<span class="preprocessor">    AFAPI array OP (const bool&amp; lhs, const array&amp; rhs);                \</span></div>
<div class="line"><a name="l01023"></a><span class="lineno"><a class="line" href="classaf_1_1array.htm#abc83498cc8bf3655094e2f4273861680"> 1023</a></span>&#160;<span class="preprocessor">    AFAPI array OP (const int&amp; lhs, const array&amp; rhs);                 \</span></div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;<span class="preprocessor">    AFAPI array OP (const unsigned&amp; lhs, const array&amp; rhs);            \</span></div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;<span class="preprocessor">    AFAPI array OP (const char&amp; lhs, const array&amp; rhs);                \</span></div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;<span class="preprocessor">    AFAPI array OP (const unsigned char&amp; lhs, const array&amp; rhs);       \</span></div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;<span class="preprocessor">    AFAPI array OP (const long&amp; lhs, const array&amp; rhs);                \</span></div>
<div class="line"><a name="l01028"></a><span class="lineno"><a class="line" href="array_8h.htm#a2c8e67e88a0a2815d1253276803deef4"> 1028</a></span>&#160;<span class="preprocessor">    AFAPI array OP (const unsigned long&amp; lhs, const array&amp; rhs);       \</span></div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;<span class="preprocessor">    AFAPI array OP (const long long&amp; lhs, const array&amp; rhs);           \</span></div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;<span class="preprocessor">    AFAPI array OP (const unsigned long long&amp; lhs, const array&amp; rhs);  \</span></div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;<span class="preprocessor">    AFAPI array OP (const double&amp; lhs, const array&amp; rhs);              \</span></div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;<span class="preprocessor">    AFAPI array OP (const float&amp; lhs, const array&amp; rhs);               \</span></div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;<span class="preprocessor">    AFAPI array OP (const cfloat&amp; lhs, const array&amp; rhs);              \</span></div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;<span class="preprocessor">    AFAPI array OP (const cdouble&amp; lhs, const array&amp; rhs);             \</span></div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const bool&amp; rhs);                \</span></div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const int&amp; rhs);                 \</span></div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const unsigned&amp; rhs);            \</span></div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const char&amp; rhs);                \</span></div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const unsigned char&amp; rhs);       \</span></div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const long&amp; rhs);                \</span></div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const unsigned long&amp; rhs);       \</span></div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const long long&amp; rhs);           \</span></div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const unsigned long long&amp; rhs);  \</span></div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const double&amp; rhs);              \</span></div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const float&amp; rhs);               \</span></div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const cfloat&amp; rhs);              \</span></div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const cdouble&amp; rhs);</span></div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160; </div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 32</span></div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;<span class="preprocessor">#define BIN_OP(OP)                                                                                                        \</span></div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;<span class="preprocessor">        BIN_OP_(OP)                                                                                                       \</span></div>
<div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;<span class="preprocessor">        AFAPI array OP (const short&amp; lhs, const array&amp; rhs);            \</span></div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="preprocessor">        AFAPI array OP (const unsigned short&amp; lhs, const array&amp; rhs);   \</span></div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;<span class="preprocessor">        AFAPI array OP (const array&amp; lhs, const short&amp; rhs);            \</span></div>
<div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="preprocessor">        AFAPI array OP (const array&amp; lhs, const unsigned short&amp; rhs);</span></div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160; </div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01058"></a><span class="lineno"><a class="line" href="array_8h.htm#a6d8256045dabd15534382126773e729d"> 1058</a></span>&#160;<span class="preprocessor">#define BIN_OP(OP) BIN_OP_(OP)</span></div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160; </div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(<span class="keyword">operator</span>+ )</div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160; </div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator- )</div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160; </div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator* )</div>
<div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160; </div>
<div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator/ )</div>
<div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160; </div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator==)</div>
<div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160; </div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator!=)</div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160; </div>
<div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator&lt; )</div>
<div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160; </div>
<div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator&lt;=)</div>
<div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160; </div>
<div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator&gt; )</div>
<div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160; </div>
<div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator&gt;=)</div>
<div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160; </div>
<div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator||)</div>
<div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160; </div>
<div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator% )</div>
<div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160; </div>
<div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator| )</div>
<div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160; </div>
<div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator^ )</div>
<div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160; </div>
<div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator&lt;&lt;)</div>
<div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160; </div>
<div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator&gt;&gt;)</div>
<div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160; </div>
<div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;<span class="preprocessor">#undef BIN_OP</span></div>
<div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;<span class="preprocessor">#undef BIN_OP_</span></div>
<div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160; </div>
<div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; rhs);</div>
<div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a>&amp; rhs);</div>
<div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a>&amp; rhs);</div>
<div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">char</span>&amp; rhs);</div>
<div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; rhs);</div>
<div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">float</span>&amp; rhs);</div>
<div class="line"><a name="l01272"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb"> 1272</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">int</span>&amp; rhs);</div>
<div class="line"><a name="l01273"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga0749c77fd9b1315f76c2da4bda22ea95"> 1273</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01274"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#gaf4c97412e30f894e75ce4f3d045281f3"> 1274</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01275"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga5ea6c38754753ad070793ad5403e01a7"> 1275</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">short</span>&amp; rhs);</div>
<div class="line"><a name="l01276"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#gac2c43f25095e297d2c032773780eb310"> 1276</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>&amp; rhs);</div>
<div class="line"><a name="l01277"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga7a324365a8cb64063d302b2ead1e59e6"> 1277</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01278"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga61912247f6ded6b2d708ef7b7de6b469"> 1278</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01279"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga2a569520c5f5ba120e5413ce3796eeb6"> 1279</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&amp; rhs);</div>
<div class="line"><a name="l01280"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#gafefb3e583f5eb31a6e671832b30bffbb"> 1280</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span>&amp; rhs);</div>
<div class="line"><a name="l01281"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga17e6647058f2a2205b0f38776adc1185"> 1281</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01282"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga23ab0966537c593177150390311e62bc"> 1282</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="structaf_1_1af__cdouble.htm">cdouble</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01283"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga77cdc01cc66d2e2635fc864c2e120376"> 1283</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="structaf_1_1af__cfloat.htm">cfloat</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01284"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#gad1107d724fd4efb464136962a7bdf715"> 1284</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01285"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#gacc62ac687dd92904515d4888502688e6"> 1285</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01286"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga53e9938ef4e65b7fa81953f41706854f"> 1286</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01287"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga77252925b1388adf094b93e1a94ffcb5"> 1287</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">int</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01288"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga6bbeda99d46318ab639bbc2c0d26e741"> 1288</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01289"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga99a2b84f00d01e30d5247f0e3750d84e"> 1289</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01290"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga681d1a8281fd3a483672603b2eb44e2e"> 1290</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">short</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01291"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#gae05458743f806dca1ba107777c10480c"> 1291</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01292"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga9acbdf50e4d60daf2fe5426eeaa34201"> 1292</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01293"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga800e2ca3cbbb8339858fb7bab9479261"> 1293</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01294"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#gadf295b50b1711d447027c0d21cda84e7"> 1294</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01295"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#ga7a364e35c4911780793d8486d5901db6"> 1295</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01297"></a><span class="lineno"><a class="line" href="group__arith__func__bitand.htm#gafc3faf5423ac1cdbc1f48c82e8f7c8bd"> 1297</a></span>&#160; </div>
<div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; rhs);</div>
<div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="structaf_1_1af__cdouble.htm">cdouble</a>&amp; rhs);</div>
<div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="structaf_1_1af__cfloat.htm">cfloat</a>&amp; rhs);</div>
<div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">char</span>&amp; rhs);</div>
<div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; rhs);</div>
<div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">float</span>&amp; rhs);</div>
<div class="line"><a name="l01315"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93"> 1315</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">int</span>&amp; rhs);</div>
<div class="line"><a name="l01316"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga43bd49d3ff6805c19a3644fbfce4e890"> 1316</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01317"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#gaf065ba893ec8543dec1c7432d67e9be6"> 1317</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01318"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga3fd6cafbcc2790a3971c7fd234734a86"> 1318</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">short</span>&amp; rhs);</div>
<div class="line"><a name="l01319"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga260532ab66fa5834e1832fa496c6f805"> 1319</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>&amp; rhs);</div>
<div class="line"><a name="l01320"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga29cc1ce803f07201c1df0c6820ddbfc2"> 1320</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01321"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#gad339ddc6d510811606d955fd3f5f165f"> 1321</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01322"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga79fa30e513abe89b36c4bdd9cac80be8"> 1322</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&amp; rhs);</div>
<div class="line"><a name="l01323"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#gafde60f1009ab34ea4258c0622710bc6c"> 1323</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span>&amp; rhs);</div>
<div class="line"><a name="l01324"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#gadd83fe7117637af4889c85db7d1554e8"> 1324</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01325"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga1e93960fb9c0448a3dc5d78bd234c96d"> 1325</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="structaf_1_1af__cdouble.htm">cdouble</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01326"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga34b8bfe7a99154d52699716726132824"> 1326</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="structaf_1_1af__cfloat.htm">cfloat</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01327"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#gaf44d48809068e42d37bce39dd69a639c"> 1327</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01328"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga5b583c900cce5072f87b6470dde2ec69"> 1328</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01329"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga1d8b3d6dd20adfcd00fe2a19732c5333"> 1329</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01330"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga6eac8e73327754eef161f206ad85d68a"> 1330</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">int</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01331"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#gae61a73b2586750743718dc61635c68ca"> 1331</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01332"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga50b2c1336819c3d5cf227b840f391345"> 1332</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01333"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#gad023d6bc800eab0d4334432b30f36b69"> 1333</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">short</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01334"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga99541629e93c37ee05ee9d1a009fe295"> 1334</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01335"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#gab121123634a7eeafa6c102f39c3edd92"> 1335</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01336"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga1cae3bfc09632914f8c6212bc39f690f"> 1336</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01337"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga59fb7665989187674e71cc22a30d0616"> 1337</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01338"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#gafd9869ed9e752424a5542d241315f73e"> 1338</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; rhs);</div>
<div class="line"><a name="l01340"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#ga39a8c4d38c271cd4fb961937799def03"> 1340</a></span>&#160; </div>
<div class="line"><a name="l01341"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#gaa6e9d467b34b9a76a966363ac4dde528"> 1341</a></span>&#160; </div>
<div class="line"><a name="l01343"></a><span class="lineno"><a class="line" href="group__arith__func__and.htm#gad07414033d3e1bb1613d4e58a52dbda9"> 1343</a></span>&#160; </div>
<div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;    <span class="keyword">inline</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;<a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;a) { a.<a class="code" href="classaf_1_1array.htm#a6a8d7156cd3c66a9ca9f0f2688ee9f72">eval</a>(); <span class="keywordflow">return</span> a; }</div>
<div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160; </div>
<div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keywordtype">int</span> num, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> **arrays);</div>
<div class="line"><a name="l01354"></a><span class="lineno"><a class="line" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39"> 1354</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160; </div>
<div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;a, <a class="code" href="classaf_1_1array.htm">array</a> &amp;b)</div>
<div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;    {</div>
<div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;        <a class="code" href="classaf_1_1array.htm">array</a> *arrays[] = {&amp;a, &amp;b};</div>
<div class="line"><a name="l01360"></a><span class="lineno"><a class="line" href="group__data__mat.htm#gaeade064317ff4e40e66180718a34f9da"> 1360</a></span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(2, arrays);</div>
<div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;        <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(a); b.<a class="code" href="classaf_1_1array.htm#a6a8d7156cd3c66a9ca9f0f2688ee9f72">eval</a>();</div>
<div class="line"><a name="l01363"></a><span class="lineno"><a class="line" href="group__data__mat.htm#ga6a17a89fab2c26be8e911c4628c4c54c"> 1363</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;    }</div>
<div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160; </div>
<div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;c)</div>
<div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;    {</div>
<div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c};</div>
<div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(3, arrays);</div>
<div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;        <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(a, b); c.eval();</div>
<div class="line"><a name="l01373"></a><span class="lineno"><a class="line" href="group__data__mat.htm#ga932cc56a65acbe91ff2cea42e2f43bb6"> 1373</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;    }</div>
<div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160; </div>
<div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;c, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;d)</div>
<div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;    {</div>
<div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d};</div>
<div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(4, arrays);</div>
<div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;        <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(a, b, c); d.eval();</div>
<div class="line"><a name="l01383"></a><span class="lineno"><a class="line" href="group__data__mat.htm#ga8d75de296c6378ef17825a3776db93e4"> 1383</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160; </div>
<div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;    }</div>
<div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160; </div>
<div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;c, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;d, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;e)</div>
<div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;    {</div>
<div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d, &amp;e};</div>
<div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(5, arrays);</div>
<div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;        <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(a, b, c, d); e.eval();</div>
<div class="line"><a name="l01394"></a><span class="lineno"><a class="line" href="group__data__mat.htm#gad2cfee88b0b16efb2e4c3fe5a01187ac"> 1394</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;    }</div>
<div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160; </div>
<div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;c, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;d, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;e, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;f)</div>
<div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;    {</div>
<div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d, &amp;e, &amp;f};</div>
<div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(6, arrays);</div>
<div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;        <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(a, b, c, d, e); f.eval();</div>
<div class="line"><a name="l01404"></a><span class="lineno"><a class="line" href="group__data__mat.htm#ga0b49360b87556fcc3d256c864e72e50b"> 1404</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;    }</div>
<div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160; </div>
<div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div>
<div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160; </div>
<div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;    <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;<a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a) { a.<a class="code" href="classaf_1_1array.htm#a6a8d7156cd3c66a9ca9f0f2688ee9f72">eval</a>(); <span class="keywordflow">return</span> a; }</div>
<div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160; </div>
<div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;<span class="preprocessor">#if AF_COMPILER_CXX_VARIADIC_TEMPLATES</span></div>
<div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... ARRAYS&gt;</div>
<div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(ARRAYS... in) {</div>
<div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {<span class="keyword">const_cast&lt;</span><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *<span class="keyword">&gt;</span>(&amp;in)...};</div>
<div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;        <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>((<span class="keywordtype">int</span>)<span class="keyword">sizeof</span>...(in), arrays);</div>
<div class="line"><a name="l01417"></a><span class="lineno"><a class="line" href="group__data__mat.htm#ga45f52ad29c9ac39d7fa2efd8f2470a22"> 1417</a></span>&#160;    }</div>
<div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160; </div>
<div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160; </div>
<div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b)</div>
<div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;    {</div>
<div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;        <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b};</div>
<div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(2, <span class="keyword">const_cast&lt;</span><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;    }</div>
<div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160; </div>
<div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;c)</div>
<div class="line"><a name="l01428"></a><span class="lineno"><a class="line" href="group__data__mat.htm#ga2016101f197ce325858f706405dbb399"> 1428</a></span>&#160;    {</div>
<div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c};</div>
<div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(3, <span class="keyword">const_cast&lt;</span><a class="code" href="classaf_1_1array.htm">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;    }</div>
<div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160; </div>
<div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;c,</div>
<div class="line"><a name="l01434"></a><span class="lineno"><a class="line" href="group__data__mat.htm#gab9545550ae34532581c47d2f8a616569"> 1434</a></span>&#160;                     <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;d)</div>
<div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;    {</div>
<div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d};</div>
<div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(4, <span class="keyword">const_cast&lt;</span><a class="code" href="classaf_1_1array.htm">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;    }</div>
<div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160; </div>
<div class="line"><a name="l01440"></a><span class="lineno"><a class="line" href="group__data__mat.htm#ga0ab6d6c52ec85bd70ee1223448958261"> 1440</a></span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;a, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;b, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;c,</div>
<div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;                     <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;d, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;e)</div>
<div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;    {</div>
<div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d, &amp;e};</div>
<div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(5, <span class="keyword">const_cast&lt;</span><a class="code" href="classaf_1_1array.htm">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;    }</div>
<div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160; </div>
<div class="line"><a name="l01447"></a><span class="lineno"><a class="line" href="group__data__mat.htm#gaddec0e716ad2d696f01b3359e2207e7d"> 1447</a></span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;a, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;b, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;c,</div>
<div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;                     <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;d, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;e, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;f)</div>
<div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;    {</div>
<div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d, &amp;e, &amp;f};</div>
<div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(6, <span class="keyword">const_cast&lt;</span><a class="code" href="classaf_1_1array.htm">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;    }</div>
<div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;<span class="preprocessor">#endif // AF_COMPILER_CXX_VARIADIC_TEMPLATES</span></div>
<div class="line"><a name="l01454"></a><span class="lineno"><a class="line" href="group__data__mat.htm#gaed1d77332fa65805b2a6bf1cee8a857c"> 1454</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160; </div>
<div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__data__mat.htm#ga11dba1a052f2fe004665237d9670e1f5">setManualEvalFlag</a>(<span class="keywordtype">bool</span> flag);</div>
<div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160; </div>
<div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">bool</span> <a class="code" href="group__data__mat.htm#ga0c2f8602994b437164ee5783cedabfa9">getManualEvalFlag</a>();</div>
<div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01467"></a><span class="lineno"><a class="line" href="group__data__mat.htm#ga11dba1a052f2fe004665237d9670e1f5"> 1467</a></span>&#160; </div>
<div class="line"><a name="l01472"></a><span class="lineno"><a class="line" href="group__data__mat.htm#ga0c2f8602994b437164ee5783cedabfa9"> 1472</a></span>&#160;}</div>
<div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160; </div>
<div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div>
<div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160; </div>
<div class="line"><a name="l01497"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga834be32357616d8ab735087c6f681858"> 1497</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga834be32357616d8ab735087c6f681858">af_create_array</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, <span class="keyword">const</span> <span class="keywordtype">void</span> * <span class="keyword">const</span> data, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> ndims, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> * <span class="keyword">const</span> dims, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type);</div>
<div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160; </div>
<div class="line"><a name="l01512"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga3b8f5cf6fce69aa1574544bc2d44d7d0"> 1512</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga3b8f5cf6fce69aa1574544bc2d44d7d0">af_create_handle</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> ndims, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> * <span class="keyword">const</span> dims, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type);</div>
<div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160; </div>
<div class="line"><a name="l01517"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga0f8e4d3732b5fd4b91ad51eec634f7a2"> 1517</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga0f8e4d3732b5fd4b91ad51eec634f7a2">af_copy_array</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div>
<div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160; </div>
<div class="line"><a name="l01522"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#gafef13633d184acc726ad9daca7a7bc99"> 1522</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#gafef13633d184acc726ad9daca7a7bc99">af_write_array</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr, <span class="keyword">const</span> <span class="keywordtype">void</span> *data, <span class="keyword">const</span> <span class="keywordtype">size_t</span> bytes, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af_source</a> src);</div>
<div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160; </div>
<div class="line"><a name="l01529"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga6040dc6f0eb127402fbf62c1165f0b9d"> 1529</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga6040dc6f0eb127402fbf62c1165f0b9d">af_get_data_ptr</a>(<span class="keywordtype">void</span> *data, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160; </div>
<div class="line"><a name="l01536"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#gad6c58648ed0db398e170dabf045e8309"> 1536</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#gad6c58648ed0db398e170dabf045e8309">af_release_array</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160; </div>
<div class="line"><a name="l01541"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga7ed45b3f881c0f6c80c5cf2af886dbab"> 1541</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga7ed45b3f881c0f6c80c5cf2af886dbab">af_retain_array</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div>
<div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160; </div>
<div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div>
<div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160; </div>
<div class="line"><a name="l01547"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga34d9070b94c3bac673df7f13b9c718a2"> 1547</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga34d9070b94c3bac673df7f13b9c718a2">af_get_data_ref_count</a>(<span class="keywordtype">int</span> *use_count, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div>
<div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160; </div>
<div class="line"><a name="l01553"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga9de141bfc5936741d2496f59c1bac777"> 1553</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga9de141bfc5936741d2496f59c1bac777">af_eval</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div>
<div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160; </div>
<div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160; </div>
<div class="line"><a name="l01559"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga9e08f4cda2471a477d2fa91c2356f72c"> 1559</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga9e08f4cda2471a477d2fa91c2356f72c">af_eval_multiple</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> num, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arrays);</div>
<div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160; </div>
<div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160; </div>
<div class="line"><a name="l01566"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga869f5e9331e9e010345de2589add7bae"> 1566</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga869f5e9331e9e010345de2589add7bae">af_set_manual_eval_flag</a>(<span class="keywordtype">bool</span> flag);</div>
<div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160; </div>
<div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160; </div>
<div class="line"><a name="l01573"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga890c476d90cb689f2835d2e4f74f5868"> 1573</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga890c476d90cb689f2835d2e4f74f5868">af_get_manual_eval_flag</a>(<span class="keywordtype">bool</span> *flag);</div>
<div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160; </div>
<div class="line"><a name="l01584"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga6845bbe4385a60a606b88f8130252c1f"> 1584</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga6845bbe4385a60a606b88f8130252c1f">af_get_elements</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *elems, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160; </div>
<div class="line"><a name="l01594"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga0dda6898e1c0d9a43efb56cd6a988c9b"> 1594</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga0dda6898e1c0d9a43efb56cd6a988c9b">af_get_type</a>(<a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> *type, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160; </div>
<div class="line"><a name="l01607"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga8b90da50a532837d9763e301b2267348"> 1607</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga8b90da50a532837d9763e301b2267348">af_get_dims</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d1, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d2, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d3,</div>
<div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;                             <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160; </div>
<div class="line"><a name="l01618"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#gaefa019d932ff58c2a829ce87edddd2a8"> 1618</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#gaefa019d932ff58c2a829ce87edddd2a8">af_get_numdims</a>(<span class="keywordtype">unsigned</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160; </div>
<div class="line"><a name="l01628"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga19c749e95314e1c77d816ad9952fb680"> 1628</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga19c749e95314e1c77d816ad9952fb680">af_is_empty</a>        (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160; </div>
<div class="line"><a name="l01638"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#gae3dfa6dc1c03c5efe7482bfc9c41266a"> 1638</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#gae3dfa6dc1c03c5efe7482bfc9c41266a">af_is_scalar</a>       (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160; </div>
<div class="line"><a name="l01648"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#gabbe3249a355293daabd5907d7df67c6a"> 1648</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#gabbe3249a355293daabd5907d7df67c6a">af_is_row</a>          (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160; </div>
<div class="line"><a name="l01658"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga184b5a5feb146f2a2a44fed36b35e435"> 1658</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga184b5a5feb146f2a2a44fed36b35e435">af_is_column</a>       (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160; </div>
<div class="line"><a name="l01670"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga00a23c7dd281fdcdec10b8395e611154"> 1670</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga00a23c7dd281fdcdec10b8395e611154">af_is_vector</a>       (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160; </div>
<div class="line"><a name="l01680"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#gacd8a5edf6467340d0b40341be9f677e9"> 1680</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#gacd8a5edf6467340d0b40341be9f677e9">af_is_complex</a>      (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160; </div>
<div class="line"><a name="l01692"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#gafaa0c1597ef34a7320ed589f80fdce10"> 1692</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#gafaa0c1597ef34a7320ed589f80fdce10">af_is_real</a>         (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01693"></a><span class="lineno"> 1693</span>&#160; </div>
<div class="line"><a name="l01702"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#gadb499641bfc02dfa56a75be9ba237e3f"> 1702</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#gadb499641bfc02dfa56a75be9ba237e3f">af_is_double</a>       (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160; </div>
<div class="line"><a name="l01712"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga1bd444b2c78a4f4731d4523a90200175"> 1712</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga1bd444b2c78a4f4731d4523a90200175">af_is_single</a>       (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01713"></a><span class="lineno"> 1713</span>&#160; </div>
<div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div>
<div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160; </div>
<div class="line"><a name="l01723"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga247a830d52f1cb2450369af3d8d8f2f1"> 1723</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga247a830d52f1cb2450369af3d8d8f2f1">af_is_half</a>(<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160; </div>
<div class="line"><a name="l01734"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga6f2b3e689d07f5135dfc1ee6cf9825a3"> 1734</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga6f2b3e689d07f5135dfc1ee6cf9825a3">af_is_realfloating</a> (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01735"></a><span class="lineno"> 1735</span>&#160; </div>
<div class="line"><a name="l01747"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga5eb0d277412a2beeffe7e7a9f89b98ea"> 1747</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga5eb0d277412a2beeffe7e7a9f89b98ea">af_is_floating</a>     (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01748"></a><span class="lineno"> 1748</span>&#160; </div>
<div class="line"><a name="l01757"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#ga768e8326a6aaa81c6543949afc781af2"> 1757</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#ga768e8326a6aaa81c6543949afc781af2">af_is_integer</a>      (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01758"></a><span class="lineno"> 1758</span>&#160; </div>
<div class="line"><a name="l01767"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#gafae10fc1378b72404120572e21ff5d27"> 1767</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#gafae10fc1378b72404120572e21ff5d27">af_is_bool</a>         (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01768"></a><span class="lineno"> 1768</span>&#160; </div>
<div class="line"><a name="l01769"></a><span class="lineno"> 1769</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01770"></a><span class="lineno"> 1770</span>&#160; </div>
<div class="line"><a name="l01778"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#gac96d3ca37a435874de22a76838a8cf54"> 1778</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#gac96d3ca37a435874de22a76838a8cf54">af_is_sparse</a>       (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01780"></a><span class="lineno"> 1780</span>&#160; </div>
<div class="line"><a name="l01781"></a><span class="lineno"> 1781</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 35</span></div>
<div class="line"><a name="l01782"></a><span class="lineno"> 1782</span>&#160; </div>
<div class="line"><a name="l01789"></a><span class="lineno"><a class="line" href="group__c__api__mat.htm#gaefe2e343a74a84bd43b588218ecc09a3"> 1789</a></span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__c__api__mat.htm#gaefe2e343a74a84bd43b588218ecc09a3">af_get_scalar</a>(<span class="keywordtype">void</span>* output_value, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01790"></a><span class="lineno"> 1790</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01791"></a><span class="lineno"> 1791</span>&#160; </div>
<div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;}</div>
<div class="line"><a name="l01798"></a><span class="lineno"> 1798</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassaf_1_1dim4_htm"><div class="ttname"><a href="classaf_1_1dim4.htm">af::dim4</a></div><div class="ttdoc">Generic object that represents size and shape.</div><div class="ttdef"><b>Definition:</b> <a href="dim4_8hpp_source.htm#l00032">dim4.hpp:33</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga7ed45b3f881c0f6c80c5cf2af886dbab"><div class="ttname"><a href="group__c__api__mat.htm#ga7ed45b3f881c0f6c80c5cf2af886dbab">af_retain_array</a></div><div class="ttdeci">AFAPI af_err af_retain_array(af_array *out, const af_array in)</div><div class="ttdoc">Increments an af_array reference count.</div></div>
<div class="ttc" id="agroup__arith__func__bitand_htm_ga9952ba151293dcae29e5dba3de096deb"><div class="ttname"><a href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">af::operator&amp;</a></div><div class="ttdeci">AFAPI array operator&amp;(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Performs an bitwise AND operation on two arrays or an array and a value.</div></div>
<div class="ttc" id="adefines_8h_htm_ab99909561d2b3c97b0f6a0935a6f7cc6"><div class="ttname"><a href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af_source</a></div><div class="ttdeci">af_source</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00232">defines.h:232</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga768e8326a6aaa81c6543949afc781af2"><div class="ttname"><a href="group__c__api__mat.htm#ga768e8326a6aaa81c6543949afc781af2">af_is_integer</a></div><div class="ttdeci">AFAPI af_err af_is_integer(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is integer type.</div></div>
<div class="ttc" id="atraits_8hpp_htm"><div class="ttname"><a href="traits_8hpp.htm">traits.hpp</a></div></div>
<div class="ttc" id="aarray_8h_htm_a6d8256045dabd15534382126773e729d"><div class="ttname"><a href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a></div><div class="ttdeci">#define BIN_OP(OP)</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l01058">array.h:1057</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga890c476d90cb689f2835d2e4f74f5868"><div class="ttname"><a href="group__c__api__mat.htm#ga890c476d90cb689f2835d2e4f74f5868">af_get_manual_eval_flag</a></div><div class="ttdeci">AFAPI af_err af_get_manual_eval_flag(bool *flag)</div><div class="ttdoc">Get the manual eval flag.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga8b90da50a532837d9763e301b2267348"><div class="ttname"><a href="group__c__api__mat.htm#ga8b90da50a532837d9763e301b2267348">af_get_dims</a></div><div class="ttdeci">AFAPI af_err af_get_dims(dim_t *d0, dim_t *d1, dim_t *d2, dim_t *d3, const af_array arr)</div><div class="ttdoc">Gets the dimensions of an array.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga19c749e95314e1c77d816ad9952fb680"><div class="ttname"><a href="group__c__api__mat.htm#ga19c749e95314e1c77d816ad9952fb680">af_is_empty</a></div><div class="ttdeci">AFAPI af_err af_is_empty(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is empty.</div></div>
<div class="ttc" id="autil_8h_htm"><div class="ttname"><a href="util_8h.htm">util.h</a></div></div>
<div class="ttc" id="adefines_8h_htm_a7f026aa801b1fa6b85b0d992b414cccb"><div class="ttname"><a href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a></div><div class="ttdeci">long long dim_t</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00056">defines.h:56</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga869f5e9331e9e010345de2589add7bae"><div class="ttname"><a href="group__c__api__mat.htm#ga869f5e9331e9e010345de2589add7bae">af_set_manual_eval_flag</a></div><div class="ttdeci">AFAPI af_err af_set_manual_eval_flag(bool flag)</div><div class="ttdoc">Turn the manual eval flag on or off.</div></div>
<div class="ttc" id="anamespaceaf_htm_a63e29e484b92e217fe817fe78abc4f5f"><div class="ttname"><a href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">af::cfloat</a></div><div class="ttdeci">af::af_cfloat cfloat</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00051">complex.h:51</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_gadb499641bfc02dfa56a75be9ba237e3f"><div class="ttname"><a href="group__c__api__mat.htm#gadb499641bfc02dfa56a75be9ba237e3f">af_is_double</a></div><div class="ttdeci">AFAPI af_err af_is_double(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is double precision type.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_gac96d3ca37a435874de22a76838a8cf54"><div class="ttname"><a href="group__c__api__mat.htm#gac96d3ca37a435874de22a76838a8cf54">af_is_sparse</a></div><div class="ttdeci">AFAPI af_err af_is_sparse(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is sparse.</div></div>
<div class="ttc" id="aindex_8h_htm"><div class="ttname"><a href="index_8h.htm">index.h</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_gabbe3249a355293daabd5907d7df67c6a"><div class="ttname"><a href="group__c__api__mat.htm#gabbe3249a355293daabd5907d7df67c6a">af_is_row</a></div><div class="ttdeci">AFAPI af_err af_is_row(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is row vector.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga1bd444b2c78a4f4731d4523a90200175"><div class="ttname"><a href="group__c__api__mat.htm#ga1bd444b2c78a4f4731d4523a90200175">af_is_single</a></div><div class="ttdeci">AFAPI af_err af_is_single(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is single precision type.</div></div>
<div class="ttc" id="adefines_8h_htm_ab23e67549eba2cfbaf0eb5f88f947e48"><div class="ttname"><a href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a></div><div class="ttdeci">#define AFAPI</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00039">defines.h:38</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00035">array.h:35</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_gafef13633d184acc726ad9daca7a7bc99"><div class="ttname"><a href="group__c__api__mat.htm#gafef13633d184acc726ad9daca7a7bc99">af_write_array</a></div><div class="ttdeci">AFAPI af_err af_write_array(af_array arr, const void *data, const size_t bytes, af_source src)</div><div class="ttdoc">Copy data from a C pointer (host/device) to an existing array.</div></div>
<div class="ttc" id="adefines_8h_htm_ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba"><div class="ttname"><a href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a></div><div class="ttdeci">@ afHost</div><div class="ttdoc">Host pointer.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00235">defines.h:234</a></div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:15</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga6040dc6f0eb127402fbf62c1165f0b9d"><div class="ttname"><a href="group__c__api__mat.htm#ga6040dc6f0eb127402fbf62c1165f0b9d">af_get_data_ptr</a></div><div class="ttdeci">AFAPI af_err af_get_data_ptr(void *data, const af_array arr)</div><div class="ttdoc">Copy data from an af_array to a C pointer.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga9e08f4cda2471a477d2fa91c2356f72c"><div class="ttname"><a href="group__c__api__mat.htm#ga9e08f4cda2471a477d2fa91c2356f72c">af_eval_multiple</a></div><div class="ttdeci">AFAPI af_err af_eval_multiple(const int num, af_array *arrays)</div><div class="ttdoc">Evaluate multiple arrays together.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga6f2b3e689d07f5135dfc1ee6cf9825a3"><div class="ttname"><a href="group__c__api__mat.htm#ga6f2b3e689d07f5135dfc1ee6cf9825a3">af_is_realfloating</a></div><div class="ttdeci">AFAPI af_err af_is_realfloating(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is real floating point type.</div></div>
<div class="ttc" id="astructaf__index__t_htm"><div class="ttname"><a href="structaf__index__t.htm">af_index_t</a></div><div class="ttdoc">Struct used to index an af_array.</div><div class="ttdef"><b>Definition:</b> <a href="index_8h_source.htm#l00022">index.h:22</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga0f8e4d3732b5fd4b91ad51eec634f7a2"><div class="ttname"><a href="group__c__api__mat.htm#ga0f8e4d3732b5fd4b91ad51eec634f7a2">af_copy_array</a></div><div class="ttdeci">AFAPI af_err af_copy_array(af_array *arr, const af_array in)</div><div class="ttdoc">Deep copy an array to another.</div></div>
<div class="ttc" id="agroup__arith__func__sub_htm_gafa57cf4a71580be2bfd04a83a66d9835"><div class="ttname"><a href="group__arith__func__sub.htm#gafa57cf4a71580be2bfd04a83a66d9835">af::operator-</a></div><div class="ttdeci">AFAPI array operator-(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Subtracts two arrays or an array and a value.</div></div>
<div class="ttc" id="aclassaf_1_1array_htm_a6a8d7156cd3c66a9ca9f0f2688ee9f72"><div class="ttname"><a href="classaf_1_1array.htm#a6a8d7156cd3c66a9ca9f0f2688ee9f72">af::array::eval</a></div><div class="ttdeci">void eval() const</div><div class="ttdoc">Evaluate any JIT expressions to generate data for the array.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga834be32357616d8ab735087c6f681858"><div class="ttname"><a href="group__c__api__mat.htm#ga834be32357616d8ab735087c6f681858">af_create_array</a></div><div class="ttdeci">AFAPI af_err af_create_array(af_array *arr, const void *const data, const unsigned ndims, const dim_t *const dims, const af_dtype type)</div><div class="ttdoc">Create an af_array handle initialized with user defined data.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_gafaa0c1597ef34a7320ed589f80fdce10"><div class="ttname"><a href="group__c__api__mat.htm#gafaa0c1597ef34a7320ed589f80fdce10">af_is_real</a></div><div class="ttdeci">AFAPI af_err af_is_real(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is real type.</div></div>
<div class="ttc" id="adefines_8h_htm_a8e45f4aa3dbea6a7aa021dbc50a4a089"><div class="ttname"><a href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a></div><div class="ttdeci">void * af_array</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00240">defines.h:240</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga5eb0d277412a2beeffe7e7a9f89b98ea"><div class="ttname"><a href="group__c__api__mat.htm#ga5eb0d277412a2beeffe7e7a9f89b98ea">af_is_floating</a></div><div class="ttdeci">AFAPI af_err af_is_floating(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is floating precision type.</div></div>
<div class="ttc" id="aclassaf_1_1index_htm"><div class="ttname"><a href="classaf_1_1index.htm">af::index</a></div><div class="ttdoc">Wrapper for af_index.</div><div class="ttdef"><b>Definition:</b> <a href="index_8h_source.htm#l00052">index.h:52</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_gafae10fc1378b72404120572e21ff5d27"><div class="ttname"><a href="group__c__api__mat.htm#gafae10fc1378b72404120572e21ff5d27">af_is_bool</a></div><div class="ttdeci">AFAPI af_err af_is_bool(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is bool type.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_gaefa019d932ff58c2a829ce87edddd2a8"><div class="ttname"><a href="group__c__api__mat.htm#gaefa019d932ff58c2a829ce87edddd2a8">af_get_numdims</a></div><div class="ttdeci">AFAPI af_err af_get_numdims(unsigned *result, const af_array arr)</div><div class="ttdoc">Gets the number of dimensions of an array.</div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a></div><div class="ttdeci">af_dtype</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00210">defines.h:210</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_gad6c58648ed0db398e170dabf045e8309"><div class="ttname"><a href="group__c__api__mat.htm#gad6c58648ed0db398e170dabf045e8309">af_release_array</a></div><div class="ttdeci">AFAPI af_err af_release_array(af_array arr)</div><div class="ttdoc">Reduce the reference count of the af_array.</div></div>
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga184b5a5feb146f2a2a44fed36b35e435"><div class="ttname"><a href="group__c__api__mat.htm#ga184b5a5feb146f2a2a44fed36b35e435">af_is_column</a></div><div class="ttdeci">AFAPI af_err af_is_column(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is a column vector.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga00a23c7dd281fdcdec10b8395e611154"><div class="ttname"><a href="group__c__api__mat.htm#ga00a23c7dd281fdcdec10b8395e611154">af_is_vector</a></div><div class="ttdeci">AFAPI af_err af_is_vector(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is a vector.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga247a830d52f1cb2450369af3d8d8f2f1"><div class="ttname"><a href="group__c__api__mat.htm#ga247a830d52f1cb2450369af3d8d8f2f1">af_is_half</a></div><div class="ttdeci">AFAPI af_err af_is_half(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is 16 bit floating point type.</div></div>
<div class="ttc" id="aarray_8h_htm_a96147e5f8a7b6037405defdd7e190dd8"><div class="ttname"><a href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a></div><div class="ttdeci">#define ASSIGN(OP)</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00905">array.h:904</a></div></div>
<div class="ttc" id="anamespaceaf_htm_af5c1188f38105afaf8b3f383492a1c9f"><div class="ttname"><a href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">af::span</a></div><div class="ttdeci">AFAPI seq span</div><div class="ttdoc">A special value representing the entire axis of an af::array.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga9de141bfc5936741d2496f59c1bac777"><div class="ttname"><a href="group__c__api__mat.htm#ga9de141bfc5936741d2496f59c1bac777">af_eval</a></div><div class="ttdeci">AFAPI af_err af_eval(af_array in)</div><div class="ttdoc">Evaluate any expressions in the Array.</div></div>
<div class="ttc" id="aseq_8h_htm"><div class="ttname"><a href="seq_8h.htm">seq.h</a></div></div>
<div class="ttc" id="agroup__data__mat_htm_ga11dba1a052f2fe004665237d9670e1f5"><div class="ttname"><a href="group__data__mat.htm#ga11dba1a052f2fe004665237d9670e1f5">af::setManualEvalFlag</a></div><div class="ttdeci">AFAPI void setManualEvalFlag(bool flag)</div><div class="ttdoc">Turn the manual eval flag on or off.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_gaefe2e343a74a84bd43b588218ecc09a3"><div class="ttname"><a href="group__c__api__mat.htm#gaefe2e343a74a84bd43b588218ecc09a3">af_get_scalar</a></div><div class="ttdeci">AFAPI af_err af_get_scalar(void *output_value, const af_array arr)</div><div class="ttdoc">Get first element from an array.</div></div>
<div class="ttc" id="aclassaf_1_1array_1_1array__proxy_htm"><div class="ttname"><a href="classaf_1_1array_1_1array__proxy.htm">af::array::array_proxy</a></div><div class="ttdoc">Intermediate data class.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00053">array.h:54</a></div></div>
<div class="ttc" id="agroup__index__func__index_htm_ga25f470817062b23ad3f74347ea44b17c"><div class="ttname"><a href="group__index__func__index.htm#ga25f470817062b23ad3f74347ea44b17c">af::copy</a></div><div class="ttdeci">AFAPI void copy(array &amp;dst, const array &amp;src, const index &amp;idx0, const index &amp;idx1=span, const index &amp;idx2=span, const index &amp;idx3=span)</div><div class="ttdoc">Copy the values of an input array based on index.</div></div>
<div class="ttc" id="astructaf_1_1af__cdouble_htm"><div class="ttname"><a href="structaf_1_1af__cdouble.htm">af::af_cdouble</a></div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00039">complex.h:39</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm_ad34fcf3e619cabf1cd107f72c571f091"><div class="ttname"><a href="classaf_1_1array.htm#ad34fcf3e619cabf1cd107f72c571f091">af::array::array</a></div><div class="ttdeci">array(const af_array handle)</div><div class="ttdoc">Creates an array from an af_array handle.</div></div>
<div class="ttc" id="agroup__data__mat_htm_ga121545fb637db409a523862cdb8ffe39"><div class="ttname"><a href="group__data__mat.htm#ga121545fb637db409a523862cdb8ffe39">af::eval</a></div><div class="ttdeci">array &amp; eval(array &amp;a)</div><div class="ttdoc">Evaluate an expression (nonblocking).</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l01354">array.h:1354</a></div></div>
<div class="ttc" id="astructaf_1_1af__cfloat_htm"><div class="ttname"><a href="structaf_1_1af__cfloat.htm">af::af_cfloat</a></div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00031">complex.h:31</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_gae3dfa6dc1c03c5efe7482bfc9c41266a"><div class="ttname"><a href="group__c__api__mat.htm#gae3dfa6dc1c03c5efe7482bfc9c41266a">af_is_scalar</a></div><div class="ttdeci">AFAPI af_err af_is_scalar(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is scalar, ie.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga34d9070b94c3bac673df7f13b9c718a2"><div class="ttname"><a href="group__c__api__mat.htm#ga34d9070b94c3bac673df7f13b9c718a2">af_get_data_ref_count</a></div><div class="ttdeci">AFAPI af_err af_get_data_ref_count(int *use_count, const af_array in)</div><div class="ttdoc">Get the reference count of af_array.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga0dda6898e1c0d9a43efb56cd6a988c9b"><div class="ttname"><a href="group__c__api__mat.htm#ga0dda6898e1c0d9a43efb56cd6a988c9b">af_get_type</a></div><div class="ttdeci">AFAPI af_err af_get_type(af_dtype *type, const af_array arr)</div><div class="ttdoc">Gets the type of an array.</div></div>
<div class="ttc" id="adefines_8h_htm_a82b94dc53bbd100a0e8ca9dd356aaf4f"><div class="ttname"><a href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a></div><div class="ttdeci">af_err</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00071">defines.h:71</a></div></div>
<div class="ttc" id="agroup__data__mat_htm_ga0c2f8602994b437164ee5783cedabfa9"><div class="ttname"><a href="group__data__mat.htm#ga0c2f8602994b437164ee5783cedabfa9">af::getManualEvalFlag</a></div><div class="ttdeci">AFAPI bool getManualEvalFlag()</div><div class="ttdoc">Get the manual eval flag.</div></div>
<div class="ttc" id="agroup__arith__func__and_htm_ga3fdacee9391b5155f32c40972624fc93"><div class="ttname"><a href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">af::operator&amp;&amp;</a></div><div class="ttdeci">AFAPI array operator&amp;&amp;(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Performs a logical AND operation on two arrays or an array and a value.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga3b8f5cf6fce69aa1574544bc2d44d7d0"><div class="ttname"><a href="group__c__api__mat.htm#ga3b8f5cf6fce69aa1574544bc2d44d7d0">af_create_handle</a></div><div class="ttdeci">AFAPI af_err af_create_handle(af_array *arr, const unsigned ndims, const dim_t *const dims, const af_dtype type)</div><div class="ttdoc">Create af_array handle.</div></div>
<div class="ttc" id="adefines_8h_htm"><div class="ttname"><a href="defines_8h.htm">defines.h</a></div></div>
<div class="ttc" id="anamespaceaf_htm_acd654c72624253fcd7fd88fe5298aa9a"><div class="ttname"><a href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">af::cdouble</a></div><div class="ttdeci">af::af_cdouble cdouble</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00052">complex.h:52</a></div></div>
<div class="ttc" id="agroup__array__mem__operator__paren_htm_ga9fe5da06c007e62ef0f1a9f37e4f5d8a"><div class="ttname"><a href="group__array__mem__operator__paren.htm#ga9fe5da06c007e62ef0f1a9f37e4f5d8a">af::array::operator()</a></div><div class="ttdeci">array::array_proxy operator()(const index &amp;s0)</div><div class="ttdoc">This operator returns a reference of the original array at a given coordinate.</div></div>
<div class="ttc" id="agroup__c__api__mat_htm_ga6845bbe4385a60a606b88f8130252c1f"><div class="ttname"><a href="group__c__api__mat.htm#ga6845bbe4385a60a606b88f8130252c1f">af_get_elements</a></div><div class="ttdeci">AFAPI af_err af_get_elements(dim_t *elems, const af_array arr)</div><div class="ttdoc">Get the total number of elements across all dimensions of the array.</div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div><div class="ttdeci">@ f32</div><div class="ttdoc">32-bit floating point values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00211">defines.h:211</a></div></div>
<div class="ttc" id="agroup__c__api__mat_htm_gacd8a5edf6467340d0b40341be9f677e9"><div class="ttname"><a href="group__c__api__mat.htm#gacd8a5edf6467340d0b40341be9f677e9">af_is_complex</a></div><div class="ttdeci">AFAPI af_err af_is_complex(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is complex type.</div></div>
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
