<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: array.h (2020-02-12 15:19:32 -0500, (build fbea2aeb6)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('array_8h_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">array.h (2020-02-12 15:19:32 -0500, (build fbea2aeb6))</div>  </div>
</div><!--header-->
<div class="contents">
<a href="array_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*******************************************************</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2014, ArrayFire</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> ********************************************************/</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;af/compilers.h&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="defines_8h.htm">af/defines.h</a>&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="index_8h.htm">af/index.h</a>&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="seq_8h.htm">af/seq.h</a>&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="util_8h.htm">af/util.h</a>&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="traits_8hpp.htm">af/traits.hpp</a>&gt;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceaf.htm">af</a></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">class </span>dim4;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keyword">class </span><a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> {</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>   arr;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordtype">void</span> set(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> tmp);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keyword">class </span><a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array_proxy</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <span class="keyword">struct </span>array_proxy_impl;    <span class="comment">//forward declaration</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            array_proxy_impl *impl;     <span class="comment">// implementation</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            array_proxy(<a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; par, <a class="code" href="structaf__index__t.htm">af_index_t</a> *ssss, <span class="keywordtype">bool</span> linear = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm">   53</a></span>&#160;            <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a> &amp;other);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#if AF_COMPILER_CXX_RVALUE_REFERENCES</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a>(<a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a> &amp;&amp;other);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a> &amp; operator=(<a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a> &amp;&amp;other);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            ~<a class="code" href="classaf_1_1array_1_1array__proxy.htm">array_proxy</a>();</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="comment">// Implicit conversion operators</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keyword">operator</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keyword">operator</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#define ASSIGN(OP)                                                  \</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const array_proxy &amp;a);         \</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const array &amp;a);               \</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const double &amp;a);              \</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const cdouble &amp;a);             \</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const cfloat &amp;a);              \</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const float &amp;a);               \</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const int &amp;a);                 \</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const unsigned &amp;a);            \</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const bool &amp;a);                \</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const char &amp;a);                \</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const unsigned char &amp;a);       \</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const long  &amp;a);               \</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const unsigned long &amp;a);       \</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const long long  &amp;a);          \</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const unsigned long long &amp;a);</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(=)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(+=)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(-=)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(*=)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(/=)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#undef ASSIGN</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 32</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor">#define ASSIGN(OP)                                                  \</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const short &amp;a);               \</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">            array_proxy&amp; operator OP(const unsigned short &amp;a);</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(=)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(+=)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(-=)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(*=)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(/=)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#undef ASSIGN</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="comment">// af::array member functions. same behavior as those below</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> get();</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> get() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> elements() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T* host() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordtype">void</span> host(<span class="keywordtype">void</span> *ptr) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> type() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <a class="code" href="classaf_1_1dim4.htm">dim4</a> dims() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dims(<span class="keywordtype">unsigned</span> dim) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordtype">unsigned</span> numdims() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keywordtype">size_t</span> bytes() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordtype">size_t</span> allocated() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__index__func__index.htm#ga25f470817062b23ad3f74347ea44b17c">copy</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="keywordtype">bool</span> isempty() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keywordtype">bool</span> isscalar() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordtype">bool</span> isvector() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keywordtype">bool</span> isrow() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordtype">bool</span> iscolumn() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="keywordtype">bool</span> iscomplex() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="keyword">inline</span> <span class="keywordtype">bool</span> isreal()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !iscomplex(); }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordtype">bool</span> isdouble() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordtype">bool</span> issingle() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keywordtype">bool</span> ishalf() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordtype">bool</span> isrealfloating() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classaf_1_1array_1_1array__proxy.htm#ae778ca527466663084f5797f23075603">  127</a></span>&#160;            <span class="keywordtype">bool</span> isfloating() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keywordtype">bool</span> isinteger() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordtype">bool</span> isbool() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keywordtype">bool</span> issparse() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <a class="code" href="classaf_1_1array.htm">array</a> as(<a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> type) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <a class="code" href="classaf_1_1array.htm">array</a> T() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <a class="code" href="classaf_1_1array.htm">array</a> H() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T scalar() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T* device() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keywordtype">void</span> unlock() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="keywordtype">void</span> lock() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            <span class="keywordtype">bool</span> isLocked() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                  <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> row(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> row(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                  <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> rows(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> rows(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                  <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> col(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> col(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                  <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> cols(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> cols(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                  <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slice(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slice(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                  <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slices(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slices(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        };</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="comment">//array(af_array in, const array *par, af_index_t seqs[4]);</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment"></span>        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>();</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor">#if AF_COMPILER_CXX_RVALUE_REFERENCES</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;&amp;other) AF_NOEXCEPT;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <a class="code" href="classaf_1_1array.htm">array</a> &amp;operator=(<a class="code" href="classaf_1_1array.htm">array</a> &amp;&amp;other) AF_NOEXCEPT;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keyword">explicit</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> handle);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; in);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160; </div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160; </div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim3, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160; </div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <span class="keyword">explicit</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; dims, <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> ty = <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>);</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160; </div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0,</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;              <span class="keyword">const</span> T *pointer, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>);</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160; </div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160; </div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1,</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;              <span class="keyword">const</span> T *pointer, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>);</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160; </div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160; </div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2,</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;              <span class="keyword">const</span> T *pointer, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>);</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160; </div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160; </div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim3,</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;              <span class="keyword">const</span> T *pointer, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>);</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160; </div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        <span class="keyword">explicit</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; dims,</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;              <span class="keyword">const</span> T *pointer, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src=<a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>);</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160; </div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; input, <span class="keyword">const</span> <a class="code" href="classaf_1_1dim4.htm">dim4</a>&amp; dims);</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160; </div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>(  <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a>&amp; input,</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim0, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim1 = 1,</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim2 = 1, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dim3 = 1);</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160; </div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> get();</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160; </div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> get() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160; </div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;        <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> elements() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160; </div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T* host() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160; </div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        <span class="keywordtype">void</span> host(<span class="keywordtype">void</span> *ptr) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160; </div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="keywordtype">void</span> write(<span class="keyword">const</span> T *ptr, <span class="keyword">const</span> <span class="keywordtype">size_t</span> bytes, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af::source</a> src = <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a>);</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160; </div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;        <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> type() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160; </div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        <a class="code" href="classaf_1_1dim4.htm">dim4</a> dims() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160; </div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> dims(<span class="keywordtype">unsigned</span> dim) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160; </div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        <span class="keywordtype">unsigned</span> numdims() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160; </div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        <span class="keywordtype">size_t</span> bytes() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160; </div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        <span class="keywordtype">size_t</span> allocated() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160; </div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        <a class="code" href="classaf_1_1array.htm">array</a> <a class="code" href="group__index__func__index.htm#ga25f470817062b23ad3f74347ea44b17c">copy</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160; </div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <span class="keywordtype">bool</span> isempty() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160; </div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        <span class="keywordtype">bool</span> isscalar() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160; </div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        <span class="keywordtype">bool</span> isvector() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160; </div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        <span class="keywordtype">bool</span> isrow() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160; </div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        <span class="keywordtype">bool</span> iscolumn() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160; </div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;        <span class="keywordtype">bool</span> iscomplex() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160; </div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">bool</span> isreal()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !iscomplex(); }</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160; </div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;        <span class="keywordtype">bool</span> isdouble() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160; </div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        <span class="keywordtype">bool</span> issingle() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160; </div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160; </div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;        <span class="keywordtype">bool</span> ishalf() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160; </div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;        <span class="keywordtype">bool</span> isrealfloating() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160; </div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;        <span class="keywordtype">bool</span> isfloating() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160; </div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        <span class="keywordtype">bool</span> isinteger() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160; </div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;        <span class="keywordtype">bool</span> isbool() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160; </div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160; </div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        <span class="keywordtype">bool</span> issparse() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160; </div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160; </div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T scalar() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160; </div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; T* device() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;        <span class="comment">// INDEXING</span></div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        <span class="comment">// Single arguments</span></div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160; </div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;        <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> operator()(<span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s0);</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160; </div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> operator()(<span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s0) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160; </div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160; </div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;        <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> operator()(<span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s0,</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s1,</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s2 = <a class="code" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>,</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s3 = <a class="code" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>);</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160; </div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> operator()(<span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s0,</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s1,</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s2 = <a class="code" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>,</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classaf_1_1index.htm">index</a> &amp;s3 = <a class="code" href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">span</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160; </div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160; </div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;              <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> row(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>);</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> row(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>) <span class="keyword">const</span>; </div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160; </div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;              <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> rows(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last);</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> rows(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last) <span class="keyword">const</span>; </div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160; </div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;              <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> col(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>);</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> col(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>) <span class="keyword">const</span>; </div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160; </div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;              <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> cols(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last);</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> cols(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last) <span class="keyword">const</span>; </div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160; </div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;              <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slice(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>);</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slice(<span class="keywordtype">int</span> <a class="code" href="classaf_1_1index.htm">index</a>) <span class="keyword">const</span>; </div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160; </div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;              <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slices(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last);</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array_1_1array__proxy.htm">array::array_proxy</a> slices(<span class="keywordtype">int</span> first, <span class="keywordtype">int</span> last) <span class="keyword">const</span>; </div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160; </div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> as(<a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> type) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160; </div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160; </div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;        ~<a class="code" href="classaf_1_1array.htm">array</a>();</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160; </div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;        <a class="code" href="classaf_1_1array.htm">array</a> T() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;        <a class="code" href="classaf_1_1array.htm">array</a> H() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160; </div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;<span class="preprocessor">#define ASSIGN_(OP2)                                                                      \</span></div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;<span class="preprocessor">        array&amp; OP2(const array &amp;val);                                                     \</span></div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;<span class="preprocessor">        array&amp; OP2(const double &amp;val);               \</span></div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;<span class="preprocessor">        array&amp; OP2(const cdouble &amp;val);              \</span></div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;<span class="preprocessor">        array&amp; OP2(const cfloat &amp;val);               \</span></div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;<span class="preprocessor">        array&amp; OP2(const float &amp;val);                \</span></div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;<span class="preprocessor">        array&amp; OP2(const int &amp;val);                  \</span></div>
<div class="line"><a name="l00911"></a><span class="lineno"><a class="line" href="array_8h.htm#a3024a14587b6373c2e2a3fe65f2b8b12">  911</a></span>&#160;<span class="preprocessor">        array&amp; OP2(const unsigned &amp;val);             \</span></div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;<span class="preprocessor">        array&amp; OP2(const bool &amp;val);                 \</span></div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;<span class="preprocessor">        array&amp; OP2(const char &amp;val);                 \</span></div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;<span class="preprocessor">        array&amp; OP2(const unsigned char &amp;val);        \</span></div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;<span class="preprocessor">        array&amp; OP2(const long  &amp;val);                \</span></div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;<span class="preprocessor">        array&amp; OP2(const unsigned long &amp;val);        \</span></div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;<span class="preprocessor">        array&amp; OP2(const long long  &amp;val);           \</span></div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;<span class="preprocessor">        array&amp; OP2(const unsigned long long &amp;val);</span></div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160; </div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160; </div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 32</span></div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;<span class="preprocessor">#define ASSIGN(OP)                                                                        \</span></div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;<span class="preprocessor">        ASSIGN_(OP)                                                                       \</span></div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;<span class="preprocessor">          array&amp; OP(const short  &amp;val);               \</span></div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;<span class="preprocessor">          array&amp; OP(const unsigned short &amp;val);</span></div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160; </div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;<span class="preprocessor">#define ASSIGN(OP) ASSIGN_(OP)</span></div>
<div class="line"><a name="l00929"></a><span class="lineno"><a class="line" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">  929</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160; </div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160; </div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;        <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(<span class="keyword">operator</span>=)</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160; </div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;        <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(operator+=)</div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160; </div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;        <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(operator-=)</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160; </div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;        <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(operator*=)</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160; </div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;        <a class="code" href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a>(operator/=)</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160; </div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160; </div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;<span class="preprocessor">#undef ASSIGN</span></div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;<span class="preprocessor">#undef ASSIGN_</span></div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160; </div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__sub.htm#gafa57cf4a71580be2bfd04a83a66d9835">operator -</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160; </div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> operator !() <span class="keyword">const</span>;</div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160; </div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;        <span class="keywordtype">int</span> nonzeros() <span class="keyword">const</span>;</div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160; </div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160; </div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;        <span class="keywordtype">void</span> lock() <span class="keyword">const</span>;</div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160; </div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160; </div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;        <span class="keywordtype">bool</span> isLocked() <span class="keyword">const</span>;</div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160; </div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160; </div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;        <span class="keywordtype">void</span> unlock() <span class="keyword">const</span>;</div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;    };</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;    <span class="comment">// end of class array</span></div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160; </div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;<span class="preprocessor">#define BIN_OP_(OP)                                                                                                      \</span></div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const array&amp; rhs);                                                                 \</span></div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;<span class="preprocessor">    AFAPI array OP (const bool&amp; lhs, const array&amp; rhs);                \</span></div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;<span class="preprocessor">    AFAPI array OP (const int&amp; lhs, const array&amp; rhs);                 \</span></div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;<span class="preprocessor">    AFAPI array OP (const unsigned&amp; lhs, const array&amp; rhs);            \</span></div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;<span class="preprocessor">    AFAPI array OP (const char&amp; lhs, const array&amp; rhs);                \</span></div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;<span class="preprocessor">    AFAPI array OP (const unsigned char&amp; lhs, const array&amp; rhs);       \</span></div>
<div class="line"><a name="l01052"></a><span class="lineno"><a class="line" href="array_8h.htm#a2c8e67e88a0a2815d1253276803deef4"> 1052</a></span>&#160;<span class="preprocessor">    AFAPI array OP (const long&amp; lhs, const array&amp; rhs);                \</span></div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="preprocessor">    AFAPI array OP (const unsigned long&amp; lhs, const array&amp; rhs);       \</span></div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;<span class="preprocessor">    AFAPI array OP (const long long&amp; lhs, const array&amp; rhs);           \</span></div>
<div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="preprocessor">    AFAPI array OP (const unsigned long long&amp; lhs, const array&amp; rhs);  \</span></div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;<span class="preprocessor">    AFAPI array OP (const double&amp; lhs, const array&amp; rhs);              \</span></div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;<span class="preprocessor">    AFAPI array OP (const float&amp; lhs, const array&amp; rhs);               \</span></div>
<div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;<span class="preprocessor">    AFAPI array OP (const cfloat&amp; lhs, const array&amp; rhs);              \</span></div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;<span class="preprocessor">    AFAPI array OP (const cdouble&amp; lhs, const array&amp; rhs);             \</span></div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const bool&amp; rhs);                \</span></div>
<div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const int&amp; rhs);                 \</span></div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const unsigned&amp; rhs);            \</span></div>
<div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const char&amp; rhs);                \</span></div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const unsigned char&amp; rhs);       \</span></div>
<div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const long&amp; rhs);                \</span></div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const unsigned long&amp; rhs);       \</span></div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const long long&amp; rhs);           \</span></div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const unsigned long long&amp; rhs);  \</span></div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const double&amp; rhs);              \</span></div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const float&amp; rhs);               \</span></div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const cfloat&amp; rhs);              \</span></div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;<span class="preprocessor">    AFAPI array OP (const array&amp; lhs, const cdouble&amp; rhs);</span></div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160; </div>
<div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 32</span></div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;<span class="preprocessor">#define BIN_OP(OP)                                                                                                        \</span></div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;<span class="preprocessor">        BIN_OP_(OP)                                                                                                       \</span></div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;<span class="preprocessor">        AFAPI array OP (const short&amp; lhs, const array&amp; rhs);            \</span></div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;<span class="preprocessor">        AFAPI array OP (const unsigned short&amp; lhs, const array&amp; rhs);   \</span></div>
<div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;<span class="preprocessor">        AFAPI array OP (const array&amp; lhs, const short&amp; rhs);            \</span></div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;<span class="preprocessor">        AFAPI array OP (const array&amp; lhs, const unsigned short&amp; rhs);</span></div>
<div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160; </div>
<div class="line"><a name="l01082"></a><span class="lineno"><a class="line" href="array_8h.htm#a6d8256045dabd15534382126773e729d"> 1082</a></span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;<span class="preprocessor">#define BIN_OP(OP) BIN_OP_(OP)</span></div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160; </div>
<div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(<span class="keyword">operator</span>+ )</div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160; </div>
<div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator- )</div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160; </div>
<div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator* )</div>
<div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160; </div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator/ )</div>
<div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160; </div>
<div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator==)</div>
<div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160; </div>
<div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator!=)</div>
<div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160; </div>
<div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator&lt; )</div>
<div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160; </div>
<div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator&lt;=)</div>
<div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160; </div>
<div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator&gt; )</div>
<div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160; </div>
<div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator&gt;=)</div>
<div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160; </div>
<div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator||)</div>
<div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160; </div>
<div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator% )</div>
<div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160; </div>
<div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator| )</div>
<div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160; </div>
<div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator^ )</div>
<div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160; </div>
<div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator&lt;&lt;)</div>
<div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160; </div>
<div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;    <a class="code" href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a>(operator&gt;&gt;)</div>
<div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160; </div>
<div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;<span class="preprocessor">#undef BIN_OP</span></div>
<div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;<span class="preprocessor">#undef BIN_OP_</span></div>
<div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160; </div>
<div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; rhs);</div>
<div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a>&amp; rhs);</div>
<div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a>&amp; rhs);</div>
<div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">char</span>&amp; rhs);</div>
<div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; rhs);</div>
<div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">float</span>&amp; rhs);</div>
<div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">int</span>&amp; rhs);</div>
<div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">short</span>&amp; rhs);</div>
<div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>&amp; rhs);</div>
<div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&amp; rhs);</div>
<div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span>&amp; rhs);</div>
<div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <a class="code" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">int</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">short</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">operator&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160; </div>
<div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; rhs);</div>
<div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a>&amp; rhs);</div>
<div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a>&amp; rhs);</div>
<div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">char</span>&amp; rhs);</div>
<div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; rhs);</div>
<div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">float</span>&amp; rhs);</div>
<div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">int</span>&amp; rhs);</div>
<div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">short</span>&amp; rhs);</div>
<div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>&amp; rhs);</div>
<div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>&amp; rhs);</div>
<div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&amp; rhs);</div>
<div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">unsigned</span>&amp; rhs);</div>
<div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <a class="code" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">int</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">short</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> <a class="code" href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">operator&amp;&amp;</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span>&amp; lhs, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a>&amp; rhs);</div>
<div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160; </div>
<div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160; </div>
<div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160; </div>
<div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;    <span class="keyword">inline</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;<a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a) { a.<a class="code" href="group__method__mat.htm#ga6a8d7156cd3c66a9ca9f0f2688ee9f72">eval</a>(); <span class="keywordflow">return</span> a; }</div>
<div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160; </div>
<div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keywordtype">int</span> num, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> **arrays);</div>
<div class="line"><a name="l01379"></a><span class="lineno"><a class="line" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39"> 1379</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160; </div>
<div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<a class="code" href="classaf_1_1array.htm">array</a> &amp;a, <a class="code" href="classaf_1_1array.htm">array</a> &amp;b)</div>
<div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;    {</div>
<div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;        <a class="code" href="classaf_1_1array.htm">array</a> *arrays[] = {&amp;a, &amp;b};</div>
<div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(2, arrays);</div>
<div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;        <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(a); b.<a class="code" href="group__method__mat.htm#ga6a8d7156cd3c66a9ca9f0f2688ee9f72">eval</a>();</div>
<div class="line"><a name="l01388"></a><span class="lineno"><a class="line" href="group__method__mat.htm#ga6a17a89fab2c26be8e911c4628c4c54c"> 1388</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;    }</div>
<div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160; </div>
<div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;c)</div>
<div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;    {</div>
<div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c};</div>
<div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(3, arrays);</div>
<div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;        <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(a, b); c.eval();</div>
<div class="line"><a name="l01398"></a><span class="lineno"><a class="line" href="group__method__mat.htm#ga932cc56a65acbe91ff2cea42e2f43bb6"> 1398</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;    }</div>
<div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160; </div>
<div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;c, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;d)</div>
<div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;    {</div>
<div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d};</div>
<div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(4, arrays);</div>
<div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;        <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(a, b, c); d.eval();</div>
<div class="line"><a name="l01408"></a><span class="lineno"><a class="line" href="group__method__mat.htm#ga8d75de296c6378ef17825a3776db93e4"> 1408</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160; </div>
<div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;    }</div>
<div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160; </div>
<div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;c, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;d, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;e)</div>
<div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;    {</div>
<div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d, &amp;e};</div>
<div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(5, arrays);</div>
<div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;        <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(a, b, c, d); e.eval();</div>
<div class="line"><a name="l01419"></a><span class="lineno"><a class="line" href="group__method__mat.htm#gad2cfee88b0b16efb2e4c3fe5a01187ac"> 1419</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;    }</div>
<div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160; </div>
<div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;c, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;d, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;e, <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;f)</div>
<div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;    {</div>
<div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d, &amp;e, &amp;f};</div>
<div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(6, arrays);</div>
<div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;        <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(a, b, c, d, e); f.eval();</div>
<div class="line"><a name="l01429"></a><span class="lineno"><a class="line" href="group__method__mat.htm#ga0b49360b87556fcc3d256c864e72e50b"> 1429</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;    }</div>
<div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160; </div>
<div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div>
<div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160; </div>
<div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160; </div>
<div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;    <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;<a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a) { a.<a class="code" href="group__method__mat.htm#ga6a8d7156cd3c66a9ca9f0f2688ee9f72">eval</a>(); <span class="keywordflow">return</span> a; }</div>
<div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160; </div>
<div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;<span class="preprocessor">#if AF_COMPILER_CXX_VARIADIC_TEMPLATES</span></div>
<div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... ARRAYS&gt;</div>
<div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(ARRAYS... in) {</div>
<div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;        <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {<span class="keyword">const_cast&lt;</span><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *<span class="keyword">&gt;</span>(&amp;in)...};</div>
<div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;        <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>((<span class="keywordtype">int</span>)<span class="keyword">sizeof</span>...(in), arrays);</div>
<div class="line"><a name="l01446"></a><span class="lineno"><a class="line" href="group__method__mat.htm#ga45f52ad29c9ac39d7fa2efd8f2470a22"> 1446</a></span>&#160;    }</div>
<div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160; </div>
<div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160; </div>
<div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b)</div>
<div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;    {</div>
<div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;        <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> *arrays[] = {&amp;a, &amp;b};</div>
<div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(2, <span class="keyword">const_cast&lt;</span><a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;    }</div>
<div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160; </div>
<div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;c)</div>
<div class="line"><a name="l01457"></a><span class="lineno"><a class="line" href="group__method__mat.htm#ga2016101f197ce325858f706405dbb399"> 1457</a></span>&#160;    {</div>
<div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c};</div>
<div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(3, <span class="keyword">const_cast&lt;</span><a class="code" href="classaf_1_1array.htm">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;    }</div>
<div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160; </div>
<div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;a, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;b, <span class="keyword">const</span> <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> &amp;c,</div>
<div class="line"><a name="l01463"></a><span class="lineno"><a class="line" href="group__method__mat.htm#gab9545550ae34532581c47d2f8a616569"> 1463</a></span>&#160;                     <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;d)</div>
<div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;    {</div>
<div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d};</div>
<div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(4, <span class="keyword">const_cast&lt;</span><a class="code" href="classaf_1_1array.htm">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;    }</div>
<div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160; </div>
<div class="line"><a name="l01469"></a><span class="lineno"><a class="line" href="group__method__mat.htm#ga0ab6d6c52ec85bd70ee1223448958261"> 1469</a></span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;a, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;b, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;c,</div>
<div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;                     <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;d, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;e)</div>
<div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;    {</div>
<div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d, &amp;e};</div>
<div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(5, <span class="keyword">const_cast&lt;</span><a class="code" href="classaf_1_1array.htm">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;    }</div>
<div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160; </div>
<div class="line"><a name="l01476"></a><span class="lineno"><a class="line" href="group__method__mat.htm#gaddec0e716ad2d696f01b3359e2207e7d"> 1476</a></span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(<span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;a, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;b, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;c,</div>
<div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;                     <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;d, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;e, <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> &amp;f)</div>
<div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;    {</div>
<div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;        <span class="keyword">const</span> <a class="code" href="classaf_1_1array.htm">array</a> *arrays[] = {&amp;a, &amp;b, &amp;c, &amp;d, &amp;e, &amp;f};</div>
<div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">eval</a>(6, <span class="keyword">const_cast&lt;</span><a class="code" href="classaf_1_1array.htm">array</a> **<span class="keyword">&gt;</span>(arrays));</div>
<div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;    }</div>
<div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;<span class="preprocessor">#endif // AF_COMPILER_CXX_VARIADIC_TEMPLATES</span></div>
<div class="line"><a name="l01483"></a><span class="lineno"><a class="line" href="group__method__mat.htm#gaed1d77332fa65805b2a6bf1cee8a857c"> 1483</a></span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160; </div>
<div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">void</span> <a class="code" href="group__method__mat.htm#ga11dba1a052f2fe004665237d9670e1f5">setManualEvalFlag</a>(<span class="keywordtype">bool</span> flag);</div>
<div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160; </div>
<div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <span class="keywordtype">bool</span> <a class="code" href="group__method__mat.htm#ga0c2f8602994b437164ee5783cedabfa9">getManualEvalFlag</a>();</div>
<div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160; </div>
<div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;}</div>
<div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160; </div>
<div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div>
<div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160; </div>
<div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__construct__mat.htm#ga834be32357616d8ab735087c6f681858">af_create_array</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, <span class="keyword">const</span> <span class="keywordtype">void</span> * <span class="keyword">const</span> data, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> ndims, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> * <span class="keyword">const</span> dims, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type);</div>
<div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160; </div>
<div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__construct__mat.htm#ga3b8f5cf6fce69aa1574544bc2d44d7d0">af_create_handle</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> ndims, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> * <span class="keyword">const</span> dims, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> type);</div>
<div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160; </div>
<div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga0f8e4d3732b5fd4b91ad51eec634f7a2">af_copy_array</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arr, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div>
<div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160; </div>
<div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#gafef13633d184acc726ad9daca7a7bc99">af_write_array</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr, <span class="keyword">const</span> <span class="keywordtype">void</span> *data, <span class="keyword">const</span> <span class="keywordtype">size_t</span> bytes, <a class="code" href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af_source</a> src);</div>
<div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160; </div>
<div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga6040dc6f0eb127402fbf62c1165f0b9d">af_get_data_ptr</a>(<span class="keywordtype">void</span> *data, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160; </div>
<div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#gad6c58648ed0db398e170dabf045e8309">af_release_array</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160; </div>
<div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga7ed45b3f881c0f6c80c5cf2af886dbab">af_retain_array</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div>
<div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160; </div>
<div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 31</span></div>
<div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160; </div>
<div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga34d9070b94c3bac673df7f13b9c718a2">af_get_data_ref_count</a>(<span class="keywordtype">int</span> *use_count, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div>
<div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160; </div>
<div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160; </div>
<div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga9de141bfc5936741d2496f59c1bac777">af_eval</a>(<a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in);</div>
<div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160; </div>
<div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160; </div>
<div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="array_8h.htm#a9e08f4cda2471a477d2fa91c2356f72c">af_eval_multiple</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> num, <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *arrays);</div>
<div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160; </div>
<div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160; </div>
<div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="array_8h.htm#a869f5e9331e9e010345de2589add7bae">af_set_manual_eval_flag</a>(<span class="keywordtype">bool</span> flag);</div>
<div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160; </div>
<div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160; </div>
<div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="array_8h.htm#a890c476d90cb689f2835d2e4f74f5868">af_get_manual_eval_flag</a>(<span class="keywordtype">bool</span> *flag);</div>
<div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160; </div>
<div class="line"><a name="l01633"></a><span class="lineno"> 1633</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga6845bbe4385a60a606b88f8130252c1f">af_get_elements</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *elems, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160; </div>
<div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga0dda6898e1c0d9a43efb56cd6a988c9b">af_get_type</a>(<a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a> *type, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160; </div>
<div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga8b90da50a532837d9763e301b2267348">af_get_dims</a>(<a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d0, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d1, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d2, <a class="code" href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a> *d3,</div>
<div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;                             <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160; </div>
<div class="line"><a name="l01667"></a><span class="lineno"> 1667</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#gaefa019d932ff58c2a829ce87edddd2a8">af_get_numdims</a>(<span class="keywordtype">unsigned</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160; </div>
<div class="line"><a name="l01677"></a><span class="lineno"> 1677</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga19c749e95314e1c77d816ad9952fb680">af_is_empty</a>        (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01678"></a><span class="lineno"> 1678</span>&#160; </div>
<div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#gae3dfa6dc1c03c5efe7482bfc9c41266a">af_is_scalar</a>       (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160; </div>
<div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#gabbe3249a355293daabd5907d7df67c6a">af_is_row</a>          (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160; </div>
<div class="line"><a name="l01707"></a><span class="lineno"> 1707</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga184b5a5feb146f2a2a44fed36b35e435">af_is_column</a>       (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01708"></a><span class="lineno"> 1708</span>&#160; </div>
<div class="line"><a name="l01719"></a><span class="lineno"> 1719</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga00a23c7dd281fdcdec10b8395e611154">af_is_vector</a>       (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01720"></a><span class="lineno"> 1720</span>&#160; </div>
<div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#gacd8a5edf6467340d0b40341be9f677e9">af_is_complex</a>      (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160; </div>
<div class="line"><a name="l01741"></a><span class="lineno"> 1741</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#gafaa0c1597ef34a7320ed589f80fdce10">af_is_real</a>         (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160; </div>
<div class="line"><a name="l01751"></a><span class="lineno"> 1751</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#gadb499641bfc02dfa56a75be9ba237e3f">af_is_double</a>       (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01752"></a><span class="lineno"> 1752</span>&#160; </div>
<div class="line"><a name="l01761"></a><span class="lineno"> 1761</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga1bd444b2c78a4f4731d4523a90200175">af_is_single</a>       (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01762"></a><span class="lineno"> 1762</span>&#160; </div>
<div class="line"><a name="l01763"></a><span class="lineno"> 1763</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 37</span></div>
<div class="line"><a name="l01764"></a><span class="lineno"> 1764</span>&#160; </div>
<div class="line"><a name="l01772"></a><span class="lineno"> 1772</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga247a830d52f1cb2450369af3d8d8f2f1">af_is_half</a>(<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01773"></a><span class="lineno"> 1773</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01774"></a><span class="lineno"> 1774</span>&#160; </div>
<div class="line"><a name="l01783"></a><span class="lineno"> 1783</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga6f2b3e689d07f5135dfc1ee6cf9825a3">af_is_realfloating</a> (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01784"></a><span class="lineno"> 1784</span>&#160; </div>
<div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga5eb0d277412a2beeffe7e7a9f89b98ea">af_is_floating</a>     (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160; </div>
<div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#ga768e8326a6aaa81c6543949afc781af2">af_is_integer</a>      (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01807"></a><span class="lineno"> 1807</span>&#160; </div>
<div class="line"><a name="l01816"></a><span class="lineno"> 1816</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#gafae10fc1378b72404120572e21ff5d27">af_is_bool</a>         (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01817"></a><span class="lineno"> 1817</span>&#160; </div>
<div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 34</span></div>
<div class="line"><a name="l01819"></a><span class="lineno"> 1819</span>&#160; </div>
<div class="line"><a name="l01827"></a><span class="lineno"> 1827</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#gac96d3ca37a435874de22a76838a8cf54">af_is_sparse</a>       (<span class="keywordtype">bool</span> *result, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01828"></a><span class="lineno"> 1828</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01829"></a><span class="lineno"> 1829</span>&#160; </div>
<div class="line"><a name="l01830"></a><span class="lineno"> 1830</span>&#160;<span class="preprocessor">#if AF_API_VERSION &gt;= 35</span></div>
<div class="line"><a name="l01831"></a><span class="lineno"> 1831</span>&#160; </div>
<div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;    <a class="code" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="code" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="code" href="group__method__mat.htm#gaefe2e343a74a84bd43b588218ecc09a3">af_get_scalar</a>(<span class="keywordtype">void</span>* output_value, <span class="keyword">const</span> <a class="code" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> arr);</div>
<div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01840"></a><span class="lineno"> 1840</span>&#160; </div>
<div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l01846"></a><span class="lineno"> 1846</span>&#160;}</div>
<div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="agroup__method__mat_htm_ga247a830d52f1cb2450369af3d8d8f2f1"><div class="ttname"><a href="group__method__mat.htm#ga247a830d52f1cb2450369af3d8d8f2f1">af_is_half</a></div><div class="ttdeci">AFAPI af_err af_is_half(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is 16 bit floating point type.</div></div>
<div class="ttc" id="agroup__method__mat_htm_ga34d9070b94c3bac673df7f13b9c718a2"><div class="ttname"><a href="group__method__mat.htm#ga34d9070b94c3bac673df7f13b9c718a2">af_get_data_ref_count</a></div><div class="ttdeci">AFAPI af_err af_get_data_ref_count(int *use_count, const af_array in)</div></div>
<div class="ttc" id="aclassaf_1_1dim4_htm"><div class="ttname"><a href="classaf_1_1dim4.htm">af::dim4</a></div><div class="ttdoc">Generic object that represents size and shape.</div><div class="ttdef"><b>Definition:</b> <a href="dim4_8hpp_source.htm#l00032">dim4.hpp:32</a></div></div>
<div class="ttc" id="agroup__arith__func__bitand_htm_ga9952ba151293dcae29e5dba3de096deb"><div class="ttname"><a href="group__arith__func__bitand.htm#ga9952ba151293dcae29e5dba3de096deb">af::operator&amp;</a></div><div class="ttdeci">AFAPI array operator&amp;(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Performs an bitwise AND operation on two arrays or an array and a value.</div></div>
<div class="ttc" id="agroup__method__mat_htm_ga0c2f8602994b437164ee5783cedabfa9"><div class="ttname"><a href="group__method__mat.htm#ga0c2f8602994b437164ee5783cedabfa9">af::getManualEvalFlag</a></div><div class="ttdeci">AFAPI bool getManualEvalFlag()</div><div class="ttdoc">Get the manual eval flag.</div></div>
<div class="ttc" id="aarray_8h_htm_a869f5e9331e9e010345de2589add7bae"><div class="ttname"><a href="array_8h.htm#a869f5e9331e9e010345de2589add7bae">af_set_manual_eval_flag</a></div><div class="ttdeci">AFAPI af_err af_set_manual_eval_flag(bool flag)</div><div class="ttdoc">Turn the manual eval flag on or off.</div></div>
<div class="ttc" id="adefines_8h_htm_ab99909561d2b3c97b0f6a0935a6f7cc6"><div class="ttname"><a href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6">af_source</a></div><div class="ttdeci">af_source</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00232">defines.h:232</a></div></div>
<div class="ttc" id="atraits_8hpp_htm"><div class="ttname"><a href="traits_8hpp.htm">traits.hpp</a></div></div>
<div class="ttc" id="aarray_8h_htm_a6d8256045dabd15534382126773e729d"><div class="ttname"><a href="array_8h.htm#a6d8256045dabd15534382126773e729d">BIN_OP</a></div><div class="ttdeci">#define BIN_OP(OP)</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l01082">array.h:1082</a></div></div>
<div class="ttc" id="aarray_8h_htm_a890c476d90cb689f2835d2e4f74f5868"><div class="ttname"><a href="array_8h.htm#a890c476d90cb689f2835d2e4f74f5868">af_get_manual_eval_flag</a></div><div class="ttdeci">AFAPI af_err af_get_manual_eval_flag(bool *flag)</div><div class="ttdoc">Get the manual eval flag.</div></div>
<div class="ttc" id="agroup__method__mat_htm_ga184b5a5feb146f2a2a44fed36b35e435"><div class="ttname"><a href="group__method__mat.htm#ga184b5a5feb146f2a2a44fed36b35e435">af_is_column</a></div><div class="ttdeci">AFAPI af_err af_is_column(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is a column vector.</div></div>
<div class="ttc" id="autil_8h_htm"><div class="ttname"><a href="util_8h.htm">util.h</a></div></div>
<div class="ttc" id="adefines_8h_htm_a7f026aa801b1fa6b85b0d992b414cccb"><div class="ttname"><a href="defines_8h.htm#a7f026aa801b1fa6b85b0d992b414cccb">dim_t</a></div><div class="ttdeci">long long dim_t</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00056">defines.h:56</a></div></div>
<div class="ttc" id="agroup__method__mat_htm_ga19c749e95314e1c77d816ad9952fb680"><div class="ttname"><a href="group__method__mat.htm#ga19c749e95314e1c77d816ad9952fb680">af_is_empty</a></div><div class="ttdeci">AFAPI af_err af_is_empty(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is empty.</div></div>
<div class="ttc" id="agroup__method__mat_htm_ga6a8d7156cd3c66a9ca9f0f2688ee9f72"><div class="ttname"><a href="group__method__mat.htm#ga6a8d7156cd3c66a9ca9f0f2688ee9f72">af::array::eval</a></div><div class="ttdeci">void eval() const</div><div class="ttdoc">Evaluate any JIT expressions to generate data for the array.</div></div>
<div class="ttc" id="anamespaceaf_htm_a63e29e484b92e217fe817fe78abc4f5f"><div class="ttname"><a href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">af::cfloat</a></div><div class="ttdeci">af::af_cfloat cfloat</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00051">complex.h:51</a></div></div>
<div class="ttc" id="agroup__method__mat_htm_ga5eb0d277412a2beeffe7e7a9f89b98ea"><div class="ttname"><a href="group__method__mat.htm#ga5eb0d277412a2beeffe7e7a9f89b98ea">af_is_floating</a></div><div class="ttdeci">AFAPI af_err af_is_floating(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is floating precision type.</div></div>
<div class="ttc" id="aindex_8h_htm"><div class="ttname"><a href="index_8h.htm">index.h</a></div></div>
<div class="ttc" id="adefines_8h_htm_ab23e67549eba2cfbaf0eb5f88f947e48"><div class="ttname"><a href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a></div><div class="ttdeci">#define AFAPI</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00038">defines.h:38</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00035">array.h:35</a></div></div>
<div class="ttc" id="adefines_8h_htm_ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba"><div class="ttname"><a href="defines_8h.htm#ab99909561d2b3c97b0f6a0935a6f7cc6a53f55a251b7809ae7b1c40163f24ffba">afHost</a></div><div class="ttdeci">@ afHost</div><div class="ttdoc">Host pointer.</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00234">defines.h:234</a></div></div>
<div class="ttc" id="agroup__method__mat_htm_ga0dda6898e1c0d9a43efb56cd6a988c9b"><div class="ttname"><a href="group__method__mat.htm#ga0dda6898e1c0d9a43efb56cd6a988c9b">af_get_type</a></div><div class="ttdeci">AFAPI af_err af_get_type(af_dtype *type, const af_array arr)</div><div class="ttdoc">Gets the type of an array.</div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:14</a></div></div>
<div class="ttc" id="aarray_8h_htm_a9e08f4cda2471a477d2fa91c2356f72c"><div class="ttname"><a href="array_8h.htm#a9e08f4cda2471a477d2fa91c2356f72c">af_eval_multiple</a></div><div class="ttdeci">AFAPI af_err af_eval_multiple(const int num, af_array *arrays)</div><div class="ttdoc">Evaluate multiple arrays together.</div></div>
<div class="ttc" id="agroup__method__mat_htm_ga11dba1a052f2fe004665237d9670e1f5"><div class="ttname"><a href="group__method__mat.htm#ga11dba1a052f2fe004665237d9670e1f5">af::setManualEvalFlag</a></div><div class="ttdeci">AFAPI void setManualEvalFlag(bool flag)</div><div class="ttdoc">Turn the manual eval flag on or off.</div></div>
<div class="ttc" id="agroup__construct__mat_htm_ga834be32357616d8ab735087c6f681858"><div class="ttname"><a href="group__construct__mat.htm#ga834be32357616d8ab735087c6f681858">af_create_array</a></div><div class="ttdeci">AFAPI af_err af_create_array(af_array *arr, const void *const data, const unsigned ndims, const dim_t *const dims, const af_dtype type)</div><div class="ttdoc">Create an af_array handle initialized with user defined data.</div></div>
<div class="ttc" id="astructaf__index__t_htm"><div class="ttname"><a href="structaf__index__t.htm">af_index_t</a></div><div class="ttdoc">Struct used to index an af_array.</div><div class="ttdef"><b>Definition:</b> <a href="index_8h_source.htm#l00022">index.h:22</a></div></div>
<div class="ttc" id="agroup__method__mat_htm_ga1bd444b2c78a4f4731d4523a90200175"><div class="ttname"><a href="group__method__mat.htm#ga1bd444b2c78a4f4731d4523a90200175">af_is_single</a></div><div class="ttdeci">AFAPI af_err af_is_single(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is single precision type.</div></div>
<div class="ttc" id="agroup__method__mat_htm_ga6845bbe4385a60a606b88f8130252c1f"><div class="ttname"><a href="group__method__mat.htm#ga6845bbe4385a60a606b88f8130252c1f">af_get_elements</a></div><div class="ttdeci">AFAPI af_err af_get_elements(dim_t *elems, const af_array arr)</div><div class="ttdoc">Get the total number of elements across all dimensions of the array.</div></div>
<div class="ttc" id="agroup__construct__mat_htm_ga3b8f5cf6fce69aa1574544bc2d44d7d0"><div class="ttname"><a href="group__construct__mat.htm#ga3b8f5cf6fce69aa1574544bc2d44d7d0">af_create_handle</a></div><div class="ttdeci">AFAPI af_err af_create_handle(af_array *arr, const unsigned ndims, const dim_t *const dims, const af_dtype type)</div><div class="ttdoc">Create af_array handle.</div></div>
<div class="ttc" id="agroup__arith__func__sub_htm_gafa57cf4a71580be2bfd04a83a66d9835"><div class="ttname"><a href="group__arith__func__sub.htm#gafa57cf4a71580be2bfd04a83a66d9835">af::operator-</a></div><div class="ttdeci">AFAPI array operator-(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Subtracts two arrays or an array and a value.</div></div>
<div class="ttc" id="adefines_8h_htm_a8e45f4aa3dbea6a7aa021dbc50a4a089"><div class="ttname"><a href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a></div><div class="ttdeci">void * af_array</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00240">defines.h:240</a></div></div>
<div class="ttc" id="agroup__method__mat_htm_gafaa0c1597ef34a7320ed589f80fdce10"><div class="ttname"><a href="group__method__mat.htm#gafaa0c1597ef34a7320ed589f80fdce10">af_is_real</a></div><div class="ttdeci">AFAPI af_err af_is_real(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is real type.</div></div>
<div class="ttc" id="agroup__method__mat_htm_ga6f2b3e689d07f5135dfc1ee6cf9825a3"><div class="ttname"><a href="group__method__mat.htm#ga6f2b3e689d07f5135dfc1ee6cf9825a3">af_is_realfloating</a></div><div class="ttdeci">AFAPI af_err af_is_realfloating(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is real floating point type.</div></div>
<div class="ttc" id="agroup__method__mat_htm_gacd8a5edf6467340d0b40341be9f677e9"><div class="ttname"><a href="group__method__mat.htm#gacd8a5edf6467340d0b40341be9f677e9">af_is_complex</a></div><div class="ttdeci">AFAPI af_err af_is_complex(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is complex type.</div></div>
<div class="ttc" id="agroup__method__mat_htm_gae3dfa6dc1c03c5efe7482bfc9c41266a"><div class="ttname"><a href="group__method__mat.htm#gae3dfa6dc1c03c5efe7482bfc9c41266a">af_is_scalar</a></div><div class="ttdeci">AFAPI af_err af_is_scalar(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is scalar, ie.</div></div>
<div class="ttc" id="aclassaf_1_1index_htm"><div class="ttname"><a href="classaf_1_1index.htm">af::index</a></div><div class="ttdoc">Wrapper for af_index.</div><div class="ttdef"><b>Definition:</b> <a href="index_8h_source.htm#l00052">index.h:52</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a></div><div class="ttdeci">af_dtype</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00210">defines.h:210</a></div></div>
<div class="ttc" id="agroup__method__mat_htm_gabbe3249a355293daabd5907d7df67c6a"><div class="ttname"><a href="group__method__mat.htm#gabbe3249a355293daabd5907d7df67c6a">af_is_row</a></div><div class="ttdeci">AFAPI af_err af_is_row(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is row vector.</div></div>
<div class="ttc" id="agroup__method__mat_htm_gad6c58648ed0db398e170dabf045e8309"><div class="ttname"><a href="group__method__mat.htm#gad6c58648ed0db398e170dabf045e8309">af_release_array</a></div><div class="ttdeci">AFAPI af_err af_release_array(af_array arr)</div><div class="ttdoc">Reduce the reference count of the af_array.</div></div>
<div class="ttc" id="agroup__method__mat_htm_gaefe2e343a74a84bd43b588218ecc09a3"><div class="ttname"><a href="group__method__mat.htm#gaefe2e343a74a84bd43b588218ecc09a3">af_get_scalar</a></div><div class="ttdeci">AFAPI af_err af_get_scalar(void *output_value, const af_array arr)</div><div class="ttdoc">Get first element from an array.</div></div>
<div class="ttc" id="agroup__method__mat_htm_ga7ed45b3f881c0f6c80c5cf2af886dbab"><div class="ttname"><a href="group__method__mat.htm#ga7ed45b3f881c0f6c80c5cf2af886dbab">af_retain_array</a></div><div class="ttdeci">AFAPI af_err af_retain_array(af_array *out, const af_array in)</div><div class="ttdoc">Increments an af_array reference count.</div></div>
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
<div class="ttc" id="agroup__method__mat_htm_gafef13633d184acc726ad9daca7a7bc99"><div class="ttname"><a href="group__method__mat.htm#gafef13633d184acc726ad9daca7a7bc99">af_write_array</a></div><div class="ttdeci">AFAPI af_err af_write_array(af_array arr, const void *data, const size_t bytes, af_source src)</div><div class="ttdoc">Copy data from a C pointer (host/device) to an existing array.</div></div>
<div class="ttc" id="agroup__method__mat_htm_ga768e8326a6aaa81c6543949afc781af2"><div class="ttname"><a href="group__method__mat.htm#ga768e8326a6aaa81c6543949afc781af2">af_is_integer</a></div><div class="ttdeci">AFAPI af_err af_is_integer(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is integer type.</div></div>
<div class="ttc" id="agroup__method__mat_htm_gaefa019d932ff58c2a829ce87edddd2a8"><div class="ttname"><a href="group__method__mat.htm#gaefa019d932ff58c2a829ce87edddd2a8">af_get_numdims</a></div><div class="ttdeci">AFAPI af_err af_get_numdims(unsigned *result, const af_array arr)</div><div class="ttdoc">Gets the number of dimensions of an array.</div></div>
<div class="ttc" id="aarray_8h_htm_a96147e5f8a7b6037405defdd7e190dd8"><div class="ttname"><a href="array_8h.htm#a96147e5f8a7b6037405defdd7e190dd8">ASSIGN</a></div><div class="ttdeci">#define ASSIGN(OP)</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00929">array.h:929</a></div></div>
<div class="ttc" id="agroup__method__mat_htm_ga00a23c7dd281fdcdec10b8395e611154"><div class="ttname"><a href="group__method__mat.htm#ga00a23c7dd281fdcdec10b8395e611154">af_is_vector</a></div><div class="ttdeci">AFAPI af_err af_is_vector(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is a vector.</div></div>
<div class="ttc" id="anamespaceaf_htm_af5c1188f38105afaf8b3f383492a1c9f"><div class="ttname"><a href="namespaceaf.htm#af5c1188f38105afaf8b3f383492a1c9f">af::span</a></div><div class="ttdeci">AFAPI seq span</div><div class="ttdoc">A special value representing the entire axis of an af::array.</div></div>
<div class="ttc" id="aseq_8h_htm"><div class="ttname"><a href="seq_8h.htm">seq.h</a></div></div>
<div class="ttc" id="agroup__method__mat_htm_ga0f8e4d3732b5fd4b91ad51eec634f7a2"><div class="ttname"><a href="group__method__mat.htm#ga0f8e4d3732b5fd4b91ad51eec634f7a2">af_copy_array</a></div><div class="ttdeci">AFAPI af_err af_copy_array(af_array *arr, const af_array in)</div></div>
<div class="ttc" id="agroup__method__mat_htm_gafae10fc1378b72404120572e21ff5d27"><div class="ttname"><a href="group__method__mat.htm#gafae10fc1378b72404120572e21ff5d27">af_is_bool</a></div><div class="ttdeci">AFAPI af_err af_is_bool(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is bool type.</div></div>
<div class="ttc" id="agroup__method__mat_htm_ga8b90da50a532837d9763e301b2267348"><div class="ttname"><a href="group__method__mat.htm#ga8b90da50a532837d9763e301b2267348">af_get_dims</a></div><div class="ttdeci">AFAPI af_err af_get_dims(dim_t *d0, dim_t *d1, dim_t *d2, dim_t *d3, const af_array arr)</div><div class="ttdoc">Gets the dimensions of an array.</div></div>
<div class="ttc" id="aclassaf_1_1array_1_1array__proxy_htm"><div class="ttname"><a href="classaf_1_1array_1_1array__proxy.htm">af::array::array_proxy</a></div><div class="ttdoc">Intermediate data class.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00053">array.h:53</a></div></div>
<div class="ttc" id="agroup__index__func__index_htm_ga25f470817062b23ad3f74347ea44b17c"><div class="ttname"><a href="group__index__func__index.htm#ga25f470817062b23ad3f74347ea44b17c">af::copy</a></div><div class="ttdeci">AFAPI void copy(array &amp;dst, const array &amp;src, const index &amp;idx0, const index &amp;idx1=span, const index &amp;idx2=span, const index &amp;idx3=span)</div><div class="ttdoc">Copy the values of an input array based on index.</div></div>
<div class="ttc" id="agroup__method__mat_htm_ga121545fb637db409a523862cdb8ffe39"><div class="ttname"><a href="group__method__mat.htm#ga121545fb637db409a523862cdb8ffe39">af::eval</a></div><div class="ttdeci">array &amp; eval(array &amp;a)</div><div class="ttdoc">Evaluate an expression (nonblocking).</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l01379">array.h:1379</a></div></div>
<div class="ttc" id="agroup__method__mat_htm_ga9de141bfc5936741d2496f59c1bac777"><div class="ttname"><a href="group__method__mat.htm#ga9de141bfc5936741d2496f59c1bac777">af_eval</a></div><div class="ttdeci">AFAPI af_err af_eval(af_array in)</div><div class="ttdoc">Evaluate any expressions in the Array.</div></div>
<div class="ttc" id="agroup__method__mat_htm_ga6040dc6f0eb127402fbf62c1165f0b9d"><div class="ttname"><a href="group__method__mat.htm#ga6040dc6f0eb127402fbf62c1165f0b9d">af_get_data_ptr</a></div><div class="ttdeci">AFAPI af_err af_get_data_ptr(void *data, const af_array arr)</div><div class="ttdoc">Copy data from an af_array to a C pointer.</div></div>
<div class="ttc" id="adefines_8h_htm_a82b94dc53bbd100a0e8ca9dd356aaf4f"><div class="ttname"><a href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a></div><div class="ttdeci">af_err</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00071">defines.h:71</a></div></div>
<div class="ttc" id="agroup__arith__func__and_htm_ga3fdacee9391b5155f32c40972624fc93"><div class="ttname"><a href="group__arith__func__and.htm#ga3fdacee9391b5155f32c40972624fc93">af::operator&amp;&amp;</a></div><div class="ttdeci">AFAPI array operator&amp;&amp;(const array &amp;lhs, const array &amp;rhs)</div><div class="ttdoc">Performs a logical AND operation on two arrays or an array and a value.</div></div>
<div class="ttc" id="adefines_8h_htm"><div class="ttname"><a href="defines_8h.htm">defines.h</a></div></div>
<div class="ttc" id="anamespaceaf_htm_acd654c72624253fcd7fd88fe5298aa9a"><div class="ttname"><a href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">af::cdouble</a></div><div class="ttdeci">af::af_cdouble cdouble</div><div class="ttdef"><b>Definition:</b> <a href="complex_8h_source.htm#l00052">complex.h:52</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div><div class="ttdeci">@ f32</div><div class="ttdoc">32-bit floating point values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00211">defines.h:211</a></div></div>
<div class="ttc" id="agroup__method__mat_htm_gadb499641bfc02dfa56a75be9ba237e3f"><div class="ttname"><a href="group__method__mat.htm#gadb499641bfc02dfa56a75be9ba237e3f">af_is_double</a></div><div class="ttdeci">AFAPI af_err af_is_double(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is double precision type.</div></div>
<div class="ttc" id="agroup__method__mat_htm_gac96d3ca37a435874de22a76838a8cf54"><div class="ttname"><a href="group__method__mat.htm#gac96d3ca37a435874de22a76838a8cf54">af_is_sparse</a></div><div class="ttdeci">AFAPI af_err af_is_sparse(bool *result, const af_array arr)</div><div class="ttdoc">Check if an array is sparse.</div></div>
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
