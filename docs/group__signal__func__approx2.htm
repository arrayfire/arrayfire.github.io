<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: approx2</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__signal__func__approx2.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">approx2<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__signal__mat.htm">Signal Processing</a> &raquo; <a class="el" href="group__approx__mat.htm">Interpolation and approximation</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Interpolation along two dimensions.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga6e477744cb71ec8ca6577fb5274cc1db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#ga6e477744cb71ec8ca6577fb5274cc1db">approx2</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;pos0, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;pos1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a> method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a>, const float off_grid=0.0f)</td></tr>
<tr class="memdesc:ga6e477744cb71ec8ca6577fb5274cc1db"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for data interpolation on two-dimensional signals.  <a href="group__signal__func__approx2.htm#ga6e477744cb71ec8ca6577fb5274cc1db">More...</a><br /></td></tr>
<tr class="separator:ga6e477744cb71ec8ca6577fb5274cc1db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga457482f03f622cbec3d730cec9e76b6c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#ga457482f03f622cbec3d730cec9e76b6c">approx2</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;pos0, const int interp_dim0, const double idx_start_dim0, const double idx_step_dim0, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;pos1, const int interp_dim1, const double idx_start_dim1, const double idx_step_dim1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a> method=<a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a>, const float off_grid=0.0f)</td></tr>
<tr class="memdesc:ga457482f03f622cbec3d730cec9e76b6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for data interpolation on two-dimensional signals.  <a href="group__signal__func__approx2.htm#ga457482f03f622cbec3d730cec9e76b6c">More...</a><br /></td></tr>
<tr class="separator:ga457482f03f622cbec3d730cec9e76b6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadd7c8ac60b5dc06999e16c7c8e555699"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#gadd7c8ac60b5dc06999e16c7c8e555699">af_approx2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos0, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:gadd7c8ac60b5dc06999e16c7c8e555699"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for signals interpolation on two dimensional signals.  <a href="group__signal__func__approx2.htm#gadd7c8ac60b5dc06999e16c7c8e555699">More...</a><br /></td></tr>
<tr class="separator:gadd7c8ac60b5dc06999e16c7c8e555699"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7448f8eecc9e454d814833b1b19af699"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#ga7448f8eecc9e454d814833b1b19af699">af_approx2_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos0, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:ga7448f8eecc9e454d814833b1b19af699"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for the version of <a class="el" href="group__signal__func__approx2.htm#gadd7c8ac60b5dc06999e16c7c8e555699">af_approx2</a> that accepts a preallocated output array.  <a href="group__signal__func__approx2.htm#ga7448f8eecc9e454d814833b1b19af699">More...</a><br /></td></tr>
<tr class="separator:ga7448f8eecc9e454d814833b1b19af699"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabad5f584e30df679b9c57193603e94b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#gabad5f584e30df679b9c57193603e94b6">af_approx2_uniform</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos0, const int interp_dim0, const double idx_start_dim0, const double idx_step_dim0, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos1, const int interp_dim1, const double idx_start_dim1, const double idx_step_dim1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:gabad5f584e30df679b9c57193603e94b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for signals interpolation on two dimensional signals along specified dimensions.  <a href="group__signal__func__approx2.htm#gabad5f584e30df679b9c57193603e94b6">More...</a><br /></td></tr>
<tr class="separator:gabad5f584e30df679b9c57193603e94b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga010d987451e971518b39540aa9aba550"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__signal__func__approx2.htm#ga010d987451e971518b39540aa9aba550">af_approx2_uniform_v2</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos0, const int interp_dim0, const double idx_start_dim0, const double idx_step_dim0, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> pos1, const int interp_dim1, const double idx_start_dim1, const double idx_step_dim1, const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> method, const float off_grid)</td></tr>
<tr class="memdesc:ga010d987451e971518b39540aa9aba550"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for the version of <a class="el" href="group__signal__func__approx2.htm#gabad5f584e30df679b9c57193603e94b6">af_approx2_uniform</a> that accepts a preallocated output array.  <a href="group__signal__func__approx2.htm#ga010d987451e971518b39540aa9aba550">More...</a><br /></td></tr>
<tr class="separator:ga010d987451e971518b39540aa9aba550"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Interpolation along two dimensions. </p>
<p>Performs interpolation on data along two dimensions.</p>
<p>Interpolation is the process of computing for unknown values within a continuous range described by a discrete set of known values. These known values correspond to a uniformly-spaced range of indices determined by start and step values, whose defaults are 0.0 and 1.0, respectively.</p>
<p>The positions arrays (<code>pos0</code> and <code>pos1</code>) contain the interpolating points (indices whose values we want to find) along two given dimensions. Values of <b>known indices</b> will be looked up in the input array, while values of <b>unknown indices</b> will be found via interpolation. Indices outside of the index range are not extrapolated. Instead, those values are set to <code>off_grid</code>, whose default value is 0.0.</p>
<p>All of the interpolation methods defined in <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> are supported by approx2. Unless specified, linear interpolation is performed by default. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="gadd7c8ac60b5dc06999e16c7c8e555699"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadd7c8ac60b5dc06999e16c7c8e555699">&#9670;&nbsp;</a></span>af_approx2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_approx2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>pos0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>pos1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>off_grid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for signals interpolation on two dimensional signals. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>the interpolated array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the multidimensional input array. Values assumed to lie uniformly spaced indices in the range of <code>[0, n)</code> along both interpolation dimensions. <code>n</code> is the number of elements in the array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos0</td><td>positions of the interpolation points along the first dimension. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos1</td><td>positions of the interpolation points along the second dimension. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation method to be used. All interpolation types defined in <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> are supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">off_grid</td><td>is the default value for any indices outside the valid range of indices.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the interpolation operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="gabad5f584e30df679b9c57193603e94b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabad5f584e30df679b9c57193603e94b6">&#9670;&nbsp;</a></span>af_approx2_uniform()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_approx2_uniform </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>pos0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>interp_dim0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_start_dim0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_step_dim0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>pos1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>interp_dim1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_start_dim1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_step_dim1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>off_grid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for signals interpolation on two dimensional signals along specified dimensions. </p>
<p><a class="el" href="group__signal__func__approx2.htm#gabad5f584e30df679b9c57193603e94b6" title="C Interface for signals interpolation on two dimensional signals along specified dimensions.">af_approx2_uniform()</a> accepts two dimensions to perform the interpolation along the input. It also accepts start and step values which define the uniform range of corresponding indices.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>the interpolated array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the multidimensional input array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos0</td><td>positions of the interpolation points along <code>interp_dim0</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">interp_dim0</td><td>is the first dimension to perform interpolation across. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_start_dim0</td><td>is the first index value along <code>interp_dim0</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_step_dim0</td><td>is the uniform spacing value between subsequent indices along <code>interp_dim0</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos1</td><td>positions of the interpolation points along <code>interp_dim1</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">interp_dim1</td><td>is the second dimension to perform interpolation across. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_start_dim1</td><td>is the first index value along <code>interp_dim1</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_step_dim1</td><td>is the uniform spacing value between subsequent indices along <code>interp_dim1</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation method to be used. All interpolation types defined in <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> are supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">off_grid</td><td>is the default value for any indices outside the valid range of indices.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the interpolation operation is successful, otherwise an appropriate error code is returned. </dd></dl>

</div>
</div>
<a id="ga010d987451e971518b39540aa9aba550"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga010d987451e971518b39540aa9aba550">&#9670;&nbsp;</a></span>af_approx2_uniform_v2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_approx2_uniform_v2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>pos0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>interp_dim0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_start_dim0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_step_dim0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>pos1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>interp_dim1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_start_dim1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_step_dim1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>off_grid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for the version of <a class="el" href="group__signal__func__approx2.htm#gabad5f584e30df679b9c57193603e94b6">af_approx2_uniform</a> that accepts a preallocated output array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">out</td><td>the interpolated array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the multidimensional input array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos0</td><td>positions of the interpolation points along <code>interp_dim0</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">interp_dim0</td><td>is the first dimension to perform interpolation across. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_start_dim0</td><td>is the first index value along <code>interp_dim0</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_step_dim0</td><td>is the uniform spacing value between subsequent indices along <code>interp_dim0</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos1</td><td>positions of the interpolation points along <code>interp_dim1</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">interp_dim1</td><td>is the second dimension to perform interpolation across. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_start_dim1</td><td>is the first index value along <code>interp_dim1</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_step_dim1</td><td>is the uniform spacing value between subsequent indices along <code>interp_dim1</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation method to be used. All interpolation types defined in <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> are supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">off_grid</td><td>is the default value for any indices outside the valid range of indices.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the interpolation operation is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>out</code> can either be a null or existing <code>af_array</code> object. If it is a sub-array of an existing <code>af_array</code>, only the corresponding portion of the <code>af_array</code> will be overwritten </dd>
<dd>
Passing an <code>af_array</code> to <code>out</code> that has not been initialized will cause undefined behavior. </dd></dl>

</div>
</div>
<a id="ga7448f8eecc9e454d814833b1b19af699"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7448f8eecc9e454d814833b1b19af699">&#9670;&nbsp;</a></span>af_approx2_v2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_approx2_v2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>pos0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>pos1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a>&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>off_grid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for the version of <a class="el" href="group__signal__func__approx2.htm#gadd7c8ac60b5dc06999e16c7c8e555699">af_approx2</a> that accepts a preallocated output array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">out</td><td>the interpolated array (can be preallocated). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the multidimensional input array. Values assumed to lie uniformly spaced indices in the range of <code>[0, n)</code> along both interpolation dimensions. <code>n</code> is the number of elements in the array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos0</td><td>positions of the interpolation points along the first dimension. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos1</td><td>positions of the interpolation points along the second dimension. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation method to be used. All interpolation types defined in <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> are supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">off_grid</td><td>is the default value for any indices outside the valid range of indices.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the interpolation operation is successful, otherwise an appropriate error code is returned.</dd></dl>
<dl class="section note"><dt>Note</dt><dd><code>out</code> can either be a null or existing <code>af_array</code> object. If it is a sub-array of an existing <code>af_array</code>, only the corresponding portion of the <code>af_array</code> will be overwritten </dd>
<dd>
Passing an <code>af_array</code> to <code>out</code> that has not been initialized will cause undefined behavior. </dd></dl>

</div>
</div>
<a id="ga6e477744cb71ec8ca6577fb5274cc1db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6e477744cb71ec8ca6577fb5274cc1db">&#9670;&nbsp;</a></span>approx2() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::approx2 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>pos0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>pos1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a>&#160;</td>
          <td class="paramname"><em>method</em> = <code><a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>off_grid</em> = <code>0.0f</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for data interpolation on two-dimensional signals. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the multidimensional input array. Values assumed to lie uniformly spaced indices in the range of <code>[0, n)</code> along both interpolation dimensions. <code>n</code> is the number of elements in the array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos0</td><td>positions of the interpolation points along the first dimension. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos1</td><td>positions of the interpolation points along the second dimension. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation method to be used. All interpolation types defined in <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> are supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">off_grid</td><td>is the default value for any indices outside the valid range of indices. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the interpolated array.</dd></dl>
<p>The code sample below demonstrates <a class="el" href="group__signal__func__approx2.htm#ga6e477744cb71ec8ca6577fb5274cc1db" title="C++ Interface for data interpolation on two-dimensional signals.">approx2()</a>'s usage:</p>
<div class="fragment"><div class="line"> </div>
<div class="line">    <span class="comment">// Input data array.</span></div>
<div class="line">    <span class="keywordtype">float</span> input_vals[9] = {1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0};</div>
<div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> input(3, 3, input_vals);</div>
<div class="line">    <span class="comment">// [3 3 1 1]</span></div>
<div class="line">    <span class="comment">//     1.0000     2.0000     3.0000</span></div>
<div class="line">    <span class="comment">//     1.0000     2.0000     3.0000</span></div>
<div class="line">    <span class="comment">//     1.0000     2.0000     3.0000</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// First array of positions to be found along the first dimension.</span></div>
<div class="line">    <span class="keywordtype">float</span> pv0[4] = {0.5, 1.5, 0.5, 1.5};</div>
<div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> pos0(2, 2, pv0);</div>
<div class="line">    <span class="comment">// [2 2 1 1]</span></div>
<div class="line">    <span class="comment">//     0.5000     0.5000</span></div>
<div class="line">    <span class="comment">//     1.5000     1.5000</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Second array of positions to be found along the second</span></div>
<div class="line">    <span class="comment">// dimension.</span></div>
<div class="line">    <span class="keywordtype">float</span> pv1[4] = {0.5, 0.5, 1.5, 1.5};</div>
<div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> pos1(2, 2, pv1);</div>
<div class="line">    <span class="comment">// [2 2 1 1]</span></div>
<div class="line">    <span class="comment">//     0.5000     1.5000</span></div>
<div class="line">    <span class="comment">//     0.5000     1.5000</span></div>
<div class="line"> </div>
<div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> interp = <a class="code" href="group__signal__func__approx2.htm#ga6e477744cb71ec8ca6577fb5274cc1db">approx2</a>(input, pos0, pos1);</div>
<div class="line">    <span class="comment">// [2 2 1 1]</span></div>
<div class="line">    <span class="comment">//     1.5000     2.5000</span></div>
<div class="line">    <span class="comment">//     1.5000     2.5000</span></div>
<div class="line"> </div>
</div><!-- fragment -->
</div>
</div>
<a id="ga457482f03f622cbec3d730cec9e76b6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga457482f03f622cbec3d730cec9e76b6c">&#9670;&nbsp;</a></span>approx2() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::approx2 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>pos0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>interp_dim0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_start_dim0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_step_dim0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>pos1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>interp_dim1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_start_dim1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>idx_step_dim1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">interpType</a>&#160;</td>
          <td class="paramname"><em>method</em> = <code><a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68a50db9a815ef5d23eee60ca5bda328836">AF_INTERP_LINEAR</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>off_grid</em> = <code>0.0f</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for data interpolation on two-dimensional signals. </p>
<p>The following version of the <a class="el" href="group__signal__func__approx2.htm#ga6e477744cb71ec8ca6577fb5274cc1db" title="C++ Interface for data interpolation on two-dimensional signals.">approx2()</a> accepts the two dimensions to perform the interpolation along the input. It also accepts start and step values which define the uniform range of corresponding indices.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the multidimensional input array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos0</td><td>positions of the interpolation points along <code>interp_dim0</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">interp_dim0</td><td>is the first dimension to perform interpolation across. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_start_dim0</td><td>is the first index value along <code>interp_dim0</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_step_dim0</td><td>is the uniform spacing value between subsequent indices along <code>interp_dim0</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos1</td><td>positions of the interpolation points along <code>interp_dim1</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">interp_dim1</td><td>is the second dimension to perform interpolation across. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_start_dim1</td><td>is the first index value along <code>interp_dim1</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_step_dim1</td><td>is the uniform spacing value between subsequent indices along <code>interp_dim1</code>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>is the interpolation method to be used. All interpolation types defined in <a class="el" href="defines_8h.htm#ac0b7c1cfd1fb146314d96f17bbfffa68">af_interp_type</a> are supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">off_grid</td><td>is the default value for any indices outside the valid range of indices. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the interpolated array.</dd></dl>
<p>The code sample below demonstrates usage:</p>
<div class="fragment"><div class="line"> </div>
<div class="line">    <span class="comment">// Input data array.</span></div>
<div class="line">    <span class="keywordtype">float</span> input_vals[9] = {1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0};</div>
<div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> input(3, 3, input_vals);</div>
<div class="line">    <span class="comment">// [3 3 1 1]</span></div>
<div class="line">    <span class="comment">//     1.0000     2.0000     3.0000</span></div>
<div class="line">    <span class="comment">//     1.0000     2.0000     3.0000</span></div>
<div class="line">    <span class="comment">//     1.0000     2.0000     3.0000</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// First array of positions to be found along the interpolation</span></div>
<div class="line">    <span class="comment">// dimension, `interp_dim0`.</span></div>
<div class="line">    <span class="keywordtype">float</span> pv0[4] = {0.5, 1.5, 0.5, 1.5};</div>
<div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> pos0(2, 2, pv0);</div>
<div class="line">    <span class="comment">// [2 2 1 1]</span></div>
<div class="line">    <span class="comment">//     0.5000     0.5000</span></div>
<div class="line">    <span class="comment">//     1.5000     1.5000</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Second array of positions to be found along the interpolation</span></div>
<div class="line">    <span class="comment">// dimension, `interp_dim1`.</span></div>
<div class="line">    <span class="keywordtype">float</span> pv1[4] = {0.5, 0.5, 1.5, 1.5};</div>
<div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> pos1(2, 2, pv1);</div>
<div class="line">    <span class="comment">// [2 2 1 1]</span></div>
<div class="line">    <span class="comment">//     0.5000     1.5000</span></div>
<div class="line">    <span class="comment">//     0.5000     1.5000</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Define range of indices with which the input values will</span></div>
<div class="line">    <span class="comment">// correspond along both dimensions to be interpolated.</span></div>
<div class="line">    <span class="keyword">const</span> <span class="keywordtype">double</span> idx_start_dim0 = 0.0;</div>
<div class="line">    <span class="keyword">const</span> <span class="keywordtype">double</span> idx_step_dim0  = 1.0;</div>
<div class="line">    <span class="keyword">const</span> <span class="keywordtype">int</span> interp_dim0       = 0;</div>
<div class="line">    <span class="keyword">const</span> <span class="keywordtype">int</span> interp_dim1       = 1;</div>
<div class="line">    <a class="code" href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">array</a> interp =</div>
<div class="line">        <a class="code" href="group__signal__func__approx2.htm#ga6e477744cb71ec8ca6577fb5274cc1db">approx2</a>(input, pos0, interp_dim0, idx_start_dim0, idx_step_dim0, pos1,</div>
<div class="line">                interp_dim1, idx_start_dim0, idx_step_dim0);</div>
<div class="line">    <span class="comment">// [2 2 1 1]</span></div>
<div class="line">    <span class="comment">//     1.5000     2.5000</span></div>
<div class="line">    <span class="comment">//     1.5000     2.5000</span></div>
<div class="line"> </div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="agroup__signal__func__approx2_htm_ga6e477744cb71ec8ca6577fb5274cc1db"><div class="ttname"><a href="group__signal__func__approx2.htm#ga6e477744cb71ec8ca6577fb5274cc1db">af::approx2</a></div><div class="ttdeci">AFAPI array approx2(const array &amp;in, const array &amp;pos0, const array &amp;pos1, const interpType method=AF_INTERP_LINEAR, const float off_grid=0.0f)</div><div class="ttdoc">C++ Interface for data interpolation on two-dimensional signals.</div></div>
<div class="ttc" id="agroup__opencl__mat_htm_ga5434aaf76be37fae92ac5086315516f0"><div class="ttname"><a href="group__opencl__mat.htm#ga5434aaf76be37fae92ac5086315516f0">afcl::array</a></div><div class="ttdeci">static af::array array(af::dim4 idims, cl_mem buf, af::dtype type, bool retain=false)</div><div class="ttdoc">Create an af::array object from an OpenCL cl_mem buffer.</div><div class="ttdef"><b>Definition:</b> <a href="opencl_8h_source.htm#l00327">opencl.h:327</a></div></div>
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
