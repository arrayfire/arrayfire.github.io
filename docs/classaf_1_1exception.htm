<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<title>exception Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classaf_1_1exception.htm','');});
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">exception Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="exception_8h_source.htm">exception.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for exception:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classaf_1_1exception.png" usemap="#exception_map" alt=""/>
  <map id="exception_map" name="exception_map">
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a36372ee174752431cb6de1bac8d7e1d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#a36372ee174752431cb6de1bac8d7e1d5">err</a> ()</td></tr>
<tr class="separator:a36372ee174752431cb6de1bac8d7e1d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e54345f926a6326080fa8bf1683bab1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#a3e54345f926a6326080fa8bf1683bab1">exception</a> ()</td></tr>
<tr class="separator:a3e54345f926a6326080fa8bf1683bab1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4587b848a5af8f1df51bbc9e0cd7fc9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#ac4587b848a5af8f1df51bbc9e0cd7fc9">exception</a> (const char *msg)</td></tr>
<tr class="separator:ac4587b848a5af8f1df51bbc9e0cd7fc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae38094b5c00250775aff124fbd9ae119"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#ae38094b5c00250775aff124fbd9ae119">exception</a> (const char *file, unsigned line, <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="el" href="classaf_1_1exception.htm#a36372ee174752431cb6de1bac8d7e1d5">err</a>)</td></tr>
<tr class="separator:ae38094b5c00250775aff124fbd9ae119"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3c142c36441ae1a03a524e48fd2e93"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#a4b3c142c36441ae1a03a524e48fd2e93">exception</a> (const char *msg, const char *file, unsigned line, <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="el" href="classaf_1_1exception.htm#a36372ee174752431cb6de1bac8d7e1d5">err</a>)</td></tr>
<tr class="separator:a4b3c142c36441ae1a03a524e48fd2e93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa625f542ffabe93f3d88140a4007f18d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#aa625f542ffabe93f3d88140a4007f18d">exception</a> (const char *msg, const char *func, const char *file, unsigned line, <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="el" href="classaf_1_1exception.htm#a36372ee174752431cb6de1bac8d7e1d5">err</a>)</td></tr>
<tr class="separator:aa625f542ffabe93f3d88140a4007f18d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9083ff91968506ea40d3885cf58fa912"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#a9083ff91968506ea40d3885cf58fa912">~exception</a> ()  throw ()</td></tr>
<tr class="separator:a9083ff91968506ea40d3885cf58fa912"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad62489809e3df568e973597b928d6d9b"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#ad62489809e3df568e973597b928d6d9b">what</a> () const  throw ()</td></tr>
<tr class="separator:ad62489809e3df568e973597b928d6d9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:ac2b129c1d98d5c39d8488ea62c3b74cb"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#ac2b129c1d98d5c39d8488ea62c3b74cb">operator&lt;&lt;</a> (std::ostream &amp;s, const <a class="el" href="classaf_1_1exception.htm">exception</a> &amp;e)</td></tr>
<tr class="separator:ac2b129c1d98d5c39d8488ea62c3b74cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><dl><dt><b>Examples: </b></dt><dd><a class="el" href="benchmarks_2blas_8cpp-example.htm#_a7">benchmarks/blas.cpp</a>, <a class="el" href="benchmarks_2fft_8cpp-example.htm#_a7">benchmarks/fft.cpp</a>, <a class="el" href="benchmarks_2pi_8cpp-example.htm#_a8">benchmarks/pi.cpp</a>, <a class="el" href="computer_vision_2fast_8cpp-example.htm#_a19">computer_vision/fast.cpp</a>, <a class="el" href="computer_vision_2harris_8cpp-example.htm#_a21">computer_vision/harris.cpp</a>, <a class="el" href="computer_vision_2matching_8cpp-example.htm#_a15">computer_vision/matching.cpp</a>, <a class="el" href="computer_vision_2susan_8cpp-example.htm#_a20">computer_vision/susan.cpp</a>, <a class="el" href="financial_2black_scholes_options_8cpp-example.htm#_a14">financial/black_scholes_options.cpp</a>, <a class="el" href="financial_2heston_model_8cpp-example.htm#_a14">financial/heston_model.cpp</a>, <a class="el" href="financial_2monte_carlo_options_8cpp-example.htm#_a13">financial/monte_carlo_options.cpp</a>, <a class="el" href="getting_started_2convolve_8cpp-example.htm#_a10">getting_started/convolve.cpp</a>, <a class="el" href="getting_started_2integer_8cpp-example.htm#_a14">getting_started/integer.cpp</a>, <a class="el" href="getting_started_2rainfall_8cpp-example.htm#_a9">getting_started/rainfall.cpp</a>, <a class="el" href="getting_started_2vectorize_8cpp-example.htm#_a14">getting_started/vectorize.cpp</a>, <a class="el" href="graphics_2conway_8cpp-example.htm#_a10">graphics/conway.cpp</a>, <a class="el" href="graphics_2conway_pretty_8cpp-example.htm#_a16">graphics/conway_pretty.cpp</a>, <a class="el" href="graphics_2field_8cpp-example.htm#_a18">graphics/field.cpp</a>, <a class="el" href="graphics_2fractal_8cpp-example.htm#_a16">graphics/fractal.cpp</a>, <a class="el" href="graphics_2gravity_sim_8cpp-example.htm#_a28">graphics/gravity_sim.cpp</a>, <a class="el" href="graphics_2histogram_8cpp-example.htm#_a12">graphics/histogram.cpp</a>, <a class="el" href="graphics_2plot2d_8cpp-example.htm#_a15">graphics/plot2d.cpp</a>, <a class="el" href="graphics_2plot3_8cpp-example.htm#_a10">graphics/plot3.cpp</a>, <a class="el" href="graphics_2surface_8cpp-example.htm#_a10">graphics/surface.cpp</a>, <a class="el" href="helloworld_2helloworld_8cpp-example.htm#_a18">helloworld/helloworld.cpp</a>, <a class="el" href="image_processing_2adaptive_thresholding_8cpp-example.htm#_a17">image_processing/adaptive_thresholding.cpp</a>, <a class="el" href="image_processing_2binary_thresholding_8cpp-example.htm#_a22">image_processing/binary_thresholding.cpp</a>, <a class="el" href="image_processing_2brain_segmentation_8cpp-example.htm#_a25">image_processing/brain_segmentation.cpp</a>, <a class="el" href="image_processing_2edge_8cpp-example.htm#_a11">image_processing/edge.cpp</a>, <a class="el" href="image_processing_2filters_8cpp-example.htm#_a33">image_processing/filters.cpp</a>, <a class="el" href="image_processing_2gradient_diffusion_8cpp-example.htm#_a12">image_processing/gradient_diffusion.cpp</a>, <a class="el" href="image_processing_2image_demo_8cpp-example.htm#_a17">image_processing/image_demo.cpp</a>, <a class="el" href="image_processing_2image_editing_8cpp-example.htm#_a24">image_processing/image_editing.cpp</a>, <a class="el" href="image_processing_2morphing_8cpp-example.htm#_a16">image_processing/morphing.cpp</a>, <a class="el" href="image_processing_2optical_flow_8cpp-example.htm#_a16">image_processing/optical_flow.cpp</a>, <a class="el" href="image_processing_2pyramids_8cpp-example.htm#_a14">image_processing/pyramids.cpp</a>, <a class="el" href="lin_algebra_2cholesky_8cpp-example.htm#_a10">lin_algebra/cholesky.cpp</a>, <a class="el" href="lin_algebra_2lu_8cpp-example.htm#_a10">lin_algebra/lu.cpp</a>, <a class="el" href="lin_algebra_2qr_8cpp-example.htm#_a8">lin_algebra/qr.cpp</a>, <a class="el" href="lin_algebra_2svd_8cpp-example.htm#_a9">lin_algebra/svd.cpp</a>, <a class="el" href="machine_learning_2bagging_8cpp-example.htm#_a20">machine_learning/bagging.cpp</a>, <a class="el" href="machine_learning_2deep_belief_net_8cpp-example.htm#_a29">machine_learning/deep_belief_net.cpp</a>, <a class="el" href="machine_learning_2geneticalgorithm_8cpp-example.htm#_a20">machine_learning/geneticalgorithm.cpp</a>, <a class="el" href="machine_learning_2kmeans_8cpp-example.htm#_a18">machine_learning/kmeans.cpp</a>, <a class="el" href="machine_learning_2knn_8cpp-example.htm#_a15">machine_learning/knn.cpp</a>, <a class="el" href="machine_learning_2logistic_regression_8cpp-example.htm#_a21">machine_learning/logistic_regression.cpp</a>, <a class="el" href="machine_learning_2naive_bayes_8cpp-example.htm#_a23">machine_learning/naive_bayes.cpp</a>, <a class="el" href="machine_learning_2neural_network_8cpp-example.htm#_a20">machine_learning/neural_network.cpp</a>, <a class="el" href="machine_learning_2perceptron_8cpp-example.htm#_a18">machine_learning/perceptron.cpp</a>, <a class="el" href="machine_learning_2rbm_8cpp-example.htm#_a26">machine_learning/rbm.cpp</a>, <a class="el" href="machine_learning_2softmax_regression_8cpp-example.htm#_a22">machine_learning/softmax_regression.cpp</a>, <a class="el" href="pde_2swe_8cpp-example.htm#_a21">pde/swe.cpp</a>, and <a class="el" href="unified_2basic_8cpp-example.htm#_a8">unified/basic.cpp</a>.</dd>
</dl>
<p class="definition">Definition at line <a class="el" href="exception_8h_source.htm#l00019">19</a> of file <a class="el" href="exception_8h_source.htm">exception.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a3e54345f926a6326080fa8bf1683bab1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e54345f926a6326080fa8bf1683bab1">&#9670;&nbsp;</a></span>exception() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1exception.htm">exception</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac4587b848a5af8f1df51bbc9e0cd7fc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4587b848a5af8f1df51bbc9e0cd7fc9">&#9670;&nbsp;</a></span>exception() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1exception.htm">exception</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>msg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae38094b5c00250775aff124fbd9ae119"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae38094b5c00250775aff124fbd9ae119">&#9670;&nbsp;</a></span>exception() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1exception.htm">exception</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td>
          <td class="paramname"><em>err</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4b3c142c36441ae1a03a524e48fd2e93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b3c142c36441ae1a03a524e48fd2e93">&#9670;&nbsp;</a></span>exception() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1exception.htm">exception</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td>
          <td class="paramname"><em>err</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa625f542ffabe93f3d88140a4007f18d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa625f542ffabe93f3d88140a4007f18d">&#9670;&nbsp;</a></span>exception() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1exception.htm">exception</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td>
          <td class="paramname"><em>err</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9083ff91968506ea40d3885cf58fa912"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9083ff91968506ea40d3885cf58fa912">&#9670;&nbsp;</a></span>~exception()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classaf_1_1exception.htm">exception</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="exception_8h_source.htm#l00033">33</a> of file <a class="el" href="exception_8h_source.htm">exception.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a36372ee174752431cb6de1bac8d7e1d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36372ee174752431cb6de1bac8d7e1d5">&#9670;&nbsp;</a></span>err()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> err </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="exception_8h_source.htm#l00025">25</a> of file <a class="el" href="exception_8h_source.htm">exception.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{ <span class="keywordflow">return</span> m_err; }</div></div><!-- fragment -->
</div>
</div>
<a id="ad62489809e3df568e973597b928d6d9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad62489809e3df568e973597b928d6d9b">&#9670;&nbsp;</a></span>what()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* what </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="benchmarks_2blas_8cpp-example.htm#a8">benchmarks/blas.cpp</a>, <a class="el" href="benchmarks_2fft_8cpp-example.htm#a8">benchmarks/fft.cpp</a>, <a class="el" href="benchmarks_2pi_8cpp-example.htm#a9">benchmarks/pi.cpp</a>, <a class="el" href="computer_vision_2fast_8cpp-example.htm#a20">computer_vision/fast.cpp</a>, <a class="el" href="computer_vision_2harris_8cpp-example.htm#a22">computer_vision/harris.cpp</a>, <a class="el" href="computer_vision_2matching_8cpp-example.htm#a16">computer_vision/matching.cpp</a>, <a class="el" href="computer_vision_2susan_8cpp-example.htm#a21">computer_vision/susan.cpp</a>, <a class="el" href="financial_2black_scholes_options_8cpp-example.htm#a15">financial/black_scholes_options.cpp</a>, <a class="el" href="financial_2heston_model_8cpp-example.htm#a15">financial/heston_model.cpp</a>, <a class="el" href="financial_2monte_carlo_options_8cpp-example.htm#a14">financial/monte_carlo_options.cpp</a>, <a class="el" href="getting_started_2convolve_8cpp-example.htm#a11">getting_started/convolve.cpp</a>, <a class="el" href="getting_started_2integer_8cpp-example.htm#a15">getting_started/integer.cpp</a>, <a class="el" href="getting_started_2rainfall_8cpp-example.htm#a10">getting_started/rainfall.cpp</a>, <a class="el" href="getting_started_2vectorize_8cpp-example.htm#a15">getting_started/vectorize.cpp</a>, <a class="el" href="graphics_2conway_8cpp-example.htm#a11">graphics/conway.cpp</a>, <a class="el" href="graphics_2conway_pretty_8cpp-example.htm#a17">graphics/conway_pretty.cpp</a>, <a class="el" href="graphics_2field_8cpp-example.htm#a19">graphics/field.cpp</a>, <a class="el" href="graphics_2fractal_8cpp-example.htm#a17">graphics/fractal.cpp</a>, <a class="el" href="graphics_2gravity_sim_8cpp-example.htm#a29">graphics/gravity_sim.cpp</a>, <a class="el" href="graphics_2histogram_8cpp-example.htm#a13">graphics/histogram.cpp</a>, <a class="el" href="graphics_2plot2d_8cpp-example.htm#a16">graphics/plot2d.cpp</a>, <a class="el" href="graphics_2plot3_8cpp-example.htm#a11">graphics/plot3.cpp</a>, <a class="el" href="graphics_2surface_8cpp-example.htm#a11">graphics/surface.cpp</a>, <a class="el" href="helloworld_2helloworld_8cpp-example.htm#a19">helloworld/helloworld.cpp</a>, <a class="el" href="image_processing_2adaptive_thresholding_8cpp-example.htm#a18">image_processing/adaptive_thresholding.cpp</a>, <a class="el" href="image_processing_2binary_thresholding_8cpp-example.htm#a23">image_processing/binary_thresholding.cpp</a>, <a class="el" href="image_processing_2brain_segmentation_8cpp-example.htm#a26">image_processing/brain_segmentation.cpp</a>, <a class="el" href="image_processing_2edge_8cpp-example.htm#a17">image_processing/edge.cpp</a>, <a class="el" href="image_processing_2filters_8cpp-example.htm#a34">image_processing/filters.cpp</a>, <a class="el" href="image_processing_2gradient_diffusion_8cpp-example.htm#a13">image_processing/gradient_diffusion.cpp</a>, <a class="el" href="image_processing_2image_demo_8cpp-example.htm#a18">image_processing/image_demo.cpp</a>, <a class="el" href="image_processing_2image_editing_8cpp-example.htm#a25">image_processing/image_editing.cpp</a>, <a class="el" href="image_processing_2morphing_8cpp-example.htm#a17">image_processing/morphing.cpp</a>, <a class="el" href="image_processing_2optical_flow_8cpp-example.htm#a17">image_processing/optical_flow.cpp</a>, <a class="el" href="image_processing_2pyramids_8cpp-example.htm#a15">image_processing/pyramids.cpp</a>, <a class="el" href="lin_algebra_2cholesky_8cpp-example.htm#a11">lin_algebra/cholesky.cpp</a>, <a class="el" href="lin_algebra_2lu_8cpp-example.htm#a11">lin_algebra/lu.cpp</a>, <a class="el" href="lin_algebra_2qr_8cpp-example.htm#a9">lin_algebra/qr.cpp</a>, <a class="el" href="lin_algebra_2svd_8cpp-example.htm#a10">lin_algebra/svd.cpp</a>, <a class="el" href="machine_learning_2bagging_8cpp-example.htm#a21">machine_learning/bagging.cpp</a>, <a class="el" href="machine_learning_2deep_belief_net_8cpp-example.htm#a30">machine_learning/deep_belief_net.cpp</a>, <a class="el" href="machine_learning_2geneticalgorithm_8cpp-example.htm#a21">machine_learning/geneticalgorithm.cpp</a>, <a class="el" href="machine_learning_2kmeans_8cpp-example.htm#a19">machine_learning/kmeans.cpp</a>, <a class="el" href="machine_learning_2knn_8cpp-example.htm#a16">machine_learning/knn.cpp</a>, <a class="el" href="machine_learning_2logistic_regression_8cpp-example.htm#a22">machine_learning/logistic_regression.cpp</a>, <a class="el" href="machine_learning_2naive_bayes_8cpp-example.htm#a24">machine_learning/naive_bayes.cpp</a>, <a class="el" href="machine_learning_2neural_network_8cpp-example.htm#a21">machine_learning/neural_network.cpp</a>, <a class="el" href="machine_learning_2perceptron_8cpp-example.htm#a19">machine_learning/perceptron.cpp</a>, <a class="el" href="machine_learning_2rbm_8cpp-example.htm#a27">machine_learning/rbm.cpp</a>, <a class="el" href="machine_learning_2softmax_regression_8cpp-example.htm#a23">machine_learning/softmax_regression.cpp</a>, <a class="el" href="pde_2swe_8cpp-example.htm#a22">pde/swe.cpp</a>, and <a class="el" href="unified_2basic_8cpp-example.htm#a9">unified/basic.cpp</a>.</dd>
</dl>
<p class="definition">Definition at line <a class="el" href="exception_8h_source.htm#l00034">34</a> of file <a class="el" href="exception_8h_source.htm">exception.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{ <span class="keywordflow">return</span> m_msg; }</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="ac2b129c1d98d5c39d8488ea62c3b74cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2b129c1d98d5c39d8488ea62c3b74cb">&#9670;&nbsp;</a></span>operator&lt;&lt;</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1exception.htm">exception</a> &amp;&#160;</td>
          <td class="paramname"><em>e</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="exception_8h_source.htm#l00035">35</a> of file <a class="el" href="exception_8h_source.htm">exception.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    { <span class="keywordflow">return</span> s &lt;&lt; e.what(); }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="exception_8h_source.htm">exception.h (2018-05-22 12:00:01 -0400, (build fd64c39))</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
