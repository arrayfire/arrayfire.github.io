<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: exception Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('classaf_1_1exception.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle"><div class="title">exception Class Reference<div class="ingroups"><a class="el" href="group__arrayfire__class.htm">ArrayFire Classes</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>An ArrayFire exception class.  
 <a href="classaf_1_1exception.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="exception_8h_source.htm">exception.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for exception:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classaf_1_1exception.png" alt=""/>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a36372ee174752431cb6de1bac8d7e1d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#a36372ee174752431cb6de1bac8d7e1d5">err</a> ()</td></tr>
<tr class="separator:a36372ee174752431cb6de1bac8d7e1d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e54345f926a6326080fa8bf1683bab1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#a3e54345f926a6326080fa8bf1683bab1">exception</a> ()</td></tr>
<tr class="separator:a3e54345f926a6326080fa8bf1683bab1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4587b848a5af8f1df51bbc9e0cd7fc9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#ac4587b848a5af8f1df51bbc9e0cd7fc9">exception</a> (const char *msg)</td></tr>
<tr class="memdesc:ac4587b848a5af8f1df51bbc9e0cd7fc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new <a class="el" href="classaf_1_1exception.htm" title="An ArrayFire exception class.">af::exception</a> given a message. The error code is AF_ERR_UNKNOWN.  <br /></td></tr>
<tr class="separator:ac4587b848a5af8f1df51bbc9e0cd7fc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae38094b5c00250775aff124fbd9ae119"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#ae38094b5c00250775aff124fbd9ae119">exception</a> (const char *file, unsigned line, <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="el" href="classaf_1_1exception.htm#a36372ee174752431cb6de1bac8d7e1d5">err</a>)</td></tr>
<tr class="memdesc:ae38094b5c00250775aff124fbd9ae119"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new exception with a formatted error message for a given file and line number in the source code.  <br /></td></tr>
<tr class="separator:ae38094b5c00250775aff124fbd9ae119"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3c142c36441ae1a03a524e48fd2e93"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#a4b3c142c36441ae1a03a524e48fd2e93">exception</a> (const char *msg, const char *file, unsigned line, <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="el" href="classaf_1_1exception.htm#a36372ee174752431cb6de1bac8d7e1d5">err</a>)</td></tr>
<tr class="memdesc:a4b3c142c36441ae1a03a524e48fd2e93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new <a class="el" href="classaf_1_1exception.htm" title="An ArrayFire exception class.">af::exception</a> with a formatted error message for a given an error code, file and line number in the source code.  <br /></td></tr>
<tr class="separator:a4b3c142c36441ae1a03a524e48fd2e93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa625f542ffabe93f3d88140a4007f18d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#aa625f542ffabe93f3d88140a4007f18d">exception</a> (const char *msg, const char *func, const char *file, unsigned line, <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> <a class="el" href="classaf_1_1exception.htm#a36372ee174752431cb6de1bac8d7e1d5">err</a>)</td></tr>
<tr class="memdesc:aa625f542ffabe93f3d88140a4007f18d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new exception given a message, function name, file name, line number and error code.  <br /></td></tr>
<tr class="separator:aa625f542ffabe93f3d88140a4007f18d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9083ff91968506ea40d3885cf58fa912"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#a9083ff91968506ea40d3885cf58fa912">~exception</a> ()  throw ()</td></tr>
<tr class="separator:a9083ff91968506ea40d3885cf58fa912"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa884ff67408851f00e50cf971a4dfd05"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">what</a> () const  throw ()</td></tr>
<tr class="memdesc:aa884ff67408851f00e50cf971a4dfd05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an error message for the exception in a string format.  <br /></td></tr>
<tr class="separator:aa884ff67408851f00e50cf971a4dfd05"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:ae9b6110e0b61e6c1f44f960f4d7ac505"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaf_1_1exception.htm#ae9b6110e0b61e6c1f44f960f4d7ac505">operator&lt;&lt;</a> (std::ostream &amp;s, const <a class="el" href="classaf_1_1exception.htm">exception</a> &amp;e)</td></tr>
<tr class="memdesc:ae9b6110e0b61e6c1f44f960f4d7ac505"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the exception to a stream.  <br /></td></tr>
<tr class="separator:ae9b6110e0b61e6c1f44f960f4d7ac505"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>An ArrayFire exception class. </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="benchmarks_2blas_8cpp-example.htm#_a3">benchmarks/blas.cpp</a>, <a class="el" href="benchmarks_2fft_8cpp-example.htm#_a2">benchmarks/fft.cpp</a>, <a class="el" href="benchmarks_2pi_8cpp-example.htm#_a2">benchmarks/pi.cpp</a>, <a class="el" href="computer_vision_2fast_8cpp-example.htm#_a15">computer_vision/fast.cpp</a>, <a class="el" href="computer_vision_2harris_8cpp-example.htm#_a12">computer_vision/harris.cpp</a>, <a class="el" href="computer_vision_2matching_8cpp-example.htm#_a11">computer_vision/matching.cpp</a>, <a class="el" href="computer_vision_2susan_8cpp-example.htm#_a16">computer_vision/susan.cpp</a>, <a class="el" href="financial_2black_scholes_options_8cpp-example.htm#_a5">financial/black_scholes_options.cpp</a>, <a class="el" href="financial_2heston_model_8cpp-example.htm#_a8">financial/heston_model.cpp</a>, <a class="el" href="financial_2monte_carlo_options_8cpp-example.htm#_a3">financial/monte_carlo_options.cpp</a>, <a class="el" href="getting_started_2convolve_8cpp-example.htm#_a3">getting_started/convolve.cpp</a>, <a class="el" href="getting_started_2integer_8cpp-example.htm#_a7">getting_started/integer.cpp</a>, <a class="el" href="getting_started_2rainfall_8cpp-example.htm#_a6">getting_started/rainfall.cpp</a>, <a class="el" href="getting_started_2vectorize_8cpp-example.htm#_a6">getting_started/vectorize.cpp</a>, <a class="el" href="graphics_2conway_8cpp-example.htm#_a8">graphics/conway.cpp</a>, <a class="el" href="graphics_2conway_pretty_8cpp-example.htm#_a11">graphics/conway_pretty.cpp</a>, <a class="el" href="graphics_2field_8cpp-example.htm#_a12">graphics/field.cpp</a>, <a class="el" href="graphics_2fractal_8cpp-example.htm#_a10">graphics/fractal.cpp</a>, <a class="el" href="graphics_2gravity_sim_8cpp-example.htm#_a17">graphics/gravity_sim.cpp</a>, <a class="el" href="graphics_2histogram_8cpp-example.htm#_a10">graphics/histogram.cpp</a>, <a class="el" href="graphics_2plot2d_8cpp-example.htm#_a12">graphics/plot2d.cpp</a>, <a class="el" href="graphics_2plot3_8cpp-example.htm#_a6">graphics/plot3.cpp</a>, <a class="el" href="graphics_2surface_8cpp-example.htm#_a6">graphics/surface.cpp</a>, <a class="el" href="helloworld_2helloworld_8cpp-example.htm#_a12">helloworld/helloworld.cpp</a>, <a class="el" href="image_processing_2adaptive_thresholding_8cpp-example.htm#_a8">image_processing/adaptive_thresholding.cpp</a>, <a class="el" href="image_processing_2binary_thresholding_8cpp-example.htm#_a12">image_processing/binary_thresholding.cpp</a>, <a class="el" href="image_processing_2brain_segmentation_8cpp-example.htm#_a12">image_processing/brain_segmentation.cpp</a>, <a class="el" href="image_processing_2confidence_connected_components_8cpp-example.htm#_a5">image_processing/confidence_connected_components.cpp</a>, <a class="el" href="image_processing_2deconvolution_8cpp-example.htm#_a9">image_processing/deconvolution.cpp</a>, <a class="el" href="image_processing_2edge_8cpp-example.htm#_a5">image_processing/edge.cpp</a>, <a class="el" href="image_processing_2filters_8cpp-example.htm#_a14">image_processing/filters.cpp</a>, <a class="el" href="image_processing_2gradient_diffusion_8cpp-example.htm#_a3">image_processing/gradient_diffusion.cpp</a>, <a class="el" href="image_processing_2image_demo_8cpp-example.htm#_a7">image_processing/image_demo.cpp</a>, <a class="el" href="image_processing_2image_editing_8cpp-example.htm#_a8">image_processing/image_editing.cpp</a>, <a class="el" href="image_processing_2morphing_8cpp-example.htm#_a8">image_processing/morphing.cpp</a>, <a class="el" href="image_processing_2optical_flow_8cpp-example.htm#_a9">image_processing/optical_flow.cpp</a>, <a class="el" href="image_processing_2pyramids_8cpp-example.htm#_a9">image_processing/pyramids.cpp</a>, <a class="el" href="lin_algebra_2cholesky_8cpp-example.htm#_a5">lin_algebra/cholesky.cpp</a>, <a class="el" href="lin_algebra_2lu_8cpp-example.htm#_a5">lin_algebra/lu.cpp</a>, <a class="el" href="lin_algebra_2qr_8cpp-example.htm#_a5">lin_algebra/qr.cpp</a>, <a class="el" href="lin_algebra_2svd_8cpp-example.htm#_a5">lin_algebra/svd.cpp</a>, <a class="el" href="machine_learning_2bagging_8cpp-example.htm#_a7">machine_learning/bagging.cpp</a>, <a class="el" href="machine_learning_2deep_belief_net_8cpp-example.htm#_a10">machine_learning/deep_belief_net.cpp</a>, <a class="el" href="machine_learning_2geneticalgorithm_8cpp-example.htm#_a11">machine_learning/geneticalgorithm.cpp</a>, <a class="el" href="machine_learning_2kmeans_8cpp-example.htm#_a9">machine_learning/kmeans.cpp</a>, <a class="el" href="machine_learning_2knn_8cpp-example.htm#_a7">machine_learning/knn.cpp</a>, <a class="el" href="machine_learning_2logistic_regression_8cpp-example.htm#_a8">machine_learning/logistic_regression.cpp</a>, <a class="el" href="machine_learning_2naive_bayes_8cpp-example.htm#_a10">machine_learning/naive_bayes.cpp</a>, <a class="el" href="machine_learning_2neural_network_8cpp-example.htm#_a12">machine_learning/neural_network.cpp</a>, <a class="el" href="machine_learning_2perceptron_8cpp-example.htm#_a8">machine_learning/perceptron.cpp</a>, <a class="el" href="machine_learning_2rbm_8cpp-example.htm#_a10">machine_learning/rbm.cpp</a>, <a class="el" href="machine_learning_2softmax_regression_8cpp-example.htm#_a8">machine_learning/softmax_regression.cpp</a>, <a class="el" href="pde_2swe_8cpp-example.htm#_a11">pde/swe.cpp</a>, and <a class="el" href="unified_2basic_8cpp-example.htm#_a8">unified/basic.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="exception_8h_source.htm#l00021">21</a> of file <a class="el" href="exception_8h_source.htm">exception.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a3e54345f926a6326080fa8bf1683bab1" name="a3e54345f926a6326080fa8bf1683bab1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e54345f926a6326080fa8bf1683bab1">&#9670;&#160;</a></span>exception() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1exception.htm">exception</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac4587b848a5af8f1df51bbc9e0cd7fc9" name="ac4587b848a5af8f1df51bbc9e0cd7fc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4587b848a5af8f1df51bbc9e0cd7fc9">&#9670;&#160;</a></span>exception() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1exception.htm">exception</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>msg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a new <a class="el" href="classaf_1_1exception.htm" title="An ArrayFire exception class.">af::exception</a> given a message. The error code is AF_ERR_UNKNOWN. </p>

</div>
</div>
<a id="ae38094b5c00250775aff124fbd9ae119" name="ae38094b5c00250775aff124fbd9ae119"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae38094b5c00250775aff124fbd9ae119">&#9670;&#160;</a></span>exception() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1exception.htm">exception</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td>
          <td class="paramname"><em>err</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a new exception with a formatted error message for a given file and line number in the source code. </p>

</div>
</div>
<a id="a4b3c142c36441ae1a03a524e48fd2e93" name="a4b3c142c36441ae1a03a524e48fd2e93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b3c142c36441ae1a03a524e48fd2e93">&#9670;&#160;</a></span>exception() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1exception.htm">exception</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td>
          <td class="paramname"><em>err</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a new <a class="el" href="classaf_1_1exception.htm" title="An ArrayFire exception class.">af::exception</a> with a formatted error message for a given an error code, file and line number in the source code. </p>

</div>
</div>
<a id="aa625f542ffabe93f3d88140a4007f18d" name="aa625f542ffabe93f3d88140a4007f18d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa625f542ffabe93f3d88140a4007f18d">&#9670;&#160;</a></span>exception() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classaf_1_1exception.htm">exception</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td>
          <td class="paramname"><em>err</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a new exception given a message, function name, file name, line number and error code. </p>

</div>
</div>
<a id="a9083ff91968506ea40d3885cf58fa912" name="a9083ff91968506ea40d3885cf58fa912"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9083ff91968506ea40d3885cf58fa912">&#9670;&#160;</a></span>~exception()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classaf_1_1exception.htm">exception</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="exception_8h_source.htm#l00044">44</a> of file <a class="el" href="exception_8h_source.htm">exception.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   44</span>{}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a36372ee174752431cb6de1bac8d7e1d5" name="a36372ee174752431cb6de1bac8d7e1d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36372ee174752431cb6de1bac8d7e1d5">&#9670;&#160;</a></span>err()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> err </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="exception_8h_source.htm#l00027">27</a> of file <a class="el" href="exception_8h_source.htm">exception.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   27</span>{ <span class="keywordflow">return</span> m_err; }</div>
</div><!-- fragment -->
</div>
</div>
<a id="aa884ff67408851f00e50cf971a4dfd05" name="aa884ff67408851f00e50cf971a4dfd05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa884ff67408851f00e50cf971a4dfd05">&#9670;&#160;</a></span>what()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char * what </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns an error message for the exception in a string format. </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="benchmarks_2blas_8cpp-example.htm#a4">benchmarks/blas.cpp</a>, <a class="el" href="benchmarks_2fft_8cpp-example.htm#a3">benchmarks/fft.cpp</a>, <a class="el" href="benchmarks_2pi_8cpp-example.htm#a3">benchmarks/pi.cpp</a>, <a class="el" href="computer_vision_2fast_8cpp-example.htm#a16">computer_vision/fast.cpp</a>, <a class="el" href="computer_vision_2harris_8cpp-example.htm#a13">computer_vision/harris.cpp</a>, <a class="el" href="computer_vision_2matching_8cpp-example.htm#a12">computer_vision/matching.cpp</a>, <a class="el" href="computer_vision_2susan_8cpp-example.htm#a17">computer_vision/susan.cpp</a>, <a class="el" href="financial_2black_scholes_options_8cpp-example.htm#a6">financial/black_scholes_options.cpp</a>, <a class="el" href="financial_2heston_model_8cpp-example.htm#a9">financial/heston_model.cpp</a>, <a class="el" href="financial_2monte_carlo_options_8cpp-example.htm#a4">financial/monte_carlo_options.cpp</a>, <a class="el" href="getting_started_2convolve_8cpp-example.htm#a4">getting_started/convolve.cpp</a>, <a class="el" href="getting_started_2integer_8cpp-example.htm#a8">getting_started/integer.cpp</a>, <a class="el" href="getting_started_2rainfall_8cpp-example.htm#a7">getting_started/rainfall.cpp</a>, <a class="el" href="getting_started_2vectorize_8cpp-example.htm#a7">getting_started/vectorize.cpp</a>, <a class="el" href="graphics_2conway_8cpp-example.htm#a9">graphics/conway.cpp</a>, <a class="el" href="graphics_2conway_pretty_8cpp-example.htm#a12">graphics/conway_pretty.cpp</a>, <a class="el" href="graphics_2field_8cpp-example.htm#a13">graphics/field.cpp</a>, <a class="el" href="graphics_2fractal_8cpp-example.htm#a11">graphics/fractal.cpp</a>, <a class="el" href="graphics_2gravity_sim_8cpp-example.htm#a18">graphics/gravity_sim.cpp</a>, <a class="el" href="graphics_2histogram_8cpp-example.htm#a11">graphics/histogram.cpp</a>, <a class="el" href="graphics_2plot2d_8cpp-example.htm#a13">graphics/plot2d.cpp</a>, <a class="el" href="graphics_2plot3_8cpp-example.htm#a7">graphics/plot3.cpp</a>, <a class="el" href="graphics_2surface_8cpp-example.htm#a7">graphics/surface.cpp</a>, <a class="el" href="helloworld_2helloworld_8cpp-example.htm#a13">helloworld/helloworld.cpp</a>, <a class="el" href="image_processing_2adaptive_thresholding_8cpp-example.htm#a9">image_processing/adaptive_thresholding.cpp</a>, <a class="el" href="image_processing_2binary_thresholding_8cpp-example.htm#a13">image_processing/binary_thresholding.cpp</a>, <a class="el" href="image_processing_2brain_segmentation_8cpp-example.htm#a13">image_processing/brain_segmentation.cpp</a>, <a class="el" href="image_processing_2confidence_connected_components_8cpp-example.htm#a6">image_processing/confidence_connected_components.cpp</a>, <a class="el" href="image_processing_2deconvolution_8cpp-example.htm#a10">image_processing/deconvolution.cpp</a>, <a class="el" href="image_processing_2edge_8cpp-example.htm#a9">image_processing/edge.cpp</a>, <a class="el" href="image_processing_2filters_8cpp-example.htm#a15">image_processing/filters.cpp</a>, <a class="el" href="image_processing_2gradient_diffusion_8cpp-example.htm#a4">image_processing/gradient_diffusion.cpp</a>, <a class="el" href="image_processing_2image_demo_8cpp-example.htm#a8">image_processing/image_demo.cpp</a>, <a class="el" href="image_processing_2image_editing_8cpp-example.htm#a9">image_processing/image_editing.cpp</a>, <a class="el" href="image_processing_2morphing_8cpp-example.htm#a9">image_processing/morphing.cpp</a>, <a class="el" href="image_processing_2optical_flow_8cpp-example.htm#a10">image_processing/optical_flow.cpp</a>, <a class="el" href="image_processing_2pyramids_8cpp-example.htm#a10">image_processing/pyramids.cpp</a>, <a class="el" href="lin_algebra_2cholesky_8cpp-example.htm#a6">lin_algebra/cholesky.cpp</a>, <a class="el" href="lin_algebra_2lu_8cpp-example.htm#a6">lin_algebra/lu.cpp</a>, <a class="el" href="lin_algebra_2qr_8cpp-example.htm#a6">lin_algebra/qr.cpp</a>, <a class="el" href="lin_algebra_2svd_8cpp-example.htm#a6">lin_algebra/svd.cpp</a>, <a class="el" href="machine_learning_2bagging_8cpp-example.htm#a8">machine_learning/bagging.cpp</a>, <a class="el" href="machine_learning_2deep_belief_net_8cpp-example.htm#a11">machine_learning/deep_belief_net.cpp</a>, <a class="el" href="machine_learning_2geneticalgorithm_8cpp-example.htm#a12">machine_learning/geneticalgorithm.cpp</a>, <a class="el" href="machine_learning_2kmeans_8cpp-example.htm#a10">machine_learning/kmeans.cpp</a>, <a class="el" href="machine_learning_2knn_8cpp-example.htm#a8">machine_learning/knn.cpp</a>, <a class="el" href="machine_learning_2logistic_regression_8cpp-example.htm#a9">machine_learning/logistic_regression.cpp</a>, <a class="el" href="machine_learning_2naive_bayes_8cpp-example.htm#a11">machine_learning/naive_bayes.cpp</a>, <a class="el" href="machine_learning_2neural_network_8cpp-example.htm#a13">machine_learning/neural_network.cpp</a>, <a class="el" href="machine_learning_2perceptron_8cpp-example.htm#a9">machine_learning/perceptron.cpp</a>, <a class="el" href="machine_learning_2rbm_8cpp-example.htm#a11">machine_learning/rbm.cpp</a>, <a class="el" href="machine_learning_2softmax_regression_8cpp-example.htm#a9">machine_learning/softmax_regression.cpp</a>, <a class="el" href="pde_2swe_8cpp-example.htm#a12">pde/swe.cpp</a>, and <a class="el" href="unified_2basic_8cpp-example.htm#a9">unified/basic.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="exception_8h_source.htm#l00046">46</a> of file <a class="el" href="exception_8h_source.htm">exception.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   46</span>{ <span class="keywordflow">return</span> m_msg; }</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="ae9b6110e0b61e6c1f44f960f4d7ac505" name="ae9b6110e0b61e6c1f44f960f4d7ac505"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9b6110e0b61e6c1f44f960f4d7ac505">&#9670;&#160;</a></span>operator&lt;&lt;</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream &amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1exception.htm">exception</a> &amp;&#160;</td>
          <td class="paramname"><em>e</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes the exception to a stream. </p>

<p class="definition">Definition at line <a class="el" href="exception_8h_source.htm#l00049">49</a> of file <a class="el" href="exception_8h_source.htm">exception.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   50</span>    { <span class="keywordflow">return</span> s &lt;&lt; e.what(); }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="exception_8h_source.htm">exception.h (2023-01-24 18:32:46 -0500, (build 987d5675a))</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="navelem"><a class="el" href="namespaceaf.htm">af</a></li><li class="navelem"><a class="el" href="classaf_1_1exception.htm">exception</a></li>
        <li class="footer">Generated on Tue Feb 14 2023 10:39:43 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.6 </li>
    </ul>
</div>
</body>
</html>
