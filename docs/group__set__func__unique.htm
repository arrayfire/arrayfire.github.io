<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="https://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.18"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: setunique</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.18 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__set__func__unique.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">setunique<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__vector__mat.htm">Vector Algorithms</a> &raquo; <a class="el" href="group__set__mat.htm">Set operations</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga73f2f768af96755af50df21e384287c6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">setUnique</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const bool is_sorted=false)</td></tr>
<tr class="memdesc:ga73f2f768af96755af50df21e384287c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting unique values.  <a href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">More...</a><br /></td></tr>
<tr class="separator:ga73f2f768af96755af50df21e384287c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6afa1de48cbbc4b2df530c2530087943"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__unique.htm#ga6afa1de48cbbc4b2df530c2530087943">af_set_unique</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> in, const bool is_sorted)</td></tr>
<tr class="memdesc:ga6afa1de48cbbc4b2df530c2530087943"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface for getting unique values.  <a href="group__set__func__unique.htm#ga6afa1de48cbbc4b2df530c2530087943">More...</a><br /></td></tr>
<tr class="separator:ga6afa1de48cbbc4b2df530c2530087943"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac33fd89ba6a7582753232c007ff135bf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__set__func__unique.htm#gac33fd89ba6a7582753232c007ff135bf">setunique</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;in, const bool is_sorted=false)</td></tr>
<tr class="memdesc:gac33fd89ba6a7582753232c007ff135bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for getting unique values.  <a href="group__set__func__unique.htm#gac33fd89ba6a7582753232c007ff135bf">More...</a><br /></td></tr>
<tr class="separator:gac33fd89ba6a7582753232c007ff135bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Finds unique values from an input set. The input must be a one-dimensional array. Batching is not currently supported.</p>
<p>A simple example of finding the unique values of a set using <a class="el" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6" title="C++ Interface for getting unique values.">setUnique()</a> can be seen below:</p>
<div class="fragment"><div class="line"> </div>
<div class="line">    <span class="comment">// input data</span></div>
<div class="line">    <span class="keywordtype">int</span> h_set[6] = {3, 2, 3, 3, 2, 1};</div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> set(6, h_set);</div>
<div class="line"> </div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> unique = <a class="code" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">setUnique</a>(set);</div>
<div class="line">    <span class="comment">// unique == { 1, 2, 3 };</span></div>
<div class="line"> </div>
</div><!-- fragment --><p> The function can be sped up if it is known that the inputs are sorted.</p>
<div class="fragment"><div class="line"> </div>
<div class="line">    <span class="comment">// input data</span></div>
<div class="line">    <span class="keywordtype">int</span> h_set[6] = {1, 2, 2, 3, 3, 3};</div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> set(6, h_set);</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// is_sorted flag specifies if input is sorted,</span></div>
<div class="line">    <span class="comment">// allows algorithm to skip internal sorting step</span></div>
<div class="line">    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_sorted = <span class="keyword">true</span>;</div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> unique     = <a class="code" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">setUnique</a>(set, is_sorted);</div>
<div class="line">    <span class="comment">// unique == { 1, 2, 3 };</span></div>
<div class="line"> </div>
</div><!-- fragment --><p> The inputs can be sorted in ascending or descending order.</p>
<div class="fragment"><div class="line"> </div>
<div class="line">    <span class="comment">// input data</span></div>
<div class="line">    <span class="keywordtype">int</span> h_set[6] = {3, 3, 3, 2, 2, 1};</div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> set(6, h_set);</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// is_sorted flag specifies if input is sorted,</span></div>
<div class="line">    <span class="comment">// allows algorithm to skip internal sorting step</span></div>
<div class="line">    <span class="comment">// input can be sorted in ascending or descending order</span></div>
<div class="line">    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_sorted = <span class="keyword">true</span>;</div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">af::array</a> unique     = <a class="code" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">setUnique</a>(set, is_sorted);</div>
<div class="line">    <span class="comment">// unique == { 3, 2, 1 };</span></div>
<div class="line"> </div>
</div><!-- fragment --><h2 class="groupheader">Function Documentation</h2>
<a id="ga6afa1de48cbbc4b2df530c2530087943"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6afa1de48cbbc4b2df530c2530087943">&#9670;&nbsp;</a></span>af_set_unique()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_set_unique </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>is_sorted</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface for getting unique values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>will contain the unique values from <code>in</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_sorted</td><td>if true, skips the sorting steps internally </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
<a id="gac33fd89ba6a7582753232c007ff135bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac33fd89ba6a7582753232c007ff135bf">&#9670;&nbsp;</a></span>setunique()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::setunique </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>is_sorted</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for getting unique values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_sorted</td><td>if true, skips the sorting steps internally </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the unique values from <code>in</code> </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000011">Deprecated:</a></b></dt><dd>Use <a class="el" href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">setUnique</a> instead </dd></dl>

</div>
</div>
<a id="ga73f2f768af96755af50df21e384287c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga73f2f768af96755af50df21e384287c6">&#9670;&nbsp;</a></span>setUnique()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> af::setUnique </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>is_sorted</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++ Interface for getting unique values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">in</td><td>is the input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_sorted</td><td>if true, skips the sorting steps internally </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the unique values from <code>in</code> </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="agroup__set__func__unique_htm_ga73f2f768af96755af50df21e384287c6"><div class="ttname"><a href="group__set__func__unique.htm#ga73f2f768af96755af50df21e384287c6">af::setUnique</a></div><div class="ttdeci">AFAPI array setUnique(const array &amp;in, const bool is_sorted=false)</div><div class="ttdoc">C++ Interface for getting unique values.</div></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00035">array.h:35</a></div></div>
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "https://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "https://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
