<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: ge</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.6 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('group__arith__func__ge.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">ge<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">ArrayFire Functions</a> &#124; <a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__mathfunc__mat.htm">Mathematical functions</a> &raquo; <a class="el" href="group__logic__mat.htm">Logical operations</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Greater than or equal to, an elementwise comparison of two arrays.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga4513f212e0b0a22dcf4653e89c85e3d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga4513f212e0b0a22dcf4653e89c85e3d9">af_ge</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> lhs, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> rhs, const bool batch)</td></tr>
<tr class="memdesc:ga4513f212e0b0a22dcf4653e89c85e3d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">C Interface to perform a greater-than-or-equal comparison between corresponding elements of two arrays.  <br /></td></tr>
<tr class="separator:ga4513f212e0b0a22dcf4653e89c85e3d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5a63c6d33f332dec1d770e4ed191fc48"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga5a63c6d33f332dec1d770e4ed191fc48">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga5a63c6d33f332dec1d770e4ed191fc48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.  <br /></td></tr>
<tr class="separator:ga5a63c6d33f332dec1d770e4ed191fc48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf5eeb6f7088104411828b33893ee23c6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gaf5eeb6f7088104411828b33893ee23c6">operator&gt;=</a> (const bool &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaf5eeb6f7088104411828b33893ee23c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gaf5eeb6f7088104411828b33893ee23c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae69f77441c63c391122fdd261d38e4fb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gae69f77441c63c391122fdd261d38e4fb">operator&gt;=</a> (const int &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gae69f77441c63c391122fdd261d38e4fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gae69f77441c63c391122fdd261d38e4fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2c3678de47c8a1e9baf77bef0bb3b4a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga2c3678de47c8a1e9baf77bef0bb3b4a8">operator&gt;=</a> (const unsigned &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga2c3678de47c8a1e9baf77bef0bb3b4a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga2c3678de47c8a1e9baf77bef0bb3b4a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadaef1f84593c7d74d11eca025ebe3daa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gadaef1f84593c7d74d11eca025ebe3daa">operator&gt;=</a> (const char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gadaef1f84593c7d74d11eca025ebe3daa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gadaef1f84593c7d74d11eca025ebe3daa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2bbb49c163b3dee0682c216c278d930e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga2bbb49c163b3dee0682c216c278d930e">operator&gt;=</a> (const unsigned char &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga2bbb49c163b3dee0682c216c278d930e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga2bbb49c163b3dee0682c216c278d930e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d381f0a881ce604b1ccb1ac251625f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga2d381f0a881ce604b1ccb1ac251625f9">operator&gt;=</a> (const long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga2d381f0a881ce604b1ccb1ac251625f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga2d381f0a881ce604b1ccb1ac251625f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga27cd2055eae331bc4d8f2b0e9cd57e95"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga27cd2055eae331bc4d8f2b0e9cd57e95">operator&gt;=</a> (const unsigned long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga27cd2055eae331bc4d8f2b0e9cd57e95"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga27cd2055eae331bc4d8f2b0e9cd57e95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf7ac52c782cfc9698e7d108d37e11623"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gaf7ac52c782cfc9698e7d108d37e11623">operator&gt;=</a> (const long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaf7ac52c782cfc9698e7d108d37e11623"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gaf7ac52c782cfc9698e7d108d37e11623"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2795646f1d9be2d6a0234209e966cfe0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga2795646f1d9be2d6a0234209e966cfe0">operator&gt;=</a> (const unsigned long long &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga2795646f1d9be2d6a0234209e966cfe0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga2795646f1d9be2d6a0234209e966cfe0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae1301a069696fdab46b51483e7393e52"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gae1301a069696fdab46b51483e7393e52">operator&gt;=</a> (const double &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gae1301a069696fdab46b51483e7393e52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gae1301a069696fdab46b51483e7393e52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1aa31172e23a51ec4ba6d5681aeacde0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga1aa31172e23a51ec4ba6d5681aeacde0">operator&gt;=</a> (const float &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga1aa31172e23a51ec4ba6d5681aeacde0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga1aa31172e23a51ec4ba6d5681aeacde0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa6e76960c5811a45bb56ba16ad5364f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gaa6e76960c5811a45bb56ba16ad5364f1">operator&gt;=</a> (const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaa6e76960c5811a45bb56ba16ad5364f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gaa6e76960c5811a45bb56ba16ad5364f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab3f8cf1f2c3030be36089db46f945c47"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gab3f8cf1f2c3030be36089db46f945c47">operator&gt;=</a> (const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gab3f8cf1f2c3030be36089db46f945c47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gab3f8cf1f2c3030be36089db46f945c47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3c1e6563a6f1aa84a5a87ee6f9998a9f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga3c1e6563a6f1aa84a5a87ee6f9998a9f">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const bool &amp;rhs)</td></tr>
<tr class="memdesc:ga3c1e6563a6f1aa84a5a87ee6f9998a9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga3c1e6563a6f1aa84a5a87ee6f9998a9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab99154dad58dab2c507e20b2c8cad9ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gab99154dad58dab2c507e20b2c8cad9ff">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const int &amp;rhs)</td></tr>
<tr class="memdesc:gab99154dad58dab2c507e20b2c8cad9ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gab99154dad58dab2c507e20b2c8cad9ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7f8c423ca38614f5eff3357eac96f4fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga7f8c423ca38614f5eff3357eac96f4fd">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned &amp;rhs)</td></tr>
<tr class="memdesc:ga7f8c423ca38614f5eff3357eac96f4fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga7f8c423ca38614f5eff3357eac96f4fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7feaae4310a64c790b0fa1afb278fba9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga7feaae4310a64c790b0fa1afb278fba9">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const char &amp;rhs)</td></tr>
<tr class="memdesc:ga7feaae4310a64c790b0fa1afb278fba9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga7feaae4310a64c790b0fa1afb278fba9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga53b917b73fef4e88f6549a40ac1c3ea8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga53b917b73fef4e88f6549a40ac1c3ea8">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned char &amp;rhs)</td></tr>
<tr class="memdesc:ga53b917b73fef4e88f6549a40ac1c3ea8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga53b917b73fef4e88f6549a40ac1c3ea8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga228c27bb6a3b775f3f098b80900f2aa6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga228c27bb6a3b775f3f098b80900f2aa6">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long &amp;rhs)</td></tr>
<tr class="memdesc:ga228c27bb6a3b775f3f098b80900f2aa6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga228c27bb6a3b775f3f098b80900f2aa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga713ff00f4dafee7d17217823f6a928bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga713ff00f4dafee7d17217823f6a928bb">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long &amp;rhs)</td></tr>
<tr class="memdesc:ga713ff00f4dafee7d17217823f6a928bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga713ff00f4dafee7d17217823f6a928bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1dfe2fded1de71dda7bd8864eeda3a02"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga1dfe2fded1de71dda7bd8864eeda3a02">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const long long &amp;rhs)</td></tr>
<tr class="memdesc:ga1dfe2fded1de71dda7bd8864eeda3a02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga1dfe2fded1de71dda7bd8864eeda3a02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae1d3261a82beea4bfee5571323be3c30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gae1d3261a82beea4bfee5571323be3c30">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned long long &amp;rhs)</td></tr>
<tr class="memdesc:gae1d3261a82beea4bfee5571323be3c30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gae1d3261a82beea4bfee5571323be3c30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga279b89894396b768029702afb2ea877b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga279b89894396b768029702afb2ea877b">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const double &amp;rhs)</td></tr>
<tr class="memdesc:ga279b89894396b768029702afb2ea877b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga279b89894396b768029702afb2ea877b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga04c6e2bb1cea1edf2fdc73a812e104fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga04c6e2bb1cea1edf2fdc73a812e104fa">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const float &amp;rhs)</td></tr>
<tr class="memdesc:ga04c6e2bb1cea1edf2fdc73a812e104fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga04c6e2bb1cea1edf2fdc73a812e104fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac533f2c45c3e9498c8be6152a277d228"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gac533f2c45c3e9498c8be6152a277d228">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;rhs)</td></tr>
<tr class="memdesc:gac533f2c45c3e9498c8be6152a277d228"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gac533f2c45c3e9498c8be6152a277d228"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5720d91075b612414b8f2ad94c77313f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga5720d91075b612414b8f2ad94c77313f">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;rhs)</td></tr>
<tr class="separator:ga5720d91075b612414b8f2ad94c77313f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaff5138eafedb3baf468433026553d1ae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gaff5138eafedb3baf468433026553d1ae">operator&gt;=</a> (const short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:gaff5138eafedb3baf468433026553d1ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:gaff5138eafedb3baf468433026553d1ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga91386759552537dc17acb74a4c3582da"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga91386759552537dc17acb74a4c3582da">operator&gt;=</a> (const unsigned short &amp;lhs, const <a class="el" href="classaf_1_1array.htm">array</a> &amp;rhs)</td></tr>
<tr class="memdesc:ga91386759552537dc17acb74a4c3582da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga91386759552537dc17acb74a4c3582da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1fd5aef41af102c096b81de0065df214"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#ga1fd5aef41af102c096b81de0065df214">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const short &amp;rhs)</td></tr>
<tr class="memdesc:ga1fd5aef41af102c096b81de0065df214"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an greater or equal operation on two arrays or an array and a value.    <br /></td></tr>
<tr class="separator:ga1fd5aef41af102c096b81de0065df214"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabdcb3d3098ee9e1eb1d43bb2933bdd95"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__arith__func__ge.htm#gabdcb3d3098ee9e1eb1d43bb2933bdd95">operator&gt;=</a> (const <a class="el" href="classaf_1_1array.htm">array</a> &amp;lhs, const unsigned short &amp;rhs)</td></tr>
<tr class="separator:gabdcb3d3098ee9e1eb1d43bb2933bdd95"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Greater than or equal to, an elementwise comparison of two arrays. </p>
<p>Check if the elements of one array are greater than or equal to those of another array. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga4513f212e0b0a22dcf4653e89c85e3d9" name="ga4513f212e0b0a22dcf4653e89c85e3d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4513f212e0b0a22dcf4653e89c85e3d9">&#9670;&#160;</a></span>af_ge()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_ge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>batch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C Interface to perform a greater-than-or-equal comparison between corresponding elements of two arrays. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>result of <code>lhs</code> &gt;= <code>rhs</code>; type is b8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>first input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>second input </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">batch</td><td>specifies if operations need to be performed in batch mode </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4fa2e56d1f9585788fed8fbe3a321bddd76">AF_SUCCESS</a> if the execution completes properly </dd></dl>

</div>
</div>
<a id="ga5a63c6d33f332dec1d770e4ed191fc48" name="ga5a63c6d33f332dec1d770e4ed191fc48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5a63c6d33f332dec1d770e4ed191fc48">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[1/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code> </dd></dl>

</div>
</div>
<a id="ga3c1e6563a6f1aa84a5a87ee6f9998a9f" name="ga3c1e6563a6f1aa84a5a87ee6f9998a9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3c1e6563a6f1aa84a5a87ee6f9998a9f">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[2/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga5720d91075b612414b8f2ad94c77313f" name="ga5720d91075b612414b8f2ad94c77313f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5720d91075b612414b8f2ad94c77313f">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[3/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gac533f2c45c3e9498c8be6152a277d228" name="gac533f2c45c3e9498c8be6152a277d228"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac533f2c45c3e9498c8be6152a277d228">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[4/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga7feaae4310a64c790b0fa1afb278fba9" name="ga7feaae4310a64c790b0fa1afb278fba9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7feaae4310a64c790b0fa1afb278fba9">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[5/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga279b89894396b768029702afb2ea877b" name="ga279b89894396b768029702afb2ea877b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga279b89894396b768029702afb2ea877b">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[6/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga04c6e2bb1cea1edf2fdc73a812e104fa" name="ga04c6e2bb1cea1edf2fdc73a812e104fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga04c6e2bb1cea1edf2fdc73a812e104fa">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[7/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gab99154dad58dab2c507e20b2c8cad9ff" name="gab99154dad58dab2c507e20b2c8cad9ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab99154dad58dab2c507e20b2c8cad9ff">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[8/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga228c27bb6a3b775f3f098b80900f2aa6" name="ga228c27bb6a3b775f3f098b80900f2aa6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga228c27bb6a3b775f3f098b80900f2aa6">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[9/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga1dfe2fded1de71dda7bd8864eeda3a02" name="ga1dfe2fded1de71dda7bd8864eeda3a02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1dfe2fded1de71dda7bd8864eeda3a02">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[10/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga1fd5aef41af102c096b81de0065df214" name="ga1fd5aef41af102c096b81de0065df214"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1fd5aef41af102c096b81de0065df214">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[11/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga7f8c423ca38614f5eff3357eac96f4fd" name="ga7f8c423ca38614f5eff3357eac96f4fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7f8c423ca38614f5eff3357eac96f4fd">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[12/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga53b917b73fef4e88f6549a40ac1c3ea8" name="ga53b917b73fef4e88f6549a40ac1c3ea8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga53b917b73fef4e88f6549a40ac1c3ea8">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[13/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga713ff00f4dafee7d17217823f6a928bb" name="ga713ff00f4dafee7d17217823f6a928bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga713ff00f4dafee7d17217823f6a928bb">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[14/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gae1d3261a82beea4bfee5571323be3c30" name="gae1d3261a82beea4bfee5571323be3c30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae1d3261a82beea4bfee5571323be3c30">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[15/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gabdcb3d3098ee9e1eb1d43bb2933bdd95" name="gabdcb3d3098ee9e1eb1d43bb2933bdd95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabdcb3d3098ee9e1eb1d43bb2933bdd95">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[16/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaf5eeb6f7088104411828b33893ee23c6" name="gaf5eeb6f7088104411828b33893ee23c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf5eeb6f7088104411828b33893ee23c6">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[17/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gab3f8cf1f2c3030be36089db46f945c47" name="gab3f8cf1f2c3030be36089db46f945c47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab3f8cf1f2c3030be36089db46f945c47">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[18/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#acd654c72624253fcd7fd88fe5298aa9a">cdouble</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaa6e76960c5811a45bb56ba16ad5364f1" name="gaa6e76960c5811a45bb56ba16ad5364f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa6e76960c5811a45bb56ba16ad5364f1">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[19/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceaf.htm#a63e29e484b92e217fe817fe78abc4f5f">cfloat</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gadaef1f84593c7d74d11eca025ebe3daa" name="gadaef1f84593c7d74d11eca025ebe3daa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadaef1f84593c7d74d11eca025ebe3daa">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[20/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gae1301a069696fdab46b51483e7393e52" name="gae1301a069696fdab46b51483e7393e52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae1301a069696fdab46b51483e7393e52">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[21/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga1aa31172e23a51ec4ba6d5681aeacde0" name="ga1aa31172e23a51ec4ba6d5681aeacde0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1aa31172e23a51ec4ba6d5681aeacde0">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[22/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const float &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gae69f77441c63c391122fdd261d38e4fb" name="gae69f77441c63c391122fdd261d38e4fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae69f77441c63c391122fdd261d38e4fb">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[23/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga2d381f0a881ce604b1ccb1ac251625f9" name="ga2d381f0a881ce604b1ccb1ac251625f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2d381f0a881ce604b1ccb1ac251625f9">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[24/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaf7ac52c782cfc9698e7d108d37e11623" name="gaf7ac52c782cfc9698e7d108d37e11623"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf7ac52c782cfc9698e7d108d37e11623">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[25/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="gaff5138eafedb3baf468433026553d1ae" name="gaff5138eafedb3baf468433026553d1ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaff5138eafedb3baf468433026553d1ae">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[26/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga2c3678de47c8a1e9baf77bef0bb3b4a8" name="ga2c3678de47c8a1e9baf77bef0bb3b4a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2c3678de47c8a1e9baf77bef0bb3b4a8">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[27/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const unsigned &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga2bbb49c163b3dee0682c216c278d930e" name="ga2bbb49c163b3dee0682c216c278d930e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2bbb49c163b3dee0682c216c278d930e">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[28/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const unsigned char &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga27cd2055eae331bc4d8f2b0e9cd57e95" name="ga27cd2055eae331bc4d8f2b0e9cd57e95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga27cd2055eae331bc4d8f2b0e9cd57e95">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[29/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const unsigned long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga2795646f1d9be2d6a0234209e966cfe0" name="ga2795646f1d9be2d6a0234209e966cfe0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2795646f1d9be2d6a0234209e966cfe0">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[30/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const unsigned long long &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
<a id="ga91386759552537dc17acb74a4c3582da" name="ga91386759552537dc17acb74a4c3582da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga91386759552537dc17acb74a4c3582da">&#9670;&#160;</a></span>operator&gt;=() <span class="overload">[31/31]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="classaf_1_1array.htm">array</a> operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const unsigned short &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs an greater or equal operation on two arrays or an array and a value.   </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>the left hand side value of the operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>the right hand side value of the operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an array of type b8 with the &gt;= operation performed on each element of <code>lhs</code> and <code>rhs</code>   </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Tue Feb 14 2023 10:39:42 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.6 </li>
    </ul>
</div>
</body>
</html>
