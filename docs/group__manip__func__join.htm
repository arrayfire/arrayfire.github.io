<!-- HTML header for doxygen 1.8.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>join</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="afw.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/>
  </td>
	 <td id="gsearch">
   <div><script>
	    (function() {
        var cx = '004356362924927882526:zup3ehe-7bs';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
	    var s = document.getElementsByTagName('script')[0];
	    s.parentNode.insertBefore(gcse, s);
	  })();
  </script>
  <gcse:search></gcse:search>
</div>
	 </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="usergroup0.htm"><span>Tutorials</span></a></li>
      <li class="current"><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__manip__func__join.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">join<div class="ingroups"><a class="el" href="group__arrayfire__func.htm">Complete List of ArrayFire Functions</a><a class="el" href="group__func__categories.htm">ArrayFire Functions by Category</a> &raquo; <a class="el" href="group__array__mat.htm">Functions to create and modify Arrays</a> &raquo;  &#124; <a class="el" href="group__manip__mat.htm">Move and Reorder array content</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Join up to 4 arrays along specified dimension.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga9f30f3f556ae3165d3b7b6ec6ca43dc6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__manip__func__join.htm#ga9f30f3f556ae3165d3b7b6ec6ca43dc6">join</a> (const int dim, const array &amp;first, const array &amp;second)</td></tr>
<tr class="memdesc:ga9f30f3f556ae3165d3b7b6ec6ca43dc6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Join 2 arrays along <code>dim</code>.  <a href="group__manip__func__join.htm#ga9f30f3f556ae3165d3b7b6ec6ca43dc6">More...</a><br /></td></tr>
<tr class="separator:ga9f30f3f556ae3165d3b7b6ec6ca43dc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafa6b5dfad79cde81bccee5551b4b152c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__manip__func__join.htm#gafa6b5dfad79cde81bccee5551b4b152c">join</a> (const int dim, const array &amp;first, const array &amp;second, const array &amp;third)</td></tr>
<tr class="memdesc:gafa6b5dfad79cde81bccee5551b4b152c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Join 3 arrays along <code>dim</code>.  <a href="group__manip__func__join.htm#gafa6b5dfad79cde81bccee5551b4b152c">More...</a><br /></td></tr>
<tr class="separator:gafa6b5dfad79cde81bccee5551b4b152c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0bad6d30d8fbb8ee8698e4437c6deaf0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__manip__func__join.htm#ga0bad6d30d8fbb8ee8698e4437c6deaf0">join</a> (const int dim, const array &amp;first, const array &amp;second, const array &amp;third, const array &amp;fourth)</td></tr>
<tr class="memdesc:ga0bad6d30d8fbb8ee8698e4437c6deaf0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Join 4 arrays along <code>dim</code>.  <a href="group__manip__func__join.htm#ga0bad6d30d8fbb8ee8698e4437c6deaf0">More...</a><br /></td></tr>
<tr class="separator:ga0bad6d30d8fbb8ee8698e4437c6deaf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4c0b185d13b49023cc22c0269eedbdb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__manip__func__join.htm#ga4c0b185d13b49023cc22c0269eedbdb2">af_join</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const int dim, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> first, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> second)</td></tr>
<tr class="memdesc:ga4c0b185d13b49023cc22c0269eedbdb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Join 2 arrays along <code>dim</code>.  <a href="#ga4c0b185d13b49023cc22c0269eedbdb2">More...</a><br /></td></tr>
<tr class="separator:ga4c0b185d13b49023cc22c0269eedbdb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67a36384247f6bb40254e0cb2e6d5d5c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__manip__func__join.htm#ga67a36384247f6bb40254e0cb2e6d5d5c">af_join_many</a> (<a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *out, const int dim, const unsigned n_arrays, const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *inputs)</td></tr>
<tr class="memdesc:ga67a36384247f6bb40254e0cb2e6d5d5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Join many arrays along <code>dim</code>.  <a href="#ga67a36384247f6bb40254e0cb2e6d5d5c">More...</a><br /></td></tr>
<tr class="separator:ga67a36384247f6bb40254e0cb2e6d5d5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Join up to 4 arrays along specified dimension. </p>
<p>Requires that all dimensions except the join dimension must be the same for all arrays.</p>
<hr/>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga4c0b185d13b49023cc22c0269eedbdb2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_join </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>dim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>first</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a>&#160;</td>
          <td class="paramname"><em>second</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Join 2 arrays along <code>dim</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>is the generated array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>is the dimension along which join occurs </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">first</td><td>is the first input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">second</td><td>is the second input array </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga67a36384247f6bb40254e0cb2e6d5d5c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> <a class="el" href="defines_8h.htm#a82b94dc53bbd100a0e8ca9dd356aaf4f">af_err</a> af_join_many </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>dim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>n_arrays</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="defines_8h.htm#a8e45f4aa3dbea6a7aa021dbc50a4a089">af_array</a> *&#160;</td>
          <td class="paramname"><em>inputs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Join many arrays along <code>dim</code>. </p>
<p>Current limit is set to 10 arrays.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>is the generated array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>is the dimension along which join occurs </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n_arrays</td><td>number of arrays to join </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">inputs</td><td>is an array of af_arrays containing handles to the arrays to be joined </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga9f30f3f556ae3165d3b7b6ec6ca43dc6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::join </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>dim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>first</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>second</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Join 2 arrays along <code>dim</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>is the dimension along which join occurs </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">first</td><td>is the first input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">second</td><td>is the second input array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the array that joins input arrays along the given dimension </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="financial_2monte_carlo_options_8cpp-example.htm#a8">financial/monte_carlo_options.cpp</a>, <a class="el" href="graphics_2conway_pretty_8cpp-example.htm#a14">graphics/conway_pretty.cpp</a>, <a class="el" href="graphics_2field_8cpp-example.htm#a10">graphics/field.cpp</a>, <a class="el" href="machine_learning_2deep_belief_net_8cpp-example.htm#a11">machine_learning/deep_belief_net.cpp</a>, <a class="el" href="machine_learning_2logistic_regression_8cpp-example.htm#a18">machine_learning/logistic_regression.cpp</a>, <a class="el" href="machine_learning_2neural_network_8cpp-example.htm#a5">machine_learning/neural_network.cpp</a>, <a class="el" href="machine_learning_2perceptron_8cpp-example.htm#a15">machine_learning/perceptron.cpp</a>, and <a class="el" href="machine_learning_2softmax_regression_8cpp-example.htm#a19">machine_learning/softmax_regression.cpp</a>.</dd>
</dl>
</div>
</div>
<a class="anchor" id="gafa6b5dfad79cde81bccee5551b4b152c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::join </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>dim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>first</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>second</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>third</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Join 3 arrays along <code>dim</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>is the dimension along which join occurs </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">first</td><td>is the first input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">second</td><td>is the second input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">third</td><td>is the third input array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the array that joins input arrays along the given dimension </dd></dl>

</div>
</div>
<a class="anchor" id="ga0bad6d30d8fbb8ee8698e4437c6deaf0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="defines_8h.htm#ab23e67549eba2cfbaf0eb5f88f947e48">AFAPI</a> array af::join </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>dim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>first</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>second</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>third</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classaf_1_1array.htm">array</a> &amp;&#160;</td>
          <td class="paramname"><em>fourth</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Join 4 arrays along <code>dim</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dim</td><td>is the dimension along which join occurs </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">first</td><td>is the first input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">second</td><td>is the second input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">third</td><td>is the third input array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fourth</td><td>is the fourth input array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the array that joins input arrays along the given dimension </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5076919-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
