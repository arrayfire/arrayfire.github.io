<!-- HTML header for doxygen 1.8.17-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: financial/monte_carlo_options.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0" width="100%">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="arrayfire_logo.png"/></td>
   <td id="gsearch">
       <div><script>
             (function() {
                 var cx = '004356362924927882526:zup3ehe-7bs';
                 var gcse = document.createElement('script');
                 gcse.type = 'text/javascript';
                 gcse.async = true;
                 gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                            '//www.google.com/cse/cse.js?cx=' + cx;
                 var s = document.getElementsByTagName('script')[0];
                 s.parentNode.insertBefore(gcse, s);
             })();
       </script>
       <gcse:search></gcse:search>
       <div>
   </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('financial_2monte_carlo_options_8cpp-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">financial/monte_carlo_options.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/*******************************************************</span></div>
<div class="line"><span class="comment"> * Copyright (c) 2014, ArrayFire</span></div>
<div class="line"><span class="comment"> * All rights reserved.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><span class="comment"> ********************************************************/</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="arrayfire_8h.htm">arrayfire.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;math.h&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="util_8h.htm">af/util.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span><a class="code" href="namespaceaf.htm">af</a>;</div>
<div class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> ty&gt;</div>
<div class="line"><a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> get_dtype();</div>
<div class="line"> </div>
<div class="line"><span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> get_dtype&lt;float&gt;() {</div>
<div class="line">    <span class="keywordflow">return</span> <a name="a0"></a><a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>;</div>
<div class="line">}</div>
<div class="line"><span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> get_dtype&lt;double&gt;() {</div>
<div class="line">    <span class="keywordflow">return</span> <a name="a1"></a><a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962">f64</a>;</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> ty, <span class="keywordtype">bool</span> use_barrier&gt;</div>
<div class="line"><span class="keyword">static</span> ty monte_carlo_barrier(<span class="keywordtype">int</span> N, ty K, ty t, ty vol, ty r, ty strike,</div>
<div class="line">                              <span class="keywordtype">int</span> steps, ty B) {</div>
<div class="line">    <a class="code" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> pres   = get_dtype&lt;ty&gt;();</div>
<div class="line">    <a name="_a2"></a><a class="code" href="classaf_1_1array.htm">array</a> payoff = <a name="a3"></a><a class="code" href="group__data__func__constant.htm#ga3c58da8ca31ae6c871379aeb587b8b0d">constant</a>(0, N, 1, pres);</div>
<div class="line"> </div>
<div class="line">    ty dt   = t / (ty)(steps - 1);</div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> s = <a class="code" href="group__data__func__constant.htm#ga3c58da8ca31ae6c871379aeb587b8b0d">constant</a>(strike, N, 1, pres);</div>
<div class="line"> </div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> randmat = <a name="a4"></a><a class="code" href="group__random__func__randn.htm#ga2e9602d5bcc87204842b634816afa8a4">randn</a>(N, steps - 1, pres);</div>
<div class="line">    randmat = <a name="a5"></a><a class="code" href="group__arith__func__exp.htm#ga9ddbaf0852fbf988400b9677705b2a00">exp</a>((r - (vol * vol * 0.5)) * dt + vol * <a name="a6"></a><a class="code" href="group__arith__func__sqrt.htm#ga25c678d4cd9e0702bbc93e11d7d516a8">sqrt</a>(dt) * randmat);</div>
<div class="line"> </div>
<div class="line">    <a class="code" href="classaf_1_1array.htm">array</a> S = <a name="a7"></a><a class="code" href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">product</a>(<a name="a8"></a><a class="code" href="group__manip__func__join.htm#ga9f30f3f556ae3165d3b7b6ec6ca43dc6">join</a>(1, s, randmat), 1);</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">if</span> (use_barrier) { S = S * <a name="a9"></a><a class="code" href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b">allTrue</a>(S &lt; B, 1); }</div>
<div class="line"> </div>
<div class="line">    payoff = <a name="a10"></a><a class="code" href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">max</a>(0.0, S - K);</div>
<div class="line">    ty P   = mean&lt;ty&gt;(payoff) * <a class="code" href="group__arith__func__exp.htm#ga9ddbaf0852fbf988400b9677705b2a00">exp</a>(-r * t);</div>
<div class="line">    <span class="keywordflow">return</span> P;</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> ty, <span class="keywordtype">bool</span> use_barrier&gt;</div>
<div class="line"><span class="keywordtype">double</span> monte_carlo_bench(<span class="keywordtype">int</span> N) {</div>
<div class="line">    <span class="keywordtype">int</span> steps      = 180;</div>
<div class="line">    ty stock_price = 100.0;</div>
<div class="line">    ty maturity    = 0.5;</div>
<div class="line">    ty volatility  = .30;</div>
<div class="line">    ty rate        = .01;</div>
<div class="line">    ty strike      = 100;</div>
<div class="line">    ty barrier     = 115.0;</div>
<div class="line"> </div>
<div class="line">    <a name="a11"></a><a class="code" href="structaf_1_1timer.htm#acde4fe9b34f26a2c99bdb52080264116">timer::start</a>();</div>
<div class="line">    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 10; i++) {</div>
<div class="line">        monte_carlo_barrier&lt;ty, use_barrier&gt;(</div>
<div class="line">            N, stock_price, maturity, volatility, rate, strike, steps, barrier);</div>
<div class="line">    }</div>
<div class="line">    <span class="keywordflow">return</span> <a name="a12"></a><a class="code" href="structaf_1_1timer.htm#adcbc49c002458a0a2370e0bb8e96c322">timer::stop</a>() / 10;</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">int</span> main() {</div>
<div class="line">    <span class="keywordflow">try</span> {</div>
<div class="line">        <span class="comment">// Warm up and caching</span></div>
<div class="line">        monte_carlo_bench&lt;float, false&gt;(1000);</div>
<div class="line">        monte_carlo_bench&lt;float, true&gt;(1000);</div>
<div class="line"> </div>
<div class="line">        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 10000; n &lt;= 100000; n += 10000) {</div>
<div class="line">            printf(</div>
<div class="line">                <span class="stringliteral">&quot;Time for %7d paths - &quot;</span></div>
<div class="line">                <span class="stringliteral">&quot;vanilla method: %4.3f ms,  &quot;</span></div>
<div class="line">                <span class="stringliteral">&quot;barrier method: %4.3f ms\n&quot;</span>,</div>
<div class="line">                n, 1000 * monte_carlo_bench&lt;float, false&gt;(n),</div>
<div class="line">                1000 * monte_carlo_bench&lt;float, true&gt;(n));</div>
<div class="line">        }</div>
<div class="line">    } <span class="keywordflow">catch</span> (<a name="_a13"></a><a class="code" href="classaf_1_1exception.htm">af::exception</a> &amp;ae) { std::cerr &lt;&lt; ae.<a name="a14"></a><a class="code" href="classaf_1_1exception.htm#ad62489809e3df568e973597b928d6d9b">what</a>() &lt;&lt; std::endl; }</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="autil_8h_htm"><div class="ttname"><a href="util_8h.htm">util.h</a></div></div>
<div class="ttc" id="agroup__arith__func__exp_htm_ga9ddbaf0852fbf988400b9677705b2a00"><div class="ttname"><a href="group__arith__func__exp.htm#ga9ddbaf0852fbf988400b9677705b2a00">af::exp</a></div><div class="ttdeci">AFAPI array exp(const array &amp;in)</div><div class="ttdoc">C++ Interface for exponential of an array.</div></div>
<div class="ttc" id="agroup__data__func__constant_htm_ga3c58da8ca31ae6c871379aeb587b8b0d"><div class="ttname"><a href="group__data__func__constant.htm#ga3c58da8ca31ae6c871379aeb587b8b0d">af::constant</a></div><div class="ttdeci">array constant(T val, const dim4 &amp;dims, const dtype ty=(af_dtype) dtype_traits&lt; T &gt;::ctype)</div></div>
<div class="ttc" id="agroup__manip__func__join_htm_ga9f30f3f556ae3165d3b7b6ec6ca43dc6"><div class="ttname"><a href="group__manip__func__join.htm#ga9f30f3f556ae3165d3b7b6ec6ca43dc6">af::join</a></div><div class="ttdeci">AFAPI array join(const int dim, const array &amp;first, const array &amp;second)</div><div class="ttdoc">Join 2 arrays along dim.</div></div>
<div class="ttc" id="agroup__reduce__func__product_htm_gaac132e883d40243c420b4ccfa09ddaa3"><div class="ttname"><a href="group__reduce__func__product.htm#gaac132e883d40243c420b4ccfa09ddaa3">af::product</a></div><div class="ttdeci">AFAPI array product(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for product of elements in an array.</div></div>
<div class="ttc" id="astructaf_1_1timer_htm_acde4fe9b34f26a2c99bdb52080264116"><div class="ttname"><a href="structaf_1_1timer.htm#acde4fe9b34f26a2c99bdb52080264116">af::timer::start</a></div><div class="ttdeci">static AFAPI timer start()</div></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00035">array.h:35</a></div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:14</a></div></div>
<div class="ttc" id="agroup__reduce__func__max_htm_ga4459daf5a3b081fb4ee15eb49d8c902a"><div class="ttname"><a href="group__reduce__func__max.htm#ga4459daf5a3b081fb4ee15eb49d8c902a">af::max</a></div><div class="ttdeci">AFAPI array max(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for maximum values in an array.</div></div>
<div class="ttc" id="agroup__random__func__randn_htm_ga2e9602d5bcc87204842b634816afa8a4"><div class="ttname"><a href="group__random__func__randn.htm#ga2e9602d5bcc87204842b634816afa8a4">af::randn</a></div><div class="ttdeci">AFAPI array randn(const dim4 &amp;dims, const dtype ty, randomEngine &amp;r)</div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a></div><div class="ttdeci">af_dtype</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00210">defines.h:210</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962">f64</a></div><div class="ttdeci">@ f64</div><div class="ttdoc">64-bit complex floating point values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00213">defines.h:213</a></div></div>
<div class="ttc" id="agroup__arith__func__sqrt_htm_ga25c678d4cd9e0702bbc93e11d7d516a8"><div class="ttname"><a href="group__arith__func__sqrt.htm#ga25c678d4cd9e0702bbc93e11d7d516a8">af::sqrt</a></div><div class="ttdeci">AFAPI array sqrt(const array &amp;in)</div><div class="ttdoc">C++ Interface for square root of input.</div></div>
<div class="ttc" id="aclassaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00028">exception.h:28</a></div></div>
<div class="ttc" id="astructaf_1_1timer_htm_adcbc49c002458a0a2370e0bb8e96c322"><div class="ttname"><a href="structaf_1_1timer.htm#adcbc49c002458a0a2370e0bb8e96c322">af::timer::stop</a></div><div class="ttdeci">static AFAPI double stop()</div></div>
<div class="ttc" id="aarrayfire_8h_htm"><div class="ttname"><a href="arrayfire_8h.htm">arrayfire.h</a></div></div>
<div class="ttc" id="agroup__reduce__func__all__true_htm_gaf3f22add3a54fb729a969cf8f669fc2b"><div class="ttname"><a href="group__reduce__func__all__true.htm#gaf3f22add3a54fb729a969cf8f669fc2b">af::allTrue</a></div><div class="ttdeci">AFAPI array allTrue(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface for checking all true values in an array.</div></div>
<div class="ttc" id="aclassaf_1_1exception_htm_ad62489809e3df568e973597b928d6d9b"><div class="ttname"><a href="classaf_1_1exception.htm#ad62489809e3df568e973597b928d6d9b">af::exception::what</a></div><div class="ttdeci">virtual const char * what() const</div><div class="ttdoc">Returns an error message for the exception in a string format.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00060">exception.h:60</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div><div class="ttdeci">@ f32</div><div class="ttdoc">32-bit floating point values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00211">defines.h:211</a></div></div>
</div>
</div>
</div>
</div>
</div>
<!--Google Analytics-->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-130950618-1']);
  _gaq.push(['_setDomainName', '.arrayfire.com']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<!--Spectate-->
<script type="text/javascript">
  sAId = "151";
  sCId = "688";
  (function() {
    function async_load(){
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.src = (('https:' == document.location.protocol) ? "https://ssl" : "http://cdn") + ".spectate.com/s.js";
      var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
    }
    if(window.attachEvent) { window.attachEvent('onload', async_load); }
    else { window.addEventListener('load', async_load, false); }
  })();
</script>
<!--Adroll-->
<script type="text/javascript">
adroll_adv_id = "ZRWI4W4RTRHENOWGXZY5JQ";
adroll_pix_id = "QLXGBK3MSFB6LOL6PES2MT";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
</body>
</html>
