<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: financial/monte_carlo_options.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('financial_2monte_carlo_options_8cpp-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle"><div class="title">financial/monte_carlo_options.cpp</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/*******************************************************</span></div>
<div class="line"><span class="comment"> * Copyright (c) 2014, ArrayFire</span></div>
<div class="line"><span class="comment"> * All rights reserved.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * This file is distributed under 3-clause BSD license.</span></div>
<div class="line"><span class="comment"> * The complete license agreement can be obtained at:</span></div>
<div class="line"><span class="comment"> * http://arrayfire.com/licenses/BSD-3-Clause</span></div>
<div class="line"><span class="comment"> ********************************************************/</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="arrayfire_8h.htm">arrayfire.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;math.h&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="util_8h.htm">af/util.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span><a class="code hl_namespace" href="namespaceaf.htm">af</a>;</div>
<div class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> ty&gt;</div>
<div class="line"><a class="code hl_enumeration" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> get_dtype();</div>
<div class="line"> </div>
<div class="line"><span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a class="code hl_enumeration" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> get_dtype&lt;float&gt;() {</div>
<div class="line">    <span class="keywordflow">return</span> <a id="a0" name="a0"></a><a class="code hl_enumvalue" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a>;</div>
<div class="line">}</div>
<div class="line"><span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a class="code hl_enumeration" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> get_dtype&lt;double&gt;() {</div>
<div class="line">    <span class="keywordflow">return</span> <a id="a1" name="a1"></a><a class="code hl_enumvalue" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962">f64</a>;</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> ty, <span class="keywordtype">bool</span> use_barrier&gt;</div>
<div class="line"><span class="keyword">static</span> ty monte_carlo_barrier(<span class="keywordtype">int</span> N, ty K, ty t, ty vol, ty r, ty strike,</div>
<div class="line">                              <span class="keywordtype">int</span> steps, ty B) {</div>
<div class="line">    <a class="code hl_enumeration" href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">dtype</a> pres   = get_dtype&lt;ty&gt;();</div>
<div class="line">    <a id="_a2" name="_a2"></a><a class="code hl_class" href="classaf_1_1array.htm">array</a> payoff = <a class="code hl_function" href="group__data__func__constant.htm#ga0db7363474e85542f16e4bbcf57fe842">constant</a>(0, N, 1, pres);</div>
<div class="line"> </div>
<div class="line">    ty dt   = t / (ty)(steps - 1);</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> s = <a class="code hl_function" href="group__data__func__constant.htm#ga0db7363474e85542f16e4bbcf57fe842">constant</a>(strike, N, 1, pres);</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> randmat = <a class="code hl_function" href="group__random__func__randn.htm#gac164aa9deb983d34d236ee50587cfd88">randn</a>(N, steps - 1, pres);</div>
<div class="line">    randmat = <a class="code hl_function" href="group__arith__func__exp.htm#ga583acbad8eb6db6ee6b8b363e2c38710">exp</a>((r - (vol * vol * 0.5)) * dt + vol * <a class="code hl_function" href="group__arith__func__sqrt.htm#gabdfe0e5a01f91a1079451b1e094a6893">sqrt</a>(dt) * randmat);</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">array</a> S = <a class="code hl_function" href="group__reduce__func__product.htm#ga90e43292bac747efc222a38bdccf34b2">product</a>(<a class="code hl_function" href="group__manip__func__join.htm#gaa829b2ec622d809f760a39a631162772">join</a>(1, s, randmat), 1);</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">if</span> (use_barrier) { S = S * <a class="code hl_function" href="group__reduce__func__all__true.htm#gac84565e66f5f7b6e7ba8f044d5ed3359">allTrue</a>(S &lt; B, 1); }</div>
<div class="line"> </div>
<div class="line">    payoff = <a class="code hl_function" href="group__reduce__func__max.htm#ga8487a88bf44e0c88af44fec99cc205b1">max</a>(0.0, S - K);</div>
<div class="line">    ty P   = mean&lt;ty&gt;(payoff) * <a class="code hl_function" href="group__arith__func__exp.htm#ga583acbad8eb6db6ee6b8b363e2c38710">exp</a>(-r * t);</div>
<div class="line">    <span class="keywordflow">return</span> P;</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> ty, <span class="keywordtype">bool</span> use_barrier&gt;</div>
<div class="line"><span class="keywordtype">double</span> monte_carlo_bench(<span class="keywordtype">int</span> N) {</div>
<div class="line">    <span class="keywordtype">int</span> steps      = 180;</div>
<div class="line">    ty stock_price = 100.0;</div>
<div class="line">    ty maturity    = 0.5;</div>
<div class="line">    ty volatility  = .30;</div>
<div class="line">    ty rate        = .01;</div>
<div class="line">    ty strike      = 100;</div>
<div class="line">    ty barrier     = 115.0;</div>
<div class="line"> </div>
<div class="line">    timer::start();</div>
<div class="line">    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 10; i++) {</div>
<div class="line">        monte_carlo_barrier&lt;ty, use_barrier&gt;(</div>
<div class="line">            N, stock_price, maturity, volatility, rate, strike, steps, barrier);</div>
<div class="line">    }</div>
<div class="line">    <span class="keywordflow">return</span> timer::stop() / 10;</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">int</span> main() {</div>
<div class="line">    <span class="keywordflow">try</span> {</div>
<div class="line">        <span class="comment">// Warm up and caching</span></div>
<div class="line">        monte_carlo_bench&lt;float, false&gt;(1000);</div>
<div class="line">        monte_carlo_bench&lt;float, true&gt;(1000);</div>
<div class="line"> </div>
<div class="line">        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 10000; n &lt;= 100000; n += 10000) {</div>
<div class="line">            printf(</div>
<div class="line">                <span class="stringliteral">&quot;Time for %7d paths - &quot;</span></div>
<div class="line">                <span class="stringliteral">&quot;vanilla method: %4.3f ms,  &quot;</span></div>
<div class="line">                <span class="stringliteral">&quot;barrier method: %4.3f ms\n&quot;</span>,</div>
<div class="line">                n, 1000 * monte_carlo_bench&lt;float, false&gt;(n),</div>
<div class="line">                1000 * monte_carlo_bench&lt;float, true&gt;(n));</div>
<div class="line">        }</div>
<div class="line">    } <span class="keywordflow">catch</span> (<a id="_a3" name="_a3"></a><a class="code hl_class" href="classaf_1_1exception.htm">af::exception</a> &amp;ae) { std::cerr &lt;&lt; ae.<a id="a4" name="a4"></a><a class="code hl_function" href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">what</a>() &lt;&lt; std::endl; }</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
<div class="ttc" id="aarrayfire_8h_htm"><div class="ttname"><a href="arrayfire_8h.htm">arrayfire.h</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00037">array.h:37</a></div></div>
<div class="ttc" id="aclassaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00021">exception.h:22</a></div></div>
<div class="ttc" id="aclassaf_1_1exception_htm_aa884ff67408851f00e50cf971a4dfd05"><div class="ttname"><a href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">af::exception::what</a></div><div class="ttdeci">virtual const char * what() const</div><div class="ttdoc">Returns an error message for the exception in a string format.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00046">exception.h:46</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5">af_dtype</a></div><div class="ttdeci">af_dtype</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00210">defines.h:210</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5a82ea90203678bdd0b547068f0a76524b">f32</a></div><div class="ttdeci">@ f32</div><div class="ttdoc">32-bit floating point values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00211">defines.h:211</a></div></div>
<div class="ttc" id="adefines_8h_htm_a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962"><div class="ttname"><a href="defines_8h.htm#a023d8ac325fb14f1712a52fb0940b1d5acdbf3e9fd5f3594b523a077f4838e962">f64</a></div><div class="ttdeci">@ f64</div><div class="ttdoc">64-bit floating point values</div><div class="ttdef"><b>Definition:</b> <a href="defines_8h_source.htm#l00213">defines.h:213</a></div></div>
<div class="ttc" id="agroup__arith__func__exp_htm_ga583acbad8eb6db6ee6b8b363e2c38710"><div class="ttname"><a href="group__arith__func__exp.htm#ga583acbad8eb6db6ee6b8b363e2c38710">af::exp</a></div><div class="ttdeci">AFAPI array exp(const array &amp;in)</div><div class="ttdoc">C++ Interface to evaluate the exponential.</div></div>
<div class="ttc" id="agroup__arith__func__sqrt_htm_gabdfe0e5a01f91a1079451b1e094a6893"><div class="ttname"><a href="group__arith__func__sqrt.htm#gabdfe0e5a01f91a1079451b1e094a6893">af::sqrt</a></div><div class="ttdeci">AFAPI array sqrt(const array &amp;in)</div><div class="ttdoc">C++ Interface to evaluate the square root.</div></div>
<div class="ttc" id="agroup__data__func__constant_htm_ga0db7363474e85542f16e4bbcf57fe842"><div class="ttname"><a href="group__data__func__constant.htm#ga0db7363474e85542f16e4bbcf57fe842">af::constant</a></div><div class="ttdeci">array constant(T val, const dim4 &amp;dims, const dtype ty=(af_dtype) dtype_traits&lt; T &gt;::ctype)</div><div class="ttdoc">C++ Interface to generate an array with elements set to a specified value.</div></div>
<div class="ttc" id="agroup__manip__func__join_htm_gaa829b2ec622d809f760a39a631162772"><div class="ttname"><a href="group__manip__func__join.htm#gaa829b2ec622d809f760a39a631162772">af::join</a></div><div class="ttdeci">AFAPI array join(const int dim, const array &amp;first, const array &amp;second)</div><div class="ttdoc">C++ Interface to join 2 arrays along a dimension.</div></div>
<div class="ttc" id="agroup__random__func__randn_htm_gac164aa9deb983d34d236ee50587cfd88"><div class="ttname"><a href="group__random__func__randn.htm#gac164aa9deb983d34d236ee50587cfd88">af::randn</a></div><div class="ttdeci">AFAPI array randn(const dim4 &amp;dims, const dtype ty, randomEngine &amp;r)</div><div class="ttdoc">C++ Interface to create an array of random numbers normally distributed.</div></div>
<div class="ttc" id="agroup__reduce__func__all__true_htm_gac84565e66f5f7b6e7ba8f044d5ed3359"><div class="ttname"><a href="group__reduce__func__all__true.htm#gac84565e66f5f7b6e7ba8f044d5ed3359">af::allTrue</a></div><div class="ttdeci">AFAPI array allTrue(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface to check if all values along a given dimension are true.</div></div>
<div class="ttc" id="agroup__reduce__func__max_htm_ga8487a88bf44e0c88af44fec99cc205b1"><div class="ttname"><a href="group__reduce__func__max.htm#ga8487a88bf44e0c88af44fec99cc205b1">af::max</a></div><div class="ttdeci">AFAPI array max(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface to return the maximum along a given dimension.</div></div>
<div class="ttc" id="agroup__reduce__func__product_htm_ga90e43292bac747efc222a38bdccf34b2"><div class="ttname"><a href="group__reduce__func__product.htm#ga90e43292bac747efc222a38bdccf34b2">af::product</a></div><div class="ttdeci">AFAPI array product(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface to multiply array elements over a given dimension.</div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:15</a></div></div>
<div class="ttc" id="autil_8h_htm"><div class="ttname"><a href="util_8h.htm">util.h</a></div></div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Wed Aug 30 2023 15:41:53 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
