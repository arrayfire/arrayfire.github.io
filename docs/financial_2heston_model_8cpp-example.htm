<!-- HTML header for doxygen 1.9.5-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-130950618-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-130950618-1');
</script>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArrayFire: financial/heston_model.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="arrayfire.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeInteractiveToc.init()
	DoxygenAwesomeFragmentCopyButton.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="2" cellpadding="2" width="100%">
 <tbody>
  <tr id="projectrow">
  <td id="projectlogo"><a  href="index.htm"><img alt="Logo" src="arrayfire_logo.png"/></a></td>
  </tr>
  <tr id="projectrow">
  <td>
  <div id="projectbrief">A high-performance general-purpose compute library</div>
  </td>
  </tr>
  <!--END !PROJECT_NAME-->
  <div>
    <td id="gsearch">
        <script async src="https://cse.google.com/cse.js?cx=004356362924927882526:zup3ehe-7bs"></script>
        <div class="gcse-search"></div>
    </td>
  </div>
 </tr>
 <tr>
  <td>
    <div id="togglediv"></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part --><!-- Generated by Doxygen 1.9.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="tutorials.htm"><span>Tutorials</span></a></li>
      <li><a href="modules.htm"><span>Functions</span></a></li>
      <li><a href="releasenotes.htm"><span>Release&#160;Notes</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('financial_2heston_model_8cpp-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle"><div class="title">financial/heston_model.cpp</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/**********************************************************************************************</span></div>
<div class="line"><span class="comment"> * Copyright (c) 2015, Michael Nowotny</span></div>
<div class="line"><span class="comment"> * All rights reserved.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * Redistribution and use in source and binary forms, with or without</span></div>
<div class="line"><span class="comment"> *modification, are permitted provided that the following conditions are met:</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * 1. Redistributions of source code must retain the above copyright notice,</span></div>
<div class="line"><span class="comment"> * this list of conditions and the following disclaimer.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * 2. Redistributions in binary form must reproduce the above copyright notice,</span></div>
<div class="line"><span class="comment"> * this list of conditions and the following disclaimer in the documentation</span></div>
<div class="line"><span class="comment"> *and/or other materials provided with the distribution.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * 3. Neither the name of the copyright holder nor the names of its contributors</span></div>
<div class="line"><span class="comment"> *may be used to endorse or promote products derived from this software without</span></div>
<div class="line"><span class="comment"> *specific prior written permission.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span></div>
<div class="line"><span class="comment"> * &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span></div>
<div class="line"><span class="comment"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR</span></div>
<div class="line"><span class="comment"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span></div>
<div class="line"><span class="comment"> * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,</span></div>
<div class="line"><span class="comment"> * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED</span></div>
<div class="line"><span class="comment"> * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR</span></div>
<div class="line"><span class="comment"> * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF</span></div>
<div class="line"><span class="comment"> * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING</span></div>
<div class="line"><span class="comment"> * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS</span></div>
<div class="line"><span class="comment"> * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></div>
<div class="line"><span class="comment"> ***********************************************************************************************/</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;<a class="code" href="arrayfire_8h.htm">arrayfire.h</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span>std;</div>
<div class="line"><span class="keyword">using namespace </span><a class="code hl_namespace" href="namespaceaf.htm">af</a>;</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> simulateHestonModel(<a id="_a0" name="_a0"></a><a class="code hl_class" href="classaf_1_1array.htm">af::array</a> &amp;xres, <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> &amp;vres, <span class="keywordtype">float</span> T,</div>
<div class="line">                         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> N, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> R, <span class="keywordtype">float</span> mu, <span class="keywordtype">float</span> kappa,</div>
<div class="line">                         <span class="keywordtype">float</span> vBar, <span class="keywordtype">float</span> sigmaV, <span class="keywordtype">float</span> rho, <span class="keywordtype">float</span> x0,</div>
<div class="line">                         <span class="keywordtype">float</span> v0) {</div>
<div class="line">    <span class="keywordtype">float</span> deltaT = T / (float)(N - 1);</div>
<div class="line"> </div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> x[] = {<a id="a1" name="a1"></a><a class="code hl_function" href="group__data__func__constant.htm#ga0db7363474e85542f16e4bbcf57fe842">af::constant</a>(x0, R), <a class="code hl_function" href="group__data__func__constant.htm#ga0db7363474e85542f16e4bbcf57fe842">af::constant</a>(0, R)};</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> v[] = {<a class="code hl_function" href="group__data__func__constant.htm#ga0db7363474e85542f16e4bbcf57fe842">af::constant</a>(v0, R), <a class="code hl_function" href="group__data__func__constant.htm#ga0db7363474e85542f16e4bbcf57fe842">af::constant</a>(0, R)};</div>
<div class="line"> </div>
<div class="line">    <span class="keywordtype">float</span> sqrtDeltaT = sqrt(deltaT);</div>
<div class="line"> </div>
<div class="line">    <span class="keywordtype">float</span> sqrtOneMinusRhoSquare = sqrt(1 - rho * rho);</div>
<div class="line"> </div>
<div class="line">    <span class="keywordtype">float</span> mArray[] = {rho, sqrtOneMinusRhoSquare};</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> m(2, 1, mArray);</div>
<div class="line"> </div>
<div class="line">    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> tPrevious = 0, tCurrent = 0;</div>
<div class="line">    <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> zeroConstant = constant(0, R);</div>
<div class="line"> </div>
<div class="line">    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> t = 1; t &lt; N; t++) {</div>
<div class="line">        tPrevious = (t + 1) % 2;</div>
<div class="line">        tCurrent  = t % 2;</div>
<div class="line"> </div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> dBt      = randn(R, 2) * sqrtDeltaT;</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> sqrtVLag = <a id="a2" name="a2"></a><a class="code hl_function" href="group__arith__func__sqrt.htm#gabdfe0e5a01f91a1079451b1e094a6893">af::sqrt</a>(v[tPrevious]);</div>
<div class="line"> </div>
<div class="line">        x[tCurrent] = x[tPrevious] + (mu - 0.5 * v[tPrevious]) * deltaT +</div>
<div class="line">                      (sqrtVLag * dBt(span, 0));</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> vTmp = v[tPrevious] + kappa * (vBar - v[tPrevious]) * deltaT +</div>
<div class="line">                         sigmaV * (sqrtVLag * matmul(dBt, m));</div>
<div class="line">        v[tCurrent] = max(vTmp, zeroConstant);</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    xres = x[tCurrent];</div>
<div class="line">    vres = v[tCurrent];</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">int</span> main() {</div>
<div class="line">    <span class="keywordtype">float</span> T                  = 1;</div>
<div class="line">    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> nT          = 10 * T;</div>
<div class="line">    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> R_first_run = 1000;</div>
<div class="line">    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> R           = 20000000;</div>
<div class="line"> </div>
<div class="line">    <span class="keywordtype">float</span> x0     = 0;              <span class="comment">// initial log stock price</span></div>
<div class="line">    <span class="keywordtype">float</span> v0     = pow(0.087, 2);  <span class="comment">// initial volatility</span></div>
<div class="line">    <span class="keywordtype">float</span> r      = log(1.0319);    <span class="comment">// risk-free rate</span></div>
<div class="line">    <span class="keywordtype">float</span> rho    = -0.82;  <span class="comment">// instantaneous correlation between Brownian motions</span></div>
<div class="line">    <span class="keywordtype">float</span> sigmaV = 0.14;   <span class="comment">// variance of volatility</span></div>
<div class="line">    <span class="keywordtype">float</span> kappa  = 3.46;   <span class="comment">// mean reversion speed</span></div>
<div class="line">    <span class="keywordtype">float</span> vBar   = 0.008;  <span class="comment">// mean variance</span></div>
<div class="line">    <span class="keywordtype">float</span> k      = log(0.95);  <span class="comment">// strike price</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Price European call option</span></div>
<div class="line">    <span class="keywordflow">try</span> {</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> x;</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> v;</div>
<div class="line"> </div>
<div class="line">        <span class="comment">// first run</span></div>
<div class="line">        simulateHestonModel(x, v, T, nT, R_first_run, r, kappa, vBar, sigmaV,</div>
<div class="line">                            rho, x0, v0);</div>
<div class="line">        <a id="a3" name="a3"></a><a class="code hl_function" href="group__device__func__sync.htm#ga4e9c28bad482dc590cac930515f14bfb">af::sync</a>();  <span class="comment">// Ensure the first run is finished</span></div>
<div class="line"> </div>
<div class="line">        timer::start();</div>
<div class="line">        simulateHestonModel(x, v, T, nT, R, r, kappa, vBar, sigmaV, rho, x0,</div>
<div class="line">                            v0);</div>
<div class="line">        <a class="code hl_function" href="group__device__func__sync.htm#ga4e9c28bad482dc590cac930515f14bfb">af::sync</a>();</div>
<div class="line">        cout &lt;&lt; <span class="stringliteral">&quot;Time in simulation: &quot;</span> &lt;&lt; timer::stop() &lt;&lt; endl;</div>
<div class="line"> </div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> K            = exp(constant(k, x.<a id="a4" name="a4"></a><a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>()));</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> zeroConstant = constant(0, x.<a class="code hl_function" href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">dims</a>());</div>
<div class="line">        <a class="code hl_class" href="classaf_1_1array.htm">af::array</a> C_CPU =</div>
<div class="line">            exp(-r * T) * mean(<a id="a5" name="a5"></a><a class="code hl_function" href="group__reduce__func__max.htm#ga8487a88bf44e0c88af44fec99cc205b1">af::max</a>(<a id="a6" name="a6"></a><a class="code hl_function" href="group__arith__func__exp.htm#ga583acbad8eb6db6ee6b8b363e2c38710">af::exp</a>(x) - K, zeroConstant));</div>
<div class="line"> </div>
<div class="line">        <a id="a7" name="a7"></a><a class="code hl_define" href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a>(C_CPU);</div>
<div class="line">        <span class="keywordflow">return</span> 0;</div>
<div class="line">    } <span class="keywordflow">catch</span> (<a id="_a8" name="_a8"></a><a class="code hl_class" href="classaf_1_1exception.htm">af::exception</a> &amp;e) {</div>
<div class="line">        fprintf(stderr, <span class="stringliteral">&quot;%s\n&quot;</span>, e.<a id="a9" name="a9"></a><a class="code hl_function" href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">what</a>());</div>
<div class="line">        <span class="keywordflow">return</span> 1;</div>
<div class="line">    }</div>
<div class="line">}</div>
<div class="ttc" id="aarrayfire_8h_htm"><div class="ttname"><a href="arrayfire_8h.htm">arrayfire.h</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm"><div class="ttname"><a href="classaf_1_1array.htm">af::array</a></div><div class="ttdoc">A multi dimensional data container.</div><div class="ttdef"><b>Definition:</b> <a href="array_8h_source.htm#l00037">array.h:37</a></div></div>
<div class="ttc" id="aclassaf_1_1array_htm_a10d14b019693bc98f672ad7c4ac60bac"><div class="ttname"><a href="classaf_1_1array.htm#a10d14b019693bc98f672ad7c4ac60bac">af::array::dims</a></div><div class="ttdeci">dim4 dims() const</div><div class="ttdoc">Get dimensions of the array.</div></div>
<div class="ttc" id="aclassaf_1_1exception_htm"><div class="ttname"><a href="classaf_1_1exception.htm">af::exception</a></div><div class="ttdoc">An ArrayFire exception class.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00021">exception.h:22</a></div></div>
<div class="ttc" id="aclassaf_1_1exception_htm_aa884ff67408851f00e50cf971a4dfd05"><div class="ttname"><a href="classaf_1_1exception.htm#aa884ff67408851f00e50cf971a4dfd05">af::exception::what</a></div><div class="ttdeci">virtual const char * what() const</div><div class="ttdoc">Returns an error message for the exception in a string format.</div><div class="ttdef"><b>Definition:</b> <a href="exception_8h_source.htm#l00046">exception.h:46</a></div></div>
<div class="ttc" id="agroup__arith__func__exp_htm_ga583acbad8eb6db6ee6b8b363e2c38710"><div class="ttname"><a href="group__arith__func__exp.htm#ga583acbad8eb6db6ee6b8b363e2c38710">af::exp</a></div><div class="ttdeci">AFAPI array exp(const array &amp;in)</div><div class="ttdoc">C++ Interface to evaluate the exponential.</div></div>
<div class="ttc" id="agroup__arith__func__sqrt_htm_gabdfe0e5a01f91a1079451b1e094a6893"><div class="ttname"><a href="group__arith__func__sqrt.htm#gabdfe0e5a01f91a1079451b1e094a6893">af::sqrt</a></div><div class="ttdeci">AFAPI array sqrt(const array &amp;in)</div><div class="ttdoc">C++ Interface to evaluate the square root.</div></div>
<div class="ttc" id="agroup__data__func__constant_htm_ga0db7363474e85542f16e4bbcf57fe842"><div class="ttname"><a href="group__data__func__constant.htm#ga0db7363474e85542f16e4bbcf57fe842">af::constant</a></div><div class="ttdeci">array constant(T val, const dim4 &amp;dims, const dtype ty=(af_dtype) dtype_traits&lt; T &gt;::ctype)</div><div class="ttdoc">C++ Interface to generate an array with elements set to a specified value.</div></div>
<div class="ttc" id="agroup__device__func__sync_htm_ga4e9c28bad482dc590cac930515f14bfb"><div class="ttname"><a href="group__device__func__sync.htm#ga4e9c28bad482dc590cac930515f14bfb">af::sync</a></div><div class="ttdeci">AFAPI void sync(const int device=-1)</div><div class="ttdoc">Blocks until the device is finished processing.</div></div>
<div class="ttc" id="agroup__reduce__func__max_htm_ga8487a88bf44e0c88af44fec99cc205b1"><div class="ttname"><a href="group__reduce__func__max.htm#ga8487a88bf44e0c88af44fec99cc205b1">af::max</a></div><div class="ttdeci">AFAPI array max(const array &amp;in, const int dim=-1)</div><div class="ttdoc">C++ Interface to return the maximum along a given dimension.</div></div>
<div class="ttc" id="anamespaceaf_htm"><div class="ttname"><a href="namespaceaf.htm">af</a></div><div class="ttdef"><b>Definition:</b> <a href="algorithm_8h_source.htm#l00014">algorithm.h:15</a></div></div>
<div class="ttc" id="autil_8h_htm_a6de8e7f9eb3914d1cea66e55e7b791d3"><div class="ttname"><a href="util_8h.htm#a6de8e7f9eb3914d1cea66e55e7b791d3">af_print</a></div><div class="ttdeci">#define af_print(...)</div><div class="ttdef"><b>Definition:</b> <a href="util_8h_source.htm#l00148">util.h:148</a></div></div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.9.3-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
    <ul>
        <li class="footer">Generated on Mon Sep 25 2023 12:35:26 for ArrayFire by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
    </ul>
</div>
</body>
</html>
